{
  "version": 3,
  "sources": ["../src/util/constant.ts", "../src/util/lodash.ts", "../src/util/util.ts", "../src/util/style.ts", "../src/util/classnames.ts", "../src/util/range.ts", "../src/util/convert.ts", "../src/util/reference.ts", "../src/util/copy.ts", "../src/util/font.ts", "../src/util/set.ts", "../src/util/event.ts", "../src/util/saveAs.ts", "../src/i18n/lang/en.json", "../src/i18n/lang/zh.json", "../src/i18n/index.ts", "../src/util/i18n-constant.ts", "../src/util/dpr.ts", "../src/util/assert.ts", "../src/util/debug.ts", "../src/theme/size.ts", "../src/theme/zIndex.ts", "../src/theme/convert.ts", "../src/theme/color.ts", "../src/theme/index.ts", "../src/util/color.ts", "../src/util/EventEmitter.ts", "../src/util/image.ts"],
  "sourcesContent": ["import type { BorderType } from '@/types';\n\nexport const DEFAULT_FONT_SIZE = 12;\nexport const MUST_FONT_FAMILY = 'sans-serif';\nexport const SHEET_NAME_PREFIX = 'Sheet';\nexport const CELL_HEIGHT = 22;\nexport const CELL_WIDTH = 76;\nexport const ROW_TITLE_HEIGHT = CELL_HEIGHT;\nexport const COL_TITLE_WIDTH = CELL_WIDTH / 2;\nexport const HIDE_CELL = 0;\nexport const TEXTAREA_MAX_ROWS = 10;\nexport const MERGE_CELL_LINE_BREAK = '&#10;';\nexport const LINE_BREAK = '\\n';\nexport const CSV_SPLITTER = ',';\nexport const XLSX_MAX_COL_COUNT = 16384; // XFD\nexport const XLSX_MAX_ROW_COUNT = 1048576;\nexport const DEFAULT_ROW_COUNT = 200;\nexport const MAX_ADD_ROW_THRESHOLD = 200;\nexport const DEFAULT_COL_COUNT = 30;\nexport const DEFAULT_POSITION = -999;\n\nexport const SHEET_ITEM_TEST_ID_PREFIX = '__sheet_item_';\nexport const FORMULA_PREFIX = '=';\nexport const SPLITTER = '_';\nexport const MAX_NAME_LENGTH = 35;\nexport const MAX_PARAMS_COUNT = 256;\nexport const FORMULA_MAX_PRECISION = 9;\nexport const FORMULA_EDITOR_ROLE = '__FORMULA_EDITOR_ROLE__';\n\nexport const DEFAULT_FORMAT_CODE = 'General';\nexport const DEFAULT_TEXT_FORMAT_CODE = '@';\n\nexport const ERROR_SET = new Set([\n  '#GETTING_DATA',\n  '#DIV/0!',\n  '#NULL!',\n  '#NUM!',\n  '#REF!',\n  '#VALUE!',\n  '#N/A',\n  '#NAME?',\n] as const);\n\nexport type ErrorTypes = typeof ERROR_SET extends Set<infer T> ? T : never;\n\nexport const DEFAULT_LINE_WIDTH = 1;\n\nexport const BORDER_TYPE_MAP: Record<BorderType, number> = {\n  thin: DEFAULT_LINE_WIDTH,\n  hair: DEFAULT_LINE_WIDTH,\n  dotted: DEFAULT_LINE_WIDTH,\n  dashed: DEFAULT_LINE_WIDTH,\n  dashDot: DEFAULT_LINE_WIDTH,\n  dashDotDot: DEFAULT_LINE_WIDTH,\n  double: DEFAULT_LINE_WIDTH,\n  medium: DEFAULT_LINE_WIDTH * 2,\n  mediumDashed: DEFAULT_LINE_WIDTH * 2,\n  mediumDashDot: DEFAULT_LINE_WIDTH * 2,\n  mediumDashDotDot: DEFAULT_LINE_WIDTH * 2,\n  thick: DEFAULT_LINE_WIDTH * 4,\n};\n\nexport const COLOR_PICKER_COLOR_LIST = [\n  '#35322B',\n  '#505050',\n  '#606060',\n  '#6F6F6F',\n  '#8B8B8B',\n  '#B2B2B2',\n  '#CCCCCC',\n  '#E5E5E5',\n  '#F5F5F5',\n  '#FFFFFF',\n  '#9D0000',\n  '#B20000',\n  '#CD0F0F',\n  '#E30909',\n  '#F30B0B',\n  '#FE4B4B',\n  '#FA7979',\n  '#FB9D9D',\n  '#FDCECE',\n  '#FEE7E7',\n  '#B24000',\n  '#CC4F10',\n  '#DF5D00',\n  '#F96800',\n  '#FB8937',\n  '#FF8C51',\n  '#FCA669',\n  '#FDC49B',\n  '#FEE1CD',\n  '#FEF0E6',\n  '#B19401',\n  '#C5A300',\n  '#D8B300',\n  '#EBC301',\n  '#F9D700',\n  '#FBE137',\n  '#FCE869',\n  '#FDF09B',\n  '#FEF7CD',\n  '#FEFBE6',\n  '#58770A',\n  '#688C0D',\n  '#7AA017',\n  '#8BBB11',\n  '#A4DC16',\n  '#BEEE44',\n  '#CEF273',\n  '#DEF6A2',\n  '#EFFBD0',\n  '#F7FDE8',\n  '#007676',\n  '#008A8A',\n  '#009E9E',\n  '#00BBBB',\n  '#1CD8D8',\n  '#2AEAEA',\n  '#76EFEF',\n  '#A3F5F5',\n  '#D1FAFA',\n  '#E8FCFC',\n  '#001F9C',\n  '#0025B7',\n  '#012BD2',\n  '#133DE3',\n  '#2F55EB',\n  '#4567ED',\n  '#738DF2',\n  '#A2B3F6',\n  '#D0D9FB',\n  '#E8ECFD',\n  '#3F0198',\n  '#510EB0',\n  '#6721CB',\n  '#7735D4',\n  '#894EDE',\n  '#9E6DE3',\n  '#AA82E3',\n  '#C7ABED',\n  '#E3D5F6',\n  '#F1EAFA',\n  '#8F0550',\n  '#A1095C',\n  '#C1026B',\n  '#D4157E',\n  '#E7258F',\n  '#F248A6',\n  '#F273B9',\n  '#F6A2D0',\n  '#FBD0E8',\n  '#FDE8F3',\n];\n\nexport const TEXT_FLAG = '#TEXT' as const;\n\nexport const CELL_REG_EXP = /^[$]?[A-Za-z]{1,3}[$]?[1-9][0-9]*$/;\nexport const COLUMN_REG_EXP = /^[$]?[A-Za-z]{1,3}$/;\nexport const ROW_REG_EXP = /^\\$[1-9][0-9]*$/;\nexport const DEFINED_NAME_REG_EXP = /^[a-zA-Z_][a-zA-Z0-9_.?]*$/;\n\nexport const BUILT_IN_FUNCTION_SET = new Set([\n  'ABS',\n  'ACCRINT',\n  'ACCRINTM',\n  'ACOS',\n  'ACOSH',\n  'ACOT',\n  'ACOTH',\n  'ADDRESS',\n  'AGGREGATE',\n  'AMORDEGRC',\n  'AMORLINC',\n  'AND',\n  'ARABIC',\n  'AREAS',\n  'ARRAYTOTEXT',\n  'ASC',\n  'ASIN',\n  'ASINH',\n  'ATAN',\n  'ATAN2',\n  'ATANH',\n  'AVEDEV',\n  'AVERAGE',\n  'AVERAGEA',\n  'AVERAGEIF',\n  'AVERAGEIFS',\n  'BAHTTEXT',\n  'BASE',\n  'BESSELI',\n  'BESSELJ',\n  'BESSELK',\n  'BESSELY',\n  'BETA.DIST',\n  'BETA.INV',\n  'BETADIST',\n  'BETAINV',\n  'BIN2DEC',\n  'BIN2HEX',\n  'BIN2OCT',\n  'BINOM.DIST',\n  'BINOM.DIST.RANGE',\n  'BINOM.INV',\n  'BINOMDIST',\n  'BITAND',\n  'BITLSHIFT',\n  'BITOR',\n  'BITRSHIFT',\n  'BITXOR',\n  'CALL',\n  'CEILING',\n  'CEILING.MATH',\n  'CEILING.PRECISE',\n  'CELL',\n  'CHAR',\n  'CHIDIST',\n  'CHIINV',\n  'CHISQ.DIST',\n  'CHISQ.DIST.RT',\n  'CHISQ.INV',\n  'CHISQ.INV.RT',\n  'CHISQ.TEST',\n  'CHITEST',\n  'CLEAN',\n  'CODE',\n  'COLUMN',\n  'COLUMNS',\n  'COMBIN',\n  'COMBINA',\n  'COMPLEX',\n  'CONCAT',\n  'CONCATENATE',\n  'CONFIDENCE',\n  'CONFIDENCE.NORM',\n  'CONFIDENCE.T',\n  'CONVERT',\n  'CORREL',\n  'COS',\n  'COSH',\n  'COT',\n  'COTH',\n  'COUNT',\n  'COUNTA',\n  'COUNTBLANK',\n  'COUNTIF',\n  'COUNTIFS',\n  'COUPDAYBS',\n  'COUPDAYS',\n  'COUPDAYSNC',\n  'COUPNCD',\n  'COUPNUM',\n  'COUPPCD',\n  'COVAR',\n  'COVARIANCE.P',\n  'COVARIANCE.S',\n  'CRITBINOM',\n  'CSC',\n  'CSCH',\n  'CUBEKPIMEMBER',\n  'CUBEMEMBER',\n  'CUBEMEMBERPROPERTY',\n  'CUBERANKEDMEMBER',\n  'CUBESET',\n  'CUBESETCOUNT',\n  'CUBEVALUE',\n  'CUMIPMT',\n  'CUMPRINC',\n  'DATE',\n  'DATEDIF',\n  'DATEVALUE',\n  'DAVERAGE',\n  'DAY',\n  'DAYS',\n  'DAYS360',\n  'DB',\n  'DBCS',\n  'DCOUNT',\n  'DCOUNTA',\n  'DDB',\n  'DEC2BIN',\n  'DEC2HEX',\n  'DEC2OCT',\n  'DECIMAL',\n  'DEGREES',\n  'DELTA',\n  'DEVSQ',\n  'DGET',\n  'DISC',\n  'DMAX',\n  'DMIN',\n  'DOLLAR',\n  'DOLLARDE',\n  'DOLLARFR',\n  'DPRODUCT',\n  'DSTDEV',\n  'DSTDEVP',\n  'DSUM',\n  'DURATION',\n  'DVAR',\n  'DVARP',\n  'EDATE',\n  'EFFECT',\n  'ENCODEURL',\n  'EOMONTH',\n  'ERF',\n  'ERF.PRECISE',\n  'ERFC',\n  'ERFC.PRECISE',\n  'ERROR.TYPE',\n  'EUROCONVERT',\n  'EVEN',\n  'EXACT',\n  'EXP',\n  'EXPON.DIST',\n  'EXPONDIST',\n  'F.DIST',\n  'F.DIST.RT',\n  'F.INV',\n  'F.INV.RT',\n  'F.TEST',\n  'FACT',\n  'FACTDOUBLE',\n  'FALSE',\n  'FDIST',\n  'FILTER',\n  'FILTERXML',\n  'FIND',\n  'FINDB',\n  'FINV',\n  'FISHER',\n  'FISHERINV',\n  'FIXED',\n  'FLOOR',\n  'FLOOR.MATH',\n  'FLOOR.PRECISE',\n  'FORECAST',\n  'FORECAST.ETS',\n  'FORECAST.ETS.CONFINT',\n  'FORECAST.ETS.SEASONALITY',\n  'FORECAST.ETS.STAT',\n  'FORECAST.LINEAR',\n  'FORMULATEXT',\n  'FREQUENCY',\n  'FTEST',\n  'FV',\n  'FVSCHEDULE',\n  'GAMMA',\n  'GAMMA.DIST',\n  'GAMMA.INV',\n  'GAMMADIST',\n  'GAMMAINV',\n  'GAMMALN',\n  'GAMMALN.PRECISE',\n  'GAUSS',\n  'GCD',\n  'GEOMEAN',\n  'GESTEP',\n  'GETPIVOTDATA',\n  'GROWTH',\n  'HARMEAN',\n  'HEX2BIN',\n  'HEX2DEC',\n  'HEX2OCT',\n  'HLOOKUP',\n  'HOUR',\n  'HYPERLINK',\n  'HYPGEOM.DIST',\n  'HYPGEOMDIST',\n  'IFERROR',\n  'IFNA',\n  'IFS',\n  'IMABS',\n  'IMAGINARY',\n  'IMARGUMENT',\n  'IMCONJUGATE',\n  'IMCOS',\n  'IMCOSH',\n  'IMCOT',\n  'IMCSC',\n  'IMCSCH',\n  'IMDIV',\n  'IMEXP',\n  'IMLN',\n  'IMLOG10',\n  'IMLOG2',\n  'IMPOWER',\n  'IMPRODUCT',\n  'IMREAL',\n  'IMSEC',\n  'IMSECH',\n  'IMSIN',\n  'IMSINH',\n  'IMSQRT',\n  'IMSUB',\n  'IMSUM',\n  'IMTAN',\n  'INFO',\n  'INT',\n  'INTERCEPT',\n  'INTRATE',\n  'IPMT',\n  'IRR',\n  'ISBLANK',\n  'ISERR',\n  'ISERROR',\n  'ISEVEN',\n  'ISFORMULA',\n  'ISLOGICAL',\n  'ISNA',\n  'ISNONTEXT',\n  'ISNUMBER',\n  'ISO.CEILING',\n  'ISODD',\n  'ISOWEEKNUM',\n  'ISPMT',\n  'ISREF',\n  'ISTEXT',\n  'JIS',\n  'KURT',\n  'LARGE',\n  'LCM',\n  'LEFT',\n  'LEFTB',\n  'LEN',\n  'LENB',\n  'LET',\n  'LINEST',\n  'LN',\n  'LOG',\n  'LOG10',\n  'LOGEST',\n  'LOGINV',\n  'LOGNORM.DIST',\n  'LOGNORM.INV',\n  'LOGNORMDIST',\n  'LOOKUP',\n  'LOWER',\n  'MATCH',\n  'MAX',\n  'MAXA',\n  'MAXIFS',\n  'MDETERM',\n  'MDURATION',\n  'MEDIAN',\n  'MID',\n  'MIDB',\n  'MIN',\n  'MINA',\n  'MINIFS',\n  'MINUTE',\n  'MINVERSE',\n  'MIRR',\n  'MMULT',\n  'MOD',\n  'MODE',\n  'MODE.MULT',\n  'MODE.SNGL',\n  'MONTH',\n  'MROUND',\n  'MULTINOMIAL',\n  'MUNIT',\n  'N',\n  'NA',\n  'NEGBINOM.DIST',\n  'NEGBINOMDIST',\n  'NETWORKDAYS',\n  'NETWORKDAYS.INTL',\n  'NOMINAL',\n  'NORM.DIST',\n  'NORM.INV',\n  'NORM.S.DIST',\n  'NORM.S.INV',\n  'NORMDIST',\n  'NORMINV',\n  'NORMSDIST',\n  'NORMSINV',\n  'NOT',\n  'NOW',\n  'NPER',\n  'NPV',\n  'NUMBERVALUE',\n  'OCT2BIN',\n  'OCT2DEC',\n  'OCT2HEX',\n  'ODD',\n  'ODDFPRICE',\n  'ODDFYIELD',\n  'ODDLPRICE',\n  'ODDLYIELD',\n  'OR',\n  'PDURATION',\n  'PEARSON',\n  'PERCENTILE',\n  'PERCENTILE.EXC',\n  'PERCENTILE.INC',\n  'PERCENTRANK',\n  'PERCENTRANK.EXC',\n  'PERCENTRANK.INC',\n  'PERMUT',\n  'PERMUTATIONA',\n  'PHI',\n  'PHONETIC',\n  'PI',\n  'PMT',\n  'POISSON',\n  'POISSON.DIST',\n  'POWER',\n  'PPMT',\n  'PRICE',\n  'PRICEDISC',\n  'PRICEMAT',\n  'PROB',\n  'PRODUCT',\n  'PROPER',\n  'PV',\n  'QUARTILE',\n  'QUARTILE.EXC',\n  'QUARTILE.INC',\n  'QUOTIENT',\n  'RADIANS',\n  'RAND',\n  'RANDARRAY',\n  'RANDBETWEEN',\n  'RANK',\n  'RANK.AVG',\n  'RANK.EQ',\n  'RATE',\n  'RECEIVED',\n  'REGISTER.ID',\n  'REPLACE',\n  'REPLACEB',\n  'REPT',\n  'RIGHT',\n  'RIGHTB',\n  'ROMAN',\n  'ROUND',\n  'ROUNDDOWN',\n  'ROUNDUP',\n  'ROW',\n  'ROWS',\n  'RRI',\n  'RSQ',\n  'RTD',\n  'SEARCH',\n  'SEARCHB',\n  'SEC',\n  'SECH',\n  'SECOND',\n  'SEQUENCE',\n  'SERIESSUM',\n  'SHEET',\n  'SHEETS',\n  'SIGN',\n  'SIN',\n  'SINH',\n  'SKEW',\n  'SKEW.P',\n  'SLN',\n  'SLOPE',\n  'SMALL',\n  'SORT',\n  'SORTBY',\n  'SQRT',\n  'SQRTPI',\n  'STANDARDIZE',\n  'STDEV',\n  'STDEV.P',\n  'STDEV.S',\n  'STDEVA',\n  'STDEVP',\n  'STDEVPA',\n  'STEYX',\n  'SUBSTITUTE',\n  'SUBTOTAL',\n  'SUM',\n  'SUMIF',\n  'SUMIFS',\n  'SUMPRODUCT',\n  'SUMSQ',\n  'SUMX2MY2',\n  'SUMX2PY2',\n  'SUMXMY2',\n  'SWITCH',\n  'SYD',\n  'T',\n  'T.DIST',\n  'T.DIST.2T',\n  'T.DIST.RT',\n  'T.INV',\n  'T.INV.2T',\n  'T.TEST',\n  'TAN',\n  'TANH',\n  'TBILLEQ',\n  'TBILLPRICE',\n  'TBILLYIELD',\n  'TDIST',\n  'TEXT',\n  'TEXTJOIN',\n  'TIME',\n  'TIMEVALUE',\n  'TINV',\n  'TODAY',\n  'TRANSPOSE',\n  'TREND',\n  'TRIM',\n  'TRIMMEAN',\n  'TRUE',\n  'TRUNC',\n  'TTEST',\n  'TYPE',\n  'UNICHAR',\n  'UNICODE',\n  'UNIQUE',\n  'UPPER',\n  'VALUE',\n  'VALUETOTEXT',\n  'VAR',\n  'VAR.P',\n  'VAR.S',\n  'VARA',\n  'VARP',\n  'VARPA',\n  'VDB',\n  'VLOOKUP',\n  'WEBSERVICE',\n  'WEEKDAY',\n  'WEEKNUM',\n  'WEIBULL',\n  'WEIBULL.DIST',\n  'WORKDAY',\n  'WORKDAY.INTL',\n  'XIRR',\n  'XLOOKUP',\n  'XMATCH',\n  'XNPV',\n  'XOR',\n  'YEAR',\n  'YEARFRAC',\n  'YIELD',\n  'YIELDDISC',\n  'YIELDMAT',\n  'Z.TEST',\n  'ZTEST',\n] as const);\n\nexport type BuiltInFormulas = typeof BUILT_IN_FUNCTION_SET extends Set<infer T>\n  ? T\n  : never;\n", "type Params = any[];\n\nexport function throttle(fn: (...params: Params) => void, wait: number) {\n  let check = false;\n  let lastArgs: Params | undefined = undefined;\n  return function (...args: Params) {\n    if (check) {\n      lastArgs = args;\n    } else {\n      // @ts-ignore\n      fn.apply(this, args);\n      setTimeout(() => {\n        if (lastArgs) {\n          // @ts-ignore\n          fn.apply(this, lastArgs);\n        }\n        check = false;\n      }, wait);\n    }\n  };\n}\n\nexport function get<T>(\n  obj: Record<string, any> | null | undefined,\n  path: string,\n  defaultValue?: T,\n): T {\n  const result =\n    obj == null\n      ? undefined\n      : path\n          .replace(/\\[/g, '.')\n          .replace(/\\]/g, '')\n          .split('.')\n          .reduce((res, key) => {\n            return res == null ? res : res[key];\n          }, obj);\n  return (result === undefined ? defaultValue : result) as T;\n}\n\nexport function isEmpty(value: unknown): boolean {\n  const temp: any = value || {};\n  return (\n    [Object, Array].includes(temp.constructor) && !Object.entries(temp).length\n  );\n}\n\nexport function deepEqual(x: any, y: any) {\n  if (x === y) {\n    return true;\n  }\n  if (x && typeof x === 'object' && y && typeof y === 'object') {\n    if (Object.keys(x).length !== Object.keys(y).length) {\n      return false;\n    }\n    const keys1 = Object.keys(x);\n    const keys2 = Object.keys(y);\n    for (let i = 0; i < keys1.length; i++) {\n      const key1 = keys1[i];\n      const key2 = keys2[i];\n      if (key1 !== key2 || !deepEqual(x[key1], y[key2])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\nexport function noop() {}\n\nexport function camelCase(str: string) {\n  const a = str\n    .toLowerCase()\n    .replace(/[-_\\s.]+(.)?/g, (_, c) => (c ? c.toUpperCase() : ''));\n  return a.substring(0, 1).toLowerCase() + a.substring(1);\n}\n", "import {\n  SHEET_NAME_PREFIX,\n  SPLITTER,\n  FORMULA_PREFIX,\n  MERGE_CELL_LINE_BREAK,\n} from './constant';\nimport type {\n  WorksheetType,\n  ChangeEventType,\n  Coordinate,\n  ICommandItem,\n  ResultType,\n} from '@/types';\n\nexport function parseNumber(value: any): [boolean, number] {\n  if (typeof value === 'boolean') {\n    return [true, Number(value)];\n  }\n  if (typeof value === 'number' && !isNaN(value)) {\n    return [true, value];\n  }\n  if (typeof value !== 'string') {\n    return [false, 0];\n  }\n  if (value.length > 12) {\n    return [false, 0];\n  }\n  const temp = Number(value);\n  if (isNaN(temp)) {\n    return [false, 0];\n  }\n  return [true, temp];\n}\n\nexport function getListMaxNum(list: string[] = []): number {\n  const idList: number[] = list\n    .map((item) => {\n      return parseNumber(item)[1];\n    })\n    .filter((v) => !isNaN(v));\n  return Math.max(Math.max(...idList), 0);\n}\n\nexport function getDefaultSheetInfo(\n  list: WorksheetType[] = [],\n): Pick<WorksheetType, 'name' | 'sheetId' | 'sort'> {\n  const sheetId =\n    Math.ceil(getListMaxNum(list.map((item) => item.sheetId))) + 1;\n  return {\n    name: `${SHEET_NAME_PREFIX}${sheetId}`,\n    sheetId: String(sheetId),\n    sort: sheetId,\n  };\n}\n\nexport function convertStringToResultType(value: any): ResultType {\n  if (typeof value === 'string') {\n    const temp = value.toUpperCase();\n    if (['TRUE', 'FALSE'].includes(temp)) {\n      return temp === 'TRUE';\n    }\n  }\n  if (typeof value === 'boolean') {\n    return value;\n  }\n  if (value === '') {\n    return '';\n  }\n  const [check, num] = parseNumber(value);\n  if (check) {\n    return num;\n  }\n  return value;\n}\n\nexport function coordinateToString(\n  row: number,\n  col: number,\n): `${number}_${number}` {\n  return `${row}${SPLITTER}${col}`;\n}\n\nexport function stringToCoordinate(key: string): Coordinate {\n  const [row, col] = key.split(SPLITTER);\n  const r = parseInt(row, 10);\n  const c = parseInt(col, 10);\n  return {\n    row: isNaN(r) ? -1 : r,\n    col: isNaN(c) ? -1 : c,\n  };\n}\n\nexport function getCustomWidthOrHeightKey(\n  sheetId: string,\n  rowOrCol: number,\n): `${string}_${number}` {\n  return `${sheetId}${SPLITTER}${rowOrCol}`;\n}\n\nexport function widthOrHeightKeyToData(key: string) {\n  const [sheetId, num] = key.split(SPLITTER);\n  const r = parseInt(num, 10);\n  return {\n    sheetId,\n    rowOrCol: isNaN(r) ? -1 : r,\n  };\n}\n\nexport function generateUUID() {\n  let d = new Date().getTime();\n\n  const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\n    /[xy]/g,\n    function (c) {\n      const r = (d + Math.random() * 16) % 16 | 0;\n      d = Math.floor(d / 16);\n      return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n    },\n  );\n\n  return uuid;\n}\n\nexport function isMobile() {\n  const matchList = [\n    /Android/i,\n    /webOS/i,\n    /iPhone/i,\n    /iPad/i,\n    /iPod/i,\n    /BlackBerry/i,\n    /Windows Phone/i,\n  ];\n  const ua = navigator.userAgent;\n  return matchList.some((v) => ua.match(v));\n}\n\nexport function modelToChangeSet(list: ICommandItem[]) {\n  const result = new Set<ChangeEventType>();\n  for (const item of list) {\n    const type = item.type;\n    result.add(type);\n    if (type === 'worksheets') {\n      if (item.key.includes('style')) {\n        result.add('cellStyle');\n      } else if (item.key.includes('value') || item.key.includes('formula')) {\n        result.add('cellValue');\n      } else {\n        result.add('cellValue');\n        result.add('cellStyle');\n      }\n    } else if (type === 'workbook') {\n      if (item.key.includes('rowCount')) {\n        result.add('row');\n      }\n      if (item.key.includes('colCount')) {\n        result.add('col');\n      }\n    } else if (type === 'customHeight') {\n      result.add('row');\n    } else if (type === 'customWidth') {\n      result.add('col');\n    }\n  }\n  return result;\n}\n\nexport function sleep(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport function isTestEnv(): boolean {\n  return process.env.NODE_ENV === 'test';\n}\n\nexport function isMac() {\n  return navigator.userAgent.indexOf('Mac OS X') > -1;\n}\n\nexport function isFormula(value: ResultType) {\n  if (\n    typeof value === 'string' &&\n    value &&\n    value.startsWith(FORMULA_PREFIX) &&\n    value.length > 1\n  ) {\n    return true;\n  }\n  return false;\n}\n\nexport function isMergeContent(isMergeCell: boolean, text: string) {\n  return isMergeCell && text.includes(MERGE_CELL_LINE_BREAK);\n}\n", "/**\n * font-style:  none | normal | italic | oblique\n * font-variant none | normal | small-caps // \u4F5C\u7528\u4E0D\u5927\n * font-weight  none | normal | bold | \u6570\u5B57\n * font-size\n * line-height\n * font-family\n * e.g italic bold 14px/16px sans-serif;\n */\n\nimport { EUnderLine, StyleType, ResultType } from '@/types';\nimport { DEFAULT_FONT_SIZE, MUST_FONT_FAMILY } from './constant';\nimport { camelCase } from './lodash';\nimport { parseNumber, isTestEnv } from './util';\n\nexport const FONT_SIZE_LIST = [\n  6,\n  8,\n  9,\n  10,\n  DEFAULT_FONT_SIZE,\n  14,\n  16,\n  18,\n  20,\n  22,\n  24,\n  26,\n  28,\n  36,\n  48,\n  72,\n];\n\nexport function makeFont(\n  fontStyle: 'none' | 'normal' | 'italic' | 'oblique' = 'normal',\n  fontWeight = 'normal',\n  fontSize = DEFAULT_FONT_SIZE,\n  fontFamily = '',\n): string {\n  const temp = `${fontStyle} ${fontWeight} ${fontSize}px `;\n  const fontFamilyList: string[] = [MUST_FONT_FAMILY];\n  // just for test\n  if (isTestEnv()) {\n    fontFamilyList.unshift('Source Code Pro');\n  }\n  if (fontFamily) {\n    fontFamilyList.unshift(fontFamily);\n  }\n  return temp + fontFamilyList.join(',');\n}\n\nexport function convertToCssString(style: Partial<StyleType>): string {\n  let result = '';\n  if (style.fontColor) {\n    result += `color:${style.fontColor};`;\n  }\n  if (style.fillColor) {\n    result += `background-color:${style.fillColor};`;\n  }\n  if (style.fontSize) {\n    result += `font-size:${style.fontSize}pt;`;\n  }\n  if (style.fontFamily) {\n    result += `font-family:${style.fontFamily};`;\n  }\n  if (style.isItalic) {\n    result += 'font-style:italic;';\n  }\n  if (style.isBold) {\n    result += 'font-weight:700;';\n  }\n  if (style.isWrapText) {\n    result += 'white-space:normal;';\n  }\n  if (style.underline && style.isStrike) {\n    result += 'text-decoration-line:underline line-through;';\n  } else if (style.underline) {\n    result += 'text-decoration-line:underline;';\n  } else if (style.isStrike) {\n    result += 'text-decoration-line:line-through;';\n  }\n  if (style.underline === EUnderLine.DOUBLE) {\n    result += 'text-decoration-style: double;';\n  }\n\n  return result;\n}\n\nfunction pickCSSStyle(style: Partial<CSSStyleDeclaration>): Partial<StyleType> {\n  const {\n    color,\n    backgroundColor,\n    fontSize,\n    fontFamily,\n    fontStyle,\n    fontWeight,\n    whiteSpace,\n    textDecorationLine,\n    textDecorationStyle,\n  } = style;\n  const result: Partial<StyleType> = {};\n  if (color) {\n    result.fontColor = color;\n  }\n  if (backgroundColor) {\n    result.fillColor = backgroundColor;\n  }\n  if (fontSize) {\n    const size = parseInt(fontSize, 10);\n    if (!isNaN(size)) {\n      result.fontSize = size;\n    }\n  }\n  if (fontFamily) {\n    result.fontFamily = fontFamily;\n  }\n  if (fontStyle === 'italic') {\n    result.isItalic = true;\n  }\n  if (fontWeight && [700, 800, 900, 'bold'].includes(fontWeight)) {\n    result.isBold = true;\n  }\n  if (\n    whiteSpace &&\n    [\n      'normal',\n      'pre-wrap',\n      'pre-line',\n      'break-spaces',\n      'revert',\n      'unset',\n    ].includes(whiteSpace)\n  ) {\n    result.isWrapText = true;\n  }\n  if (textDecorationLine?.includes('underline')) {\n    result.underline = EUnderLine.SINGLE;\n    if (textDecorationStyle === 'double') {\n      result.underline = EUnderLine.DOUBLE;\n    }\n  }\n  if (textDecorationLine?.includes('line-through')) {\n    result.isStrike = true;\n  }\n  return result;\n}\n\nfunction parseStyle(\n  styleMap: Record<string, CSSStyleDeclaration>,\n  style: CSSStyleDeclaration,\n  className: string,\n  tagName: string,\n): Partial<StyleType> {\n  let result: Partial<StyleType> = {};\n  const name = tagName.toLowerCase();\n  const t = styleMap[tagName] || styleMap[name];\n  if (t) {\n    result = pickCSSStyle(t);\n  }\n  if (styleMap[className]) {\n    result = Object.assign(result, pickCSSStyle(styleMap[className]));\n  }\n\n  result = Object.assign(result, pickCSSStyle(style));\n\n  if (name === 's' || name === 'strike') {\n    result.isStrike = true;\n  } else if (name === 'i') {\n    result.isItalic = true;\n  } else if (name === 'b' || name === 'strong') {\n    result.isBold = true;\n  } else if (name === 'u') {\n    result.underline = EUnderLine.SINGLE;\n  }\n  return result;\n}\n\nfunction convertToCssStyleDeclaration(cssStr: string) {\n  const str = cssStr.replace(/\\s+/g, '').replace('<!--', '');\n  const regex = /([^{}]+)\\s*\\{([^}]*)\\}/g;\n  const matches: Record<string, Record<string, string | number>> = {};\n  let match;\n  while ((match = regex.exec(str)) !== null) {\n    const name = (match[1] || '').trim();\n    const cssText = (match[2] || '').trim();\n    if (!name || !cssText) {\n      continue;\n    }\n    matches[name] = {};\n    const list = cssText.split(';');\n    for (const item of list) {\n      const [n, v] = item.split(':').map((v) => v.trim());\n      if (!v || !n) {\n        continue;\n      }\n      const realKey = camelCase(n);\n      const [check, num] = parseNumber(v);\n      const value = check ? num : v;\n      matches[name][realKey] = value;\n    }\n  }\n  return matches;\n}\n\nexport function convertToPx(value: string): number {\n  const num = parseInt(value, 10);\n  if (isNaN(num)) {\n    return -1;\n  }\n  // pt to px\n  if (value.endsWith('pt')) {\n    return Math.ceil((num * 96) / 72);\n  }\n  return num;\n}\nexport function convertPxToPt(px: number, other = 'pt'): string {\n  const pt = Math.floor((px * 72) / 96);\n  return String(pt) + other;\n}\nexport function parseText(text: string, splitter = '\\t') {\n  let list: string[];\n  if (text.indexOf('\\r\\n') >= 0) {\n    list = text.split('\\r\\n');\n  } else {\n    list = text.split('\\n');\n  }\n  const result = list\n    .map((v) => v.trim())\n    .filter((v) => v)\n    .map((v) =>\n      v\n        .split(splitter)\n        .map((v) => v.trim())\n        .filter((v) => v),\n    );\n  const textList: Array<Array<ResultType>> = [];\n  for (const item of result) {\n    if (item.length === 0) {\n      continue;\n    }\n    textList.push(item);\n  }\n  return textList;\n}\n\nexport function parseHTML(html: string) {\n  let template: HTMLTemplateElement | undefined =\n    document.createElement('template');\n  template.innerHTML = html;\n  const doc = template.content;\n  const styleMap: Record<string, CSSStyleDeclaration> = {};\n  for (const item of doc.querySelectorAll('style')) {\n    const temp = convertToCssStyleDeclaration(item.textContent || '');\n    for (const [key, value] of Object.entries(temp)) {\n      styleMap[key] = Object.assign(styleMap[key] || {}, value);\n    }\n  }\n  const textList: Array<Array<ResultType>> = [];\n  const styleList: Array<Array<Partial<StyleType>>> = [];\n  const trList = doc.querySelectorAll('tr');\n  const colMap = new Map<number, number>();\n  const rowMap = new Map<number, number>();\n  let row = 0;\n  for (const tr of trList) {\n    const height = convertToPx(tr.style.height);\n    if (height > 0) {\n      rowMap.set(row++, height);\n    }\n    const texts: ResultType[] = [];\n    const list: Array<Partial<StyleType>> = [];\n    let col = 0;\n    for (const td of tr.children) {\n      if (td.tagName !== 'TD') {\n        continue;\n      }\n\n      let temp = td as HTMLElement;\n      const width = convertToPx(temp.style.width);\n      if (width > 0 && !colMap.has(col)) {\n        colMap.set(col++, width);\n      }\n      let itemStyle: Partial<StyleType> = {};\n      while (temp.nodeType !== Node.TEXT_NODE) {\n        const style = parseStyle(\n          styleMap,\n          temp.style,\n          temp.className ? `.${temp.className}` : '',\n          temp.tagName,\n        );\n        itemStyle = Object.assign(itemStyle, style);\n        if (temp.firstChild) {\n          temp = temp.firstChild as HTMLElement;\n        } else {\n          break;\n        }\n      }\n      list.push(itemStyle);\n      texts.push((temp.textContent ?? '').trim());\n    }\n    textList.push(texts);\n    styleList.push(list);\n  }\n  template = undefined;\n  return {\n    textList,\n    styleList,\n    rowMap,\n    colMap,\n  };\n}\n", "export function classnames(\n  ...rest: Array<string | Record<string, unknown> | undefined>\n): string {\n  let result = '';\n  for (const temp of rest) {\n    if (temp === undefined) {\n      continue;\n    }\n    if (typeof temp === 'string' && temp) {\n      result += `${temp} `;\n    }\n    if (typeof temp === 'object') {\n      for (const key of Object.keys(temp)) {\n        if (temp[key]) {\n          result += `${key} `;\n        }\n      }\n    }\n  }\n  return result.trim();\n}\n", "import { IRange, WorksheetType } from '@/types';\n\nexport function isSheet(range: IRange): boolean {\n  return isRow(range) && isCol(range);\n}\nexport function isRow(range: IRange): boolean {\n  return range.colCount === 0;\n}\nexport function isCol(range: IRange): boolean {\n  return range.rowCount === 0;\n}\n\nexport function isSameRange(oldRange: IRange, newRange: IRange): boolean {\n  return (\n    oldRange.col === newRange.col &&\n    oldRange.row === newRange.row &&\n    oldRange.colCount === newRange.colCount &&\n    oldRange.rowCount === newRange.rowCount &&\n    oldRange.sheetId === newRange.sheetId\n  );\n}\n\nexport function containRange(\n  sourceRange: IRange,\n  targetRange: IRange,\n): boolean {\n  if (sourceRange.colCount === 0 && targetRange.colCount !== 0) {\n    return false;\n  }\n  if (sourceRange.rowCount === 0 && targetRange.rowCount !== 0) {\n    return false;\n  }\n  if (targetRange.colCount === 0 && targetRange.row === sourceRange.row) {\n    return true;\n  }\n  if (targetRange.rowCount === 0 && targetRange.col === sourceRange.col) {\n    return true;\n  }\n  const { row, col } = sourceRange;\n  const check =\n    row >= targetRange.row &&\n    row < targetRange.row + targetRange.rowCount &&\n    col >= targetRange.col &&\n    col < targetRange.col + targetRange.colCount;\n  if (check) {\n    return true;\n  }\n\n  return false;\n}\n\nexport class SheetRange implements IRange {\n  row = 0;\n  col = 0;\n  colCount = 0;\n  rowCount = 0;\n  sheetId = '';\n  constructor(\n    row: number,\n    col: number,\n    rowCount: number,\n    colCount: number,\n    sheetId: string,\n  ) {\n    this.row = row;\n    this.col = col;\n    this.colCount = colCount;\n    this.rowCount = rowCount;\n    this.sheetId = sheetId;\n  }\n\n  static makeRange(range: IRange): SheetRange {\n    return new SheetRange(\n      range.row,\n      range.col,\n      range.rowCount,\n      range.colCount,\n      range.sheetId,\n    );\n  }\n  toIRange(): IRange {\n    return {\n      row: this.row,\n      col: this.col,\n      rowCount: this.rowCount,\n      colCount: this.colCount,\n      sheetId: this.sheetId,\n    };\n  }\n}\n\nexport function iterateRange(\n  range: IRange,\n  sheetInfo: WorksheetType | undefined,\n  fn: (row: number, col: number) => boolean,\n) {\n  const { row, col, rowCount, colCount } = range;\n  if (!sheetInfo) {\n    return;\n  }\n  if (isSheet(range)) {\n    for (let r = 0; r < sheetInfo.rowCount; r++) {\n      for (let c = 0; c < sheetInfo.colCount; c++) {\n        if (fn(r, c)) {\n          return;\n        }\n      }\n    }\n    return;\n  }\n  if (isRow(range)) {\n    for (let i = 0; i < sheetInfo.colCount; i++) {\n      if (fn(row, i)) {\n        return;\n      }\n    }\n    return;\n  }\n  if (isCol(range)) {\n    for (let i = 0; i < sheetInfo.rowCount; i++) {\n      if (fn(i, col)) {\n        return;\n      }\n    }\n    return;\n  }\n\n  const endRow = row + rowCount;\n  const endCol = col + colCount;\n  for (let r = row; r < endRow; r++) {\n    for (let c = col; c < endCol; c++) {\n      if (fn(r, c)) {\n        return;\n      }\n    }\n  }\n}\n", "/**\n * convert column name to number. e.g A -> 0, a -> 0\n * @param { string } columnName\n */\nexport function columnNameToInt(columnName: string): number {\n  const temp = columnName.toUpperCase();\n  let num = 0;\n  for (let i = 0; i < temp.length; i++) {\n    num = temp.charCodeAt(i) - 64 + num * 26;\n  }\n  return num - 1;\n}\n/**\n * convert number to column name 0 -> A\n * @param { string } number\n */\nexport function intToColumnName(temp: number): string {\n  const num = temp + 1;\n  let columnName = '';\n  let dividend = Math.floor(Math.abs(num));\n  let rest;\n\n  while (dividend > 0) {\n    rest = (dividend - 1) % 26;\n    columnName = String.fromCharCode(65 + rest) + columnName;\n    dividend = Math.floor((dividend - rest) / 26);\n  }\n  return columnName.toUpperCase();\n}\n\nexport function rowLabelToInt(label: string): number {\n  let result = parseInt(label, 10);\n  if (isNaN(result)) {\n    result = -1;\n  } else {\n    result = Math.max(result - 1, -1);\n  }\n  return result;\n}\n", "import { columnNameToInt, rowLabelToInt, intToColumnName } from './convert';\nimport { Coordinate, IRange, ReferenceType } from '@/types';\nimport { SheetRange } from './range';\nimport { XLSX_MAX_COL_COUNT, XLSX_MAX_ROW_COUNT } from './constant';\n\nexport const isAlpha = (char: string) =>\n  (char >= 'a' && char <= 'z') || (char >= 'A' && char <= 'Z');\nexport const isDigit = (char: string) => char >= '0' && char <= '9';\n\nfunction convertSheetNameToSheetId(value: string) {\n  return value;\n}\n\nfunction parseCell(\n  ref: string,\n  convertSheetName: typeof convertSheetNameToSheetId,\n): SheetRange | undefined {\n  if (!ref) {\n    return undefined;\n  }\n  const realRef = ref.trim();\n  let [sheetName, other = ''] = realRef.split('!');\n  if (!realRef.includes('!')) {\n    sheetName = '';\n    other = realRef;\n  }\n  if (\n    sheetName &&\n    sheetName[0] === \"'\" &&\n    sheetName[sheetName.length - 1] === \"'\"\n  ) {\n    sheetName = sheetName.slice(1, -1);\n  }\n  let i = 0;\n  let rowText = '';\n  let colText = '';\n  if (other[i] === '$') {\n    i++;\n  }\n  while (i < other.length && isAlpha(other[i])) {\n    colText += other[i++];\n  }\n  if (other[i] === '$') {\n    i++;\n  }\n  while (i < other.length && isDigit(other[i])) {\n    rowText += other[i++];\n  }\n  if (i !== other.length) {\n    return undefined;\n  }\n  if (!rowText && !colText) {\n    return undefined;\n  }\n\n  let rowCount = 1;\n  let colCount = 1;\n  let row = -1;\n  let col = -1;\n  if (rowText === '') {\n    rowCount = 0;\n    row = 0;\n  } else {\n    row = rowLabelToInt(rowText);\n  }\n  if (colText === '') {\n    colCount = 0;\n    col = 0;\n  } else {\n    col = columnNameToInt(colText);\n  }\n  if (\n    row < 0 ||\n    col < 0 ||\n    col >= XLSX_MAX_COL_COUNT ||\n    row >= XLSX_MAX_ROW_COUNT\n  ) {\n    return undefined;\n  }\n  const range = new SheetRange(\n    row,\n    col,\n    rowCount,\n    colCount,\n    convertSheetName(sheetName),\n  );\n  return range;\n}\n\nexport function parseReference(\n  text: string,\n  convertSheetName = convertSheetNameToSheetId,\n): SheetRange | undefined {\n  const [cell1, cell2] = text.split(':');\n  const startCell = parseCell(cell1, convertSheetName);\n  if (!startCell) {\n    return undefined;\n  }\n  const endCell = parseCell(cell2, convertSheetName);\n  if (!endCell) {\n    return startCell;\n  }\n  endCell.sheetId = startCell.sheetId;\n  return mergeRange(startCell, endCell);\n}\n\nexport function mergeRange(start: IRange, end: IRange): SheetRange | undefined {\n  if (start.sheetId !== end.sheetId) {\n    return undefined;\n  }\n  if (\n    start.row === end.row &&\n    start.col === end.col &&\n    start.rowCount === end.rowCount &&\n    start.colCount === end.colCount\n  ) {\n    return SheetRange.makeRange(start);\n  }\n  if (start.rowCount === 0 && end.rowCount !== 0) {\n    return undefined;\n  }\n  if (start.rowCount !== 0 && end.rowCount === 0) {\n    return undefined;\n  }\n  if (start.colCount === 0 && end.colCount !== 0) {\n    return undefined;\n  }\n  if (start.colCount !== 0 && end.colCount === 0) {\n    return undefined;\n  }\n\n  const rowCount = Math.abs(start.row - end.row) + 1;\n  const colCount = Math.abs(start.col - end.col) + 1;\n  const row = start.row < end.row ? start.row : end.row;\n  const col = start.col < end.col ? start.col : end.col;\n\n  return new SheetRange(row, col, rowCount, colCount, start.sheetId);\n}\n\nfunction convertCell(row: number, col: number, referenceType: ReferenceType) {\n  const first = referenceType === 'absolute' || referenceType === 'mixed';\n  const second = referenceType === 'absolute';\n  return `${first ? '$' : ''}${intToColumnName(col)}${second ? '$' : ''}${\n    row + 1\n  }`;\n}\n\nexport function convertToReference(\n  range: IRange,\n  referenceType: ReferenceType = 'relative',\n  convertSheetIdToSheetName = convertSheetNameToSheetId,\n) {\n  let result = convertCell(range.row, range.col, referenceType);\n  let sheetName = convertSheetIdToSheetName(range.sheetId);\n  sheetName = sheetName ? `${sheetName}!` : '';\n  if (range.colCount > 1 && range.rowCount > 1) {\n    const end = convertCell(\n      range.row + range.rowCount - 1,\n      range.col + range.colCount - 1,\n      referenceType,\n    );\n    result = `${result}:${end}`;\n  }\n  return sheetName + result;\n}\n\nexport const R1C1_REG = /^R(\\[-\\d+\\]|\\[\\d+\\]|\\d+)?C(\\[-\\d+\\]|\\[\\d+\\]|\\d+)?$/i;\n\nfunction parseNumber(text: string, num: number) {\n  let result = -1;\n  if (text.startsWith('[')) {\n    const t = parseInt(text.slice(1, -1), 10);\n    if (!isNaN(t)) {\n      result = num + t;\n    }\n  } else {\n    const t = parseInt(text, 10);\n    if (!isNaN(t)) {\n      result = t - 1;\n    }\n  }\n  return isNaN(result) ? -1 : result;\n}\n\nexport function parseR1C1(\n  name: string,\n  activeCell: Coordinate = { row: -1, col: -1 },\n): SheetRange | undefined {\n  const text = name.toUpperCase();\n  if (text[0] !== 'R') {\n    return undefined;\n  }\n  const list = text.slice(1).split('C');\n  if (list.length !== 2) {\n    return undefined;\n  }\n  const [rowText, colText] = list;\n  let row = -1;\n  let col = -1;\n  if (!rowText) {\n    row = activeCell.row;\n  } else {\n    row = parseNumber(rowText, activeCell.row);\n  }\n  if (!colText) {\n    col = activeCell.col;\n  } else {\n    col = parseNumber(colText, activeCell.col);\n  }\n  if (\n    col >= XLSX_MAX_COL_COUNT ||\n    row >= XLSX_MAX_ROW_COUNT ||\n    row < 0 ||\n    col < 0\n  ) {\n    return undefined;\n  }\n  const range = new SheetRange(row, col, 1, 1, '');\n  return range;\n}\n", "import type { ClipboardData, CustomClipboardData } from '@/types';\n\nexport const PLAIN_FORMAT = 'text/plain';\nexport const HTML_FORMAT = 'text/html';\nexport const CUSTOM_FORMAT = 'custom/model';\nexport const IMAGE_FORMAT = 'image/png';\n\nconst CUSTOM_START_FLAG = '<caption>';\nconst CUSTOM_END_FLAG = '</caption>';\n\nfunction select(element: HTMLTextAreaElement) {\n  const isReadOnly = element.hasAttribute('readonly');\n  if (!isReadOnly) {\n    element.setAttribute('readonly', '');\n  }\n  element.select();\n  element.setSelectionRange(0, element.value.length);\n\n  if (!isReadOnly) {\n    element.removeAttribute('readonly');\n  }\n  return element.value;\n}\n\nfunction createFakeElement(value: string) {\n  const isRTL = document.documentElement.getAttribute('dir') === 'rtl';\n  const fakeElement = document.createElement('textarea');\n  // Prevent zooming on iOS\n  fakeElement.style.fontSize = '12pt';\n  // Reset box model\n  fakeElement.style.border = '0';\n  fakeElement.style.padding = '0';\n  fakeElement.style.margin = '0';\n  // Move element out of screen horizontally\n  fakeElement.style.position = 'absolute';\n  fakeElement.style[isRTL ? 'right' : 'left'] = '-9999px';\n  // Move element to the same position vertically\n  const yPosition = window.pageYOffset || document.documentElement.scrollTop;\n  fakeElement.style.top = `${yPosition}px`;\n\n  fakeElement.setAttribute('readonly', '');\n  fakeElement.value = value;\n\n  return fakeElement;\n}\n\nfunction defaultCopy(value: string, type: 'copy' | 'cut') {\n  let fakeElement: HTMLTextAreaElement | undefined = createFakeElement(value);\n  document.body.appendChild(fakeElement);\n  const selectedText = select(fakeElement);\n  if (typeof document.execCommand === 'function') {\n    document.execCommand(type);\n  }\n  fakeElement.remove();\n  fakeElement = undefined;\n  return selectedText;\n}\n\nasync function copy(textData: ClipboardData) {\n  const text = new Blob([textData[PLAIN_FORMAT]], { type: PLAIN_FORMAT });\n  const html = new Blob([textData[HTML_FORMAT]], { type: HTML_FORMAT });\n  const result: Record<string, Blob> = {\n    [PLAIN_FORMAT]: text,\n    [HTML_FORMAT]: html,\n  };\n  if (textData[IMAGE_FORMAT]) {\n    result[IMAGE_FORMAT] = textData[IMAGE_FORMAT];\n  }\n  await navigator?.clipboard?.write([new ClipboardItem(result)]);\n}\n\nexport async function copyOrCut(\n  textData: ClipboardData,\n  type: 'copy' | 'cut',\n): Promise<void> {\n  try {\n    await copy(textData);\n    return;\n  } catch (error) {\n    console.log(error);\n  }\n  try {\n    defaultCopy(textData[PLAIN_FORMAT], type);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function pasteRichText() {\n  const result: ClipboardData = {\n    [HTML_FORMAT]: '',\n    [PLAIN_FORMAT]: '',\n    [CUSTOM_FORMAT]: null,\n    [IMAGE_FORMAT]: null,\n  };\n  const list = (await navigator?.clipboard?.read()) || [];\n  for (const item of list) {\n    if (item.types.includes(PLAIN_FORMAT)) {\n      const buf = await item.getType(PLAIN_FORMAT);\n      result[PLAIN_FORMAT] = await buf?.text();\n    }\n    if (item.types.includes(HTML_FORMAT)) {\n      const buf = await item.getType(HTML_FORMAT);\n      result[HTML_FORMAT] = await buf?.text();\n    }\n    if (item.types.includes(IMAGE_FORMAT)) {\n      const buf = await item.getType(IMAGE_FORMAT);\n      result[IMAGE_FORMAT] = buf;\n    }\n  }\n\n  result[CUSTOM_FORMAT] =\n    result[CUSTOM_FORMAT] || extractCustomData(result[HTML_FORMAT]);\n  return result;\n}\n\nasync function pastePlainText(): Promise<ClipboardData> {\n  const result = (await navigator?.clipboard?.readText()) || '';\n  return {\n    [HTML_FORMAT]: '',\n    [PLAIN_FORMAT]: result,\n    [CUSTOM_FORMAT]: null,\n    [IMAGE_FORMAT]: null,\n  };\n}\nexport async function paste(): Promise<ClipboardData> {\n  try {\n    return await pasteRichText();\n  } catch (error) {\n    console.log(error);\n  }\n  try {\n    return await pastePlainText();\n  } catch (error) {\n    console.log(error);\n  }\n  return {\n    [HTML_FORMAT]: '',\n    [PLAIN_FORMAT]: '',\n    [CUSTOM_FORMAT]: null,\n    [IMAGE_FORMAT]: null,\n  };\n}\n\nexport function generateHTML(\n  style: string,\n  content: string,\n  customData: string = '',\n): string {\n  const result = `\n<html xmlns:v=\"urn:schemas-microsoft-com:vml\" xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-microsoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\">\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n    <meta name=\"ProgId\" content=\"Excel.Sheet\" />\n    <meta name=\"Generator\" content=\"Microsoft Excel 15\" />\n    <style>${style}</style>\n  </head>\n    <body>\n      <table>${customData}${content}</table>\n    </body>\n  </html>`;\n\n  return result.replaceAll('\\n', '');\n}\n\nexport function formatCustomData(customData: string) {\n  return customData\n    ? `${CUSTOM_START_FLAG}${customData}${CUSTOM_END_FLAG}`\n    : '';\n}\nexport function extractCustomData(html: string): CustomClipboardData | null {\n  const start = html.indexOf(CUSTOM_START_FLAG);\n  const end = html.indexOf(CUSTOM_END_FLAG);\n  if (start >= 0 && end >= 0) {\n    const t = html.slice(start + CUSTOM_START_FLAG.length, end).trim();\n    if (!t || t[0] !== '{' || t[t.length - 1] !== '}') {\n      return null;\n    }\n    try {\n      return JSON.parse(t);\n    } catch (error) {\n      console.log(error);\n      return null;\n    }\n  }\n  return null;\n}\n", "/**\n * query all installed fonts\n * window.queryLocalFonts()\n */\nexport const QUERY_ALL_LOCAL_FONT = 'QUERY_ALL_LOCAL_FONT';\nexport const LOCAL_FONT_KEY = 'LOCAL_FONT_KEY';\nexport const FONT_FAMILY_LIST = [\n  'PingFang SC',\n  'Microsoft Yahei',\n  'SimSun',\n  'Times New Roman',\n  'Source Code Pro',\n  '\u7B49\u7EBF',\n  '\u65B9\u6B63\u8212\u4F53',\n  '\u4EFF\u5B8B',\n  '\u9ED1\u4F53',\n  '\u6977\u4F53',\n  '\u96B6\u4E66',\n  '\u5B8B\u4F53',\n  '\u5FAE\u8F6F\u96C5\u9ED1',\n  '\u65B0\u5B8B\u4F53',\n  'Arial',\n  'Calibri',\n];\n", "import { IWindowSize, CanvasOverlayPosition } from '@/types';\nimport { ROW_TITLE_HEIGHT, COL_TITLE_WIDTH } from './constant';\n\nclass BaseSet<T> {\n  private state: T;\n  constructor(initValue: T) {\n    this.state = initValue;\n  }\n  set = (data: T): void => {\n    this.state = data;\n  };\n  get() {\n    return this.state;\n  }\n}\n\nexport const canvasSizeSet = new BaseSet<CanvasOverlayPosition>({\n  top: 0,\n  left: 0,\n  width: 0,\n  height: 0,\n});\n\nexport const sheetViewSizeSet = new BaseSet<IWindowSize>({\n  width: 0,\n  height: 0,\n});\n\nexport const headerSizeSet = new BaseSet<IWindowSize>({\n  width: COL_TITLE_WIDTH,\n  height: ROW_TITLE_HEIGHT,\n});\n", "import type { IController } from '@/types';\nimport { headerSizeSet } from './set';\n\ntype HitInfoResult = {\n  row: number;\n  col: number;\n  marginX: number;\n  marginY: number;\n};\n\nexport function getHitInfo(\n  controller: IController,\n  x: number,\n  y: number,\n): HitInfoResult | undefined {\n  if (x < 0 || y < 0) {\n    return undefined;\n  }\n  const sheetInfo = controller.getSheetInfo(controller.getCurrentSheetId());\n  if (!sheetInfo) {\n    return undefined;\n  }\n  const scroll = controller.getScroll();\n  const headerSize = headerSizeSet.get();\n  let resultX = headerSize.width;\n  let resultY = headerSize.height;\n  let marginX = x - headerSize.width;\n  let marginY = y - headerSize.height;\n  let { row, col } = scroll;\n  while (resultX + controller.getColWidth(col).len <= x) {\n    const t = controller.getColWidth(col).len;\n    resultX += t;\n    marginX -= t;\n    col++;\n  }\n  while (resultY + controller.getRowHeight(row).len <= y) {\n    const t = controller.getRowHeight(row).len;\n    resultY += t;\n    marginY -= t;\n    row++;\n  }\n  if (row >= sheetInfo.rowCount || col >= sheetInfo.colCount) {\n    return undefined;\n  }\n  return { row, col, marginX, marginY };\n}\n", "export function saveAs(blob: Blob | string, fileName: string): void {\n  let link: HTMLAnchorElement | undefined = document.createElement('a');\n  link.download = fileName || 'download';\n  link.rel = 'noopener';\n  link.target = '_blank';\n  link.setAttribute('data-testid', 'save-as-link');\n  if (typeof blob === 'string') {\n    link.href = blob;\n  } else {\n    link.href = URL.createObjectURL(blob);\n  }\n  link.dispatchEvent(new MouseEvent('click'));\n  link = undefined;\n}\n\n\n", "{\n  \"copy\": \"Copy\",\n  \"cut\": \"Cut\",\n  \"paste\": \"Paste\",\n  \"delete\": \"Delete\",\n  \"add\": \"Add\",\n  \"rows\": \"Rows\",\n  \"menu\": \"Menu\",\n  \"insert\": \"Insert\",\n  \"rename\": \"Rename\",\n  \"reset\": \"Reset\",\n  \"hide\": \"Hide\",\n  \"unhide\": \"Unhide\",\n  \"cancel\": \"Cancel\",\n  \"line-chart\": \"Line Chart\",\n  \"bar-chart\": \"Bar Chart\",\n  \"pie-chart\": \"Pie Chart\",\n  \"scatter-chart\": \"Scatter Chart\",\n  \"radar-chart\": \"Radar Chart\",\n  \"polar-area-chart\": \"PolarArea Chart\",\n  \"confirm\": \"Confirm\",\n  \"tab-color\": \"Tab Color\",\n  \"unhide-sheet\": \"Unhide sheet:\",\n  \"wrap-text\": \"Wrap Text\",\n  \"import-xlsx\": \"Import XLSX\",\n  \"export-xlsx\": \"Export XLSX\",\n  \"export-csv\": \"Export CSV\",\n  \"import-csv\": \"Import CSV\",\n  \"floating-picture\": \"Floating Picture\",\n  \"chart\": \"Chart\",\n  \"chart-title\": \"Chart Title\",\n  \"duplicate\": \"Duplicate\",\n  \"select-data\": \"Select Data\",\n  \"change-chart-title\": \"Change Chart Title\",\n  \"change-chart-type\": \"Change Chart Type\",\n  \"save-as-picture\": \"Save as Picture\",\n  \"reset-size\": \"Reset Size\",\n  \"add-at-the-bottom\": \"Add at the bottom\",\n  \"row-height\": \"Row Height\",\n  \"column-width\": \"Column Width\",\n  \"greater-than-zero\": \"The value must be greater than or equal to 0\",\n  \"insert-columns\": \"Insert Columns\",\n  \"delete-columns\": \"Delete Columns\",\n  \"hide-columns\": \"Hide Columns\",\n  \"insert-rows\": \"Insert Rows\",\n  \"delete-rows\": \"Delete Rows\",\n  \"hide-rows\": \"Hide rows\",\n  \"reference-is-empty\": \"The reference is empty\",\n  \"reference-is-not-valid\": \"The reference is not valid\",\n  \"the-value-cannot-be-empty\": \"The value cannot be empty\",\n  \"edit-data-source\": \"Edit Data Source\",\n  \"sheet-id-is-duplicate\": \"The sheet id is duplicate\",\n  \"a-workbook-must-contains-at-least-one-visible-worksheet\": \"A workbook must contains at least one visible worksheet\",\n  \"sheet-name-is-duplicate\": \"The sheet name is duplicate\",\n  \"uuid-is-duplicate\": \"The uuid is duplicate\",\n  \"cells-must-contain-data\": \"The selected cells must contain the data\",\n  \"image-source-is-empty\": \"The image source is empty\",\n  \"merging-cell-is-duplicate\": \"The merging cell is duplicate\",\n  \"insert-column-left\": \"Insert Column Left\",\n  \"insert-column-right\": \"Insert Column Right\",\n  \"insert-row-above\": \"Insert Row Above\",\n  \"insert-row-below\": \"Insert Row Below\",\n  \"get-all-installed-fonts\": \"Get all the fonts installed locally\",\n  \"unsupported-chart-types\": \"Unsupported chart types\",\n  \"merge-cell\": \"Merge\",\n  \"merge-and-center\": \"Merge and Center\",\n  \"merge-cells\": \"Merge Cells\",\n  \"merge-content\": \"Merge Content\",\n  \"none\": \"none\",\n  \"single-underline\": \"single underline\",\n  \"double-underline\": \"double underline\",\n  \"general\": \"General\",\n  \"number\": \"Number\",\n  \"currency\": \"Currency\",\n  \"accounting\": \"Accounting\",\n  \"short-date\": \"Short Date\",\n  \"long-date\": \"Long Date\",\n  \"time\": \"Time\",\n  \"percentage\": \"Percentage\",\n  \"fraction\": \"Fraction\",\n  \"scientific\": \"Scientific\",\n  \"text\": \"Text\",\n  \"more-number-formats\": \"More Number Formats\",\n  \"short-date-format\": \"m/d/yyyy;@\",\n  \"long-date-format\": \"[$-409]dddd,mmmm d,yyyy;@\",\n  \"time-format\": \"h:mm:ss AM/PM\",\n  \"sheet-id-can-not-be-empty\": \"The sheetId can not be empty\",\n  \"no-border\": \"No Border\",\n  \"all-borders\": \"All Borders\",\n  \"outside-borders\": \"OutSide Borders\",\n  \"thick-box-border\": \"Thick Box Border\",\n  \"bottom-border\": \"Bottom Border\",\n  \"top-border\": \"Top Border\",\n  \"left-border\": \"Left Border\",\n  \"right-border\": \"Right Border\",\n  \"line-color\": \"Line Color\",\n  \"line-style\": \"Line Style\",\n  \"open-worker\": \"Open Worker\",\n  \"close-worker\": \"Close Worker\"\n}", "{\n  \"copy\": \"\u590D\u5236\",\n  \"cut\": \"\u526A\u5207\",\n  \"paste\": \"\u7C98\u8D34\",\n  \"delete\": \"\u5220\u9664\",\n  \"add\": \"\u6DFB\u52A0\",\n  \"rows\": \"\u884C\",\n  \"menu\": \"\u83DC\u5355\",\n  \"insert\": \"\u63D2\u5165\",\n  \"rename\": \"\u91CD\u547D\u540D\",\n  \"reset\": \"\u91CD\u7F6E\",\n  \"hide\": \"\u9690\u85CF\",\n  \"unhide\": \"\u663E\u793A\",\n  \"cancel\": \"\u53D6\u6D88\",\n  \"line-chart\": \"\u6298\u7EBF\u56FE\",\n  \"bar-chart\": \"\u67F1\u72B6\u56FE\",\n  \"pie-chart\": \"\u997C\u56FE\",\n  \"scatter-chart\": \"\u6563\u70B9\u56FE\",\n  \"radar-chart\": \"\u96F7\u8FBE\u56FE\",\n  \"polar-area-chart\": \"\u6781\u533A\u56FE\",\n  \"confirm\": \"\u786E\u8BA4\",\n  \"tab-color\": \"\u9009\u9879\u5361\u989C\u8272\",\n  \"unhide-sheet\": \"\u663E\u793A\u5DE5\u4F5C\u8868:\",\n  \"wrap-text\": \"\u81EA\u52A8\u6362\u884C\",\n  \"import-xlsx\": \"\u5BFC\u5165 XLSX\",\n  \"export-xlsx\": \"\u5BFC\u51FA XLSX\",\n  \"export-csv\": \"\u5BFC\u51FA CSV\",\n  \"import-csv\": \"\u5BFC\u5165 CSV\",\n  \"floating-picture\": \"\u6D6E\u52A8\u56FE\u7247\",\n  \"chart\": \"\u56FE\u8868\",\n  \"chart-title\": \"\u56FE\u8868\u6807\u9898\",\n  \"duplicate\": \"\u590D\u5236\",\n  \"select-data\": \"\u9009\u62E9\u6570\u636E\",\n  \"change-chart-title\": \"\u66F4\u6539\u56FE\u8868\u6807\u9898\",\n  \"change-chart-type\": \"\u66F4\u6539\u56FE\u8868\u7C7B\u578B\",\n  \"save-as-picture\": \"\u4FDD\u5B58\u4E3A\u56FE\u7247\",\n  \"reset-size\": \"\u91CD\u7F6E\u5927\u5C0F\",\n  \"add-at-the-bottom\": \"\u5728\u5E95\u90E8\u6DFB\u52A0\",\n  \"row-height\": \"\u884C\u9AD8\",\n  \"column-width\": \"\u5217\u5BBD\",\n  \"greater-than-zero\": \"\u503C\u5FC5\u987B\u5927\u4E8E\u6216\u7B49\u4E8E 0\",\n  \"insert-columns\": \"\u63D2\u5165\u5217\",\n  \"delete-columns\": \"\u5220\u9664\u5217\",\n  \"hide-columns\": \"\u9690\u85CF\u5217\",\n  \"insert-rows\": \"\u63D2\u5165\u884C\",\n  \"delete-rows\": \"\u5220\u9664\u884C\",\n  \"hide-rows\": \"\u9690\u85CF\u884C\",\n  \"reference-is-empty\": \"\u5F15\u7528\u4E3A\u7A7A\",\n  \"reference-is-not-valid\": \"\u5F15\u7528\u65E0\u6548\",\n  \"the-value-cannot-be-empty\": \"\u503C\u4E0D\u80FD\u4E3A\u7A7A\",\n  \"edit-data-source\": \"\u7F16\u8F91\u6570\u636E\u6E90\",\n  \"sheet-id-is-duplicate\": \"\u5DE5\u4F5C\u8868 ID \u91CD\u590D\",\n  \"a-workbook-must-contains-at-least-one-visible-worksheet\": \"\u5DE5\u4F5C\u7C3F\u5FC5\u987B\u81F3\u5C11\u5305\u542B\u4E00\u4E2A\u53EF\u89C1\u5DE5\u4F5C\u8868\",\n  \"sheet-name-is-duplicate\": \"\u5DE5\u4F5C\u8868\u540D\u79F0\u91CD\u590D\",\n  \"uuid-is-duplicate\": \"UUID \u91CD\u590D\",\n  \"cells-must-contain-data\": \"\u6240\u9009\u5355\u5143\u683C\u5FC5\u987B\u5305\u542B\u6570\u636E\",\n  \"image-source-is-empty\": \"\u56FE\u50CF\u6E90\u4E3A\u7A7A\",\n  \"merging-cell-is-duplicate\": \"\u5408\u5E76\u5355\u5143\u683C\u91CD\u590D\",\n  \"insert-column-left\": \"\u5411\u5DE6\u63D2\u5165\u5217\",\n  \"insert-column-right\": \"\u5411\u53F3\u63D2\u5165\u5217\",\n  \"insert-row-above\": \"\u5728\u4E0A\u9762\u63D2\u5165\u884C\",\n  \"insert-row-below\": \"\u5728\u4E0B\u9762\u63D2\u5165\u884C\",\n  \"get-all-installed-fonts\": \"\u83B7\u53D6\u672C\u5730\u5B89\u88C5\u7684\u6240\u6709\u5B57\u4F53\",\n  \"unsupported-chart-types\": \"\u4E0D\u652F\u6301\u7684\u56FE\u8868\u7C7B\u578B\",\n  \"merge-cell\": \"\u5408\u5E76\u5355\u5143\u683C\",\n  \"merge-and-center\": \"\u5408\u5E76\u5E76\u4E14\u5C45\u4E2D\",\n  \"merge-cells\": \"\u5408\u5E76\u5355\u5143\u683C\",\n  \"merge-content\": \"\u5408\u5E76\u5185\u5BB9\",\n  \"none\": \"\u65E0\",\n  \"single-underline\": \"\u5355\u5C42\u4E0B\u5212\u7EBF\",\n  \"double-underline\": \"\u53CC\u5C42\u4E0B\u5212\u7EBF\",\n  \"general\": \"\u5E38\u89C4\",\n  \"number\": \"\u6570\u503C\",\n  \"currency\": \"\u8D27\u5E01\",\n  \"accounting\": \"\u4F1A\u8BA1\u4E13\u7528\",\n  \"short-date\": \"\u77ED\u65E5\u671F\",\n  \"long-date\": \"\u957F\u65E5\u671F\",\n  \"time\": \"\u65F6\u95F4\",\n  \"percentage\": \"\u767E\u5206\u6BD4\",\n  \"fraction\": \"\u5206\u6570\",\n  \"scientific\": \"\u79D1\u5B66\u8BA1\u6570\",\n  \"text\": \"\u6587\u672C\",\n  \"more-number-formats\": \"\u5176\u4ED6\u6570\u5B57\u683C\u5F0F\",\n  \"short-date-format\": \"yyyy/m/d;@\",\n  \"long-date-format\": \"yyyy\\\"\u5E74\\\"m\\\"\u6708\\\"d\\\"\u65E5\\\"\",\n  \"time-format\": \"h:mm:ss\",\n  \"sheet-id-can-not-be-empty\": \"SheetId \u4E0D\u80FD\u4E3A\u7A7A\",\n  \"no-border\": \"\u65E0\u8FB9\u6846\",\n  \"all-borders\": \"\u5168\u8FB9\u6846\",\n  \"outside-borders\": \"\u5916\u8FB9\u6846\",\n  \"thick-box-border\": \"\u539A\u6846\u8FB9\u6846\",\n  \"bottom-border\": \"\u5E95\u8FB9\u6846\",\n  \"top-border\": \"\u9876\u8FB9\u6846\",\n  \"left-border\": \"\u5DE6\u8FB9\u6846\",\n  \"right-border\": \"\u53F3\u8FB9\u6846\",\n  \"line-color\": \"\u7EBF\u6761\u989C\u8272\",\n  \"line-style\": \"\u7EBF\u6761\u6837\u5F0F\",\n  \"open-worker\": \"\u6253\u5F00 Worker\",\n  \"close-worker\": \"\u5173\u95ED Worker\"\n}", "import en from './lang/en.json';\nimport zh from './lang/zh.json';\n\nlet languageKey = 'language';\n\nexport const LANGUAGE_LIST = ['en', 'zh'] as const;\n\nexport type LanguageType = (typeof LANGUAGE_LIST)[number];\n\nexport function getLanguage(): LanguageType {\n  if (typeof window === 'undefined') {\n    return 'en';\n  }\n  let language: LanguageType = 'en';\n  const l = localStorage.getItem(languageKey);\n  if (l && LANGUAGE_LIST.some((v) => v === l)) {\n    language = l as LanguageType;\n  } else {\n    const lang = navigator?.language || '';\n    const item = LANGUAGE_LIST.find((v) => lang.includes(v));\n    if (item) {\n      language = item;\n    }\n  }\n  document.documentElement.setAttribute('lang', language);\n  return language;\n}\n\nexport function setLanguage(lang: LanguageType) {\n  localStorage.setItem(languageKey, lang);\n}\n\nexport function $(key: keyof typeof en) {\n  if (getLanguage() === 'en') {\n    return en[key];\n  } else {\n    return zh[key];\n  }\n}\n", "import type { ChartType } from 'chart.js';\nimport { $ } from '@/i18n';\nimport { DEFAULT_FORMAT_CODE, DEFAULT_TEXT_FORMAT_CODE } from './constant';\n\nexport const CHART_TYPE_LIST: Array<{\n  value: ChartType;\n  label: string;\n}> = [\n  {\n    value: 'line',\n    label: $('line-chart'),\n  },\n  {\n    value: 'bar',\n    label: $('bar-chart'),\n  },\n  {\n    value: 'pie',\n    label: $('pie-chart'),\n  },\n  {\n    value: 'scatter',\n    label: $('scatter-chart'),\n  },\n  {\n    value: 'radar',\n    label: $('radar-chart'),\n  },\n  {\n    value: 'polarArea',\n    label: $('polar-area-chart'),\n  },\n];\n\nexport const NUMBER_FORMAT_LIST: Array<{\n  formatCode: string;\n  id: number;\n}> = [\n  { formatCode: DEFAULT_FORMAT_CODE, id: 0 },\n  { formatCode: '0', id: 1 },\n  { formatCode: '0.00', id: 2 },\n  { formatCode: '#,##0', id: 3 },\n  { formatCode: '#,##0.00', id: 4 },\n  { formatCode: '\"$\"#,##0.00_);[Red](\"$\"#,##0.00)', id: 8 },\n  { formatCode: '0%', id: 9 },\n  { formatCode: '0.00%', id: 10 },\n  { formatCode: '0.00E+00', id: 11 },\n  { formatCode: '# ?/?', id: 12 },\n  { formatCode: '# ??/??', id: 13 },\n  { formatCode: 'mm-dd-yy', id: 14 },\n  { formatCode: 'd-mmm-yy', id: 15 },\n  { formatCode: 'd-mmm', id: 16 },\n  { formatCode: 'mmm-yy', id: 17 },\n  { formatCode: 'h:mm AM/PM', id: 18 },\n  { formatCode: 'h:mm:ss AM/PM', id: 19 },\n  { formatCode: 'h:mm', id: 20 },\n  { formatCode: 'h:mm:ss', id: 21 },\n  { formatCode: 'm/d/yy h:mm', id: 22 },\n  {\n    formatCode: 'yyyy\"\u5E74\"m\"\u6708\"',\n    id: 27,\n  },\n  { formatCode: '#,##0 ;(#,##0)', id: 37 },\n  { formatCode: '#,##0 ;[Red](#,##0)', id: 38 },\n  { formatCode: '#,##0.00 ;(#,##0.00)', id: 39 },\n  { formatCode: '#,##0.00 ;[Red](#,##0.00)', id: 40 },\n  {\n    formatCode: '_(\"$\"* #,##0.00_);_(\"$\"* (#,##0.00);_(\"$\"* \"-\"??_);_(@_)',\n    id: 44,\n  },\n  { formatCode: 'mm:ss', id: 45 },\n  { formatCode: '[h]:mm:ss', id: 46 },\n  { formatCode: 'mmss.0', id: 47 },\n  { formatCode: '##0.0E+0', id: 48 },\n  { formatCode: DEFAULT_TEXT_FORMAT_CODE, id: 49 },\n  {\n    formatCode: '\u4E0A\u5348/\u4E0B\u5348 h\"\u65F6\"mm\"\u5206\"ss\"\u79D2\"',\n    id: 56,\n  },\n];\n\nexport const getFormatCode = (id: number): string =>\n  NUMBER_FORMAT_LIST.find((v) => v.id === id)!.formatCode;\nexport const numberFormatOptionList = [\n  {\n    value: getFormatCode(0),\n    label: $('general'),\n    disabled: false,\n  },\n  {\n    value: getFormatCode(2),\n    label: $('number'),\n    disabled: false,\n  },\n  {\n    value: getFormatCode(8),\n    label: $('currency'),\n    disabled: false,\n  },\n  {\n    value: getFormatCode(44),\n    label: $('accounting'),\n    disabled: false,\n  },\n  {\n    value: $('short-date-format'),\n    label: $('short-date'),\n    disabled: false,\n  },\n  {\n    value: $('long-date-format'),\n    label: $('long-date'),\n    disabled: false,\n  },\n  {\n    value: $('time-format'),\n    label: $('time'),\n    disabled: false,\n  },\n  {\n    value: getFormatCode(10),\n    label: $('percentage'),\n    disabled: false,\n  },\n  {\n    value: getFormatCode(12),\n    label: $('fraction'),\n    disabled: false,\n  },\n  {\n    value: getFormatCode(11),\n    label: $('scientific'),\n    disabled: false,\n  },\n  {\n    value: getFormatCode(49),\n    label: $('text'),\n    disabled: false,\n  },\n  // {\n  //   value: '',\n  //   label: $('more-number-formats'),\n  //   disabled: false,\n  // },\n];\n", "let dprData: number | undefined = undefined;\nexport function dpr(\n  data = typeof devicePixelRatio === 'undefined' ? undefined : devicePixelRatio,\n): number {\n  if (typeof dprData === 'number') {\n    return dprData;\n  }\n  return Math.max(Math.floor(data || 1), 1);\n}\n\nexport function npx(px: number): number {\n  return Math.floor(px * dpr());\n}\n\n// for worker\nexport function setDpr(data: number) {\n  dprData = Math.max(Math.floor(data || 1), 1);\n}\n", "export function assert(\n  condition: boolean,\n  message = 'assert error',\n): asserts condition {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n", "import { COLOR_PICKER_COLOR_LIST } from './constant';\n\ntype NameSpaceType = 'react' | 'model' | 'test';\n\nexport class Debug {\n  namespace: NameSpaceType;\n\n  static readonly colorMap: Map<NameSpaceType, string> = new Map<\n    NameSpaceType,\n    string\n  >();\n  constructor(namespace: NameSpaceType) {\n    this.namespace = namespace;\n  }\n  init = () => {\n    this.setColor();\n    return this.log;\n  };\n  log = (...rest: unknown[]): void => {\n    if (!this.enable()) {\n      return;\n    }\n    const { namespace } = this;\n    const color = Debug.colorMap.get(namespace);\n    const result = [`%c ${namespace}:`, `color:${color};`, ...rest];\n    console.log(...result);\n  };\n  getRandomColor = (): string => {\n    const index = Math.floor(Math.random() * COLOR_PICKER_COLOR_LIST.length);\n    return COLOR_PICKER_COLOR_LIST[index];\n  };\n  enable() {\n    return  window.localStorage.getItem('debug') === '*';\n  }\n  setColor() {\n    if (!Debug.colorMap.has(this.namespace)) {\n      Debug.colorMap.set(this.namespace, this.getRandomColor());\n    }\n  }\n}\n\nexport const modelLog = new Debug('model').init();\nexport const reactLog = new Debug('react').init();\n", "const size = {\n  smallFont: '10px',\n  font: '12px',\n  largeFont: '14px',\n  padding: '12px',\n  lineHeight: 1.5,\n  mediumPadding: '8px',\n  largePadding: '20px',\n  borderRadius: '4px',\n  borderLargeRadius: '8px',\n  tinyPadding: '4px',\n  scrollBarContent: '30px',\n  formulaBarHeight: '25px',\n};\nexport default size;\n", "const zIndex = {\n  lowZIndex: 2,\n  middleZIndex: 3,\n  highZIndex: 4,\n  highestZIndex: 9,\n};\nexport default zIndex;\n", "function hslaToHex(h: number, s: number, l: number, alpha: number) {\n  s = s / 100; // Convert percentage to decimal\n  l = l / 100; // Convert percentage to decimal\n\n  // Convert HSL to RGB\n  const c = (1 - Math.abs(2 * l - 1)) * s;\n  const x = c * (1 - Math.abs(((h / 60) % 2) - 1));\n  const m = l - c / 2;\n\n  let r, g, b;\n\n  if (h >= 0 && h < 60) {\n    r = c;\n    g = x;\n    b = 0;\n  } else if (h >= 60 && h < 120) {\n    r = x;\n    g = c;\n    b = 0;\n  } else if (h >= 120 && h < 180) {\n    r = 0;\n    g = c;\n    b = x;\n  } else if (h >= 180 && h < 240) {\n    r = 0;\n    g = x;\n    b = c;\n  } else if (h >= 240 && h < 300) {\n    r = x;\n    g = 0;\n    b = c;\n  } else {\n    r = c;\n    g = 0;\n    b = x;\n  }\n  if (alpha !== 1) {\n    return `rgba(${r},${g},${b},${alpha})`;\n  }\n\n  // Adjust RGB values and convert to HEX\n  const toHex = (value: number) =>\n    Math.round(value * 255)\n      .toString(16)\n      .padStart(2, '0');\n  const hexR = toHex(r + m);\n  const hexG = toHex(g + m);\n  const hexB = toHex(b + m);\n\n  // Combine the values and return the HEX color\n  return `#${hexR}${hexG}${hexB}`;\n}\n\nconst RGBToHSL = (red: number, green: number, blue: number) => {\n  // Make r, g, and b fractions of 1\n  const r = red / 255;\n  const g = green / 255;\n  const b = blue / 255;\n\n  // Find greatest and smallest channel values\n  const cmin = Math.min(r, g, b);\n  const cmax = Math.max(r, g, b);\n  const delta = cmax - cmin;\n  const hue = getHue(r, g, b);\n  const lightness = getLightness(cmax, cmin);\n  const saturation = getSaturation(delta, lightness);\n\n  return [hue, saturation * 100, lightness * 100];\n};\n\nconst getHue = (r: number, g: number, b: number) => {\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const c = max - min;\n  let hue: number = 0;\n  if (c == 0) {\n    hue = 0;\n  } else {\n    switch (max) {\n      case r: {\n        let segment = (g - b) / c;\n        let shift = 0; // R\u00B0 / (360\u00B0 / hex sides)\n        if (segment < 0) {\n          // hue > 180, full rotation\n          shift = 360 / 60; // R\u00B0 / (360\u00B0 / hex sides)\n        }\n        hue = segment + shift;\n        break;\n      }\n\n      case g: {\n        let segment = (b - r) / c;\n        let shift = 120 / 60; // G\u00B0 / (360\u00B0 / hex sides)\n        hue = segment + shift;\n        break;\n      }\n\n      case b:\n        let segment = (r - g) / c;\n        let shift = 240 / 60; // B\u00B0 / (360\u00B0 / hex sides)\n        hue = segment + shift;\n        break;\n    }\n  }\n  return hue * 60; // hue is in [0,6], scale it up\n};\n\nconst getSaturation = (delta: number, lightness: number) =>\n  delta == 0 ? 0 : delta / (1 - Math.abs(2 * lightness - 1));\n\nconst getLightness = (cmax: number, cmin: number) => (cmax + cmin) / 2;\n\nconst fullDarkMode = ([red, green, blue, alpha]: number[]) => {\n  const [hue, saturation, lightness] = RGBToHSL(red, green, blue);\n  return hslaToHex(hue, saturation * 0.9, 100 - lightness, alpha);\n};\n\nfunction hexToRgba(hex: string) {\n  if (hex.startsWith('#')) {\n    hex = hex.slice(1);\n  }\n\n  let r = parseInt(hex.substring(0, 2), 16);\n  let g = parseInt(hex.substring(2, 4), 16);\n  let b = parseInt(hex.substring(4, 6), 16);\n  let a = parseInt(hex.substring(6, 8) || 'ff', 16);\n  return [r, g, b, a / 255];\n}\n\nexport const convertColorToDark = (color: string) => {\n  if (color.startsWith('rgb')) {\n    const t = color\n      .replace('rgb', '')\n      .replace('a', '')\n      .replace('(', '')\n      .replace(')', '');\n    const list = t.split(',').map(Number);\n    if (list.length <= 3) {\n      list.push(1);\n    }\n    return fullDarkMode(list);\n  } else {\n    return fullDarkMode(hexToRgba(color));\n  }\n};\n", "import { convertColorToDark } from './convert';\n\nexport const lightColor = Object.freeze({\n  primaryColor: '#217346',\n  buttonActiveColor: '#c6c6c6',\n  selectionColor: 'rgba(198,198,198,0.3)',\n  backgroundColor: '#e6e6e6',\n  hoverColor: 'rgba(0, 0, 0, 0.04)',\n  scrollbarColor: 'rgba(0, 0, 0, 0.1)',\n  scrollbarHoveColor: 'rgba(0, 0, 0, 0.2)',\n  dialogBackground: 'rgba(0, 0, 0, 0.6)',\n  white: '#ffffff',\n  black: '#000000',\n  triangleFillColor: '#dddddd',\n  contentColor: '#333333',\n  borderColor: '#cccccc',\n  activeBorderColor: '#808080',\n  errorFormulaColor: '#ff0000',\n});\n\nexport const darkColor = Object.freeze(\n  Object.fromEntries(\n    Object.entries(lightColor).map(([k, v]) => [k, convertColorToDark(v)]),\n  ),\n);\n", "import { ThemeType } from '@/types';\nimport size from './size';\nimport zIndex from './zIndex';\nimport { lightColor, darkColor } from './color';\nimport { convertColorToDark } from './convert';\n\nexport const sizeConfig = {\n  ...size,\n  ...zIndex,\n};\n\nconst themeKey = 'data-theme' as const;\n\nexport function setTheme(value: ThemeType) {\n  sessionStorage.setItem(themeKey, value);\n  document.documentElement.setAttribute(themeKey, value);\n}\nexport function getTheme(): ThemeType {\n  if (typeof sessionStorage !== 'undefined') {\n    const l = sessionStorage.getItem(themeKey);\n    if (l && (l === 'dark' || l === 'light')) {\n      return l as ThemeType;\n    }\n  }\n  if (typeof matchMedia === 'function') {\n    const result = matchMedia('(prefers-color-scheme: dark)').matches\n      ? 'dark'\n      : 'light';\n    return result;\n  }\n  return 'light';\n}\n\nexport function getThemeColor(key: keyof typeof lightColor, type?: ThemeType) {\n  if (type === 'dark' || getTheme() === 'dark') {\n    return darkColor[key];\n  } else {\n    return lightColor[key];\n  }\n}\nexport { darkColor, lightColor, convertColorToDark };\n", "export const colorMap: Record<string, string> = {\n  maroon: '#800000',\n  red: '#ff0000',\n  orange: '#ffA500',\n  yellow: '#ffff00',\n  olive: '#808000',\n  purple: '#800080',\n  fuchsia: '#ff00ff',\n  white: '#ffffff',\n  lime: '#00ff00',\n  green: '#008000',\n  navy: '#000080',\n  blue: '#0000ff',\n  aqua: '#00ffff',\n  teal: '#008080',\n  black: '#000000',\n  silver: '#c0c0c0',\n  gray: '#808080',\n  transparent: '#0000',\n  cyan: '#F00',\n  magenta: '#00F',\n};\n\nconst hexStr = '(?:#([a-f0-9]{3,8}))';\nconst numberStr = '\\\\s*([.\\\\d%]+)\\\\s*';\nconst sopStr = '(?:,\\\\s*([.\\\\d]+)\\\\s*)?';\nconst listStr = `\\\\(${[numberStr, numberStr, numberStr]}${sopStr}\\\\)`;\nconst rgbStr = '(?:rgb)a?';\nconst hslStr = '(?:hsl)a?';\n\nconst hexReg = RegExp(hexStr, 'i');\nconst rgbReg = RegExp(rgbStr + listStr, 'i');\nconst hslReg = RegExp(hslStr + listStr, 'i');\n\nfunction padZero(a: string) {\n  if (a.length === 1) {\n    return `0${a}`;\n  }\n  return a;\n}\nfunction RGBAToHex(r: number, g: number, b: number, a: number) {\n  const list = [r, g, b, a * 255];\n  return `#${list\n    .map((item) => padZero(Math.round(item).toString(16)))\n    .join('')}`;\n}\nfunction RGBtoHEX(r: string, g: string, b: string, a: string): string {\n  let alpha = 1;\n  if (a) {\n    alpha = parseFloat(a);\n  }\n  const red = parseFloat(r);\n  const green = parseFloat(g);\n  const blue = parseFloat(b);\n  if (\n    !(\n      red <= 255 &&\n      red >= 0 &&\n      green <= 255 &&\n      green >= 0 &&\n      blue <= 255 &&\n      blue >= 0 &&\n      alpha <= 1 &&\n      alpha >= 0\n    )\n  ) {\n    return '';\n  }\n  return RGBAToHex(red, green, blue, alpha);\n}\n\nfunction HUEtoRGB(p: number, q: number, t: number) {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  if (t < 1 / 6) return p + (q - p) * 6 * t;\n  if (t < 1 / 2) return q;\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n  return p;\n}\n\nfunction HSLAtoHEX(x: string, y: string, z: string, a: string) {\n  let alpha = 1;\n  if (a) {\n    alpha = parseFloat(a) / 1;\n  }\n  const h = parseFloat(x) / 360;\n  const s = parseFloat(y) / 360;\n  const l = parseFloat(z) / 360;\n  if (\n    h > 1 ||\n    h < 0 ||\n    s > 1 ||\n    s < 0 ||\n    l > 1 ||\n    l < 0 ||\n    alpha > 1 ||\n    alpha < 0\n  ) {\n    return '';\n  }\n  let r: number;\n  let g: number;\n  let b: number;\n  if (s === 0) {\n    r = l;\n    g = l;\n    b = l;\n  } else {\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n    r = HUEtoRGB(p, q, h + 1 / 3);\n    g = HUEtoRGB(p, q, h);\n    b = HUEtoRGB(p, q, h - 1 / 3);\n  }\n  return RGBAToHex(r * 255, g * 255, b * 255, alpha);\n}\n\nfunction padHex(color: string) {\n  if (!hexReg.test(color)) {\n    return '';\n  }\n  if (color.length === 9) {\n    return color.toUpperCase();\n  }\n  if (color.length === 7) {\n    const t = `${color}ff`;\n    return t.toUpperCase();\n  }\n  if (color.length === 4) {\n    const [, a, b, c] = color;\n    const t = `#${a}${a}${b}${b}${c}${c}ff`;\n    return t.toUpperCase();\n  }\n  return '';\n}\nexport function convertColorToHex(color: string): string {\n  if (colorMap[color]) {\n    return padHex(colorMap[color]);\n  }\n  if (hexReg.test(color)) {\n    return padHex(color);\n  }\n  if (rgbReg.test(color)) {\n    const [, r, g, b, a] = color.match(rgbReg)!;\n    return padHex(RGBtoHEX(r, g, b, a));\n  }\n  if (hslReg.test(color)) {\n    const [, h, s, l, a] = color.match(hslReg)!;\n    return padHex(HSLAtoHEX(h, s, l, a));\n  }\n  return '';\n}\n", "import { EventEmitterType } from '@/types';\n\nexport class EventEmitter<\n  EventType extends Record<string, unknown> = Record<string, unknown>,\n> {\n  protected event: Record<string, Array<(...args: unknown[]) => void>> = {};\n  getEventLength<T extends keyof EventType>(name: T): number {\n    // @ts-ignore\n    const temp = this.event[name];\n    return (temp && temp.length) || 0;\n  }\n  on<T extends keyof EventType>(\n    name: T,\n    callback: (data: EventType[T]) => void,\n  ): VoidFunction {\n    // @ts-ignore\n    this.event[name] = this.event[name] || [];\n    // @ts-ignore\n    this.event[name].push(callback);\n    return () => this.off(name, callback);\n  }\n  emit<T extends keyof EventType>(name: T, data: EventType[T]): void {\n    // @ts-ignore\n    const list = this.event[name];\n    if (!list || list.length <= 0) {\n      return;\n    }\n    for (const item of list) {\n      item(data);\n    }\n  }\n  off<T extends keyof EventType>(\n    name: T,\n    callback?: (data: EventType[T]) => void,\n  ): void {\n    const result = [];\n    // @ts-ignore\n    const events = this.event[name];\n    if (events && callback) {\n      for (const item of events) {\n        if (item !== callback && item._ !== callback) {\n          result.push(item);\n        }\n      }\n    }\n    if (result.length) {\n      // @ts-ignore\n      this.event[name] = result;\n    } else {\n      // @ts-ignore\n      delete this.event[name];\n    }\n  }\n  once<T extends keyof EventType>(\n    name: T,\n    callback: (data: EventType[T]) => void,\n  ): VoidFunction {\n    const listener = (data: EventType[T]) => {\n      this.off(name, listener);\n      callback(data);\n    };\n    listener._ = callback;\n    return this.on(name, listener);\n  }\n}\n\n\nexport const eventEmitter = new EventEmitter<EventEmitterType>();\n", "import { IWindowSize } from '@/types';\n\nexport const IMAGE_TYPE_MAP = {\n  'image/apng': ['.apng'],\n  'image/bmp': ['.bmp'],\n  'image/x-icon': ['.ico', '.cur'],\n  // 'image/tiff': ['.tif', '.tiff'], // only Safari\n  'image/png': ['.png'],\n  'image/webp': ['.webp'],\n  'image/svg+xml': ['.svg'],\n  'image/avif': ['.avif'],\n  'image/gif': ['.gif'],\n  'image/jpeg': ['.jpeg', '.jpg', '.jfif', '.pjpeg', '.pjp'],\n} as const;\n\nexport function extractImageType(src: string): {\n  ext: string;\n  type: string;\n  base64: string;\n} {\n  if (!src) {\n    return { ext: '', base64: '', type: '' };\n  }\n  const base64Prefix = ';base64,';\n  const i = src.indexOf(base64Prefix);\n  const prefix = 'data:';\n  const type = src.slice(prefix.length, i);\n  // @ts-ignore\n  const list = IMAGE_TYPE_MAP[type] || [];\n  if (list.length > 0) {\n    return { ext: list[0], type, base64: src.slice(i + base64Prefix.length) };\n  }\n  return { ext: '', base64: '', type: '' };\n}\n\nexport function convertFileToTextOrBase64(\n  file: File,\n  isBase64 = false,\n): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = function (event) {\n      const result = event.target?.result;\n      if (result && typeof result === 'string') {\n        resolve(result);\n      } else {\n        resolve('');\n      }\n    };\n    reader.onerror = function (error) {\n      reject(error);\n    };\n    if (isBase64) {\n      reader.readAsDataURL(file);\n    } else {\n      reader.readAsText(file);\n    }\n  });\n}\n\nexport function getImageSize(src: string): Promise<IWindowSize> {\n  return new Promise((resolve, reject) => {\n    const image = new Image();\n    image.onload = () => {\n      const width = image.width;\n      const height = image.height;\n\n      resolve({ width, height });\n    };\n    image.onerror = (error) => {\n      reject(error);\n    };\n    // base64 or link\n    image.src = src;\n  });\n}\n\nexport function convertBase64toBlob(base64: string, contentType = 'image/png') {\n  const sliceSize = 1024;\n  const byteCharacters = atob(base64);\n  const bytesLength = byteCharacters.length;\n  const slicesCount = Math.ceil(bytesLength / sliceSize);\n  const byteArrays = Array.from<BlobPart>({ length: slicesCount })\n\n  for (let sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {\n    let begin = sliceIndex * sliceSize;\n    let end = Math.min(begin + sliceSize, bytesLength);\n\n    let bytes = Array.from<number>({ length: end - begin })\n    for (let offset = begin, i = 0; offset < end; ++i, ++offset) {\n      bytes[i] = byteCharacters[offset].charCodeAt(0);\n    }\n    byteArrays[sliceIndex] = new Uint8Array(bytes);\n  }\n  return new Blob(byteArrays, { type: contentType });\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAGO,IAAMA,EAAmB,aACnBC,EAAoB,QAO1B,IAAMC,EAAwB,QACxBC,GAAa;AAAA,EACbC,GAAe,IAQrB,IAAMC,GAA4B,gBAC5BC,EAAiB,IACjBC,EAAW,IAIjB,IAAMC,GAAsB,0BAEtBC,EAAsB,UACtBC,EAA2B,IAE3BC,GAAY,IAAI,IAAI,CAC/B,gBACA,UACA,SACA,QACA,QACA,UACA,OACA,QACF,CAAU,EAIGC,EAAqB,EAErBC,GAA8C,CACzD,KAAMD,EACN,KAAMA,EACN,OAAQA,EACR,OAAQA,EACR,QAASA,EACT,WAAYA,EACZ,OAAQA,EACR,OAAQA,EAAqB,EAC7B,aAAcA,EAAqB,EACnC,cAAeA,EAAqB,EACpC,iBAAkBA,EAAqB,EACvC,MAAOA,EAAqB,CAC9B,EAEaE,EAA0B,CACrC,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACF,EAEaC,GAAY,QAEZC,GAAe,qCACfC,GAAiB,sBACjBC,GAAc,kBACdC,GAAuB,6BAEvBC,GAAwB,IAAI,IAAI,CAC3C,MACA,UACA,WACA,OACA,QACA,OACA,QACA,UACA,YACA,YACA,WACA,MACA,SACA,QACA,cACA,MACA,OACA,QACA,OACA,QACA,QACA,SACA,UACA,WACA,YACA,aACA,WACA,OACA,UACA,UACA,UACA,UACA,YACA,WACA,WACA,UACA,UACA,UACA,UACA,aACA,mBACA,YACA,YACA,SACA,YACA,QACA,YACA,SACA,OACA,UACA,eACA,kBACA,OACA,OACA,UACA,SACA,aACA,gBACA,YACA,eACA,aACA,UACA,QACA,OACA,SACA,UACA,SACA,UACA,UACA,SACA,cACA,aACA,kBACA,eACA,UACA,SACA,MACA,OACA,MACA,OACA,QACA,SACA,aACA,UACA,WACA,YACA,WACA,aACA,UACA,UACA,UACA,QACA,eACA,eACA,YACA,MACA,OACA,gBACA,aACA,qBACA,mBACA,UACA,eACA,YACA,UACA,WACA,OACA,UACA,YACA,WACA,MACA,OACA,UACA,KACA,OACA,SACA,UACA,MACA,UACA,UACA,UACA,UACA,UACA,QACA,QACA,OACA,OACA,OACA,OACA,SACA,WACA,WACA,WACA,SACA,UACA,OACA,WACA,OACA,QACA,QACA,SACA,YACA,UACA,MACA,cACA,OACA,eACA,aACA,cACA,OACA,QACA,MACA,aACA,YACA,SACA,YACA,QACA,WACA,SACA,OACA,aACA,QACA,QACA,SACA,YACA,OACA,QACA,OACA,SACA,YACA,QACA,QACA,aACA,gBACA,WACA,eACA,uBACA,2BACA,oBACA,kBACA,cACA,YACA,QACA,KACA,aACA,QACA,aACA,YACA,YACA,WACA,UACA,kBACA,QACA,MACA,UACA,SACA,eACA,SACA,UACA,UACA,UACA,UACA,UACA,OACA,YACA,eACA,cACA,UACA,OACA,MACA,QACA,YACA,aACA,cACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,OACA,UACA,SACA,UACA,YACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,OACA,MACA,YACA,UACA,OACA,MACA,UACA,QACA,UACA,SACA,YACA,YACA,OACA,YACA,WACA,cACA,QACA,aACA,QACA,QACA,SACA,MACA,OACA,QACA,MACA,OACA,QACA,MACA,OACA,MACA,SACA,KACA,MACA,QACA,SACA,SACA,eACA,cACA,cACA,SACA,QACA,QACA,MACA,OACA,SACA,UACA,YACA,SACA,MACA,OACA,MACA,OACA,SACA,SACA,WACA,OACA,QACA,MACA,OACA,YACA,YACA,QACA,SACA,cACA,QACA,IACA,KACA,gBACA,eACA,cACA,mBACA,UACA,YACA,WACA,cACA,aACA,WACA,UACA,YACA,WACA,MACA,MACA,OACA,MACA,cACA,UACA,UACA,UACA,MACA,YACA,YACA,YACA,YACA,KACA,YACA,UACA,aACA,iBACA,iBACA,cACA,kBACA,kBACA,SACA,eACA,MACA,WACA,KACA,MACA,UACA,eACA,QACA,OACA,QACA,YACA,WACA,OACA,UACA,SACA,KACA,WACA,eACA,eACA,WACA,UACA,OACA,YACA,cACA,OACA,WACA,UACA,OACA,WACA,cACA,UACA,WACA,OACA,QACA,SACA,QACA,QACA,YACA,UACA,MACA,OACA,MACA,MACA,MACA,SACA,UACA,MACA,OACA,SACA,WACA,YACA,QACA,SACA,OACA,MACA,OACA,OACA,SACA,MACA,QACA,QACA,OACA,SACA,OACA,SACA,cACA,QACA,UACA,UACA,SACA,SACA,UACA,QACA,aACA,WACA,MACA,QACA,SACA,aACA,QACA,WACA,WACA,UACA,SACA,MACA,IACA,SACA,YACA,YACA,QACA,WACA,SACA,MACA,OACA,UACA,aACA,aACA,QACA,OACA,WACA,OACA,YACA,OACA,QACA,YACA,QACA,OACA,WACA,OACA,QACA,QACA,OACA,UACA,UACA,SACA,QACA,QACA,cACA,MACA,QACA,QACA,OACA,OACA,QACA,MACA,UACA,aACA,UACA,UACA,UACA,eACA,UACA,eACA,OACA,UACA,SACA,OACA,MACA,OACA,WACA,QACA,YACA,WACA,SACA,OACF,CAAU,ECpoBH,SAASC,GAASC,EAAiCC,EAAc,CACtE,IAAIC,EAAQ,GACRC,EACJ,OAAO,YAAaC,EAAc,CAC5BF,EACFC,EAAWC,GAGXJ,EAAG,MAAM,KAAMI,CAAI,EACnB,WAAW,IAAM,CA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",
  "names": ["MUST_FONT_FAMILY", "SHEET_NAME_PREFIX", "MERGE_CELL_LINE_BREAK", "LINE_BREAK", "CSV_SPLITTER", "SHEET_ITEM_TEST_ID_PREFIX", "FORMULA_PREFIX", "SPLITTER", "FORMULA_EDITOR_ROLE", "DEFAULT_FORMAT_CODE", "DEFAULT_TEXT_FORMAT_CODE", "ERROR_SET", "DEFAULT_LINE_WIDTH", "BORDER_TYPE_MAP", "COLOR_PICKER_COLOR_LIST", "TEXT_FLAG", "CELL_REG_EXP", "COLUMN_REG_EXP", "ROW_REG_EXP", "DEFINED_NAME_REG_EXP", "BUILT_IN_FUNCTION_SET", "throttle", "fn", "wait", "check", "lastArgs", "args", "get", "obj", "path", "defaultValue", "result", "res", "key", "isEmpty", "value", "temp", "deepEqual", "x", "y", "keys1", "keys2", "i", "key1", "key2", "noop", "camelCase", "str", "a", "_", "c", "parseNumber", "value", "temp", "getListMaxNum", "list", "idList", "item", "v", "getDefaultSheetInfo", "sheetId", "SHEET_NAME_PREFIX", "convertStringToResultType", "check", "num", "coordinateToString", "row", "col", "SPLITTER", "stringToCoordinate", "key", "r", "c", "getCustomWidthOrHeightKey", "rowOrCol", "widthOrHeightKeyToData", "generateUUID", "d", "isMobile", "matchList", "ua", "modelToChangeSet", "result", "type", "isTestEnv", "isMac", "isFormula", "value", "FORMULA_PREFIX", "isMergeContent", "isMergeCell", "text", "MERGE_CELL_LINE_BREAK", "FONT_SIZE_LIST", "makeFont", "fontStyle", "fontWeight", "fontSize", "fontFamily", "temp", "fontFamilyList", "MUST_FONT_FAMILY", "isTestEnv", "convertToCssString", "style", "result", "pickCSSStyle", "color", "backgroundColor", "whiteSpace", "textDecorationLine", "textDecorationStyle", "size", "parseStyle", "styleMap", "className", "tagName", "name", "t", "convertToCssStyleDeclaration", "cssStr", "str", "regex", "matches", "match", "cssText", "list", "item", "n", "v", "realKey", "camelCase", "check", "num", "parseNumber", "value", "convertToPx", "convertPxToPt", "px", "other", "pt", "parseText", "text", "splitter", "textList", "parseHTML", "html", "template", "doc", "key", "styleList", "trList", "colMap", "rowMap", "row", "tr", "height", "texts", "col", "td", "width", "itemStyle", "classnames", "rest", "result", "temp", "key", "isSheet", "range", "isRow", "isCol", "isSameRange", "oldRange", "newRange", "containRange", "sourceRange", "targetRange", "row", "col", "SheetRange", "_SheetRange", "rowCount", "colCount", "sheetId", "iterateRange", "sheetInfo", "fn", "r", "c", "i", "endRow", "endCol", "columnNameToInt", "columnName", "temp", "num", "i", "intToColumnName", "dividend", "rest", "rowLabelToInt", "label", "result", "isAlpha", "char", "isDigit", "convertSheetNameToSheetId", "value", "parseCell", "ref", "convertSheetName", "realRef", "sheetName", "other", "rowText", "colText", "rowCount", "colCount", "row", "col", "rowLabelToInt", "columnNameToInt", "SheetRange", "parseReference", "text", "cell1", "cell2", "startCell", "endCell", "mergeRange", "start", "end", "convertCell", "referenceType", "first", "second", "intToColumnName", "convertToReference", "range", "convertSheetIdToSheetName", "result", "parseNumber", "text", "num", "result", "t", "parseR1C1", "name", "activeCell", "list", "rowText", "colText", "row", "col", "SheetRange", "PLAIN_FORMAT", "HTML_FORMAT", "CUSTOM_FORMAT", "IMAGE_FORMAT", "CUSTOM_START_FLAG", "CUSTOM_END_FLAG", "select", "element", "isReadOnly", "createFakeElement", "value", "isRTL", "fakeElement", "yPosition", "defaultCopy", "type", "selectedText", "copy", "textData", "text", "html", "result", "copyOrCut", "error", "pasteRichText", "list", "item", "buf", "extractCustomData", "pastePlainText", "paste", "generateHTML", "style", "content", "customData", "formatCustomData", "start", "end", "t", "QUERY_ALL_LOCAL_FONT", "LOCAL_FONT_KEY", "FONT_FAMILY_LIST", "BaseSet", "initValue", "data", "canvasSizeSet", "sheetViewSizeSet", "headerSizeSet", "getHitInfo", "controller", "x", "y", "sheetInfo", "scroll", "headerSize", "headerSizeSet", "resultX", "resultY", "marginX", "marginY", "row", "col", "t", "saveAs", "blob", "fileName", "link", "en_default", "zh_default", "languageKey", "LANGUAGE_LIST", "getLanguage", "language", "l", "v", "lang", "item", "setLanguage", "$", "key", "en_default", "zh_default", "CHART_TYPE_LIST", "$", "NUMBER_FORMAT_LIST", "DEFAULT_FORMAT_CODE", "DEFAULT_TEXT_FORMAT_CODE", "getFormatCode", "id", "v", "numberFormatOptionList", "dprData", "dpr", "data", "npx", "px", "setDpr", "assert", "condition", "message", "Debug", "_Debug", "namespace", "rest", "color", "result", "index", "COLOR_PICKER_COLOR_LIST", "modelLog", "reactLog", "size", "size_default", "zIndex", "zIndex_default", "hslaToHex", "h", "s", "l", "alpha", "c", "x", "m", "r", "g", "b", "toHex", "value", "hexR", "hexG", "hexB", "RGBToHSL", "red", "green", "blue", "cmin", "cmax", "delta", "hue", "getHue", "lightness", "getLightness", "saturation", "getSaturation", "max", "min", "segment", "shift", "fullDarkMode", "hexToRgba", "hex", "a", "convertColorToDark", "color", "list", "lightColor", "darkColor", "k", "v", "convertColorToDark", "sizeConfig", "size_default", "zIndex_default", "themeKey", "setTheme", "value", "getTheme", "l", "getThemeColor", "key", "type", "darkColor", "lightColor", "colorMap", "hexStr", "numberStr", "sopStr", "listStr", "rgbStr", "hslStr", "hexReg", "rgbReg", "hslReg", "padZero", "a", "RGBAToHex", "r", "g", "b", "item", "RGBtoHEX", "alpha", "red", "green", "blue", "HUEtoRGB", "p", "q", "t", "HSLAtoHEX", "x", "y", "z", "h", "padHex", "color", "c", "convertColorToHex", "s", "l", "EventEmitter", "name", "temp", "callback", "data", "list", "item", "result", "events", "listener", "eventEmitter", "IMAGE_TYPE_MAP", "extractImageType", "src", "base64Prefix", "i", "type", "list", "convertFileToTextOrBase64", "file", "isBase64", "resolve", "reject", "reader", "event", "result", "error", "getImageSize", "image", "width", "height", "convertBase64toBlob", "base64", "contentType", "byteCharacters", "bytesLength", "slicesCount", "byteArrays", "sliceIndex", "begin", "end", "bytes", "offset"]
}
