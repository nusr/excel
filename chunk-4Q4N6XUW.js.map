{
  "version": 3,
  "sources": ["external-package:react", "../src/util/constant.ts", "../src/util/util.ts", "../src/util/classnames.ts", "../src/util/lodash.ts", "../src/util/theme/size.ts", "../src/util/theme/zIndex.ts", "../src/util/theme/convert.ts", "../src/util/theme/color.ts", "../src/util/theme/index.ts", "../src/util/dpr.ts", "../src/util/style.ts", "../src/util/assert.ts", "../src/util/convert.ts", "../src/util/range.ts", "../src/util/reference.ts", "../src/util/debug.ts", "../src/util/font.ts", "../src/util/isSupportFontFamily.ts", "../src/util/copy.ts", "../src/util/event.ts", "../src/util/saveAs.ts", "../src/util/color.ts"],
  "sourcesContent": ["module.exports = window.React", "import { ErrorTypes, NumberFormatItem } from '@/types';\n\nexport const SHEET_NAME_PREFIX = 'Sheet';\nexport const DEFAULT_ROW_COUNT = 200;\nexport const DEFAULT_COL_COUNT = 30;\nexport const TEST_ID_KEY = 'data-testid';\nexport const SCROLL_SIZE = 30;\nexport const BOTTOM_BUFF = 200;\nexport const DEFAULT_POSITION = -999;\nexport const FORMULA_PREFIX = '=';\nexport const SPLITTER = '_';\nexport const DEBUG_COLOR_LIST = [\n  '#0000CC',\n  '#0000FF',\n  '#0033CC',\n  '#0033FF',\n  '#0066CC',\n  '#0066FF',\n  '#0099CC',\n  '#0099FF',\n  '#00CC00',\n  '#00CC33',\n  '#00CC66',\n  '#00CC99',\n  '#00CCCC',\n  '#00CCFF',\n  '#3300CC',\n  '#3300FF',\n  '#3333CC',\n  '#3333FF',\n  '#3366CC',\n  '#3366FF',\n  '#3399CC',\n  '#3399FF',\n  '#33CC00',\n  '#33CC33',\n  '#33CC66',\n  '#33CC99',\n  '#33CCCC',\n  '#33CCFF',\n  '#6600CC',\n  '#6600FF',\n  '#6633CC',\n  '#6633FF',\n  '#66CC00',\n  '#66CC33',\n  '#9900CC',\n  '#9900FF',\n  '#9933CC',\n  '#9933FF',\n  '#99CC00',\n  '#99CC33',\n  '#CC0000',\n  '#CC0033',\n  '#CC0066',\n  '#CC0099',\n  '#CC00CC',\n  '#CC00FF',\n  '#CC3300',\n  '#CC3333',\n  '#CC3366',\n  '#CC3399',\n  '#CC33CC',\n  '#CC33FF',\n  '#CC6600',\n  '#CC6633',\n  '#CC9900',\n  '#CC9933',\n  '#CCCC00',\n  '#CCCC33',\n  '#FF0000',\n  '#FF0033',\n  '#FF0066',\n  '#FF0099',\n  '#FF00CC',\n  '#FF00FF',\n  '#FF3300',\n  '#FF3333',\n  '#FF3366',\n  '#FF3399',\n  '#FF33CC',\n  '#FF33FF',\n  '#FF6600',\n  '#FF6633',\n  '#FF9900',\n  '#FF9933',\n  '#FFCC00',\n  '#FFCC33',\n];\nexport const MAX_PARAMS_COUNT = 256;\n\nexport const ERROR_SET = new Set<ErrorTypes>([\n  '#ERROR!',\n  '#DIV/0!',\n  '#NULL!',\n  '#NUM!',\n  '#REF!',\n  '#VALUE!',\n  '#N/A',\n  '#NAME?',\n]);\n\nexport const NUMBER_FORMAT_LIST: NumberFormatItem[] = [\n  { formatCode: 'general', label: '', id: 0 },\n  { formatCode: '0', label: '', id: 1 },\n  { formatCode: '0.00', label: '', id: 2 },\n  { formatCode: '#,##0', label: '', id: 3 },\n  { formatCode: '#,##0.00', label: '', id: 4 },\n  { formatCode: '0%', label: '', id: 9 },\n  { formatCode: '0.00%', label: '', id: 10 },\n  { formatCode: '0.00E+00', label: '', id: 11 },\n  { formatCode: '# ?/?', label: '', id: 12 },\n  { formatCode: '# ??/??', label: '', id: 13 },\n  { formatCode: 'mm-dd-yy', label: '', id: 14 },\n  { formatCode: 'd-mmm-yy', label: '', id: 15 },\n  { formatCode: 'd-mmm', label: '', id: 16 },\n  { formatCode: 'mmm-yy', label: '', id: 17 },\n  { formatCode: 'h:mm AM/PM', label: '', id: 18 },\n  { formatCode: 'h:mm:ss AM/PM', label: '', id: 19 },\n  { formatCode: 'hh:mm', label: '', id: 20 },\n  { formatCode: 'hh:mm:ss', label: '', id: 21 },\n  { formatCode: 'm/d/yy hh:mm', label: '', id: 22 },\n  { formatCode: '#,##0 ;(#,##0)', label: '', id: 37 },\n  { formatCode: '#,##0 ;[red](#,##0)', label: '', id: 38 },\n  { formatCode: '#,##0.00 ;(#,##0.00)', label: '', id: 39 },\n  { formatCode: '#,##0.00 ;[red](#,##0.00)', label: '', id: 40 },\n  {\n    formatCode: '_(* #,##0_);_(* \\\\(#,##0\\\\);_(* \"-\"_);_(@_)',\n    label: '',\n    id: 41,\n  },\n  {\n    formatCode: '_(\"$\"* #,##0_);_(\"$\"* \\\\(#,##0\\\\);_(\"$\"* \"-\"_);_(@_)',\n    label: '',\n    id: 42,\n  },\n  {\n    formatCode: '_(* #,##0.00_);_(* \\\\(#,##0.00\\\\);_(* \"-\"??_);_(@_)',\n    label: '',\n    id: 43,\n  },\n  {\n    formatCode: '_(\"$\"* #,##0.00_);_(\"$\"* \\\\(#,##0.00\\\\);_(\"$\"* \"-\"??_);_(@_)',\n    label: '',\n    id: 44,\n  },\n  { formatCode: 'mm:ss', label: '', id: 45 },\n  { formatCode: '[h]:mm:ss', label: '', id: 46 },\n  { formatCode: 'mm:ss.0', label: '', id: 47 },\n  { formatCode: '##0.0E+0', label: '', id: 48 },\n  { formatCode: '@', label: '', id: 49 },\n];\nexport const ROW_TITLE_HEIGHT = 24;\nexport const COL_TITLE_WIDTH = 34;\nexport const CELL_HEIGHT = 24;\nexport const CELL_WIDTH = 68;\nexport const HIDE_CELL = 0;\nexport const XLSX_MAX_COL_COUNT = 16384; // XFD\nexport const XLSX_MAX_ROW_COUNT = 1048576;\n", "import { SHEET_NAME_PREFIX, SPLITTER } from './constant';\nimport type { WorksheetType, ResultType, Coordinate } from '@/types';\n\nexport function isNumber(value: any): boolean {\n  if (typeof value === 'number' && !window.isNaN(value)) {\n    return true;\n  }\n  if (typeof value !== 'string') {\n    return false;\n  }\n  const temp = parseFloat(value);\n  return !window.isNaN(temp);\n}\n\nexport function parseNumber(value: any): number {\n  if (isNumber(value)) {\n    return Number(value);\n  }\n  return 0;\n}\n\nexport function parseNumberArray(list: any[]): number[] {\n  const result: number[] = [];\n  for (let i = 0; i < list.length; i++) {\n    const temp = parseNumber(list[i]);\n    if (!window.isNaN(temp)) {\n      result.push(temp);\n    }\n  }\n  return result;\n}\n\nexport function getListMaxNum(list: string[] = []): number {\n  const idList: number[] = list\n    .map((item) => {\n      if (isNumber(item)) {\n        return parseInt(item, 10);\n      }\n      return 0;\n    })\n    .filter((v) => !isNaN(v));\n  return Math.max(Math.max(...idList), 0);\n}\n\nexport function getDefaultSheetInfo(\n  list: WorksheetType[] = [],\n): Pick<WorksheetType, 'name' | 'sheetId'> {\n  const sheetId = getListMaxNum(list.map((item) => item.sheetId)) + 1;\n  return {\n    name: `${SHEET_NAME_PREFIX}${sheetId}`,\n    sheetId: String(sheetId),\n  };\n}\n\nexport function splitToWords(str: string): string[] {\n  if (!str) {\n    return [];\n  }\n  // unicode\n  if (!Intl || !Intl.Segmenter) {\n    // firefox\n    return [...str];\n  }\n  // graphemer\n  const list = new Intl.Segmenter([], { granularity: 'word' }).segment(str);\n  const arr = [...list];\n  return arr.map((x) => x.segment);\n}\n\nexport function convertResultTypeToString(value: ResultType): string {\n  let text = String(value);\n  if (\n    typeof value === 'boolean' ||\n    ['TRUE', 'FALSE'].includes(text.toUpperCase())\n  ) {\n    text = text.toUpperCase();\n  } else if (value === undefined || value === null) {\n    text = '';\n  }\n  return text;\n}\n\nexport function coordinateToString(\n  row: number,\n  col: number,\n): `${number}_${number}` {\n  return `${row}${SPLITTER}${col}`;\n}\n\nexport function stringToCoordinate(key: string): Coordinate {\n  const [row, col] = key.split(SPLITTER);\n  const r = parseInt(row, 10);\n  const c = parseInt(col, 10);\n  return {\n    row: isNaN(r) ? 0 : r,\n    col: isNaN(c) ? 0 : c,\n  };\n}\n\nexport function getCustomWidthOrHeightKey(\n  sheetId: string,\n  rowOrCol: number,\n): `${string}_${number}` {\n  return `${sheetId}${SPLITTER}${rowOrCol}`;\n}\n\nexport function generateUUID() {\n  if (typeof crypto === 'object' && typeof crypto.randomUUID === 'function') {\n    return crypto.randomUUID();\n  }\n\n  let d = new Date().getTime();\n\n  const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\n    /[xy]/g,\n    function (c) {\n      const r = (d + Math.random() * 16) % 16 | 0;\n      d = Math.floor(d / 16);\n      return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n    },\n  );\n\n  return uuid;\n}\n\nexport function isMobile() {\n  const matchList = [\n    /Android/i,\n    /webOS/i,\n    /iPhone/i,\n    /iPad/i,\n    /iPod/i,\n    /BlackBerry/i,\n    /Windows Phone/i,\n  ];\n  const ua = navigator.userAgent;\n  return matchList.some((v) => ua.match(v));\n}\n", "export function classnames(\n  ...rest: Array<string | Record<string, unknown> | undefined>\n): string {\n  let result = '';\n  for (const temp of rest) {\n    if (temp === undefined) {\n      continue;\n    }\n    if (typeof temp === 'string' && temp) {\n      result += `${temp} `;\n    }\n    if (typeof temp === 'object') {\n      for (const key of Object.keys(temp)) {\n        if (temp[key]) {\n          result += `${key} `;\n        }\n      }\n    }\n  }\n  return result.trim();\n}\n", "type Params = any[];\nexport const debounce = (\n  fn: (...params: Params) => void,\n  wait: number = 500,\n) => {\n  let timer: ReturnType<typeof setTimeout> | null = null;\n  return function (...rest: Params) {\n    if (timer) {\n      clearTimeout(timer);\n    }\n    timer = setTimeout(() => {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      fn.apply(this, rest);\n      timer = null;\n    }, wait);\n  };\n};\nexport function throttle(fn: (...params: Params) => void, wait: number = 500) {\n  let check = false;\n  let lastArgs: Params | null = null;\n  return function (...args: Params) {\n    if (check) {\n      lastArgs = args;\n    } else {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      fn.apply(this, args);\n      setTimeout(() => {\n        if (lastArgs) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          fn.apply(this, lastArgs);\n        }\n        check = false;\n      }, wait);\n    }\n  };\n}\n\nexport function get<T>(\n  obj: Record<string, any> | null | undefined,\n  path: string,\n  defaultValue?: T,\n): T {\n  const result =\n    obj == null\n      ? undefined\n      : path\n          .replace(/\\[/g, '.')\n          .replace(/\\]/g, '')\n          .split('.')\n          .reduce((res, key) => {\n            return res == null ? res : res[key];\n          }, obj);\n  return (result === undefined ? defaultValue : result) as T;\n}\n\nexport function isEmpty(value: unknown): boolean {\n  const temp: any = value || {};\n  return (\n    [Object, Array].includes(temp.constructor) && !Object.entries(temp).length\n  );\n}\n\nexport function setWith<ValueType>(\n  obj: Record<string, any> | null | undefined,\n  path: string,\n  value: ValueType,\n): Record<string, any> | null | undefined {\n  if (obj == null || typeof obj !== 'object') {\n    return obj;\n  }\n  path\n    .replace(/\\[/g, '.')\n    .replace(/\\]/g, '')\n    .split('.')\n    .reduce((res, key, index, arr) => {\n      if (index === arr.length - 1) {\n        res[key] = value;\n      } else if (res[key] === null || res[key] === undefined) {\n        res[key] = {};\n      }\n      return res[key];\n    }, obj);\n  return obj;\n}\n\nexport function deepEqual(x: any, y: any) {\n  if (x === y) {\n    return true;\n  }\n  if (x && typeof x === 'object' && y && typeof y === 'object') {\n    if (Object.keys(x).length !== Object.keys(y).length) {\n      return false;\n    }\n    const keys1 = Object.keys(x);\n    const keys2 = Object.keys(y);\n    for (let i = 0; i < keys1.length; i++) {\n      const key1 = keys1[i];\n      const key2 = keys2[i];\n      if (key1 !== key2 || !deepEqual(x[key1], y[key2])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\nexport function camelCase(str: string) {\n  const a = str\n    .toLowerCase()\n    .replace(/[-_\\s.]+(.)?/g, (_, c) => (c ? c.toUpperCase() : ''));\n  return a.substring(0, 1).toLowerCase() + a.substring(1);\n}\n", "const size = {\n  smallFont: '10px',\n  font: '12px',\n  largeFont: '14px',\n  padding: '12px',\n  lineHeight: 1.5,\n  mediumPadding: '8px',\n  largePadding: '20px',\n  borderRadius: '4px',\n  borderLargeRadius: '8px',\n  tinyPadding: '4px',\n  scrollBarSize: '18px',\n};\nexport default size;\n", "const zIndex = {\n  lowZIndex: 2,\n  middleZIndex: 3,\n  highZIndex: 4,\n  highestZIndex: 9,\n};\nexport default zIndex;\n", "function hslaToHex(h: number, s: number, l: number, alpha: number) {\n  s = s / 100; // Convert percentage to decimal\n  l = l / 100; // Convert percentage to decimal\n\n  // Convert HSL to RGB\n  const c = (1 - Math.abs(2 * l - 1)) * s;\n  const x = c * (1 - Math.abs(((h / 60) % 2) - 1));\n  const m = l - c / 2;\n\n  let r, g, b;\n\n  if (h >= 0 && h < 60) {\n    r = c;\n    g = x;\n    b = 0;\n  } else if (h >= 60 && h < 120) {\n    r = x;\n    g = c;\n    b = 0;\n  } else if (h >= 120 && h < 180) {\n    r = 0;\n    g = c;\n    b = x;\n  } else if (h >= 180 && h < 240) {\n    r = 0;\n    g = x;\n    b = c;\n  } else if (h >= 240 && h < 300) {\n    r = x;\n    g = 0;\n    b = c;\n  } else {\n    r = c;\n    g = 0;\n    b = x;\n  }\n  if (alpha !== 1) {\n    return `rgba(${r},${g},${b},${alpha})`;\n  }\n\n  // Adjust RGB values and convert to HEX\n  const toHex = (value: number) =>\n    Math.round(value * 255)\n      .toString(16)\n      .padStart(2, '0');\n  const hexR = toHex(r + m);\n  const hexG = toHex(g + m);\n  const hexB = toHex(b + m);\n\n  // Combine the values and return the HEX color\n  return `#${hexR}${hexG}${hexB}`;\n}\n\nconst RGBToHSL = (red: number, green: number, blue: number) => {\n  // Make r, g, and b fractions of 1\n  const r = red / 255;\n  const g = green / 255;\n  const b = blue / 255;\n\n  // Find greatest and smallest channel values\n  const cmin = Math.min(r, g, b);\n  const cmax = Math.max(r, g, b);\n  const delta = cmax - cmin;\n  const hue = getHue(r, g, b);\n  const lightness = getLightness(cmax, cmin);\n  const saturation = getSaturation(delta, lightness);\n\n  return [hue, saturation * 100, lightness * 100];\n};\n\nconst getHue = (r: number, g: number, b: number) => {\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const c = max - min;\n  let hue: number = 0;\n  if (c == 0) {\n    hue = 0;\n  } else {\n    switch (max) {\n      case r: {\n        let segment = (g - b) / c;\n        let shift = 0; // R\u00B0 / (360\u00B0 / hex sides)\n        if (segment < 0) {\n          // hue > 180, full rotation\n          shift = 360 / 60; // R\u00B0 / (360\u00B0 / hex sides)\n        }\n        hue = segment + shift;\n        break;\n      }\n\n      case g: {\n        let segment = (b - r) / c;\n        let shift = 120 / 60; // G\u00B0 / (360\u00B0 / hex sides)\n        hue = segment + shift;\n        break;\n      }\n\n      case b:\n        let segment = (r - g) / c;\n        let shift = 240 / 60; // B\u00B0 / (360\u00B0 / hex sides)\n        hue = segment + shift;\n        break;\n    }\n  }\n  return hue * 60; // hue is in [0,6], scale it up\n};\n\nconst getSaturation = (delta: number, lightness: number) =>\n  delta == 0 ? 0 : delta / (1 - Math.abs(2 * lightness - 1));\n\nconst getLightness = (cmax: number, cmin: number) => (cmax + cmin) / 2;\n\nconst fullDarkMode = ([red, green, blue, alpha]: number[]) => {\n  const [hue, saturation, lightness] = RGBToHSL(red, green, blue);\n  return hslaToHex(hue, saturation * 0.9, 100 - lightness, alpha);\n};\n\nfunction hexToRgba(hex: string) {\n  if (hex.startsWith('#')) {\n    hex = hex.slice(1);\n  }\n\n  let r = parseInt(hex.substring(0, 2), 16);\n  let g = parseInt(hex.substring(2, 4), 16);\n  let b = parseInt(hex.substring(4, 6), 16);\n  let a = parseInt(hex.substring(6, 8) || 'ff', 16);\n  return [r, g, b, a / 255];\n}\n\nexport const convertColorToDark = (color: string) => {\n  if (color.startsWith('rgb')) {\n    const t = color\n      .replace('rgb', '')\n      .replace('a', '')\n      .replace('(', '')\n      .replace(')', '');\n    const list = t.split(',').map(Number);\n    if (list.length <= 3) {\n      list.push(1);\n    }\n    return fullDarkMode(list);\n  } else {\n    return fullDarkMode(hexToRgba(color));\n  }\n};\n", "import { convertColorToDark } from './convert';\n\nexport const lightColor = Object.freeze({\n  primaryColor: '#217346',\n  buttonActiveColor: '#c6c6c6',\n  selectionColor: 'rgba(198,198,198,0.3)',\n  backgroundColor: '#e6e6e6',\n  hoverColor: 'rgba(0, 0, 0, 0.04)',\n  scrollbarColor: 'rgba(0, 0, 0, 0.1)',\n  scrollbarHoveColor: 'rgba(0, 0, 0, 0.2)',\n  dialogBackground: 'rgba(0, 0, 0, 0.6)',\n  white: '#ffffff',\n  black: '#000000',\n  triangleFillColor: '#dddddd',\n  contentColor: '#333333',\n  borderColor: '#cccccc',\n  activeBorderColor: '#808080',\n  errorFormulaColor: '#ff0000',\n});\n\nexport const darkColor = Object.freeze(\n  Object.fromEntries(\n    Object.entries(lightColor).map(([k, v]) => [k, convertColorToDark(v)]),\n  ),\n);\n", "import { ThemeType } from '@/types';\nimport size from './size';\nimport zIndex from './zIndex';\n\nimport { lightColor, darkColor } from './color';\nexport const sizeConfig = {\n  ...size,\n  ...zIndex,\n};\n\nexport { darkColor, lightColor };\nconst themeKey = 'data-theme' as const;\n\nexport function setTheme(value: ThemeType) {\n  localStorage.setItem(themeKey, value);\n  document.documentElement.setAttribute(themeKey, value);\n}\nexport function getTheme(): ThemeType {\n  const l = localStorage.getItem(themeKey);\n  if (l) {\n    return l as ThemeType;\n  }\n  if (window.matchMedia && typeof window.matchMedia === 'function') {\n    return window.matchMedia('(prefers-color-scheme: dark)').matches\n      ? 'dark'\n      : 'light';\n  }\n  return 'light';\n}\n\nexport function getThemeColor(key: keyof typeof lightColor) {\n  if (getTheme() === 'dark') {\n    return darkColor[key];\n  } else {\n    return lightColor[key];\n  }\n}\n", "export function dpr(data = window.devicePixelRatio): number {\n  return Math.max(Math.floor(data || 1), 1);\n}\n\nexport function npx(px: number): number {\n  return Math.floor(px * dpr());\n}\n\nexport function thinLineWidth(): number {\n  return 1;\n}\n\nexport function isMac() {\n  return navigator.userAgent.indexOf('Mac OS X') > -1;\n}\n", "/**\n * font-style:  none | normal | italic | oblique\n * font-variant none | normal | small-caps // \u4F5C\u7528\u4E0D\u5927\n * font-weight  none | normal | bold | \u6570\u5B57\n * font-size\n * line-height\n * font-family\n * e.g italic bold 14px/16px sans-serif;\n */\nimport { npx } from './dpr';\nimport { EUnderLine, StyleType } from '@/types';\n\nexport const DEFAULT_FONT_SIZE = 11;\nexport const MUST_FONT_FAMILY = 'sans-serif';\n\nexport const FONT_SIZE_LIST = [\n  6,\n  8,\n  9,\n  10,\n  DEFAULT_FONT_SIZE,\n  12,\n  14,\n  16,\n  18,\n  20,\n  22,\n  24,\n  26,\n  28,\n  36,\n  48,\n  72,\n];\n\nexport function makeFont(\n  fontStyle: 'none' | 'normal' | 'italic' | 'oblique' = 'normal',\n  fontWeight = 'normal',\n  fontSize = 12,\n  fontFamily = '',\n): string {\n  const temp = `${fontStyle} ${fontWeight} ${fontSize}px `;\n  if (!fontFamily) {\n    return temp + MUST_FONT_FAMILY;\n  }\n  return `${temp}${fontFamily},${MUST_FONT_FAMILY}`;\n}\n\nexport const DEFAULT_FONT_CONFIG = makeFont(\n  undefined,\n  '500',\n  npx(DEFAULT_FONT_SIZE),\n);\n\nexport function convertToCssString(style: Partial<StyleType>): string {\n  let result = '';\n  if (style.fontColor) {\n    result += `color:${style.fontColor};`;\n  }\n  if (style.fillColor) {\n    result += `background-color:${style.fillColor};`;\n  }\n  if (style.fontSize) {\n    result += `font-size:${style.fontSize}pt;`;\n  }\n  if (style.fontFamily) {\n    result += `font-family:${style.fontFamily};`;\n  }\n  if (style.isItalic) {\n    result += 'font-style:italic;';\n  }\n  if (style.isBold) {\n    result += 'font-weight:700;';\n  }\n  if (style.isWrapText) {\n    result += 'white-space:normal;';\n  }\n  if (style.underline && style.isStrike) {\n    result += 'text-decoration-line:underline line-through;';\n  } else if (style.underline) {\n    result += 'text-decoration-line:underline;';\n  } else if (style.isStrike) {\n    result += 'text-decoration-line:line-through;';\n  }\n  if (style.underline === EUnderLine.DOUBLE) {\n    result += 'text-decoration-style: double;';\n  }\n\n  return result;\n}\n\nfunction pickCSSStyle(style: Partial<CSSStyleDeclaration>): Partial<StyleType> {\n  const {\n    color,\n    backgroundColor,\n    fontSize,\n    fontFamily,\n    fontStyle,\n    fontWeight,\n    whiteSpace,\n    textDecorationLine,\n    textDecorationStyle,\n  } = style;\n  const result: Partial<StyleType> = {};\n  if (color) {\n    result.fontColor = color;\n  }\n  if (backgroundColor) {\n    result.fillColor = backgroundColor;\n  }\n  if (fontSize) {\n    const size = parseInt(fontSize, 10);\n    if (!isNaN(size)) {\n      result.fontSize = size;\n    }\n  }\n  if (fontFamily) {\n    result.fontFamily = fontFamily;\n  }\n  if (fontStyle === 'italic') {\n    result.isItalic = true;\n  }\n  if (fontWeight && ['700', '800', '900', 'bold'].includes(fontWeight)) {\n    result.isBold = true;\n  }\n  if (\n    whiteSpace &&\n    [\n      'normal',\n      'pre-wrap',\n      'pre-line',\n      'break-spaces',\n      'revert',\n      'unset',\n    ].includes(whiteSpace)\n  ) {\n    result.isWrapText = true;\n  }\n  if (textDecorationLine?.includes('underline')) {\n    result.underline = EUnderLine.SINGLE;\n    if (textDecorationStyle === 'double') {\n      result.underline = EUnderLine.DOUBLE;\n    }\n  }\n  if (textDecorationLine?.includes('line-through')) {\n    result.isStrike = true;\n  }\n  return result;\n}\n\nfunction parseStyle(\n  styleMap: Record<string, CSSStyleDeclaration>,\n  style: CSSStyleDeclaration,\n  className: string,\n  tagName: string,\n): Partial<StyleType> {\n  let result: Partial<StyleType> = {};\n  const t = styleMap[tagName] || styleMap[tagName.toLowerCase()];\n  if (t) {\n    result = pickCSSStyle(t);\n  }\n  if (styleMap[className]) {\n    result = Object.assign(result, pickCSSStyle(styleMap[className]));\n  }\n\n  result = Object.assign(result, pickCSSStyle(style));\n\n  if (tagName === 's' || tagName === 'strike') {\n    result.isStrike = true;\n  } else if (tagName === 'i') {\n    result.isItalic = true;\n  } else if (tagName === 'b' || tagName === 'strong') {\n    result.isBold = true;\n  } else if (tagName === 'u') {\n    result.underline = EUnderLine.SINGLE;\n  }\n  return result;\n}\n\nfunction convertToCssStyleDeclaration(cssStr: string) {\n  const str = cssStr.replace(/\\s+/g, '').replace('<!--', '');\n  const regex = /([^{}]+)\\s*\\{([^}]*)\\}/g;\n  const matches: Record<string, Partial<CSSStyleDeclaration>> = {};\n  let match;\n  while ((match = regex.exec(str)) !== null) {\n    let div: HTMLDivElement | null = document.createElement('div');\n    div.style.cssText = match[2];\n    const key = match[1].trim();\n    matches[key] = div.style;\n    div = null;\n  }\n  return matches;\n}\n\nexport function parseHTML(html: string) {\n  let template: HTMLTemplateElement | null = document.createElement('template');\n  template.innerHTML = html;\n  const doc = template.content;\n  const styleMap: Record<string, CSSStyleDeclaration> = {};\n  for (const item of doc.querySelectorAll('style')) {\n    const temp = convertToCssStyleDeclaration(item.textContent || '');\n    for (const [key, value] of Object.entries(temp)) {\n      styleMap[key] = Object.assign(styleMap[key] || {}, value);\n    }\n  }\n  const textList: string[][] = [];\n  const styleList: Array<Array<Partial<StyleType>>> = [];\n  // TODO col width and row height\n  // const colList = doc.querySelectorAll('col');\n  const trList = doc.querySelectorAll('tr');\n  for (const tr of trList) {\n    const texts: string[] = [];\n    const list: Array<Partial<StyleType>> = [];\n    for (const td of tr.children) {\n      if (td.tagName !== 'TD') {\n        continue;\n      }\n      let temp = td as HTMLElement;\n      let itemStyle: Partial<StyleType> = {};\n      while (temp.nodeType !== Node.TEXT_NODE) {\n        const style = parseStyle(\n          styleMap,\n          temp.style,\n          temp.className ? `.${temp.className}` : '',\n          temp.tagName,\n        );\n        itemStyle = Object.assign(itemStyle, style);\n        if (temp.firstChild) {\n          temp = temp.firstChild as HTMLElement;\n        } else {\n          break;\n        }\n      }\n      list.push(itemStyle);\n      texts.push(temp.textContent || '');\n    }\n    textList.push(texts);\n    styleList.push(list);\n  }\n  template = null;\n  return {\n    textList,\n    styleList,\n  };\n}\n", "export function assert(condition: boolean, message = 'assert error', env = process.env.NODE_ENV): asserts condition {\n  if (!condition) {\n    if (env !== 'test') {\n      window.alert(message);\n    }\n    throw new Error(message);\n  }\n}\n", "/**\n * convert column name to number. e.g A -> 0, a -> 0\n * @param { string } columnName\n */\nexport function columnNameToInt(columnName = ''): number {\n  const temp = columnName.toUpperCase();\n  let num = 0;\n  for (let i = 0; i < temp.length; i++) {\n    num = temp.charCodeAt(i) - 64 + num * 26;\n  }\n  return num - 1;\n}\n/**\n * convert number to column name 0 -> A\n * @param { string } number\n */\nexport function intToColumnName(temp: number): string {\n  const num = temp + 1;\n  let columnName = '';\n  let dividend = Math.floor(Math.abs(num));\n  let rest;\n\n  while (dividend > 0) {\n    rest = (dividend - 1) % 26;\n    columnName = String.fromCharCode(65 + rest) + columnName;\n    dividend = Math.floor((dividend - rest) / 26);\n  }\n  return columnName.toUpperCase();\n}\n\nexport function rowLabelToInt(label: string): number {\n  let result = parseInt(label, 10);\n  if (window.isNaN(result)) {\n    result = -1;\n  } else {\n    result = Math.max(result - 1, -1);\n  }\n  return result;\n}\n\nexport function intToRowLabel(row: number): string {\n  if (row >= 0) {\n    return `${row + 1}`;\n  }\n  return '';\n}\n", "import { IRange } from '@/types';\n\nexport function isSheet(range: IRange): boolean {\n  return isRow(range) && isCol(range);\n}\nexport function isRow(range: IRange): boolean {\n  return range.colCount === 0;\n}\nexport function isCol(range: IRange): boolean {\n  return range.rowCount === 0;\n}\n\nexport function isSameRange(oldRange?: IRange, newRange?: IRange): boolean {\n  if (!oldRange || !newRange) {\n    return false;\n  }\n  return (\n    oldRange.col === newRange.col &&\n    oldRange.row === newRange.row &&\n    oldRange.colCount === newRange.colCount &&\n    oldRange.rowCount === newRange.rowCount &&\n    oldRange.sheetId === newRange.sheetId\n  );\n}\n\nexport function containRange(row: number, col: number, range: IRange): boolean {\n  return (\n    row >= range.row &&\n    row < range.row + range.rowCount &&\n    col >= range.col &&\n    col < range.col + range.colCount\n  );\n}\n\nexport class Range implements IRange {\n  row = 0;\n  col = 0;\n  colCount = 0;\n  rowCount = 0;\n  sheetId = '';\n  constructor(\n    row: number,\n    col: number,\n    rowCount: number,\n    colCount: number,\n    sheetId: string,\n  ) {\n    this.row = row;\n    this.col = col;\n    this.colCount = colCount;\n    this.rowCount = rowCount;\n    this.sheetId = sheetId;\n  }\n\n  isValid(): boolean {\n    return (\n      this.row >= 0 && this.col >= 0 && this.colCount >= 0 && this.rowCount >= 0\n    );\n  }\n  static makeRange(range: IRange): Range {\n    return new Range(\n      range.row,\n      range.col,\n      range.rowCount,\n      range.colCount,\n      range.sheetId,\n    );\n  }\n  toIRange(): IRange {\n    return {\n      row: this.row,\n      col: this.col,\n      rowCount: this.rowCount,\n      colCount: this.colCount,\n      sheetId: this.sheetId,\n    };\n  }\n}\n", "import { columnNameToInt, rowLabelToInt, intToColumnName } from './convert';\nimport { IRange, ReferenceType } from '@/types';\nimport { Range } from './range';\nimport { DEFAULT_ROW_COUNT, DEFAULT_COL_COUNT } from './constant';\n\nconst isCharacter = (char: string) =>\n  (char >= 'a' && char <= 'z') || (char >= 'A' && char <= 'Z');\nconst isNum = (char: string) => char >= '0' && char <= '9';\n\nfunction convertSheetNameToSheetId(value: string) {\n  return value;\n}\n\nfunction parseCell(\n  ref: string,\n  convertSheetName = convertSheetNameToSheetId,\n): Range | null {\n  if (typeof ref !== 'string' || !ref) {\n    return null;\n  }\n  const realRef = ref.trim();\n  let [sheetName, other = ''] = realRef.split('!');\n  if (!realRef.includes('!')) {\n    sheetName = '';\n    other = realRef;\n  }\n  let i = 0;\n  let rowText = '';\n  let colText = '';\n  if (other[i] === '$') {\n    i++;\n  }\n  while (isCharacter(other[i])) {\n    colText += other[i++];\n  }\n  if (other[i] === '$') {\n    i++;\n  }\n  while (isNum(other[i])) {\n    rowText += other[i++];\n  }\n  if (i !== other.length) {\n    return null;\n  }\n  if (!rowText && !colText) {\n    return null;\n  }\n\n  let rowCount = 1;\n  let colCount = 1;\n  let row = 0;\n  let col = 0;\n  if (rowText === '') {\n    colCount = 0;\n    rowCount = DEFAULT_ROW_COUNT;\n  } else {\n    row = rowLabelToInt(rowText);\n  }\n  if (colText === '') {\n    colCount = DEFAULT_COL_COUNT;\n    rowCount = 0;\n  } else {\n    col = columnNameToInt(colText);\n  }\n  if (row === -1 || col === -1) {\n    return null;\n  }\n  const range = new Range(\n    row,\n    col,\n    rowCount,\n    colCount,\n    convertSheetName(sheetName),\n  );\n  return range;\n}\n\nexport function parseReference(\n  text: string,\n  convertSheetName = convertSheetNameToSheetId,\n): Range | null {\n  const [cell1, cell2] = text.split(':');\n  const startCell = parseCell(cell1, convertSheetName);\n  if (!startCell) {\n    return null;\n  }\n  const endCell = parseCell(cell2, convertSheetName);\n  if (!endCell) {\n    return startCell;\n  }\n  endCell.sheetId = startCell.sheetId;\n  return mergeRange(startCell, endCell);\n}\n\nexport function mergeRange(start: Range, end: Range): Range | null {\n  if (start.sheetId !== end.sheetId) {\n    return null;\n  }\n  if (\n    start.row === end.row &&\n    start.col === end.col &&\n    start.rowCount === end.rowCount &&\n    start.colCount === end.colCount\n  ) {\n    return start;\n  }\n  if (start.rowCount === 0 || end.rowCount === 0) {\n    if (end.rowCount !== 0 || end.rowCount !== 0) {\n      return null;\n    }\n  }\n\n  if (start.colCount === 0 || end.colCount === 0) {\n    if (end.colCount !== 0 || end.colCount !== 0) {\n      return null;\n    }\n  }\n\n  const rowCount = Math.abs(start.row - end.row) + 1;\n  const colCount = Math.abs(start.col - end.col) + 1;\n  const row = start.row < end.row ? start.row : end.row;\n  const col = start.col < end.col ? start.col : end.col;\n\n  return new Range(row, col, rowCount, colCount, start.sheetId);\n}\n\nfunction convertCell(row: number, col: number, referenceType: ReferenceType) {\n  const first = referenceType === 'absolute';\n  const second = referenceType === 'absolute';\n  return `${first ? '$' : ''}${intToColumnName(col)}${second ? '$' : ''}${\n    row + 1\n  }`;\n}\n\nexport function convertToReference(\n  range: IRange,\n  referenceType: ReferenceType = 'relative',\n  convertSheetIdToSheetName = convertSheetNameToSheetId,\n) {\n  let result = convertCell(range.row, range.col, referenceType);\n  let sheetName = convertSheetIdToSheetName(range.sheetId);\n  sheetName = sheetName ? `${sheetName}!` : '';\n  if (range.colCount > 1 && range.rowCount > 1) {\n    const end = convertCell(\n      range.row + range.rowCount,\n      range.col + range.colCount,\n      referenceType,\n    );\n    result = `${result}:${end}`;\n  }\n  return sheetName + result;\n}\n", "import { DEBUG_COLOR_LIST } from './constant';\n\ntype NameSpaceType = 'react' | 'controller' | 'canvas' | 'model';\n\nclass Debug {\n  namespace: NameSpaceType;\n\n  static readonly colorMap: Map<NameSpaceType, string> = new Map<\n    NameSpaceType,\n    string\n  >();\n  static readonly enableMap: Map<NameSpaceType, boolean> = new Map<\n    NameSpaceType,\n    boolean\n  >([]);\n  constructor(namespace: NameSpaceType) {\n    this.namespace = namespace;\n  }\n  init = () => {\n    this.setColor();\n    return this.log;\n  };\n  log = (...rest: unknown[]): void => {\n    if (!this.enable()) {\n      return;\n    }\n    const { namespace } = this;\n    const color = Debug.colorMap.get(namespace);\n    const result = [`%c ${namespace}:`, `color:${color};`, ...rest];\n    console.log(...result);\n  };\n  getRandomColor = (): string => {\n    const index = Math.floor(Math.random() * DEBUG_COLOR_LIST.length);\n    return DEBUG_COLOR_LIST[index];\n  };\n  enable() {\n    return this.checkEnable() && Debug.enableMap.get(this.namespace) !== false;\n  }\n  checkEnable(storage = window.localStorage) {\n    return storage.getItem('debug') === '*';\n  }\n  setColor() {\n    if (!Debug.colorMap.has(this.namespace)) {\n      Debug.colorMap.set(this.namespace, this.getRandomColor());\n    }\n  }\n  static disable(key: NameSpaceType) {\n    Debug.enableMap.set(key, false);\n  }\n}\n\nexport const controllerLog = new Debug('controller').init();\nexport const canvasLog = new Debug('canvas').init();\nexport const modelLog = new Debug('model').init();\n", "/**\n * query all installed fonts\n * window.queryLocalFonts()\n */\nexport const QUERY_ALL_LOCAL_FONT = 'QUERY_ALL_LOCAL_FONT';\nexport const LOCAL_FONT_KEY = 'LOCAL_FONT_KEY';\nexport const FONT_FAMILY_LIST = [\n  '\u7B49\u7EBF',\n  '\u7B49\u7EBF Light',\n  '\u65B9\u6B63\u8212\u4F53',\n  '\u65B9\u6B63\u59DA\u4F53',\n  '\u4EFF\u5B8B',\n  '\u9ED1\u4F53',\n  '\u534E\u6587\u5F69\u4E91',\n  '\u534E\u6587\u4EFF\u5B8B',\n  '\u534E\u6587\u7425\u73C0',\n  '\u534E\u6587\u6977\u4F53',\n  '\u534E\u6587\u96B6\u4E66',\n  '\u534E\u6587\u5B8B\u4F53',\n  '\u534E\u6587\u7EC6\u9ED1',\n  '\u534E\u6587\u65B0\u9B4F',\n  '\u534E\u6587\u884C\u6977',\n  '\u534E\u6587\u4E2D\u5B8B',\n  '\u6977\u4F53',\n  '\u96B6\u4E66',\n  '\u5B8B\u4F53',\n  '\u5FAE\u8F6F\u96C5\u9ED1',\n  '\u5FAE\u8F6F\u96C5\u9ED1 Light',\n  '\u65B0\u5B8B\u4F53',\n  '\u5E7C\u5706',\n  'Arial',\n  'Arial Narrow',\n  'Cascadia Code',\n  'Cascadia Code ExtraLight',\n  'Cascadia Code Light',\n  'Cascadia Code PL',\n  'Cascadia Code PL ExtraLight',\n  'Cascadia Code PL Light',\n  'Cascadia Code PL SemiBold',\n  'Cascadia Code SemiBold',\n  'Cascadia Mono',\n  'Cascadia Mono ExtraLight',\n  'Cascadia Mono Light',\n  'Cascadia Mono PL',\n  'Cascadia Mono PL ExtraLight',\n  'Cascadia Mono PL Light',\n  'Cascadia Mono PL SemiBold',\n  'Cascadia Mono SemiBold',\n  'Microsoft JhengHei',\n  'Microsoft JhengHei Light',\n  'Microsoft JhengHei UI',\n  'Microsoft JhengHei UI Light',\n  'Microsoft New Tai Lue',\n  'Microsoft PhagsPa',\n  'Microsoft Sans Serif',\n  'Microsoft Tai Le',\n  'Microsoft Yahei UI',\n  'Microsoft YaHei UI Light',\n  'Microsoft Yi Baiti',\n  'SimSun-ExtB',\n  'Times New Roman',\n  'Yu Gothic Light',\n  'Yu Gothic Medium',\n  'Yu Gothic Regular',\n  'Yu Gothic UI Light',\n  'Yu Gothic UI Regular',\n  'Yu Gothic UI Semibold',\n];\n", "import { MUST_FONT_FAMILY } from './style';\nimport { OptionItem } from '@/types';\nimport { FONT_FAMILY_LIST, LOCAL_FONT_KEY, QUERY_ALL_LOCAL_FONT } from './font';\n\nexport function SupportFontFamilyFactory() {\n  // a font will be compared against all the three default fonts.\n  // and if it doesn't match all 3 then that font is not available.\n  const baseFonts = ['monospace', MUST_FONT_FAMILY, 'serif'];\n\n  //we use m or w because these two characters take up the maximum width.\n  // And we use a LLi so that the same matching fonts can get separated\n  const testString = 'mmmmmmmmmmlli';\n\n  //we test using 72px font size, we may use any size. I guess larger the better.\n  const testSize = '72px';\n\n  const h = document.getElementsByTagName('body')[0];\n\n  // create a SPAN in the document to get the width of the text we use to test\n  const s = document.createElement('span');\n  s.style.fontSize = testSize;\n  s.innerHTML = testString;\n  const defaultWidth: Record<string, number> = {};\n  const defaultHeight: Record<string, number> = {};\n  for (const item of baseFonts) {\n    //get the default width for the three base fonts\n    s.style.fontFamily = item;\n    h.appendChild(s);\n    defaultWidth[item] = s.offsetWidth; //width for the default font\n    defaultHeight[item] = s.offsetHeight; //height for the defualt font\n    h.removeChild(s);\n  }\n\n  function detect(font: string) {\n    let detected = false;\n    for (const item of baseFonts) {\n      s.style.fontFamily = font + ',' + item; // name of the font along with the base font for fallback.\n      h.appendChild(s);\n      const matched =\n        s.offsetWidth != defaultWidth[item] ||\n        s.offsetHeight != defaultHeight[item];\n      h.removeChild(s);\n      detected = detected || matched;\n    }\n    return detected;\n  }\n\n  return detect;\n}\n\nconst isSupportFontFamily = SupportFontFamilyFactory();\nexport { isSupportFontFamily };\n\nexport function initFontFamilyList(fontList = FONT_FAMILY_LIST): OptionItem[] {\n  const cacheFont = localStorage.getItem(LOCAL_FONT_KEY);\n  if (cacheFont) {\n    const list = JSON.parse(cacheFont) as string[];\n    return list.map((v) => ({ value: v, label: v, disabled: false }));\n  }\n  const list = fontList\n    .map((v) => ({\n      label: v,\n      value: v,\n      disabled: !isSupportFontFamily(v),\n    }))\n    .filter((v) => !v.disabled);\n  if ((window as any).queryLocalFonts) {\n    list.push({\n      value: QUERY_ALL_LOCAL_FONT,\n      label: '--> get all local installed fonts',\n      disabled: false,\n    });\n  }\n  return list;\n}\n", "import type { ClipboardType, ClipboardData } from '@/types';\n\nexport const PLAIN_FORMAT = 'text/plain';\nexport const HTML_FORMAT = 'text/html';\n\nfunction select(element: HTMLTextAreaElement) {\n  const isReadOnly = element.hasAttribute('readonly');\n  if (!isReadOnly) {\n    element.setAttribute('readonly', '');\n  }\n  element.select();\n  element.setSelectionRange(0, element.value.length);\n\n  if (!isReadOnly) {\n    element.removeAttribute('readonly');\n  }\n  return element.value;\n}\n\nfunction createFakeElement(value: string) {\n  const isRTL = document.documentElement.getAttribute('dir') === 'rtl';\n  const fakeElement = document.createElement('textarea');\n  // Prevent zooming on iOS\n  fakeElement.style.fontSize = '12pt';\n  // Reset box model\n  fakeElement.style.border = '0';\n  fakeElement.style.padding = '0';\n  fakeElement.style.margin = '0';\n  // Move element out of screen horizontally\n  fakeElement.style.position = 'absolute';\n  fakeElement.style[isRTL ? 'right' : 'left'] = '-9999px';\n  // Move element to the same position vertically\n  const yPosition = window.pageYOffset || document.documentElement.scrollTop;\n  fakeElement.style.top = `${yPosition}px`;\n\n  fakeElement.setAttribute('readonly', '');\n  fakeElement.value = value;\n\n  return fakeElement;\n}\n\nfunction writeDataToClipboard(textData: ClipboardData) {\n  const result: Record<string, Blob> = {};\n  const keyList = Object.keys(textData) as ClipboardType[];\n  for (const key of keyList) {\n    result[key] = new Blob([textData[key]], { type: key });\n  }\n  const data = [new ClipboardItem(result)];\n  return navigator?.clipboard?.write(data);\n}\n\nasync function readDataFromClipboard(): Promise<ClipboardData> {\n  const result: ClipboardData = {\n    [HTML_FORMAT]: '',\n    [PLAIN_FORMAT]: '',\n  };\n  const list = (await navigator?.clipboard?.read()) || [];\n  for (const item of list) {\n    if (item.types.includes(PLAIN_FORMAT)) {\n      const buf = await item.getType(PLAIN_FORMAT);\n      result[PLAIN_FORMAT] = await buf.text();\n    }\n    if (item.types.includes(HTML_FORMAT)) {\n      const buf = await item.getType(HTML_FORMAT);\n      result[HTML_FORMAT] = await buf.text();\n    }\n  }\n  return result;\n}\n\nconst fakeCopyAction = (\n  value: string,\n  container: HTMLElement,\n  type: 'copy' | 'cut',\n) => {\n  let fakeElement: HTMLTextAreaElement | null = createFakeElement(value);\n  container.appendChild(fakeElement);\n  const selectedText = select(fakeElement);\n  document.execCommand(type);\n  fakeElement.remove();\n  fakeElement = null;\n  return selectedText;\n};\n\nexport async function copyOrCut(\n  textData: ClipboardData,\n  type: 'cut' | 'copy',\n): Promise<string> {\n  try {\n    await writeDataToClipboard(textData);\n    return textData[PLAIN_FORMAT];\n  } catch (error) {\n    console.error(error);\n    return fakeCopyAction(textData[PLAIN_FORMAT], document.body, type);\n  }\n}\n\nexport async function paste(): Promise<ClipboardData> {\n  try {\n    return readDataFromClipboard();\n  } catch (error) {\n    console.error(error);\n    const result = (await navigator?.clipboard?.readText()) || '';\n    return {\n      [HTML_FORMAT]: '',\n      [PLAIN_FORMAT]: result,\n    };\n  }\n}\n\nexport function generateHTML(style: string, content: string): string {\n  return `<html\n  xmlns:v=\"urn:schemas-microsoft-com:vml\"\n  xmlns:o=\"urn:schemas-microsoft-com:office:office\"\n  xmlns:x=\"urn:schemas-microsoft-com:office:excel\"\n  xmlns=\"http://www.w3.org/TR/REC-html40\"\n>\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n    <meta name=\"ProgId\" content=\"Excel.Sheet\" />\n    <meta name=\"Generator\" content=\"Microsoft Excel 15\" />\n    <style>\n      ${style}\n    </style>\n  </head>\n\n  <body >\n    <table\n    >\n      ${content}\n    </table>\n  </body>\n</html>`;\n}\n", "import type { IController } from '@/types';\n\ntype HitInfoResult = {\n  row: number;\n  col: number;\n  marginX: number;\n  marginY: number;\n};\n\nexport function stopPropagation(event: Event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nexport function getHitInfo(\n  controller: IController,\n  x: number,\n  y: number,\n): HitInfoResult | null {\n  if (x < 0 || y < 0) {\n    return null;\n  }\n  const sheetInfo = controller.getSheetInfo(controller.getCurrentSheetId());\n  if (!sheetInfo) {\n    return null;\n  }\n  const scroll = controller.getScroll();\n  const headerSize = controller.getHeaderSize();\n  let resultX = headerSize.width;\n  let resultY = headerSize.height;\n  let marginX = x - headerSize.width;\n  let marginY = y - headerSize.height;\n  let { row, col } = scroll;\n  while (resultX + controller.getColWidth(col).len <= x) {\n    const t = controller.getColWidth(col).len;\n    resultX += t;\n    marginX -= t;\n    col++;\n  }\n  while (resultY + controller.getRowHeight(row).len <= y) {\n    const t = controller.getRowHeight(row).len;\n    resultY += t;\n    marginY -= t;\n    row++;\n  }\n  if (row >= sheetInfo.rowCount || col >= sheetInfo.colCount) {\n    return null;\n  }\n  return { row, col, marginX, marginY };\n}\n", "export function saveAs(blob: Blob | string, fileName: string): void {\n  let link: HTMLAnchorElement | null = document.createElement('a');\n  link.download = fileName || 'download';\n  link.rel = 'noopener';\n  link.target = '_blank';\n  if (typeof blob === 'string') {\n    link.href = blob;\n  } else {\n    link.href = URL.createObjectURL(blob);\n  }\n  link.dispatchEvent(new MouseEvent('click'));\n  link = null;\n}\n", "const colorMap: Record<string, string> = {\n  maroon: '#800000',\n  red: '#ff0000',\n  orange: '#ffA500',\n  yellow: '#ffff00',\n  olive: '#808000',\n  purple: '#800080',\n  fuchsia: '#ff00ff',\n  white: '#ffffff',\n  lime: '#00ff00',\n  green: '#008000',\n  navy: '#000080',\n  blue: '#0000ff',\n  aqua: '#00ffff',\n  teal: '#008080',\n  black: '#000000',\n  silver: '#c0c0c0',\n  gray: '#808080',\n  transparent: '#0000',\n};\n\nconst hexStr = '(?:#([a-f0-9]{3,8}))';\nconst numberStr = '\\\\s*([.\\\\d%]+)\\\\s*';\nconst sopStr = '(?:,\\\\s*([.\\\\d]+)\\\\s*)?';\nconst listStr = `\\\\(${[numberStr, numberStr, numberStr]}${sopStr}\\\\)`;\nconst rgbStr = '(?:rgb)a?';\nconst hslStr = '(?:hsl)a?';\n\nconst hexReg = RegExp(hexStr, 'i');\nconst rgbReg = RegExp(rgbStr + listStr, 'i');\nconst hslReg = RegExp(hslStr + listStr, 'i');\n\nfunction padZero(a: string) {\n  if (a.length === 1) {\n    return `0${a}`;\n  }\n  return a;\n}\nfunction RGBAToHex(r: number, g: number, b: number, a: number) {\n  const list = [r, g, b, a * 255];\n  return `#${list\n    .map((item) => padZero(Math.round(item).toString(16)))\n    .join('')}`;\n}\nfunction RGBtoHEX(r: string, g: string, b: string, a: string): string {\n  let alpha = 1;\n  if (a) {\n    alpha = parseFloat(a);\n  }\n  const red = parseFloat(r);\n  const green = parseFloat(g);\n  const blue = parseFloat(b);\n  if (\n    !(\n      red <= 255 &&\n      red >= 0 &&\n      green <= 255 &&\n      green >= 0 &&\n      blue <= 255 &&\n      blue >= 0 &&\n      alpha <= 1 &&\n      alpha >= 0\n    )\n  ) {\n    return '';\n  }\n  return RGBAToHex(red, green, blue, alpha);\n}\n\nfunction HUEtoRGB(p: number, q: number, t: number) {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  if (t < 1 / 6) return p + (q - p) * 6 * t;\n  if (t < 1 / 2) return q;\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n  return p;\n}\n\nfunction HSLAtoHEX(x: string, y: string, z: string, a: string) {\n  let alpha = 1;\n  if (a) {\n    alpha = parseFloat(a) / 1;\n  }\n  const h = parseFloat(x) / 360;\n  const s = parseFloat(y) / 360;\n  const l = parseFloat(z) / 360;\n  if (\n    h > 1 ||\n    h < 0 ||\n    s > 1 ||\n    s < 0 ||\n    l > 1 ||\n    l < 0 ||\n    alpha > 1 ||\n    alpha < 0\n  ) {\n    return '';\n  }\n  let r: number;\n  let g: number;\n  let b: number;\n  if (s === 0) {\n    r = l;\n    g = l;\n    b = l;\n  } else {\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n    r = HUEtoRGB(p, q, h + 1 / 3);\n    g = HUEtoRGB(p, q, h);\n    b = HUEtoRGB(p, q, h - 1 / 3);\n  }\n  return RGBAToHex(r * 255, g * 255, b * 255, alpha);\n}\n\nfunction padHex(color: string) {\n  if (!hexReg.test(color)) {\n    return '';\n  }\n  if (color.length === 9) {\n    return color.toUpperCase();\n  }\n  if (color.length === 7) {\n    const t = `${color}ff`;\n    return t.toUpperCase();\n  }\n  if (color.length === 5) {\n    const [, a, b, c, d] = color;\n    const t = `#${a}${a}${b}${b}${c}${c}${d}${d}`;\n    return t.toUpperCase();\n  }\n  if (color.length === 4) {\n    const [, a, b, c] = color;\n    const t = `#${a}${a}${b}${b}${c}${c}ff`;\n    return t.toUpperCase();\n  }\n  return '';\n}\nexport function convertColorToHex(color: string): string {\n  if (!color) {\n    return '';\n  }\n  if (colorMap[color]) {\n    return padHex(colorMap[color]);\n  }\n  if (hexReg.test(color)) {\n    return padHex(color);\n  }\n  if (rgbReg.test(color)) {\n    const [, r, g, b, a] = color.match(rgbReg)!;\n    return padHex(RGBtoHEX(r, g, b, a));\n  }\n  if (hslReg.test(color)) {\n    const [, h, s, l, a] = color.match(hslReg)!;\n    return padHex(HSLAtoHEX(h, s, l, a));\n  }\n  return '';\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;yCAAA,IAAAA,GAAAC,GAAA,CAAAC,GAAAC,IAAA,cAAAA,EAAO,QAAU,OAAO,QCEjB,IAAMC,EAAoB,QACpBC,EAAoB,IACpBC,EAAoB,GAE1B,IAAMC,GAAc,GACdC,GAAc,IACdC,GAAmB,KACnBC,GAAiB,IACjBC,EAAW,IACXC,EAAmB,CAC9B,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACF,EACaC,GAAmB,IAEnBC,GAAY,IAAI,IAAgB,CAC3C,UACA,UACA,SACA,QACA,QACA,UACA,OACA,QACF,CAAC,EAEYC,GAAyC,CACpD,CAAE,WAAY,UAAW,MAAO,GAAI,GAAI,CAAE,EAC1C,CAAE,WAAY,IAAK,MAAO,GAAI,GAAI,CAAE,EACpC,CAAE,WAAY,OAAQ,MAAO,GAAI,GAAI,CAAE,EACvC,CAAE,WAAY,QAAS,MAAO,GAAI,GAAI,CAAE,EACxC,CAAE,WAAY,WAAY,MAAO,GAAI,GAAI,CAAE,EAC3C,CAAE,WAAY,KAAM,MAAO,GAAI,GAAI,CAAE,EACrC,CAAE,WAAY,QAAS,MAAO,GAAI,GAAI,EAAG,EACzC,CAAE,WAAY,WAAY,MAAO,GAAI,GAAI,EAAG,EAC5C,CAAE,WAAY,QAAS,MAAO,GAAI,GAAI,EAAG,EACzC,CAAE,WAAY,UAAW,MAAO,GAAI,GAAI,EAAG,EAC3C,CAAE,WAAY,WAAY,MAAO,GAAI,GAAI,EAAG,EAC5C,CAAE,WAAY,WAAY,MAAO,GAAI,GAAI,EAAG,EAC5C,CAAE,WAAY,QAAS,MAAO,GAAI,GAAI,EAAG,EACzC,CAAE,WAAY,SAAU,MAAO,GAAI,GAAI,EAAG,EAC1C,CAAE,WAAY,aAAc,MAAO,GAAI,GAAI,EAAG,EAC9C,CAAE,WAAY,gBAAiB,MAAO,GAAI,GAAI,EAAG,EACjD,CAAE,WAAY,QAAS,MAAO,GAAI,GAAI,EAAG,EACzC,CAAE,WAAY,WAAY,MAAO,GAAI,GAAI,EAAG,EAC5C,CAAE,WAAY,eAAgB,MAAO,GAAI,GAAI,EAAG,EAChD,CAAE,WAAY,iBAAkB,MAAO,GAAI,GAAI,EAAG,EAClD,CAAE,WAAY,sBAAuB,MAAO,GAAI,GAAI,EAAG,EACvD,CAAE,WAAY,uBAAwB,MAAO,GAAI,GAAI,EAAG,EACxD,CAAE,WAAY,4BAA6B,MAAO,GAAI,GAAI,EAAG,EAC7D,CACE,WAAY,8CACZ,MAAO,GACP,GAAI,EACN,EACA,CACE,WAAY,uDACZ,MAAO,GACP,GAAI,EACN,EACA,CACE,WAAY,sDACZ,MAAO,GACP,GAAI,EACN,EACA,CACE,WAAY,+DACZ,MAAO,GACP,GAAI,EACN,EACA,CAAE,WAAY,QAAS,MAAO,GAAI,GAAI,EAAG,EACzC,CAAE,WAAY,YAAa,MAAO,GAAI,GAAI,EAAG,EAC7C,CAAE,WAAY,UAAW,MAAO,GAAI,GAAI,EAAG,EAC3C,CAAE,WAAY,WAAY,MAAO,GAAI,GAAI,EAAG,EAC5C,CAAE,WAAY,IAAK,MAAO,GAAI,GAAI,EAAG,CACvC,EACaC,GAAmB,GACnBC,GAAkB,GAClBC,GAAc,GACdC,GAAa,GACbC,GAAY,EACZC,GAAqB,MACrBC,GAAqB,QC3J3B,SAASC,EAASC,EAAqB,CAC5C,GAAI,OAAOA,GAAU,UAAY,CAAC,OAAO,MAAMA,CAAK,EAClD,MAAO,GAET,GAAI,OAAOA,GAAU,SACnB,MAAO,GAET,IAAMC,EAAO,WAAWD,CAAK,EAC7B,MAAO,CAAC,OAAO,MAAMC,CAAI,CAC3B,CAEO,SAASC,GAAYF,EAAoB,CAC9C,OAAID,EAASC,CAAK,EACT,OAAOA,CAAK,EAEd,CACT,CAEO,SAASG,GAAiBC,EAAuB,CACtD,IAAMC,EAAmB,CAAC,EAC1B,QAASC,EAAI,EAAGA,EAAIF,EAAK,OAAQE,IAAK,CACpC,IAAML,EAAOC,GAAYE,EAAKE,CAAC,CAAC,EAC3B,OAAO,MAAML,CAAI,GACpBI,EAAO,KAAKJ,CAAI,CAEpB,CACA,OAAOI,CACT,CAEO,SAASE,GAAcH,EAAiB,CAAC,EAAW,CACzD,IAAMI,EAAmBJ,EACtB,IAAKK,GACAV,EAASU,CAAI,EACR,SAASA,EAAM,EAAE,EAEnB,CACR,EACA,OAAQC,GAAM,CAAC,MAAMA,CAAC,CAAC,EAC1B,OAAO,KAAK,IAAI,KAAK,IAAI,GAAGF,CAAM,EAAG,CAAC,CACxC,CAEO,SAASG,GACdP,EAAwB,CAAC,EACgB,CACzC,IAAMQ,EAAUL,GAAcH,EAAK,IAAKK,GAASA,EAAK,OAAO,CAAC,EAAI,EAClE,MAAO,CACL,KAAM,GAAGI,CAAiB,GAAGD,CAAO,GACpC,QAAS,OAAOA,CAAO,CACzB,CACF,CAEO,SAASE,GAAaC,EAAuB,CAClD,OAAKA,EAID,CAAC,MAAQ,CAAC,KAAK,UAEV,CAAC,GAAGA,CAAG,EAIJ,CAAC,GADA,IAAI,KAAK,UAAU,CAAC,EAAG,CAAE,YAAa,MAAO,CAAC,EAAE,QAAQA,CAAG,CACpD,EACT,IAAKC,GAAMA,EAAE,OAAO,EAVtB,CAAC,CAWZ,CAEO,SAASC,GAA0BjB,EAA2B,CACnE,IAAIkB,EAAO,OAAOlB,CAAK,EACvB,OACE,OAAOA,GAAU,WACjB,CAAC,OAAQ,OAAO,EAAE,SAASkB,EAAK,YAAY,CAAC,EAE7CA,EAAOA,EAAK,YAAY,EACQlB,GAAU,OAC1CkB,EAAO,IAEFA,CACT,CAEO,SAASC,GACdC,EACAC,EACuB,CACvB,MAAO,GAAGD,CAAG,GAAGE,CAAQ,GAAGD,CAAG,EAChC,CAEO,SAASE,GAAmBC,EAAyB,CAC1D,GAAM,CAACJ,EAAKC,CAAG,EAAIG,EAAI,MAAMF,CAAQ,EAC/B,EAAI,SAASF,EAAK,EAAE,EACpBK,EAAI,SAASJ,EAAK,EAAE,EAC1B,MAAO,CACL,IAAK,MAAM,CAAC,EAAI,EAAI,EACpB,IAAK,MAAMI,CAAC,EAAI,EAAIA,CACtB,CACF,CAEO,SAASC,GACdd,EACAe,EACuB,CACvB,MAAO,GAAGf,CAAO,GAAGU,CAAQ,GAAGK,CAAQ,EACzC,CAEO,SAASC,IAAe,CAC7B,GAAI,OAAO,QAAW,UAAY,OAAO,OAAO,YAAe,WAC7D,OAAO,OAAO,WAAW,EAG3B,IAAIC,EAAI,IAAI,KAAK,EAAE,QAAQ,EAW3B,MATa,uCAAuC,QAClD,QACA,SAAUJ,EAAG,CACX,IAAM,GAAKI,EAAI,KAAK,OAAO,EAAI,IAAM,GAAK,EAC1C,OAAAA,EAAI,KAAK,MAAMA,EAAI,EAAE,GACbJ,IAAM,IAAM,EAAK,EAAI,EAAO,GAAK,SAAS,EAAE,CACtD,CACF,CAGF,CAEO,SAASK,IAAW,CACzB,IAAMC,EAAY,CAChB,WACA,SACA,UACA,QACA,QACA,cACA,gBACF,EACMC,EAAK,UAAU,UACrB,OAAOD,EAAU,KAAMrB,GAAMsB,EAAG,MAAMtB,CAAC,CAAC,CAC1C,CCzIO,SAASuB,MACXC,EACK,CACR,IAAIC,EAAS,GACb,QAAWC,KAAQF,EACjB,GAAIE,IAAS,SAGT,OAAOA,GAAS,UAAYA,IAC9BD,GAAU,GAAGC,CAAI,KAEf,OAAOA,GAAS,UAClB,QAAWC,KAAO,OAAO,KAAKD,CAAI,EAC5BA,EAAKC,CAAG,IACVF,GAAU,GAAGE,CAAG,KAKxB,OAAOF,EAAO,KAAK,CACrB,CCFO,SAASG,GAASC,EAAiCC,EAAe,IAAK,CAC5E,IAAIC,EAAQ,GACRC,EAA0B,KAC9B,OAAO,YAAaC,EAAc,CAC5BF,EACFC,EAAWC,GAIXJ,EAAG,MAAM,KAAMI,CAAI,EACnB,WAAW,IAAM,CACXD,GAGFH,EAAG,MAAM,KAAMG,CAAQ,EAEzBD,EAAQ,EACV,EAAGD,CAAI,EAEX,CACF,CAEO,SAASI,GACdC,EACAC,EACAC,EACG,CACH,IAAMC,EACJH,GAAO,KACH,OACAC,EACG,QAAQ,MAAO,GAAG,EAClB,QAAQ,MAAO,EAAE,EACjB,MAAM,GAAG,EACT,OAAO,CAACG,EAAKC,IACLD,GAAO,KAAOA,EAAMA,EAAIC,CAAG,EACjCL,CAAG,EACd,OAAQG,IAAW,OAAYD,EAAeC,CAChD,CAEO,SAASG,GAAQC,EAAyB,CAC/C,IAAMC,EAAYD,GAAS,CAAC,EAC5B,MACE,CAAC,OAAQ,KAAK,EAAE,SAASC,EAAK,WAAW,GAAK,CAAC,OAAO,QAAQA,CAAI,EAAE,MAExE,CAyBO,SAASC,GAAUC,EAAQC,EAAQ,CACxC,GAAID,IAAMC,EACR,MAAO,GAET,GAAID,GAAK,OAAOA,GAAM,UAAYC,GAAK,OAAOA,GAAM,SAAU,CAC5D,GAAI,OAAO,KAAKD,CAAC,EAAE,SAAW,OAAO,KAAKC,CAAC,EAAE,OAC3C,MAAO,GAET,IAAMC,EAAQ,OAAO,KAAKF,CAAC,EACrBG,EAAQ,OAAO,KAAKF,CAAC,EAC3B,QAASG,EAAI,EAAGA,EAAIF,EAAM,OAAQE,IAAK,CACrC,IAAMC,EAAOH,EAAME,CAAC,EACdE,EAAOH,EAAMC,CAAC,EACpB,GAAIC,IAASC,GAAQ,CAACP,GAAUC,EAAEK,CAAI,EAAGJ,EAAEK,CAAI,CAAC,EAC9C,MAAO,EAEX,CACA,MAAO,EACT,CACA,MAAO,EACT,CC5GA,IAAMC,GAAO,CACX,UAAW,OACX,KAAM,OACN,UAAW,OACX,QAAS,OACT,WAAY,IACZ,cAAe,MACf,aAAc,OACd,aAAc,MACd,kBAAmB,MACnB,YAAa,MACb,cAAe,MACjB,EACOC,EAAQD,GCbf,IAAME,GAAS,CACb,UAAW,EACX,aAAc,EACd,WAAY,EACZ,cAAe,CACjB,EACOC,EAAQD,GCNf,SAASE,GAAUC,EAAWC,EAAWC,EAAWC,EAAe,CACjEF,EAAIA,EAAI,IACRC,EAAIA,EAAI,IAGR,IAAME,GAAK,EAAI,KAAK,IAAI,EAAIF,EAAI,CAAC,GAAKD,EAChCI,EAAID,GAAK,EAAI,KAAK,IAAMJ,EAAI,GAAM,EAAK,CAAC,GACxCM,EAAIJ,EAAIE,EAAI,EAEdG,EAAGC,EAAGC,EA2BV,GAzBIT,GAAK,GAAKA,EAAI,IAChBO,EAAIH,EACJI,EAAIH,EACJI,EAAI,GACKT,GAAK,IAAMA,EAAI,KACxBO,EAAIF,EACJG,EAAIJ,EACJK,EAAI,GACKT,GAAK,KAAOA,EAAI,KACzBO,EAAI,EACJC,EAAIJ,EACJK,EAAIJ,GACKL,GAAK,KAAOA,EAAI,KACzBO,EAAI,EACJC,EAAIH,EACJI,EAAIL,GACKJ,GAAK,KAAOA,EAAI,KACzBO,EAAIF,EACJG,EAAI,EACJC,EAAIL,IAEJG,EAAIH,EACJI,EAAI,EACJC,EAAIJ,GAEFF,IAAU,EACZ,MAAO,QAAQI,CAAC,IAAIC,CAAC,IAAIC,CAAC,IAAIN,CAAK,IAIrC,IAAMO,EAASC,IACb,KAAK,MAAMA,GAAQ,GAAG,EACnB,SAAS,EAAE,EACX,SAAS,EAAG,GAAG,EACdC,EAAOF,EAAMH,EAAID,CAAC,EAClBO,EAAOH,EAAMF,EAAIF,CAAC,EAClBQ,EAAOJ,EAAMD,EAAIH,CAAC,EAGxB,MAAO,IAAIM,CAAI,GAAGC,CAAI,GAAGC,CAAI,EAC/B,CAEA,IAAMC,GAAW,CAACC,EAAaC,EAAeC,IAAiB,CAE7D,IAAM,EAAIF,EAAM,IACVR,EAAIS,EAAQ,IACZR,EAAIS,EAAO,IAGXC,EAAO,KAAK,IAAI,EAAGX,EAAGC,CAAC,EACvBW,EAAO,KAAK,IAAI,EAAGZ,EAAGC,CAAC,EACvBY,EAAQD,EAAOD,EACfG,EAAMC,GAAO,EAAGf,EAAGC,CAAC,EACpBe,EAAYC,GAAaL,EAAMD,CAAI,EACnCO,EAAaC,GAAcN,EAAOG,CAAS,EAEjD,MAAO,CAACF,EAAKI,EAAa,IAAKF,EAAY,GAAG,CAChD,EAEMD,GAAS,CAAChB,EAAWC,EAAWC,IAAc,CAClD,IAAMmB,EAAM,KAAK,IAAIrB,EAAGC,EAAGC,CAAC,EACtBoB,EAAM,KAAK,IAAItB,EAAGC,EAAGC,CAAC,EACtBL,EAAIwB,EAAMC,EACZP,EAAc,EAClB,GAAIlB,GAAK,EACPkB,EAAM,MAEN,QAAQM,EAAK,CACX,KAAKrB,EAAG,CACN,IAAIuB,GAAWtB,EAAIC,GAAKL,EACpB2B,EAAQ,EACRD,EAAU,IAEZC,EAAQ,IAAM,IAEhBT,EAAMQ,EAAUC,EAChB,KACF,CAEA,KAAKvB,EAAG,CACN,IAAIsB,GAAWrB,EAAIF,GAAKH,EACpB2B,EAAQ,IAAM,GAClBT,EAAMQ,EAAUC,EAChB,KACF,CAEA,KAAKtB,EACH,IAAIqB,GAAWvB,EAAIC,GAAKJ,EACpB2B,EAAQ,IAAM,GAClBT,EAAMQ,EAAUC,EAChB,KACJ,CAEF,OAAOT,EAAM,EACf,EAEMK,GAAgB,CAACN,EAAeG,IACpCH,GAAS,EAAI,EAAIA,GAAS,EAAI,KAAK,IAAI,EAAIG,EAAY,CAAC,GAEpDC,GAAe,CAACL,EAAcD,KAAkBC,EAAOD,GAAQ,EAE/Da,EAAe,CAAC,CAAChB,EAAKC,EAAOC,EAAMf,CAAK,IAAgB,CAC5D,GAAM,CAACmB,EAAKI,EAAYF,CAAS,EAAIT,GAASC,EAAKC,EAAOC,CAAI,EAC9D,OAAOnB,GAAUuB,EAAKI,EAAa,GAAK,IAAMF,EAAWrB,CAAK,CAChE,EAEA,SAAS8B,GAAUC,EAAa,CAC1BA,EAAI,WAAW,GAAG,IACpBA,EAAMA,EAAI,MAAM,CAAC,GAGnB,IAAI3B,EAAI,SAAS2B,EAAI,UAAU,EAAG,CAAC,EAAG,EAAE,EACpC1B,EAAI,SAAS0B,EAAI,UAAU,EAAG,CAAC,EAAG,EAAE,EACpCzB,EAAI,SAASyB,EAAI,UAAU,EAAG,CAAC,EAAG,EAAE,EACpCC,EAAI,SAASD,EAAI,UAAU,EAAG,CAAC,GAAK,KAAM,EAAE,EAChD,MAAO,CAAC3B,EAAGC,EAAGC,EAAG0B,EAAI,GAAG,CAC1B,CAEO,IAAMC,EAAsBC,GAAkB,CACnD,GAAIA,EAAM,WAAW,KAAK,EAAG,CAM3B,IAAMC,EALID,EACP,QAAQ,MAAO,EAAE,EACjB,QAAQ,IAAK,EAAE,EACf,QAAQ,IAAK,EAAE,EACf,QAAQ,IAAK,EAAE,EACH,MAAM,GAAG,EAAE,IAAI,MAAM,EACpC,OAAIC,EAAK,QAAU,GACjBA,EAAK,KAAK,CAAC,EAENN,EAAaM,CAAI,CAC1B,KACE,QAAON,EAAaC,GAAUI,CAAK,CAAC,CAExC,EC9IO,IAAME,EAAa,OAAO,OAAO,CACtC,aAAc,UACd,kBAAmB,UACnB,eAAgB,wBAChB,gBAAiB,UACjB,WAAY,sBACZ,eAAgB,qBAChB,mBAAoB,qBACpB,iBAAkB,qBAClB,MAAO,UACP,MAAO,UACP,kBAAmB,UACnB,aAAc,UACd,YAAa,UACb,kBAAmB,UACnB,kBAAmB,SACrB,CAAC,EAEYC,EAAY,OAAO,OAC9B,OAAO,YACL,OAAO,QAAQD,CAAU,EAAE,IAAI,CAAC,CAACE,EAAGC,CAAC,IAAM,CAACD,EAAGE,EAAmBD,CAAC,CAAC,CAAC,CACvE,CACF,ECnBO,IAAME,GAAa,CACxB,GAAGC,EACH,GAAGC,CACL,EAGA,IAAMC,EAAW,aAEV,SAASC,GAASC,EAAkB,CACzC,aAAa,QAAQF,EAAUE,CAAK,EACpC,SAAS,gBAAgB,aAAaF,EAAUE,CAAK,CACvD,CACO,SAASC,IAAsB,CACpC,IAAMC,EAAI,aAAa,QAAQJ,CAAQ,EACvC,OAAII,IAGA,OAAO,YAAc,OAAO,OAAO,YAAe,YAC7C,OAAO,WAAW,8BAA8B,EAAE,QACrD,OAGC,QACT,CAEO,SAASC,GAAcC,EAA8B,CAC1D,OAAIH,GAAS,IAAM,OACVI,EAAUD,CAAG,EAEbE,EAAWF,CAAG,CAEzB,CCpCO,SAASG,GAAIC,EAAO,OAAO,iBAA0B,CAC1D,OAAO,KAAK,IAAI,KAAK,MAAMA,GAAQ,CAAC,EAAG,CAAC,CAC1C,CAEO,SAASC,EAAIC,EAAoB,CACtC,OAAO,KAAK,MAAMA,EAAKH,GAAI,CAAC,CAC9B,CAEO,SAASI,IAAwB,CACtC,MAAO,EACT,CAEO,SAASC,IAAQ,CACtB,OAAO,UAAU,UAAU,QAAQ,UAAU,EAAI,EACnD,CCFO,IAAMC,EAAoB,GACpBC,EAAmB,aAEnBC,GAAiB,CAC5B,EACA,EACA,EACA,GACAF,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACF,EAEO,SAASG,GACdC,EAAsD,SACtDC,EAAa,SACbC,EAAW,GACXC,EAAa,GACL,CACR,IAAMC,EAAO,GAAGJ,CAAS,IAAIC,CAAU,IAAIC,CAAQ,MACnD,OAAKC,EAGE,GAAGC,CAAI,GAAGD,CAAU,IAAIN,CAAgB,GAFtCO,EAAOP,CAGlB,CAEO,IAAMQ,GAAsBN,GACjC,OACA,MACAO,EAAIV,CAAiB,CACvB,EAEO,SAASW,GAAmBC,EAAmC,CACpE,IAAIC,EAAS,GACb,OAAID,EAAM,YACRC,GAAU,SAASD,EAAM,SAAS,KAEhCA,EAAM,YACRC,GAAU,oBAAoBD,EAAM,SAAS,KAE3CA,EAAM,WACRC,GAAU,aAAaD,EAAM,QAAQ,OAEnCA,EAAM,aACRC,GAAU,eAAeD,EAAM,UAAU,KAEvCA,EAAM,WACRC,GAAU,sBAERD,EAAM,SACRC,GAAU,oBAERD,EAAM,aACRC,GAAU,uBAERD,EAAM,WAAaA,EAAM,SAC3BC,GAAU,+CACDD,EAAM,UACfC,GAAU,kCACDD,EAAM,WACfC,GAAU,sCAERD,EAAM,YAAc,IACtBC,GAAU,kCAGLA,CACT,CAEA,SAASC,EAAaF,EAAyD,CAC7E,GAAM,CACJ,MAAAG,EACA,gBAAAC,EACA,SAAAV,EACA,WAAAC,EACA,UAAAH,EACA,WAAAC,EACA,WAAAY,EACA,mBAAAC,EACA,oBAAAC,CACF,EAAIP,EACEC,EAA6B,CAAC,EAOpC,GANIE,IACFF,EAAO,UAAYE,GAEjBC,IACFH,EAAO,UAAYG,GAEjBV,EAAU,CACZ,IAAMc,EAAO,SAASd,EAAU,EAAE,EAC7B,MAAMc,CAAI,IACbP,EAAO,SAAWO,EAEtB,CACA,OAAIb,IACFM,EAAO,WAAaN,GAElBH,IAAc,WAChBS,EAAO,SAAW,IAEhBR,GAAc,CAAC,MAAO,MAAO,MAAO,MAAM,EAAE,SAASA,CAAU,IACjEQ,EAAO,OAAS,IAGhBI,GACA,CACE,SACA,WACA,WACA,eACA,SACA,OACF,EAAE,SAASA,CAAU,IAErBJ,EAAO,WAAa,IAElBK,GAAoB,SAAS,WAAW,IAC1CL,EAAO,UAAY,EACfM,IAAwB,WAC1BN,EAAO,UAAY,IAGnBK,GAAoB,SAAS,cAAc,IAC7CL,EAAO,SAAW,IAEbA,CACT,CAEA,SAASQ,GACPC,EACAV,EACAW,EACAC,EACoB,CACpB,IAAIX,EAA6B,CAAC,EAC5BY,EAAIH,EAASE,CAAO,GAAKF,EAASE,EAAQ,YAAY,CAAC,EAC7D,OAAIC,IACFZ,EAASC,EAAaW,CAAC,GAErBH,EAASC,CAAS,IACpBV,EAAS,OAAO,OAAOA,EAAQC,EAAaQ,EAASC,CAAS,CAAC,CAAC,GAGlEV,EAAS,OAAO,OAAOA,EAAQC,EAAaF,CAAK,CAAC,EAE9CY,IAAY,KAAOA,IAAY,SACjCX,EAAO,SAAW,GACTW,IAAY,IACrBX,EAAO,SAAW,GACTW,IAAY,KAAOA,IAAY,SACxCX,EAAO,OAAS,GACPW,IAAY,MACrBX,EAAO,UAAY,GAEdA,CACT,CAEA,SAASa,GAA6BC,EAAgB,CACpD,IAAMC,EAAMD,EAAO,QAAQ,OAAQ,EAAE,EAAE,QAAQ,OAAQ,EAAE,EACnDE,EAAQ,0BACRC,EAAwD,CAAC,EAC3DC,EACJ,MAAQA,EAAQF,EAAM,KAAKD,CAAG,KAAO,MAAM,CACzC,IAAII,EAA6B,SAAS,cAAc,KAAK,EAC7DA,EAAI,MAAM,QAAUD,EAAM,CAAC,EAC3B,IAAME,EAAMF,EAAM,CAAC,EAAE,KAAK,EAC1BD,EAAQG,CAAG,EAAID,EAAI,MACnBA,EAAM,IACR,CACA,OAAOF,CACT,CAEO,SAASI,GAAUC,EAAc,CACtC,IAAIC,EAAuC,SAAS,cAAc,UAAU,EAC5EA,EAAS,UAAYD,EACrB,IAAME,EAAMD,EAAS,QACfd,EAAgD,CAAC,EACvD,QAAWgB,KAAQD,EAAI,iBAAiB,OAAO,EAAG,CAChD,IAAM7B,EAAOkB,GAA6BY,EAAK,aAAe,EAAE,EAChE,OAAW,CAACL,EAAKM,CAAK,IAAK,OAAO,QAAQ/B,CAAI,EAC5Cc,EAASW,CAAG,EAAI,OAAO,OAAOX,EAASW,CAAG,GAAK,CAAC,EAAGM,CAAK,CAE5D,CACA,IAAMC,EAAuB,CAAC,EACxBC,EAA8C,CAAC,EAG/CC,EAASL,EAAI,iBAAiB,IAAI,EACxC,QAAWM,KAAMD,EAAQ,CACvB,IAAME,EAAkB,CAAC,EACnBC,EAAkC,CAAC,EACzC,QAAWC,KAAMH,EAAG,SAAU,CAC5B,GAAIG,EAAG,UAAY,KACjB,SAEF,IAAItC,EAAOsC,EACPC,EAAgC,CAAC,EACrC,KAAOvC,EAAK,WAAa,KAAK,WAAW,CACvC,IAAMI,EAAQS,GACZC,EACAd,EAAK,MACLA,EAAK,UAAY,IAAIA,EAAK,SAAS,GAAK,GACxCA,EAAK,OACP,EAEA,GADAuC,EAAY,OAAO,OAAOA,EAAWnC,CAAK,EACtCJ,EAAK,WACPA,EAAOA,EAAK,eAEZ,MAEJ,CACAqC,EAAK,KAAKE,CAAS,EACnBH,EAAM,KAAKpC,EAAK,aAAe,EAAE,CACnC,CACAgC,EAAS,KAAKI,CAAK,EACnBH,EAAU,KAAKI,CAAI,CACrB,CACA,OAAAT,EAAW,KACJ,CACL,SAAAI,EACA,UAAAC,CACF,CACF,CCpPO,SAASO,GAAOC,EAAoBC,EAAU,eAAgBC,EAAM,aAAyC,CAClH,GAAI,CAACF,EACH,MAAIE,IAAQ,QACV,OAAO,MAAMD,CAAO,EAEhB,IAAI,MAAMA,CAAO,CAE3B,CCHO,SAASE,EAAgBC,EAAa,GAAY,CACvD,IAAMC,EAAOD,EAAW,YAAY,EAChCE,EAAM,EACV,QAASC,EAAI,EAAGA,EAAIF,EAAK,OAAQE,IAC/BD,EAAMD,EAAK,WAAWE,CAAC,EAAI,GAAKD,EAAM,GAExC,OAAOA,EAAM,CACf,CAKO,SAASE,EAAgBH,EAAsB,CACpD,IAAMC,EAAMD,EAAO,EACfD,EAAa,GACbK,EAAW,KAAK,MAAM,KAAK,IAAIH,CAAG,CAAC,EACnCI,EAEJ,KAAOD,EAAW,GAChBC,GAAQD,EAAW,GAAK,GACxBL,EAAa,OAAO,aAAa,GAAKM,CAAI,EAAIN,EAC9CK,EAAW,KAAK,OAAOA,EAAWC,GAAQ,EAAE,EAE9C,OAAON,EAAW,YAAY,CAChC,CAEO,SAASO,EAAcC,EAAuB,CACnD,IAAIC,EAAS,SAASD,EAAO,EAAE,EAC/B,OAAI,OAAO,MAAMC,CAAM,EACrBA,EAAS,GAETA,EAAS,KAAK,IAAIA,EAAS,EAAG,EAAE,EAE3BA,CACT,CCpCO,SAASC,GAAQC,EAAwB,CAC9C,OAAOC,GAAMD,CAAK,GAAKE,GAAMF,CAAK,CACpC,CACO,SAASC,GAAMD,EAAwB,CAC5C,OAAOA,EAAM,WAAa,CAC5B,CACO,SAASE,GAAMF,EAAwB,CAC5C,OAAOA,EAAM,WAAa,CAC5B,CAEO,SAASG,GAAYC,EAAmBC,EAA4B,CACzE,MAAI,CAACD,GAAY,CAACC,EACT,GAGPD,EAAS,MAAQC,EAAS,KAC1BD,EAAS,MAAQC,EAAS,KAC1BD,EAAS,WAAaC,EAAS,UAC/BD,EAAS,WAAaC,EAAS,UAC/BD,EAAS,UAAYC,EAAS,OAElC,CAEO,SAASC,GAAaC,EAAaC,EAAaR,EAAwB,CAC7E,OACEO,GAAOP,EAAM,KACbO,EAAMP,EAAM,IAAMA,EAAM,UACxBQ,GAAOR,EAAM,KACbQ,EAAMR,EAAM,IAAMA,EAAM,QAE5B,CAEO,IAAMS,EAAN,MAAMC,CAAwB,CAMnC,YACEH,EACAC,EACAG,EACAC,EACAC,EACA,CAXF,SAAM,EACN,SAAM,EACN,cAAW,EACX,cAAW,EACX,aAAU,GAQR,KAAK,IAAMN,EACX,KAAK,IAAMC,EACX,KAAK,SAAWI,EAChB,KAAK,SAAWD,EAChB,KAAK,QAAUE,CACjB,CAEA,SAAmB,CACjB,OACE,KAAK,KAAO,GAAK,KAAK,KAAO,GAAK,KAAK,UAAY,GAAK,KAAK,UAAY,CAE7E,CACA,OAAO,UAAUb,EAAsB,CACrC,OAAO,IAAIU,EACTV,EAAM,IACNA,EAAM,IACNA,EAAM,SACNA,EAAM,SACNA,EAAM,OACR,CACF,CACA,UAAmB,CACjB,MAAO,CACL,IAAK,KAAK,IACV,IAAK,KAAK,IACV,SAAU,KAAK,SACf,SAAU,KAAK,SACf,QAAS,KAAK,OAChB,CACF,CACF,ECxEA,IAAMc,GAAeC,GAClBA,GAAQ,KAAOA,GAAQ,KAASA,GAAQ,KAAOA,GAAQ,IACpDC,GAASD,GAAiBA,GAAQ,KAAOA,GAAQ,IAEvD,SAASE,EAA0BC,EAAe,CAChD,OAAOA,CACT,CAEA,SAASC,EACPC,EACAC,EAAmBJ,EACL,CACd,GAAI,OAAOG,GAAQ,UAAY,CAACA,EAC9B,OAAO,KAET,IAAME,EAAUF,EAAI,KAAK,EACrB,CAACG,EAAWC,EAAQ,EAAE,EAAIF,EAAQ,MAAM,GAAG,EAC1CA,EAAQ,SAAS,GAAG,IACvBC,EAAY,GACZC,EAAQF,GAEV,IAAI,EAAI,EACJG,EAAU,GACVC,EAAU,GAId,IAHIF,EAAM,CAAC,IAAM,KACf,IAEKV,GAAYU,EAAM,CAAC,CAAC,GACzBE,GAAWF,EAAM,GAAG,EAKtB,IAHIA,EAAM,CAAC,IAAM,KACf,IAEKR,GAAMQ,EAAM,CAAC,CAAC,GACnBC,GAAWD,EAAM,GAAG,EAKtB,GAHI,IAAMA,EAAM,QAGZ,CAACC,GAAW,CAACC,EACf,OAAO,KAGT,IAAIC,EAAW,EACXC,EAAW,EACXC,EAAM,EACNC,EAAM,EAaV,OAZIL,IAAY,IACdG,EAAW,EACXD,EAAWI,GAEXF,EAAMG,EAAcP,CAAO,EAEzBC,IAAY,IACdE,EAAWK,EACXN,EAAW,GAEXG,EAAMI,EAAgBR,CAAO,EAE3BG,IAAQ,IAAMC,IAAQ,GACjB,KAEK,IAAIK,EAChBN,EACAC,EACAH,EACAC,EACAP,EAAiBE,CAAS,CAC5B,CAEF,CAEO,SAASa,GACdC,EACAhB,EAAmBJ,EACL,CACd,GAAM,CAACqB,EAAOC,CAAK,EAAIF,EAAK,MAAM,GAAG,EAC/BG,EAAYrB,EAAUmB,EAAOjB,CAAgB,EACnD,GAAI,CAACmB,EACH,OAAO,KAET,IAAMC,EAAUtB,EAAUoB,EAAOlB,CAAgB,EACjD,OAAKoB,GAGLA,EAAQ,QAAUD,EAAU,QACrBE,GAAWF,EAAWC,CAAO,GAH3BD,CAIX,CAEO,SAASE,GAAWC,EAAcC,EAA0B,CACjE,GAAID,EAAM,UAAYC,EAAI,QACxB,OAAO,KAET,GACED,EAAM,MAAQC,EAAI,KAClBD,EAAM,MAAQC,EAAI,KAClBD,EAAM,WAAaC,EAAI,UACvBD,EAAM,WAAaC,EAAI,SAEvB,OAAOD,EAQT,IANIA,EAAM,WAAa,GAAKC,EAAI,WAAa,KACvCA,EAAI,WAAa,GAAKA,EAAI,WAAa,KAKzCD,EAAM,WAAa,GAAKC,EAAI,WAAa,KACvCA,EAAI,WAAa,GAAKA,EAAI,WAAa,GACzC,OAAO,KAIX,IAAMjB,EAAW,KAAK,IAAIgB,EAAM,IAAMC,EAAI,GAAG,EAAI,EAC3ChB,EAAW,KAAK,IAAIe,EAAM,IAAMC,EAAI,GAAG,EAAI,EAC3Cf,EAAMc,EAAM,IAAMC,EAAI,IAAMD,EAAM,IAAMC,EAAI,IAC5Cd,EAAMa,EAAM,IAAMC,EAAI,IAAMD,EAAM,IAAMC,EAAI,IAElD,OAAO,IAAIT,EAAMN,EAAKC,EAAKH,EAAUC,EAAUe,EAAM,OAAO,CAC9D,CAEA,SAASE,EAAYhB,EAAaC,EAAagB,EAA8B,CAC3E,IAAMC,EAAQD,IAAkB,WAC1BE,EAASF,IAAkB,WACjC,MAAO,GAAGC,EAAQ,IAAM,EAAE,GAAGE,EAAgBnB,CAAG,CAAC,GAAGkB,EAAS,IAAM,EAAE,GACnEnB,EAAM,CACR,EACF,CAEO,SAASqB,GACdC,EACAL,EAA+B,WAC/BM,EAA4BnC,EAC5B,CACA,IAAIoC,EAASR,EAAYM,EAAM,IAAKA,EAAM,IAAKL,CAAa,EACxDvB,EAAY6B,EAA0BD,EAAM,OAAO,EAEvD,GADA5B,EAAYA,EAAY,GAAGA,CAAS,IAAM,GACtC4B,EAAM,SAAW,GAAKA,EAAM,SAAW,EAAG,CAC5C,IAAMP,EAAMC,EACVM,EAAM,IAAMA,EAAM,SAClBA,EAAM,IAAMA,EAAM,SAClBL,CACF,EACAO,EAAS,GAAGA,CAAM,IAAIT,CAAG,EAC3B,CACA,OAAOrB,EAAY8B,CACrB,CCnJA,IAAMC,EAAN,MAAMC,CAAM,CAWV,YAAYC,EAA0B,CAGtC,UAAO,KACL,KAAK,SAAS,EACP,KAAK,KAEd,SAAM,IAAIC,IAA0B,CAClC,GAAI,CAAC,KAAK,OAAO,EACf,OAEF,GAAM,CAAE,UAAAD,CAAU,EAAI,KAChBE,EAAQH,EAAM,SAAS,IAAIC,CAAS,EACpCG,EAAS,CAAC,MAAMH,CAAS,IAAK,SAASE,CAAK,IAAK,GAAGD,CAAI,EAC9D,QAAQ,IAAI,GAAGE,CAAM,CACvB,EACA,oBAAiB,IAAc,CAC7B,IAAMC,EAAQ,KAAK,MAAM,KAAK,OAAO,EAAIC,EAAiB,MAAM,EAChE,OAAOA,EAAiBD,CAAK,CAC/B,EAlBE,KAAK,UAAYJ,CACnB,CAVA,YAAgB,SAAuC,IAAI,IAI3D,YAAgB,UAAyC,IAAI,IAG3D,CAAC,CAAC,EAqBJ,QAAS,CACP,OAAO,KAAK,YAAY,GAAKD,EAAM,UAAU,IAAI,KAAK,SAAS,IAAM,EACvE,CACA,YAAYO,EAAU,OAAO,aAAc,CACzC,OAAOA,EAAQ,QAAQ,OAAO,IAAM,GACtC,CACA,UAAW,CACJP,EAAM,SAAS,IAAI,KAAK,SAAS,GACpCA,EAAM,SAAS,IAAI,KAAK,UAAW,KAAK,eAAe,CAAC,CAE5D,CACA,OAAO,QAAQQ,EAAoB,CACjCR,EAAM,UAAU,IAAIQ,EAAK,EAAK,CAChC,CACF,EAEaC,GAAgB,IAAIV,EAAM,YAAY,EAAE,KAAK,EAC7CW,GAAY,IAAIX,EAAM,QAAQ,EAAE,KAAK,EACrCY,GAAW,IAAIZ,EAAM,OAAO,EAAE,KAAK,ECjDzC,IAAMa,EAAuB,uBACvBC,EAAiB,iBACjBC,EAAmB,CAC9B,eACA,qBACA,2BACA,2BACA,eACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,eACA,eACA,2BACA,iCACA,qBACA,eACA,QACA,eACA,gBACA,2BACA,sBACA,mBACA,8BACA,yBACA,4BACA,yBACA,gBACA,2BACA,sBACA,mBACA,8BACA,yBACA,4BACA,yBACA,qBACA,2BACA,wBACA,8BACA,wBACA,oBACA,uBACA,mBACA,qBACA,2BACA,qBACA,cACA,kBACA,kBACA,mBACA,oBACA,qBACA,uBACA,uBACF,EC/DO,SAASC,IAA2B,CAGzC,IAAMC,EAAY,CAAC,YAAaC,EAAkB,OAAO,EAInDC,EAAa,gBAGbC,EAAW,OAEXC,EAAI,SAAS,qBAAqB,MAAM,EAAE,CAAC,EAG3CC,EAAI,SAAS,cAAc,MAAM,EACvCA,EAAE,MAAM,SAAWF,EACnBE,EAAE,UAAYH,EACd,IAAMI,EAAuC,CAAC,EACxCC,EAAwC,CAAC,EAC/C,QAAWC,KAAQR,EAEjBK,EAAE,MAAM,WAAaG,EACrBJ,EAAE,YAAYC,CAAC,EACfC,EAAaE,CAAI,EAAIH,EAAE,YACvBE,EAAcC,CAAI,EAAIH,EAAE,aACxBD,EAAE,YAAYC,CAAC,EAGjB,SAASI,EAAOC,EAAc,CAC5B,IAAIC,EAAW,GACf,QAAWH,KAAQR,EAAW,CAC5BK,EAAE,MAAM,WAAaK,EAAO,IAAMF,EAClCJ,EAAE,YAAYC,CAAC,EACf,IAAMO,EACJP,EAAE,aAAeC,EAAaE,CAAI,GAClCH,EAAE,cAAgBE,EAAcC,CAAI,EACtCJ,EAAE,YAAYC,CAAC,EACfM,EAAWA,GAAYC,CACzB,CACA,OAAOD,CACT,CAEA,OAAOF,CACT,CAEA,IAAMI,GAAsBd,GAAyB,EAG9C,SAASe,GAAmBC,EAAWC,EAAgC,CAC5E,IAAMC,EAAY,aAAa,QAAQC,CAAc,EACrD,GAAID,EAEF,OADa,KAAK,MAAMA,CAAS,EACrB,IAAKE,IAAO,CAAE,MAAOA,EAAG,MAAOA,EAAG,SAAU,EAAM,EAAE,EAElE,IAAMC,EAAOL,EACV,IAAKI,IAAO,CACX,MAAOA,EACP,MAAOA,EACP,SAAU,CAACE,GAAoBF,CAAC,CAClC,EAAE,EACD,OAAQA,GAAM,CAACA,EAAE,QAAQ,EAC5B,OAAK,OAAe,iBAClBC,EAAK,KAAK,CACR,MAAOE,EACP,MAAO,oCACP,SAAU,EACZ,CAAC,EAEIF,CACT,CCxEO,IAAMG,EAAe,aACfC,EAAc,YAE3B,SAASC,GAAOC,EAA8B,CAC5C,IAAMC,EAAaD,EAAQ,aAAa,UAAU,EAClD,OAAKC,GACHD,EAAQ,aAAa,WAAY,EAAE,EAErCA,EAAQ,OAAO,EACfA,EAAQ,kBAAkB,EAAGA,EAAQ,MAAM,MAAM,EAE5CC,GACHD,EAAQ,gBAAgB,UAAU,EAE7BA,EAAQ,KACjB,CAEA,SAASE,GAAkBC,EAAe,CACxC,IAAMC,EAAQ,SAAS,gBAAgB,aAAa,KAAK,IAAM,MACzDC,EAAc,SAAS,cAAc,UAAU,EAErDA,EAAY,MAAM,SAAW,OAE7BA,EAAY,MAAM,OAAS,IAC3BA,EAAY,MAAM,QAAU,IAC5BA,EAAY,MAAM,OAAS,IAE3BA,EAAY,MAAM,SAAW,WAC7BA,EAAY,MAAMD,EAAQ,QAAU,MAAM,EAAI,UAE9C,IAAME,EAAY,OAAO,aAAe,SAAS,gBAAgB,UACjE,OAAAD,EAAY,MAAM,IAAM,GAAGC,CAAS,KAEpCD,EAAY,aAAa,WAAY,EAAE,EACvCA,EAAY,MAAQF,EAEbE,CACT,CAEA,SAASE,GAAqBC,EAAyB,CACrD,IAAMC,EAA+B,CAAC,EAChCC,EAAU,OAAO,KAAKF,CAAQ,EACpC,QAAWG,KAAOD,EAChBD,EAAOE,CAAG,EAAI,IAAI,KAAK,CAACH,EAASG,CAAG,CAAC,EAAG,CAAE,KAAMA,CAAI,CAAC,EAEvD,IAAMC,EAAO,CAAC,IAAI,cAAcH,CAAM,CAAC,EACvC,OAAO,WAAW,WAAW,MAAMG,CAAI,CACzC,CAEA,eAAeC,IAAgD,CAC7D,IAAMJ,EAAwB,CAC5B,CAACX,CAAW,EAAG,GACf,CAACD,CAAY,EAAG,EAClB,EACMiB,EAAQ,MAAM,WAAW,WAAW,KAAK,GAAM,CAAC,EACtD,QAAWC,KAAQD,EAAM,CACvB,GAAIC,EAAK,MAAM,SAASlB,CAAY,EAAG,CACrC,IAAMmB,EAAM,MAAMD,EAAK,QAAQlB,CAAY,EAC3CY,EAAOZ,CAAY,EAAI,MAAMmB,EAAI,KAAK,CACxC,CACA,GAAID,EAAK,MAAM,SAASjB,CAAW,EAAG,CACpC,IAAMkB,EAAM,MAAMD,EAAK,QAAQjB,CAAW,EAC1CW,EAAOX,CAAW,EAAI,MAAMkB,EAAI,KAAK,CACvC,CACF,CACA,OAAOP,CACT,CAEA,IAAMQ,GAAiB,CACrBd,EACAe,EACAC,IACG,CACH,IAAId,EAA0CH,GAAkBC,CAAK,EACrEe,EAAU,YAAYb,CAAW,EACjC,IAAMe,EAAerB,GAAOM,CAAW,EACvC,gBAAS,YAAYc,CAAI,EACzBd,EAAY,OAAO,EACnBA,EAAc,KACPe,CACT,EAEA,eAAsBC,GACpBb,EACAW,EACiB,CACjB,GAAI,CACF,aAAMZ,GAAqBC,CAAQ,EAC5BA,EAASX,CAAY,CAC9B,OAASyB,EAAO,CACd,eAAQ,MAAMA,CAAK,EACZL,GAAeT,EAASX,CAAY,EAAG,SAAS,KAAMsB,CAAI,CACnE,CACF,CAEA,eAAsBI,IAAgC,CACpD,GAAI,CACF,OAAOV,GAAsB,CAC/B,OAASS,EAAO,CACd,QAAQ,MAAMA,CAAK,EACnB,IAAMb,EAAU,MAAM,WAAW,WAAW,SAAS,GAAM,GAC3D,MAAO,CACL,CAACX,CAAW,EAAG,GACf,CAACD,CAAY,EAAGY,CAClB,CACF,CACF,CAEO,SAASe,GAAaC,EAAeC,EAAyB,CACnE,MAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAWDD,CAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOLC,CAAO;AAAA;AAAA;AAAA,QAIf,CCvHO,SAASC,GACdC,EACAC,EACAC,EACsB,CACtB,GAAID,EAAI,GAAKC,EAAI,EACf,OAAO,KAET,IAAMC,EAAYH,EAAW,aAAaA,EAAW,kBAAkB,CAAC,EACxE,GAAI,CAACG,EACH,OAAO,KAET,IAAMC,EAASJ,EAAW,UAAU,EAC9BK,EAAaL,EAAW,cAAc,EACxCM,EAAUD,EAAW,MACrBE,EAAUF,EAAW,OACrBG,EAAUP,EAAII,EAAW,MACzBI,EAAUP,EAAIG,EAAW,OACzB,CAAE,IAAAK,EAAK,IAAAC,CAAI,EAAIP,EACnB,KAAOE,EAAUN,EAAW,YAAYW,CAAG,EAAE,KAAOV,GAAG,CACrD,IAAMW,EAAIZ,EAAW,YAAYW,CAAG,EAAE,IACtCL,GAAWM,EACXJ,GAAWI,EACXD,GACF,CACA,KAAOJ,EAAUP,EAAW,aAAaU,CAAG,EAAE,KAAOR,GAAG,CACtD,IAAMU,EAAIZ,EAAW,aAAaU,CAAG,EAAE,IACvCH,GAAWK,EACXH,GAAWG,EACXF,GACF,CACA,OAAIA,GAAOP,EAAU,UAAYQ,GAAOR,EAAU,SACzC,KAEF,CAAE,IAAAO,EAAK,IAAAC,EAAK,QAAAH,EAAS,QAAAC,CAAQ,CACtC,CCjDO,SAASI,GAAOC,EAAqBC,EAAwB,CAClE,IAAIC,EAAiC,SAAS,cAAc,GAAG,EAC/DA,EAAK,SAAWD,GAAY,WAC5BC,EAAK,IAAM,WACXA,EAAK,OAAS,SACV,OAAOF,GAAS,SAClBE,EAAK,KAAOF,EAEZE,EAAK,KAAO,IAAI,gBAAgBF,CAAI,EAEtCE,EAAK,cAAc,IAAI,WAAW,OAAO,CAAC,EAC1CA,EAAO,IACT,CCZA,IAAMC,EAAmC,CACvC,OAAQ,UACR,IAAK,UACL,OAAQ,UACR,OAAQ,UACR,MAAO,UACP,OAAQ,UACR,QAAS,UACT,MAAO,UACP,KAAM,UACN,MAAO,UACP,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,MAAO,UACP,OAAQ,UACR,KAAM,UACN,YAAa,OACf,EAEMC,GAAS,uBACTC,EAAY,qBACZC,GAAS,0BACTC,EAAU,MAAM,CAACF,EAAWA,EAAWA,CAAS,CAAC,GAAGC,EAAM,MAC1DE,GAAS,YACTC,GAAS,YAETC,EAAS,OAAON,GAAQ,GAAG,EAC3BO,EAAS,OAAOH,GAASD,EAAS,GAAG,EACrCK,EAAS,OAAOH,GAASF,EAAS,GAAG,EAE3C,SAASM,GAAQC,EAAW,CAC1B,OAAIA,EAAE,SAAW,EACR,IAAIA,CAAC,GAEPA,CACT,CACA,SAASC,EAAUC,EAAWC,EAAWC,EAAWJ,EAAW,CAE7D,MAAO,IADM,CAACE,EAAGC,EAAGC,EAAGJ,EAAI,GAAG,EAE3B,IAAKK,GAASN,GAAQ,KAAK,MAAMM,CAAI,EAAE,SAAS,EAAE,CAAC,CAAC,EACpD,KAAK,EAAE,CAAC,EACb,CACA,SAASC,GAASJ,EAAWC,EAAWC,EAAWJ,EAAmB,CACpE,IAAIO,EAAQ,EACRP,IACFO,EAAQ,WAAWP,CAAC,GAEtB,IAAMQ,EAAM,WAAWN,CAAC,EAClBO,EAAQ,WAAWN,CAAC,EACpBO,EAAO,WAAWN,CAAC,EACzB,OAEII,GAAO,KACPA,GAAO,GACPC,GAAS,KACTA,GAAS,GACTC,GAAQ,KACRA,GAAQ,GACRH,GAAS,GACTA,GAAS,EAKNN,EAAUO,EAAKC,EAAOC,EAAMH,CAAK,EAF/B,EAGX,CAEA,SAASI,EAASC,EAAWC,EAAWC,EAAW,CAGjD,OAFIA,EAAI,IAAGA,GAAK,GACZA,EAAI,IAAGA,GAAK,GACZA,EAAI,EAAI,EAAUF,GAAKC,EAAID,GAAK,EAAIE,EACpCA,EAAI,EAAI,EAAUD,EAClBC,EAAI,EAAI,EAAUF,GAAKC,EAAID,IAAM,EAAI,EAAIE,GAAK,EAC3CF,CACT,CAEA,SAASG,GAAUC,EAAWC,EAAWC,EAAWlB,EAAW,CAC7D,IAAIO,EAAQ,EACRP,IACFO,EAAQ,WAAWP,CAAC,EAAI,GAE1B,IAAMmB,EAAI,WAAWH,CAAC,EAAI,IACpBI,EAAI,WAAWH,CAAC,EAAI,IACpB,EAAI,WAAWC,CAAC,EAAI,IAC1B,GACEC,EAAI,GACJA,EAAI,GACJC,EAAI,GACJA,EAAI,GACJ,EAAI,GACJ,EAAI,GACJb,EAAQ,GACRA,EAAQ,EAER,MAAO,GAET,IAAIL,EACAC,EACAC,EACJ,GAAIgB,IAAM,EACRlB,EAAI,EACJC,EAAI,EACJC,EAAI,MACC,CACL,IAAMS,EAAI,EAAI,GAAM,GAAK,EAAIO,GAAK,EAAIA,EAAI,EAAIA,EACxCR,EAAI,EAAI,EAAIC,EAClBX,EAAIS,EAASC,EAAGC,EAAGM,EAAI,EAAI,CAAC,EAC5BhB,EAAIQ,EAASC,EAAGC,EAAGM,CAAC,EACpBf,EAAIO,EAASC,EAAGC,EAAGM,EAAI,EAAI,CAAC,CAC9B,CACA,OAAOlB,EAAUC,EAAI,IAAKC,EAAI,IAAKC,EAAI,IAAKG,CAAK,CACnD,CAEA,SAASc,EAAOC,EAAe,CAC7B,GAAI,CAAC1B,EAAO,KAAK0B,CAAK,EACpB,MAAO,GAET,GAAIA,EAAM,SAAW,EACnB,OAAOA,EAAM,YAAY,EAE3B,GAAIA,EAAM,SAAW,EAEnB,MADU,GAAGA,CAAK,KACT,YAAY,EAEvB,GAAIA,EAAM,SAAW,EAAG,CACtB,GAAM,CAAC,CAAEtB,EAAGI,EAAGmB,EAAGC,CAAC,EAAIF,EAEvB,MADU,IAAItB,CAAC,GAAGA,CAAC,GAAGI,CAAC,GAAGA,CAAC,GAAGmB,CAAC,GAAGA,CAAC,GAAGC,CAAC,GAAGA,CAAC,GAClC,YAAY,CACvB,CACA,GAAIF,EAAM,SAAW,EAAG,CACtB,GAAM,CAAC,CAAEtB,EAAGI,EAAGmB,CAAC,EAAID,EAEpB,MADU,IAAItB,CAAC,GAAGA,CAAC,GAAGI,CAAC,GAAGA,CAAC,GAAGmB,CAAC,GAAGA,CAAC,KAC1B,YAAY,CACvB,CACA,MAAO,EACT,CACO,SAASE,GAAkBH,EAAuB,CACvD,GAAI,CAACA,EACH,MAAO,GAET,GAAIjC,EAASiC,CAAK,EAChB,OAAOD,EAAOhC,EAASiC,CAAK,CAAC,EAE/B,GAAI1B,EAAO,KAAK0B,CAAK,EACnB,OAAOD,EAAOC,CAAK,EAErB,GAAIzB,EAAO,KAAKyB,CAAK,EAAG,CACtB,GAAM,CAAC,CAAEpB,EAAGC,EAAGC,EAAGJ,CAAC,EAAIsB,EAAM,MAAMzB,CAAM,EACzC,OAAOwB,EAAOf,GAASJ,EAAGC,EAAGC,EAAGJ,CAAC,CAAC,CACpC,CACA,GAAIF,EAAO,KAAKwB,CAAK,EAAG,CACtB,GAAM,CAAC,CAAEH,EAAGC,EAAGM,EAAG1B,CAAC,EAAIsB,EAAM,MAAMxB,CAAM,EACzC,OAAOuB,EAAON,GAAUI,EAAGC,EAAGM,EAAG1B,CAAC,CAAC,CACrC,CACA,MAAO,EACT",
  "names": ["require_react", "__commonJSMin", "exports", "module", "SHEET_NAME_PREFIX", "DEFAULT_ROW_COUNT", "DEFAULT_COL_COUNT", "SCROLL_SIZE", "BOTTOM_BUFF", "DEFAULT_POSITION", "FORMULA_PREFIX", "SPLITTER", "DEBUG_COLOR_LIST", "MAX_PARAMS_COUNT", "ERROR_SET", "NUMBER_FORMAT_LIST", "ROW_TITLE_HEIGHT", "COL_TITLE_WIDTH", "CELL_HEIGHT", "CELL_WIDTH", "HIDE_CELL", "XLSX_MAX_COL_COUNT", "XLSX_MAX_ROW_COUNT", "isNumber", "value", "temp", "parseNumber", "parseNumberArray", "list", "result", "i", "getListMaxNum", "idList", "item", "v", "getDefaultSheetInfo", "sheetId", "SHEET_NAME_PREFIX", "splitToWords", "str", "x", "convertResultTypeToString", "text", "coordinateToString", "row", "col", "SPLITTER", "stringToCoordinate", "key", "c", "getCustomWidthOrHeightKey", "rowOrCol", "generateUUID", "d", "isMobile", "matchList", "ua", "classnames", "rest", "result", "temp", "key", "throttle", "fn", "wait", "check", "lastArgs", "args", "get", "obj", "path", "defaultValue", "result", "res", "key", "isEmpty", "value", "temp", "deepEqual", "x", "y", "keys1", "keys2", "i", "key1", "key2", "size", "size_default", "zIndex", "zIndex_default", "hslaToHex", "h", "s", "l", "alpha", "c", "x", "m", "r", "g", "b", "toHex", "value", "hexR", "hexG", "hexB", "RGBToHSL", "red", "green", "blue", "cmin", "cmax", "delta", "hue", "getHue", "lightness", "getLightness", "saturation", "getSaturation", "max", "min", "segment", "shift", "fullDarkMode", "hexToRgba", "hex", "a", "convertColorToDark", "color", "list", "lightColor", "darkColor", "k", "v", "convertColorToDark", "sizeConfig", "size_default", "zIndex_default", "themeKey", "setTheme", "value", "getTheme", "l", "getThemeColor", "key", "darkColor", "lightColor", "dpr", "data", "npx", "px", "thinLineWidth", "isMac", "DEFAULT_FONT_SIZE", "MUST_FONT_FAMILY", "FONT_SIZE_LIST", "makeFont", "fontStyle", "fontWeight", "fontSize", "fontFamily", "temp", "DEFAULT_FONT_CONFIG", "npx", "convertToCssString", "style", "result", "pickCSSStyle", "color", "backgroundColor", "whiteSpace", "textDecorationLine", "textDecorationStyle", "size", "parseStyle", "styleMap", "className", "tagName", "t", "convertToCssStyleDeclaration", "cssStr", "str", "regex", "matches", "match", "div", "key", "parseHTML", "html", "template", "doc", "item", "value", "textList", "styleList", "trList", "tr", "texts", "list", "td", "itemStyle", "assert", "condition", "message", "env", "columnNameToInt", "columnName", "temp", "num", "i", "intToColumnName", "dividend", "rest", "rowLabelToInt", "label", "result", "isSheet", "range", "isRow", "isCol", "isSameRange", "oldRange", "newRange", "containRange", "row", "col", "Range", "_Range", "rowCount", "colCount", "sheetId", "isCharacter", "char", "isNum", "convertSheetNameToSheetId", "value", "parseCell", "ref", "convertSheetName", "realRef", "sheetName", "other", "rowText", "colText", "rowCount", "colCount", "row", "col", "DEFAULT_ROW_COUNT", "rowLabelToInt", "DEFAULT_COL_COUNT", "columnNameToInt", "Range", "parseReference", "text", "cell1", "cell2", "startCell", "endCell", "mergeRange", "start", "end", "convertCell", "referenceType", "first", "second", "intToColumnName", "convertToReference", "range", "convertSheetIdToSheetName", "result", "Debug", "_Debug", "namespace", "rest", "color", "result", "index", "DEBUG_COLOR_LIST", "storage", "key", "controllerLog", "canvasLog", "modelLog", "QUERY_ALL_LOCAL_FONT", "LOCAL_FONT_KEY", "FONT_FAMILY_LIST", "SupportFontFamilyFactory", "baseFonts", "MUST_FONT_FAMILY", "testString", "testSize", "h", "s", "defaultWidth", "defaultHeight", "item", "detect", "font", "detected", "matched", "isSupportFontFamily", "initFontFamilyList", "fontList", "FONT_FAMILY_LIST", "cacheFont", "LOCAL_FONT_KEY", "v", "list", "isSupportFontFamily", "QUERY_ALL_LOCAL_FONT", "PLAIN_FORMAT", "HTML_FORMAT", "select", "element", "isReadOnly", "createFakeElement", "value", "isRTL", "fakeElement", "yPosition", "writeDataToClipboard", "textData", "result", "keyList", "key", "data", "readDataFromClipboard", "list", "item", "buf", "fakeCopyAction", "container", "type", "selectedText", "copyOrCut", "error", "paste", "generateHTML", "style", "content", "getHitInfo", "controller", "x", "y", "sheetInfo", "scroll", "headerSize", "resultX", "resultY", "marginX", "marginY", "row", "col", "t", "saveAs", "blob", "fileName", "link", "colorMap", "hexStr", "numberStr", "sopStr", "listStr", "rgbStr", "hslStr", "hexReg", "rgbReg", "hslReg", "padZero", "a", "RGBAToHex", "r", "g", "b", "item", "RGBtoHEX", "alpha", "red", "green", "blue", "HUEtoRGB", "p", "q", "t", "HSLAtoHEX", "x", "y", "z", "h", "s", "padHex", "color", "c", "d", "convertColorToHex", "l"]
}
