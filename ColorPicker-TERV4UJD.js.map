{
  "version": 3,
  "sources": ["../src/containers/components/ColorPicker/index.tsx", "../src/containers/components/ColorPicker/index.module.css", "../src/containers/components/ColorPicker/ColorPickerPanel.tsx", "../src/containers/components/ColorPicker/Hue.tsx", "../src/containers/components/ColorPicker/Interactive.tsx", "../src/containers/components/ColorPicker/clamp.ts", "../src/containers/components/ColorPicker/panel.module.css", "../src/containers/components/ColorPicker/Pointer.tsx", "../src/containers/components/ColorPicker/round.ts", "../src/containers/components/ColorPicker/convert.ts", "../src/containers/components/ColorPicker/Saturation.tsx", "../src/containers/components/ColorPicker/useColorManipulation.ts", "../src/containers/components/ColorPicker/color.ts"],
  "sourcesContent": ["import React, { FunctionComponent, CSSProperties, useState } from 'react';\nimport { classnames } from '@/util';\nimport styles from './index.module.css';\nimport { ColorPickerPanel } from './ColorPickerPanel';\nimport { COLOR_LIST } from './color';\nimport { Button } from '../Button';\nimport { useClickOutside } from '../../hooks';\n\nexport interface ColorPickerProps {\n  color: string;\n  style?: CSSProperties;\n  onChange: (value: string) => void;\n}\n\nconst ColorPicker: FunctionComponent<\n  React.PropsWithChildren<ColorPickerProps>\n> = (props) => {\n  const { style = {}, onChange, children, color } = props;\n  const [visible, setVisible] = useState(false);\n  const [ref] = useClickOutside(() => {\n    setVisible(false);\n  });\n  return (\n    <div className={styles['color-picker']} style={style} ref={ref}>\n      <div\n        className={styles['color-picker-trigger']}\n        style={{ color }}\n        onClick={() => setVisible(true)}\n      >\n        {children}\n      </div>\n      <div\n        className={classnames(styles['color-picker-wrapper'], {\n          [styles['show']]: visible,\n        })}\n      >\n        <div className={styles['color-picker-list']}>\n          {COLOR_LIST.map((item) => {\n            return (\n              <div\n                key={item}\n                className={styles['color-picker-item']}\n                style={{ backgroundColor: item }}\n                onClick={() => {\n                  onChange(item);\n                }}\n              ></div>\n            );\n          })}\n        </div>\n        <div>\n          <ColorPickerPanel\n            color={color}\n            onChange={(c) => {\n              onChange(c);\n            }}\n          />\n        </div>\n        <div>\n          <Button\n            type=\"normal\"\n            className={styles.reset}\n            onClick={() => {\n              onChange('');\n            }}\n          >\n            Reset\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\nColorPicker.displayName = 'ColorPicker';\n\nexport default ColorPicker;\n", ".color-picker {\n  position: relative;\n}\n.color-picker-wrapper {\n  width: 260px;\n  position: absolute;\n  top: 22px;\n  left: 0;\n  display: none;\n  z-index: var(--highestZIndex);\n  padding: var(--padding);\n  background-color: var(--white);\n  border-radius: var(--borderRadius);\n  border: 1px solid var(--borderColor);\n}\n.color-picker-wrapper.show {\n  display: block;\n}\n\n.color-picker-list {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(9, 1fr);\n  gap: 4px;\n}\n.color-picker-item {\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n  border-radius: var(--borderRadius);\n  border: 1px solid var(--borderColor);\n}\n.no-fill.color-picker-item {\n  width: auto;\n  padding: 0 2px;\n}\n.color-picker-item:hover {\n  border-color: var(--primaryColor);\n}\n.color-picker-trigger {\n  border: 1px solid var(--borderColor);\n  padding: 0 8px;\n  height: 20px;\n  line-height: 20px;\n  border-radius: var(--borderRadius);\n}\n.color-picker-trigger:hover,\n.color-picker-trigger.active {\n  background-color: var(--buttonActiveColor);\n  border-color: var(--activeBorderColor);\n}\n\n.reset {\n  width: 100%;\n  margin-top: var(--padding);\n  background-color: var(--white);\n}\n", "import React, { memo } from 'react';\n\nimport { Hue } from './Hue';\nimport { Saturation } from './Saturation';\n\nimport { ColorModel, ColorPickerBaseProps, AnyColor } from './types';\nimport { useColorManipulation } from './useColorManipulation';\nimport { classnames, convertColorToHex } from '@/util';\nimport { hexToHsva, hsvaToHex } from './convert';\nimport styles from './panel.module.css';\n\ninterface Props<T extends AnyColor> extends Partial<ColorPickerBaseProps<T>> {\n  colorModel: ColorModel<T>;\n}\n\nconst ColorPicker = <T extends AnyColor>({\n  className,\n  colorModel,\n  color = colorModel.defaultColor,\n  onChange,\n}: Props<T>): JSX.Element => {\n  const [hsva, updateHsva] = useColorManipulation<T>(\n    colorModel,\n    color,\n    onChange,\n  );\n\n  return (\n    <div className={classnames(styles['color-picker-panel'], className)}>\n      <Saturation hsva={hsva} onChange={updateHsva} />\n      <Hue\n        hue={hsva.h}\n        onChange={updateHsva}\n        className={styles['color-picker-panel__last-control']}\n      />\n    </div>\n  );\n};\n\nconst colorModel: ColorModel<string> = {\n  defaultColor: '000',\n  toHsva: hexToHsva,\n  fromHsva: ({ h, s, v }) => hsvaToHex({ h, s, v, a: 1 }),\n  equal: (first, second) => {\n    const a = convertColorToHex(first);\n    const b = convertColorToHex(second);\n    return a === b;\n  },\n};\n\nexport const ColorPickerPanel = memo(\n  (props: Partial<ColorPickerBaseProps<string>>): JSX.Element => (\n    <ColorPicker\n      className={props.className}\n      color={props.color}\n      onChange={props.onChange}\n      colorModel={colorModel}\n    />\n  ),\n);\n", "import React from 'react';\n\nimport { Interactive, Interaction } from './Interactive';\nimport { Pointer } from './Pointer';\n\nimport { hsvaToHslString } from './convert';\nimport { clamp } from './clamp';\nimport { round } from './round';\nimport { classnames } from '@/util';\nimport styles from './panel.module.css';\n\ninterface Props {\n  className?: string;\n  hue: number;\n  onChange: (newHue: { h: number }) => void;\n}\n\nconst HueBase = ({ className, hue, onChange }: Props) => {\n  const handleMove = (interaction: Interaction) => {\n    onChange({ h: 360 * interaction.left });\n  };\n\n  const handleKey = (offset: Interaction) => {\n    // Hue measured in degrees of the color circle ranging from 0 to 360\n    onChange({\n      h: clamp(hue + offset.left * 360, 0, 360),\n    });\n  };\n\n  return (\n    <div className={classnames(styles['color-picker-panel__hue'], className)}>\n      <Interactive\n        onMove={handleMove}\n        onKey={handleKey}\n        aria-label=\"Hue\"\n        aria-valuenow={round(hue)}\n        aria-valuemax=\"360\"\n        aria-valuemin=\"0\"\n      >\n        <Pointer\n          className={styles['color-picker-panel__hue-pointer']}\n          left={hue / 360}\n          color={hsvaToHslString({ h: hue, s: 100, v: 100, a: 1 })}\n        />\n      </Interactive>\n    </div>\n  );\n};\n\nexport const Hue = React.memo(HueBase);\n", "import React, { useRef, useMemo, useEffect } from 'react';\n\nimport { useEventCallback } from '../../hooks';\nimport { clamp } from './clamp';\nimport styles from './panel.module.css';\n\nexport interface Interaction {\n  left: number;\n  top: number;\n}\n\n// Check if an event was triggered by touch\nconst isTouch = (event: MouseEvent | TouchEvent): event is TouchEvent =>\n  'touches' in event;\n\n// Finds a proper touch point by its identifier\nconst getTouchPoint = (touches: TouchList, touchId: null | number): Touch => {\n  for (let i = 0; i < touches.length; i++) {\n    if (touches[i].identifier === touchId) return touches[i];\n  }\n  return touches[0];\n};\n\n// Finds the proper window object to fix iframe embedding issues\nconst getParentWindow = (node?: HTMLDivElement | null): Window => {\n  return (node && node.ownerDocument.defaultView) || self;\n};\n\n// Returns a relative position of the pointer inside the node's bounding box\nconst getRelativePosition = (\n  node: HTMLDivElement,\n  event: MouseEvent | TouchEvent,\n  touchId: null | number,\n): Interaction => {\n  const rect = node.getBoundingClientRect();\n\n  // Get user's pointer position from `touches` array if it's a `TouchEvent`\n  const pointer = isTouch(event)\n    ? getTouchPoint(event.touches, touchId)\n    : (event as MouseEvent);\n\n  return {\n    left: clamp(\n      (pointer.pageX - (rect.left + getParentWindow(node).pageXOffset)) /\n        rect.width,\n    ),\n    top: clamp(\n      (pointer.pageY - (rect.top + getParentWindow(node).pageYOffset)) /\n        rect.height,\n    ),\n  };\n};\n\n// Browsers introduced an intervention, making touch events passive by default.\n// This workaround removes `preventDefault` call from the touch handlers.\n// https://github.com/facebook/react/issues/19651\nconst preventDefaultMove = (event: MouseEvent | TouchEvent): void => {\n  !isTouch(event) && event.preventDefault();\n};\n\n// Prevent mobile browsers from handling mouse events (conflicting with touch ones).\n// If we detected a touch interaction before, we prefer reacting to touch events only.\nconst isInvalid = (\n  event: MouseEvent | TouchEvent,\n  hasTouch: boolean,\n): boolean => {\n  return hasTouch && !isTouch(event);\n};\n\ninterface Props {\n  onMove: (interaction: Interaction) => void;\n  onKey: (offset: Interaction) => void;\n  children: React.ReactNode;\n}\n\nconst InteractiveBase = ({ onMove, onKey, ...rest }: Props) => {\n  const container = useRef<HTMLDivElement>(null);\n  const onMoveCallback = useEventCallback<Interaction>(onMove);\n  const onKeyCallback = useEventCallback<Interaction>(onKey);\n  const touchId = useRef<null | number>(null);\n  const hasTouch = useRef(false);\n\n  const [handleMoveStart, handleKeyDown, toggleDocumentEvents] = useMemo(() => {\n    const handleMoveStart = ({\n      nativeEvent,\n    }: React.MouseEvent | React.TouchEvent) => {\n      const el = container.current;\n      if (!el) return;\n\n      // Prevent text selection\n      preventDefaultMove(nativeEvent);\n\n      if (isInvalid(nativeEvent, hasTouch.current) || !el) return;\n\n      if (isTouch(nativeEvent)) {\n        hasTouch.current = true;\n        const changedTouches = nativeEvent.changedTouches || [];\n        if (changedTouches.length)\n          touchId.current = changedTouches[0].identifier;\n      }\n\n      el.focus();\n      onMoveCallback(getRelativePosition(el, nativeEvent, touchId.current));\n      toggleDocumentEvents(true);\n    };\n\n    const handleMove = (event: MouseEvent | TouchEvent) => {\n      // Prevent text selection\n      preventDefaultMove(event);\n\n      // If user moves the pointer outside of the window or iframe bounds and release it there,\n      // `mouseup`/`touchend` won't be fired. In order to stop the picker from following the cursor\n      // after the user has moved the mouse/finger back to the document, we check `event.buttons`\n      // and `event.touches`. It allows us to detect that the user is just moving his pointer\n      // without pressing it down\n      const isDown = isTouch(event)\n        ? event.touches.length > 0\n        : event.buttons > 0;\n\n      if (isDown && container.current) {\n        onMoveCallback(\n          getRelativePosition(container.current, event, touchId.current),\n        );\n      } else {\n        toggleDocumentEvents(false);\n      }\n    };\n\n    const handleMoveEnd = () => toggleDocumentEvents(false);\n\n    const handleKeyDown = (event: React.KeyboardEvent) => {\n      const keyCode = event.which || event.keyCode;\n\n      // Ignore all keys except arrow ones\n      if (keyCode < 37 || keyCode > 40) return;\n      // Do not scroll page by arrow keys when document is focused on the element\n      event.preventDefault();\n      // Send relative offset to the parent component.\n      // We use codes (37\u2190, 38\u2191, 39\u2192, 40\u2193) instead of keys ('ArrowRight', 'ArrowDown', etc)\n      // to reduce the size of the library\n      onKeyCallback({\n        left: keyCode === 39 ? 0.05 : keyCode === 37 ? -0.05 : 0,\n        top: keyCode === 40 ? 0.05 : keyCode === 38 ? -0.05 : 0,\n      });\n    };\n\n    function toggleDocumentEvents(state?: boolean) {\n      const touch = hasTouch.current;\n      const el = container.current;\n      const parentWindow = getParentWindow(el);\n\n      // Add or remove additional pointer event listeners\n      const toggleEvent = state\n        ? parentWindow.addEventListener\n        : parentWindow.removeEventListener;\n      toggleEvent(touch ? 'touchmove' : 'mousemove', handleMove);\n      toggleEvent(touch ? 'touchend' : 'mouseup', handleMoveEnd);\n    }\n\n    return [handleMoveStart, handleKeyDown, toggleDocumentEvents];\n  }, [onKeyCallback, onMoveCallback]);\n\n  // Remove window event listeners before unmounting\n  useEffect(() => toggleDocumentEvents, [toggleDocumentEvents]);\n\n  return (\n    <div\n      {...rest}\n      onTouchStart={handleMoveStart}\n      onMouseDown={handleMoveStart}\n      className={styles['color-picker-panel__interactive']}\n      ref={container}\n      onKeyDown={handleKeyDown}\n      tabIndex={0}\n      role=\"slider\"\n    />\n  );\n};\n\nexport const Interactive = React.memo(InteractiveBase);\n", "// Clamps a value between an upper and lower bound.\n// We use ternary operators because it makes the minified code\n// 2 times shorter then `Math.min(Math.max(a,b),c)`\nexport const clamp = (number: number, min = 0, max = 1): number => {\n  return number > max ? max : number < min ? min : number;\n};\n", ".color-picker-panel {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 200px;\n  user-select: none;\n  cursor: default;\n}\n\n.color-picker-panel__saturation {\n  margin: var(--padding) 0;\n  position: relative;\n  flex-grow: 1;\n  border-color: transparent;\n  border-bottom: 12px solid #000;\n  border-radius: var(--borderRadius);\n  background-image: linear-gradient(to top, #000, rgba(0, 0, 0, 0)),\n    linear-gradient(to right, #fff, rgba(255, 255, 255, 0));\n}\n\n.color-picker-panel__pointer-fill {\n  content: '';\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  pointer-events: none;\n  border-radius: inherit;\n}\n\n.color-picker-panel__saturation {\n  box-shadow: inset 0 0 0 1px var(--hoverColor);\n  border: 1px solid var(--borderColor);\n}\n\n.color-picker-panel__hue {\n  position: relative;\n  height: 16px;\n}\n\n.color-picker-panel__hue {\n  background: linear-gradient(\n    to right,\n    #f00 0%,\n    #ff0 17%,\n    #0f0 33%,\n    #0ff 50%,\n    #00f 67%,\n    #f0f 83%,\n    #f00 100%\n  );\n}\n\n.color-picker-panel__last-control {\n  border-radius: var(--borderLargeRadius);\n}\n\n.color-picker-panel__interactive {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  border-radius: inherit;\n  outline: none;\n  touch-action: none;\n}\n\n.color-picker-panel__pointer {\n  position: absolute;\n  z-index: 1;\n  box-sizing: border-box;\n  width: 20px;\n  height: 20px;\n  transform: translate(-50%, -50%);\n  background-color: var(--white);\n  border: 1px solid var(--borderColor);\n  border-radius: 50%;\n  box-shadow: 0 2px 4px var(--scrollbarHoveColor);\n}\n\n.color-picker-panel__interactive:focus .color-picker-panel__pointer {\n  transform: translate(-50%, -50%) scale(1.1);\n}\n\n.color-picker-panel__saturation-pointer {\n  z-index: 3;\n}\n\n.color-picker-panel__hue-pointer {\n  z-index: 2;\n}\n", "import React from 'react';\nimport { classnames } from '@/util';\nimport styles from './panel.module.css';\n\ninterface Props {\n  className?: string;\n  top?: number;\n  left: number;\n  color: string;\n}\n\nexport const Pointer = ({\n  className,\n  color,\n  left,\n  top = 0.5,\n}: Props): JSX.Element => {\n  const style = {\n    top: `${top * 100}%`,\n    left: `${left * 100}%`,\n  };\n\n  return (\n    <div\n      className={classnames(styles['color-picker-panel__pointer'], className)}\n      style={style}\n    >\n      <div\n        className={styles['color-picker-panel__pointer-fill']}\n        style={{ backgroundColor: color }}\n      />\n    </div>\n  );\n};\n", "export const round = (number: number, digits = 0, base = Math.pow(10, digits)): number => {\n  return Math.round(base * number) / base;\n};\n", "import { round } from \"./round\";\nimport { RgbaColor, RgbColor, HslaColor, HslColor, HsvaColor, HsvColor } from \"./types\";\n\n/**\n * Valid CSS <angle> units.\n * https://developer.mozilla.org/en-US/docs/Web/CSS/angle\n */\nconst angleUnits: Record<string, number> = {\n  grad: 360 / 400,\n  turn: 360,\n  rad: 360 / (Math.PI * 2),\n};\n\nexport const hexToHsva = (hex: string): HsvaColor => rgbaToHsva(hexToRgba(hex));\n\nexport const hexToRgba = (hex: string): RgbaColor => {\n  if (hex[0] === \"#\") hex = hex.substring(1);\n\n  if (hex.length < 6) {\n    return {\n      r: parseInt(hex[0] + hex[0], 16),\n      g: parseInt(hex[1] + hex[1], 16),\n      b: parseInt(hex[2] + hex[2], 16),\n      a: hex.length === 4 ? round(parseInt(hex[3] + hex[3], 16) / 255, 2) : 1,\n    };\n  }\n\n  return {\n    r: parseInt(hex.substring(0, 2), 16),\n    g: parseInt(hex.substring(2, 4), 16),\n    b: parseInt(hex.substring(4, 6), 16),\n    a: hex.length === 8 ? round(parseInt(hex.substring(6, 8), 16) / 255, 2) : 1,\n  };\n};\n\nexport const parseHue = (value: string, unit = \"deg\"): number => {\n  return Number(value) * (angleUnits[unit] || 1);\n};\n\nexport const hslaStringToHsva = (hslString: string): HsvaColor => {\n  const matcher = /hsla?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(hslString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return hslaToHsva({\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    l: Number(match[4]),\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? 100 : 1),\n  });\n};\n\nexport const hslStringToHsva = hslaStringToHsva;\n\nexport const hslaToHsva = ({ h, s, l, a }: HslaColor): HsvaColor => {\n  s *= (l < 50 ? l : 100 - l) / 100;\n\n  return {\n    h: h,\n    s: s > 0 ? ((2 * s) / (l + s)) * 100 : 0,\n    v: l + s,\n    a,\n  };\n};\n\nexport const hsvaToHex = (hsva: HsvaColor): string => rgbaToHex(hsvaToRgba(hsva));\n\nexport const hsvaToHsla = ({ h, s, v, a }: HsvaColor): HslaColor => {\n  const hh = ((200 - s) * v) / 100;\n\n  return {\n    h: round(h),\n    s: round(hh > 0 && hh < 200 ? ((s * v) / 100 / (hh <= 100 ? hh : 200 - hh)) * 100 : 0),\n    l: round(hh / 2),\n    a: round(a, 2),\n  };\n};\n\nexport const hsvaToHslString = (hsva: HsvaColor): string => {\n  const { h, s, l } = hsvaToHsla(hsva);\n  return `hsl(${h}, ${s}%, ${l}%)`;\n};\n\nexport const hsvaToHsvString = (hsva: HsvaColor): string => {\n  const { h, s, v } = roundHsva(hsva);\n  return `hsv(${h}, ${s}%, ${v}%)`;\n};\n\nexport const hsvaToHsvaString = (hsva: HsvaColor): string => {\n  const { h, s, v, a } = roundHsva(hsva);\n  return `hsva(${h}, ${s}%, ${v}%, ${a})`;\n};\n\nexport const hsvaToHslaString = (hsva: HsvaColor): string => {\n  const { h, s, l, a } = hsvaToHsla(hsva);\n  return `hsla(${h}, ${s}%, ${l}%, ${a})`;\n};\n\nexport const hsvaToRgba = ({ h, s, v, a }: HsvaColor): RgbaColor => {\n  h = (h / 360) * 6;\n  s = s / 100;\n  v = v / 100;\n\n  const hh = Math.floor(h),\n    b = v * (1 - s),\n    c = v * (1 - (h - hh) * s),\n    d = v * (1 - (1 - h + hh) * s),\n    module = hh % 6;\n\n  return {\n    r: round([v, c, b, b, d, v][module] * 255),\n    g: round([d, v, v, c, b, b][module] * 255),\n    b: round([b, b, d, v, v, c][module] * 255),\n    a: round(a, 2),\n  };\n};\n\nexport const hsvaToRgbString = (hsva: HsvaColor): string => {\n  const { r, g, b } = hsvaToRgba(hsva);\n  return `rgb(${r}, ${g}, ${b})`;\n};\n\nexport const hsvaToRgbaString = (hsva: HsvaColor): string => {\n  const { r, g, b, a } = hsvaToRgba(hsva);\n  return `rgba(${r}, ${g}, ${b}, ${a})`;\n};\n\nexport const hsvaStringToHsva = (hsvString: string): HsvaColor => {\n  const matcher = /hsva?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(hsvString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return roundHsva({\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    v: Number(match[4]),\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? 100 : 1),\n  });\n};\n\nexport const hsvStringToHsva = hsvaStringToHsva;\n\nexport const rgbaStringToHsva = (rgbaString: string): HsvaColor => {\n  const matcher = /rgba?\\(?\\s*(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(rgbaString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return rgbaToHsva({\n    r: Number(match[1]) / (match[2] ? 100 / 255 : 1),\n    g: Number(match[3]) / (match[4] ? 100 / 255 : 1),\n    b: Number(match[5]) / (match[6] ? 100 / 255 : 1),\n    a: match[7] === undefined ? 1 : Number(match[7]) / (match[8] ? 100 : 1),\n  });\n};\n\nexport const rgbStringToHsva = rgbaStringToHsva;\n\nconst format = (number: number) => {\n  const hex = number.toString(16);\n  return hex.length < 2 ? \"0\" + hex : hex;\n};\n\nexport const rgbaToHex = ({ r, g, b, a }: RgbaColor): string => {\n  const alphaHex = a < 1 ? format(round(a * 255)) : \"\";\n  return \"#\" + format(r) + format(g) + format(b) + alphaHex;\n};\n\nexport const rgbaToHsva = ({ r, g, b, a }: RgbaColor): HsvaColor => {\n  const max = Math.max(r, g, b);\n  const delta = max - Math.min(r, g, b);\n\n  // prettier-ignore\n  const hh = delta\n    ? max === r\n      ? (g - b) / delta\n      : max === g\n        ? 2 + (b - r) / delta\n        : 4 + (r - g) / delta\n    : 0;\n\n  return {\n    h: round(60 * (hh < 0 ? hh + 6 : hh)),\n    s: round(max ? (delta / max) * 100 : 0),\n    v: round((max / 255) * 100),\n    a,\n  };\n};\n\nexport const roundHsva = (hsva: HsvaColor): HsvaColor => ({\n  h: round(hsva.h),\n  s: round(hsva.s),\n  v: round(hsva.v),\n  a: round(hsva.a, 2),\n});\n\nexport const rgbaToRgb = ({ r, g, b }: RgbaColor): RgbColor => ({ r, g, b });\n\nexport const hslaToHsl = ({ h, s, l }: HslaColor): HslColor => ({ h, s, l });\n\nexport const hsvaToHsv = (hsva: HsvaColor): HsvColor => {\n  const { h, s, v } = roundHsva(hsva);\n  return { h, s, v };\n};\n", "import React from 'react';\nimport { Interactive, Interaction } from './Interactive';\nimport { Pointer } from './Pointer';\nimport { HsvaColor } from './types';\nimport { hsvaToHslString } from './convert';\nimport { clamp } from './clamp';\nimport { round } from './round';\nimport styles from './panel.module.css';\n\ninterface Props {\n  hsva: HsvaColor;\n  onChange: (newColor: { s: number; v: number }) => void;\n}\n\nconst SaturationBase = ({ hsva, onChange }: Props) => {\n  const handleMove = (interaction: Interaction) => {\n    onChange({\n      s: interaction.left * 100,\n      v: 100 - interaction.top * 100,\n    });\n  };\n\n  const handleKey = (offset: Interaction) => {\n    // Saturation and brightness always fit into [0, 100] range\n    onChange({\n      s: clamp(hsva.s + offset.left * 100, 0, 100),\n      v: clamp(hsva.v - offset.top * 100, 0, 100),\n    });\n  };\n\n  const containerStyle = {\n    backgroundColor: hsvaToHslString({ h: hsva.h, s: 100, v: 100, a: 1 }),\n  };\n\n  return (\n    <div\n      className={styles['color-picker-panel__saturation']}\n      style={containerStyle}\n    >\n      <Interactive\n        onMove={handleMove}\n        onKey={handleKey}\n        aria-label=\"Color\"\n        aria-valuetext={`Saturation ${round(hsva.s)}%, Brightness ${round(\n          hsva.v,\n        )}%`}\n      >\n        <Pointer\n          className={styles['color-picker-panel__saturation-pointer']}\n          top={1 - hsva.v / 100}\n          left={hsva.s / 100}\n          color={hsvaToHslString(hsva)}\n        />\n      </Interactive>\n    </div>\n  );\n};\n\nexport const Saturation = React.memo(SaturationBase);\n", "import { useState, useEffect, useCallback, useRef } from \"react\";\nimport { ColorModel, AnyColor, HsvaColor } from \"./types\";\nimport { useEventCallback } from \"../../hooks/useEventCallback\";\nimport { deepEqual } from '@/util'\n\nexport function useColorManipulation<T extends AnyColor>(\n  colorModel: ColorModel<T>,\n  color: T,\n  onChange?: (color: T) => void\n): [HsvaColor, (color: Partial<HsvaColor>) => void] {\n  // Save onChange callback in the ref for avoiding \"useCallback hell\"\n  const onChangeCallback = useEventCallback<T>(onChange);\n\n  // No matter which color model is used (HEX, RGB(A) or HSL(A)),\n  // all internal calculations are based on HSVA model\n  const [hsva, updateHsva] = useState<HsvaColor>(() => colorModel.toHsva(color));\n\n  // By using this ref we're able to prevent extra updates\n  // and the effects recursion during the color conversion\n  const cache = useRef({ color, hsva });\n\n  // Update local HSVA-value if `color` property value is changed,\n  // but only if that's not the same color that we just sent to the parent\n  useEffect(() => {\n    if (!colorModel.equal(color, cache.current.color)) {\n      const newHsva = colorModel.toHsva(color);\n      cache.current = { hsva: newHsva, color };\n      updateHsva(newHsva);\n    }\n  }, [color, colorModel]);\n\n  // Trigger `onChange` callback only if an updated color is different from cached one;\n  // save the new color to the ref to prevent unnecessary updates\n  useEffect(() => {\n    let newColor;\n    if (\n      !deepEqual(hsva, cache.current.hsva) &&\n      !colorModel.equal((newColor = colorModel.fromHsva(hsva)), cache.current.color)\n    ) {\n      cache.current = { hsva, color: newColor };\n      onChangeCallback(newColor);\n    }\n  }, [hsva, colorModel, onChangeCallback]);\n\n  // Merge the current HSVA color object with updated params.\n  // For example, when a child component sends `h` or `s` only\n  const handleChange = useCallback((params: Partial<HsvaColor>) => {\n    updateHsva((current) => Object.assign({}, current, params));\n  }, []);\n\n  return [hsva, handleChange];\n}\n", "export const COLOR_LIST = [\n  '#35322B',\n  '#505050',\n  '#606060',\n  '#6F6F6F',\n  '#8B8B8B',\n  '#B2B2B2',\n  '#CCCCCC',\n  '#E5E5E5',\n  '#F5F5F5',\n  '#FFFFFF',\n  '#9D0000',\n  '#B20000',\n  '#CD0F0F',\n  '#E30909',\n  '#F30B0B',\n  '#FE4B4B',\n  '#FA7979',\n  '#FB9D9D',\n  '#FDCECE',\n  '#FEE7E7',\n  '#B24000',\n  '#CC4F10',\n  '#DF5D00',\n  '#F96800',\n  '#FB8937',\n  '#FF8C51',\n  '#FCA669',\n  '#FDC49B',\n  '#FEE1CD',\n  '#FEF0E6',\n  '#B19401',\n  '#C5A300',\n  '#D8B300',\n  '#EBC301',\n  '#F9D700',\n  '#FBE137',\n  '#FCE869',\n  '#FDF09B',\n  '#FEF7CD',\n  '#FEFBE6',\n  '#58770A',\n  '#688C0D',\n  '#7AA017',\n  '#8BBB11',\n  '#A4DC16',\n  '#BEEE44',\n  '#CEF273',\n  '#DEF6A2',\n  '#EFFBD0',\n  '#F7FDE8',\n  '#007676',\n  '#008A8A',\n  '#009E9E',\n  '#00BBBB',\n  '#1CD8D8',\n  '#2AEAEA',\n  '#76EFEF',\n  '#A3F5F5',\n  '#D1FAFA',\n  '#E8FCFC',\n  '#001F9C',\n  '#0025B7',\n  '#012BD2',\n  '#133DE3',\n  '#2F55EB',\n  '#4567ED',\n  '#738DF2',\n  '#A2B3F6',\n  '#D0D9FB',\n  '#E8ECFD',\n  '#3F0198',\n  '#510EB0',\n  '#6721CB',\n  '#7735D4',\n  '#894EDE',\n  '#9E6DE3',\n  '#AA82E3',\n  '#C7ABED',\n  '#E3D5F6',\n  '#F1EAFA',\n  '#8F0550',\n  '#A1095C',\n  '#C1026B',\n  '#D4157E',\n  '#E7258F',\n  '#F248A6',\n  '#F273B9',\n  '#F6A2D0',\n  '#FBD0E8',\n  '#FDE8F3',\n];"],
  "mappings": "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d,CAEJ,EU3DO,IAAMuB,EAAa,CACxB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACF,EZ7EA,IAAMC,EAEDC,GAAU,CACb,GAAM,CAAE,MAAAC,EAAQ,CAAC,EAAG,SAAAC,EAAU,SAAAC,EAAU,MAAAC,CAAM,EAAIJ,EAC5C,CAACK,EAASC,CAAU,KAAI,YAAS,EAAK,EACtC,CAACC,CAAG,EAAIC,EAAgB,IAAM,CAClCF,EAAW,EAAK,CAClB,CAAC,EACD,OACE,EAAAG,QAAA,cAAC,OAAI,UAAWC,EAAO,cAAc,EAAG,MAAOT,EAAO,IAAKM,GACzD,EAAAE,QAAA,cAAC,OACC,UAAWC,EAAO,sBAAsB,EACxC,MAAO,CAAE,MAAAN,CAAM,EACf,QAAS,IAAME,EAAW,EAAI,GAE7BH,CACH,EACA,EAAAM,QAAA,cAAC,OACC,UAAWE,EAAWD,EAAO,sBAAsB,EAAG,CACpD,CAACA,EAAO,IAAO,EAAGL,CACpB,CAAC,GAED,EAAAI,QAAA,cAAC,OAAI,UAAWC,EAAO,mBAAmB,GACvCE,EAAW,IAAKC,GAEb,EAAAJ,QAAA,cAAC,OACC,IAAKI,EACL,UAAWH,EAAO,mBAAmB,EACrC,MAAO,CAAE,gBAAiBG,CAAK,EAC/B,QAAS,IAAM,CACbX,EAASW,CAAI,CACf,EACD,CAEJ,CACH,EACA,EAAAJ,QAAA,cAAC,WACC,EAAAA,QAAA,cAACK,EAAA,CACC,MAAOV,EACP,SAAWW,GAAM,CACfb,EAASa,CAAC,CACZ,EACF,CACF,EACA,EAAAN,QAAA,cAAC,WACC,EAAAA,QAAA,cAACO,EAAA,CACC,KAAK,SACL,UAAWN,EAAO,MAClB,QAAS,IAAM,CACbR,EAAS,EAAE,CACb,GACD,OAED,CACF,CACF,CACF,CAEJ,EACAH,EAAY,YAAc,cAE1B,IAAOW,GAAQX",
  "names": ["import_react", "ColorPicker_default", "color-picker", "color-picker-wrapper", "show", "color-picker-list", "color-picker-item", "no-fill", "color-picker-trigger", "active", "reset", "import_react", "import_react", "import_react", "clamp", "number", "min", "max", "panel_default", "color-picker-panel", "color-picker-panel__saturation", "color-picker-panel__pointer-fill", "color-picker-panel__hue", "color-picker-panel__last-control", "color-picker-panel__interactive", "color-picker-panel__pointer", "color-picker-panel__saturation-pointer", "color-picker-panel__hue-pointer", "isTouch", "event", "getTouchPoint", "touches", "touchId", "i", "getParentWindow", "node", "getRelativePosition", "rect", "pointer", "clamp", "preventDefaultMove", "isInvalid", "hasTouch", "InteractiveBase", "onMove", "onKey", "rest", "container", "onMoveCallback", "useEventCallback", "onKeyCallback", "handleMoveStart", "handleKeyDown", "toggleDocumentEvents", "nativeEvent", "el", "changedTouches", "handleMove", "handleMoveEnd", "keyCode", "state", "touch", "parentWindow", "toggleEvent", "React", "panel_default", "Interactive", "import_react", "Pointer", "className", "color", "left", "top", "style", "React", "classnames", "panel_default", "round", "number", "digits", "base", "angleUnits", "hexToHsva", "hex", "rgbaToHsva", "hexToRgba", "round", "hsvaToHex", "hsva", "rgbaToHex", "hsvaToRgba", "hsvaToHsla", "h", "s", "v", "a", "hh", "round", "hsvaToHslString", "l", "hsvaToRgba", "h", "s", "v", "a", "hh", "b", "c", "d", "module", "round", "format", "number", "hex", "rgbaToHex", "r", "g", "b", "a", "alphaHex", "round", "rgbaToHsva", "max", "delta", "hh", "HueBase", "className", "hue", "onChange", "handleMove", "interaction", "handleKey", "offset", "clamp", "React", "classnames", "panel_default", "Interactive", "round", "Pointer", "hsvaToHslString", "Hue", "import_react", "SaturationBase", "hsva", "onChange", "handleMove", "interaction", "handleKey", "offset", "clamp", "containerStyle", "hsvaToHslString", "React", "panel_default", "Interactive", "round", "Pointer", "Saturation", "import_react", "useColorManipulation", "colorModel", "color", "onChange", "onChangeCallback", "useEventCallback", "hsva", "updateHsva", "cache", "newHsva", "newColor", "deepEqual", "handleChange", "params", "current", "ColorPicker", "className", "colorModel", "color", "onChange", "hsva", "updateHsva", "useColorManipulation", "React", "classnames", "panel_default", "Saturation", "Hue", "hexToHsva", "h", "s", "v", "hsvaToHex", "first", "second", "a", "convertColorToHex", "b", "ColorPickerPanel", "props", "COLOR_LIST", "ColorPicker", "props", "style", "onChange", "children", "color", "visible", "setVisible", "ref", "useClickOutside", "React", "ColorPicker_default", "classnames", "COLOR_LIST", "item", "ColorPickerPanel", "c", "Button"]
}
