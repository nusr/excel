{
  "version": 3,
  "sources": ["../node_modules/.pnpm/ssf@https+++cdn.sheetjs.com+ssf-0.11.3+ssf-0.11.3.tgz/node_modules/ssf/ssf.js", "../src/util/constant.ts", "../src/util/util.ts", "../src/formula/formula/error.ts", "../src/formula/formula/text.ts", "../src/formula/formula/math.ts", "../src/formula/formula/float.ts", "../src/formula/formula/index.ts", "../src/formula/token.ts", "../src/util/convert.ts", "../src/util/range.ts", "../src/util/reference.ts", "../src/formula/scanner.ts", "../src/formula/expression.ts", "../src/formula/parser.ts", "../src/formula/interpreter.ts", "../src/formula/eval.ts", "../src/util/split.ts", "../src/theme/size.ts", "../src/theme/zIndex.ts", "../src/theme/convert.ts", "../src/theme/color.ts", "../src/theme/index.ts", "../src/util/dpr.ts", "../src/util/lodash.ts", "../src/util/style.ts", "../src/model/numberFormat.ts", "../src/canvas/util.ts", "../src/canvas/constant.ts", "../src/canvas/offScreenWorker.ts", "../src/worker.ts"],
  "sourcesContent": ["/* ssf.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*jshint -W041 */\nvar SSF = ({});\nfunction make_ssf(SSF){\nSSF.version = '0.11.3';\nfunction _strrev(x) { var o = \"\", i = x.length-1; while(i>=0) o += x.charAt(i--); return o; }\nfunction fill(c,l) { var o = \"\"; while(o.length < l) o+=c; return o; }\nfunction pad0(v,d){var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad_(v,d){var t=\"\"+v;return t.length>=d?t:fill(' ',d-t.length)+t;}\nfunction rpad_(v,d){var t=\"\"+v; return t.length>=d?t:t+fill(' ',d-t.length);}\nfunction pad0r1(v,d){var t=\"\"+Math.round(v); return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad0r2(v,d){var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nvar p2_32 = Math.pow(2,32);\nfunction pad0r(v,d){if(v>p2_32||v<-p2_32) return pad0r1(v,d); var i = Math.round(v); return pad0r2(i,d); }\nfunction isgeneral(s, i) { i = i || 0; return s.length >= 7 + i && (s.charCodeAt(i)|32) === 103 && (s.charCodeAt(i+1)|32) === 101 && (s.charCodeAt(i+2)|32) === 110 && (s.charCodeAt(i+3)|32) === 101 && (s.charCodeAt(i+4)|32) === 114 && (s.charCodeAt(i+5)|32) === 97 && (s.charCodeAt(i+6)|32) === 108; }\nvar days = [\n\t['Sun', 'Sunday'],\n\t['Mon', 'Monday'],\n\t['Tue', 'Tuesday'],\n\t['Wed', 'Wednesday'],\n\t['Thu', 'Thursday'],\n\t['Fri', 'Friday'],\n\t['Sat', 'Saturday']\n];\nvar months = [\n\t['J', 'Jan', 'January'],\n\t['F', 'Feb', 'February'],\n\t['M', 'Mar', 'March'],\n\t['A', 'Apr', 'April'],\n\t['M', 'May', 'May'],\n\t['J', 'Jun', 'June'],\n\t['J', 'Jul', 'July'],\n\t['A', 'Aug', 'August'],\n\t['S', 'Sep', 'September'],\n\t['O', 'Oct', 'October'],\n\t['N', 'Nov', 'November'],\n\t['D', 'Dec', 'December']\n];\nfunction init_table(t) {\n\tt[0]=  'General';\n\tt[1]=  '0';\n\tt[2]=  '0.00';\n\tt[3]=  '#,##0';\n\tt[4]=  '#,##0.00';\n\tt[9]=  '0%';\n\tt[10]= '0.00%';\n\tt[11]= '0.00E+00';\n\tt[12]= '# ?/?';\n\tt[13]= '# ??/??';\n\tt[14]= 'm/d/yy';\n\tt[15]= 'd-mmm-yy';\n\tt[16]= 'd-mmm';\n\tt[17]= 'mmm-yy';\n\tt[18]= 'h:mm AM/PM';\n\tt[19]= 'h:mm:ss AM/PM';\n\tt[20]= 'h:mm';\n\tt[21]= 'h:mm:ss';\n\tt[22]= 'm/d/yy h:mm';\n\tt[37]= '#,##0 ;(#,##0)';\n\tt[38]= '#,##0 ;[Red](#,##0)';\n\tt[39]= '#,##0.00;(#,##0.00)';\n\tt[40]= '#,##0.00;[Red](#,##0.00)';\n\tt[45]= 'mm:ss';\n\tt[46]= '[h]:mm:ss';\n\tt[47]= 'mmss.0';\n\tt[48]= '##0.0E+0';\n\tt[49]= '@';\n\tt[56]= '\"\u4E0A\u5348/\u4E0B\u5348 \"hh\"\u6642\"mm\"\u5206\"ss\"\u79D2 \"';\n}\n\nvar table_fmt = {};\ninit_table(table_fmt);\n/* Defaults determined by systematically testing in Excel 2019 */\n\n/* These formats appear to default to other formats in the table */\nvar default_map = [];\nvar defi = 0;\n\n//  5 -> 37 ...  8 -> 40\nfor(defi = 5; defi <= 8; ++defi) default_map[defi] = 32 + defi;\n\n// 23 ->  0 ... 26 ->  0\nfor(defi = 23; defi <= 26; ++defi) default_map[defi] = 0;\n\n// 27 -> 14 ... 31 -> 14\nfor(defi = 27; defi <= 31; ++defi) default_map[defi] = 14;\n// 50 -> 14 ... 58 -> 14\nfor(defi = 50; defi <= 58; ++defi) default_map[defi] = 14;\n\n// 59 ->  1 ... 62 ->  4\nfor(defi = 59; defi <= 62; ++defi) default_map[defi] = defi - 58;\n// 67 ->  9 ... 68 -> 10\nfor(defi = 67; defi <= 68; ++defi) default_map[defi] = defi - 58;\n// 72 -> 14 ... 75 -> 17\nfor(defi = 72; defi <= 75; ++defi) default_map[defi] = defi - 58;\n\n// 69 -> 12 ... 71 -> 14\nfor(defi = 67; defi <= 68; ++defi) default_map[defi] = defi - 57;\n\n// 76 -> 20 ... 78 -> 22\nfor(defi = 76; defi <= 78; ++defi) default_map[defi] = defi - 56;\n\n// 79 -> 45 ... 81 -> 47\nfor(defi = 79; defi <= 81; ++defi) default_map[defi] = defi - 34;\n\n// 82 ->  0 ... 65536 -> 0 (omitted)\n\n/* These formats technically refer to Accounting formats with no equivalent */\nvar default_str = {\n\t//  5 -- Currency,   0 decimal, black negative\n\t5:  '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n\t63: '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n\n\t//  6 -- Currency,   0 decimal, red   negative\n\t6:  '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n\t64: '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n\n\t//  7 -- Currency,   2 decimal, black negative\n\t7:  '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n\t65: '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n\n\t//  8 -- Currency,   2 decimal, red   negative\n\t8:  '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\t66: '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\n\t// 41 -- Accounting, 0 decimal, No Symbol\n\t41: '_(* #,##0_);_(* \\\\(#,##0\\\\);_(* \"-\"_);_(@_)',\n\n\t// 42 -- Accounting, 0 decimal, $  Symbol\n\t42: '_(\"$\"* #,##0_);_(\"$\"* \\\\(#,##0\\\\);_(\"$\"* \"-\"_);_(@_)',\n\n\t// 43 -- Accounting, 2 decimal, No Symbol\n\t43: '_(* #,##0.00_);_(* \\\\(#,##0.00\\\\);_(* \"-\"??_);_(@_)',\n\n\t// 44 -- Accounting, 2 decimal, $  Symbol\n\t44: '_(\"$\"* #,##0.00_);_(\"$\"* \\\\(#,##0.00\\\\);_(\"$\"* \"-\"??_);_(@_)'\n};\n\nfunction frac(x, D, mixed) {\n\tvar sgn = x < 0 ? -1 : 1;\n\tvar B = x * sgn;\n\tvar P_2 = 0, P_1 = 1, P = 0;\n\tvar Q_2 = 1, Q_1 = 0, Q = 0;\n\tvar A = Math.floor(B);\n\twhile(Q_1 < D) {\n\t\tA = Math.floor(B);\n\t\tP = A * P_1 + P_2;\n\t\tQ = A * Q_1 + Q_2;\n\t\tif((B - A) < 0.00000005) break;\n\t\tB = 1 / (B - A);\n\t\tP_2 = P_1; P_1 = P;\n\t\tQ_2 = Q_1; Q_1 = Q;\n\t}\n\tif(Q > D) { if(Q_1 > D) { Q = Q_2; P = P_2; } else { Q = Q_1; P = P_1; } }\n\tif(!mixed) return [0, sgn * P, Q];\n\tvar q = Math.floor(sgn * P/Q);\n\treturn [q, sgn*P - q*Q, Q];\n}\nfunction normalize_xl_unsafe(v) {\n\tvar s = v.toPrecision(16);\n\tif(s.indexOf(\"e\") > -1) {\n\t\tvar m = s.slice(0, s.indexOf(\"e\"));\n\t\tm = m.indexOf(\".\") > -1 ? m.slice(0, (m.slice(0,2) == \"0.\" ? 17 : 16)) : (m.slice(0,15) + fill(\"0\", m.length - 15));\n\t\treturn m + s.slice(s.indexOf(\"e\"));\n\t}\n\tvar n = s.indexOf(\".\") > -1 ? s.slice(0, (s.slice(0,2) == \"0.\" ? 17 : 16)) : (s.slice(0,15) + fill(\"0\", s.length - 15));\n\treturn Number(n);\n}\n\nfunction parse_date_code(v,opts,b2) {\n\tif(v > 2958465 || v < 0) return null;\n\tv = normalize_xl_unsafe(v);\n\tvar date = (v|0), time = Math.floor(86400 * (v - date)), dow=0;\n\tvar dout=[];\n\tvar out={D:date, T:time, u:86400*(v-date)-time,y:0,m:0,d:0,H:0,M:0,S:0,q:0};\n\tif(Math.abs(out.u) < 1e-6) out.u = 0;\n\tif(opts && opts.date1904) date += 1462;\n\tif(out.u > 0.9999) {\n\t\tout.u = 0;\n\t\tif(++time == 86400) { out.T = time = 0; ++date; ++out.D; }\n\t}\n\tif(date === 60) {dout = b2 ? [1317,10,29] : [1900,2,29]; dow=3;}\n\telse if(date === 0) {dout = b2 ? [1317,8,29] : [1900,1,0]; dow=6;}\n\telse {\n\t\tif(date > 60) --date;\n\t\t/* 1 = Jan 1 1900 in Gregorian */\n\t\tvar d = new Date(1900, 0, 1);\n\t\td.setDate(d.getDate() + date - 1);\n\t\tdout = [d.getFullYear(), d.getMonth()+1,d.getDate()];\n\t\tdow = d.getDay();\n\t\tif(date < 60) dow = (dow + 6) % 7;\n\t\tif(b2) dow = fix_hijri(d, dout);\n\t}\n\tout.y = dout[0]; out.m = dout[1]; out.d = dout[2];\n\tout.S = time % 60; time = Math.floor(time / 60);\n\tout.M = time % 60; time = Math.floor(time / 60);\n\tout.H = time;\n\tout.q = dow;\n\treturn out;\n}\nSSF.parse_date_code = parse_date_code;\nvar basedate = new Date(1899, 11, 31, 0, 0, 0);\nvar dnthresh = basedate.getTime();\nvar base1904 = new Date(1900, 2, 1, 0, 0, 0);\nfunction datenum_local(v, date1904) {\n\tvar epoch = v.getTime();\n\tif(date1904) epoch -= 1461*24*60*60*1000;\n\telse if(v >= base1904) epoch += 24*60*60*1000;\n\treturn (epoch - (dnthresh + (v.getTimezoneOffset() - basedate.getTimezoneOffset()) * 60000)) / (24 * 60 * 60 * 1000);\n}\n/* ECMA-376 18.8.30 numFmt*/\n/* Note: `toPrecision` uses standard form when prec > E and E >= -6 */\nvar general_fmt_num = (function make_general_fmt_num() {\n\tvar trailing_zeroes_and_decimal = /(?:\\.0*|(\\.\\d*[1-9])0+)$/;\n\tfunction strip_decimal(o) {\n\t\treturn (o.indexOf(\".\") == -1) ? o : o.replace(trailing_zeroes_and_decimal, \"$1\");\n\t}\n\n\t/* General Exponential always shows 2 digits exp and trims the mantissa */\n\tvar mantissa_zeroes_and_decimal = /(?:\\.0*|(\\.\\d*[1-9])0+)[Ee]/;\n\tvar exp_with_single_digit = /(E[+-])(\\d)$/;\n\tfunction normalize_exp(o) {\n\t\tif(o.indexOf(\"E\") == -1) return o;\n\t\treturn o.replace(mantissa_zeroes_and_decimal,\"$1E\").replace(exp_with_single_digit,\"$10$2\");\n\t}\n\n\t/* exponent >= -9 and <= 9 */\n\tfunction small_exp(v) {\n\t\tvar w = (v<0?12:11);\n\t\tvar o = strip_decimal(v.toFixed(12)); if(o.length <= w) return o;\n\t\to = v.toPrecision(10); if(o.length <= w) return o;\n\t\treturn v.toExponential(5);\n\t}\n\n\t/* exponent >= 11 or <= -10 likely exponential */\n\tfunction large_exp(v) {\n\t\tvar o = strip_decimal(v.toFixed(11));\n\t\treturn (o.length > (v<0?12:11) || o === \"0\" || o === \"-0\") ? v.toPrecision(6) : o;\n\t}\n\n\tfunction general_fmt_num_base(v) {\n\t\tvar V = Math.floor(Math.log(Math.abs(v))*Math.LOG10E), o;\n\n\t\tif(V >= -4 && V <= -1) o = v.toPrecision(10+V);\n\t\telse if(Math.abs(V) <= 9) o = small_exp(v);\n\t\telse if(V === 10) o = v.toFixed(10).substr(0,12);\n\t\telse o = large_exp(v);\n\n\t\treturn strip_decimal(normalize_exp(o.toUpperCase()));\n\t}\n\n\treturn general_fmt_num_base;\n})();\nSSF._general_num = general_fmt_num;\n\n/*\n\t\"General\" rules:\n\t- text is passed through (\"@\")\n\t- booleans are rendered as TRUE/FALSE\n\t- \"up to 11 characters\" displayed for numbers\n\t- Default date format (code 14) used for Dates\n\n\tThe longest 32-bit integer text is \"-2147483648\", exactly 11 chars\n\tTODO: technically the display depends on the width of the cell\n*/\nfunction general_fmt(v, opts) {\n\tswitch(typeof v) {\n\t\tcase 'string': return v;\n\t\tcase 'boolean': return v ? \"TRUE\" : \"FALSE\";\n\t\tcase 'number': return (v|0) === v ? v.toString(10) : general_fmt_num(v);\n\t\tcase 'undefined': return \"\";\n\t\tcase 'object':\n\t\t\tif(v == null) return \"\";\n\t\t\tif(v instanceof Date) return format(14, datenum_local(v, opts && opts.date1904), opts);\n\t}\n\tthrow new Error(\"unsupported value in General format: \" + v);\n}\nSSF._general = general_fmt;\nfunction fix_hijri(date, o) {\n  /* TODO: properly adjust y/m/d and  */\n  o[0] -= 581;\n  var dow = date.getDay();\n  if(date < 60) dow = (dow + 6) % 7;\n  return dow;\n}\nvar THAI_DIGITS = \"\\u0E50\\u0E51\\u0E52\\u0E53\\u0E54\\u0E55\\u0E56\\u0E57\\u0E58\\u0E59\".split(\"\");\n/*jshint -W086 */\nfunction write_date(type, fmt, val, ss0) {\n\tvar o=\"\", ss=0, tt=0, y = val.y, out, outl = 0;\n\tswitch(type) {\n\t\tcase 98: /* 'b' buddhist year */\n\t\t\ty = val.y + 543;\n\t\t\t/* falls through */\n\t\tcase 121: /* 'y' year */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = y % 100; outl = 2; break;\n\t\t\tdefault: out = y % 10000; outl = 4; break;\n\t\t} break;\n\t\tcase 109: /* 'm' month */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.m; outl = fmt.length; break;\n\t\t\tcase 3: return months[val.m-1][1];\n\t\t\tcase 5: return months[val.m-1][0];\n\t\t\tdefault: return months[val.m-1][2];\n\t\t} break;\n\t\tcase 100: /* 'd' day */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.d; outl = fmt.length; break;\n\t\t\tcase 3: return days[val.q][0];\n\t\t\tdefault: return days[val.q][1];\n\t\t} break;\n\t\tcase 104: /* 'h' 12-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = 1+(val.H+11)%12; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 72: /* 'H' 24-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.H; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 77: /* 'M' minutes */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.M; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad minute format: ' + fmt;\n\t\t} break;\n\t\tcase 115: /* 's' seconds */\n\t\t\tif(fmt != 's' && fmt != 'ss' && fmt != '.0' && fmt != '.00' && fmt != '.000') throw 'bad second format: ' + fmt;\n\t\t\tif(val.u === 0 && (fmt == \"s\" || fmt == \"ss\")) return pad0(val.S, fmt.length);\nif(ss0 >= 2) tt = ss0 === 3 ? 1000 : 100;\n\t\t\telse tt = ss0 === 1 ? 10 : 1;\n\t\t\tss = Math.round((tt)*(val.S + val.u));\n\t\t\tif(ss >= 60*tt) ss = 0;\n\t\t\tif(fmt === 's') return ss === 0 ? \"0\" : \"\"+ss/tt;\n\t\t\to = pad0(ss,2 + ss0);\n\t\t\tif(fmt === 'ss') return o.substr(0,2);\n\t\t\treturn \".\" + o.substr(2,fmt.length-1);\n\t\tcase 90: /* 'Z' absolute time */\n\t\tswitch(fmt) {\n\t\t\tcase '[h]': case '[hh]': out = val.D*24+val.H; break;\n\t\t\tcase '[m]': case '[mm]': out = (val.D*24+val.H)*60+val.M; break;\n\t\t\tcase '[s]': case '[ss]': out = ((val.D*24+val.H)*60+val.M)*60+(ss0 == 0 ? Math.round(val.S+val.u) : val.S); break;\n\t\t\tdefault: throw 'bad abstime format: ' + fmt;\n\t\t} outl = fmt.length === 3 ? 1 : 2; break;\n\t\tcase 101: /* 'e' era */\n\t\t\tout = y; outl = 1; break;\n\t}\n\tvar outstr = outl > 0 ? pad0(out, outl) : \"\";\n\treturn outstr;\n}\n/*jshint +W086 */\nfunction commaify(s) {\n\tvar w = 3;\n\tif(s.length <= w) return s;\n\tvar j = (s.length % w), o = s.substr(0,j);\n\tfor(; j!=s.length; j+=w) o+=(o.length > 0 ? \",\" : \"\") + s.substr(j,w);\n\treturn o;\n}\nvar write_num = (function make_write_num(){\nvar pct1 = /%/g;\nfunction write_num_pct(type, fmt, val){\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_cm(type, fmt, val){\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_exp(fmt, val){\n\tvar o;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(o.indexOf(\"e\") === -1) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\twhile(o.substr(0,2) === \"0.\") {\n\t\t\t\to = o.charAt(0) + o.substr(2,period) + \".\" + o.substr(2+period);\n\t\t\t\to = o.replace(/^0+([1-9])/,\"$1\").replace(/^0+\\./,\"0.\");\n\t\t\t}\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nvar frac1 = /# (\\?+)( ?)\\/( ?)(\\d+)/;\nfunction write_num_f1(r, aval, sign) {\n\tvar den = parseInt(r[4],10), rr = Math.round(aval * den), base = Math.floor(rr/den);\n\tvar myn = (rr - base*den), myd = den;\n\treturn sign + (base === 0 ? \"\" : \"\"+base) + \" \" + (myn === 0 ? fill(\" \", r[1].length + 1 + r[4].length) : pad_(myn,r[1].length) + r[2] + \"/\" + r[3] + pad0(myd,r[4].length));\n}\nfunction write_num_f2(r, aval, sign) {\n\treturn sign + (aval === 0 ? \"\" : \"\"+aval) + fill(\" \", r[1].length + 2 + r[4].length);\n}\nvar dec1 = /^#*0*\\.([0#]+)/;\nvar closeparen = /\\).*[0#]/;\nvar phone = /\\(###\\) ###\\\\?-####/;\nfunction hashq(str) {\n\tvar o = \"\", cc;\n\tfor(var i = 0; i != str.length; ++i) switch((cc=str.charCodeAt(i))) {\n\t\tcase 35: break;\n\t\tcase 63: o+= \" \"; break;\n\t\tcase 48: o+= \"0\"; break;\n\t\tdefault: o+= String.fromCharCode(cc);\n\t}\n\treturn o;\n}\nfunction rnd(val, d) { var dd = Math.pow(10,d); return \"\"+(Math.round(val * dd)/dd); }\nfunction dec(val, d) {\n\tvar _frac = val - Math.floor(val), dd = Math.pow(10,d);\n\tif (d < ('' + Math.round(_frac * dd)).length) return 0;\n\treturn Math.round(_frac * dd);\n}\nfunction carry(val, d) {\n\tif (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nfunction flr(val) {\n\tif(val < 2147483647 && val > -2147483648) return \"\"+(val >= 0 ? (val|0) : (val-1|0));\n\treturn \"\"+Math.floor(val);\n}\nfunction write_num_flt(type, fmt, val) {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_flt('n', ffmt, val);\n\t\treturn '(' + write_num_flt('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_flt(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0r(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = pad0r(val,0); if(o === \"0\") o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f1(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0r(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\n\t\to = rnd(val, r[1].length).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1])).replace(/\\.(\\d*)$/,function($$, $1) { return \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + rnd(aval, r[2].length).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify(pad0r(aval,0));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(\"\"+(Math.floor(val) + carry(val, r[1].length))) + \".\" + pad0(dec(val, r[1].length),r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_flt(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_flt(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_flt(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(r[4].length,7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", r[1], ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + r[2] + \"/\" + r[3];\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = pad0r(val, 0);\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0?]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\tri = dec(val, r[1].length);\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(flr(val)).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(ri,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,##0.00\": return write_num_flt(type, \"#,##0.00\", val);\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(pad0r(aval,0)); return x !== \"0\" ? sign + x : \"\";\n\t\tcase \"###,###.00\": return write_num_flt(type, \"###,##0.00\",val).replace(/^0\\./,\".\");\n\t\tcase \"#,###.00\": return write_num_flt(type, \"#,##0.00\",val).replace(/^0\\./,\".\");\n\t\tdefault:\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nfunction write_num_cm2(type, fmt, val){\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_pct2(type, fmt, val){\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_exp2(fmt, val){\n\tvar o;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp2(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(!o.match(/[Ee]/)) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nfunction write_num_int(type, fmt, val) {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_int('n', ffmt, val);\n\t\treturn '(' + write_num_int('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm2(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct2(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp2(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_int(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = (\"\"+val); if(val === 0) o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f2(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\no = (\"\"+val).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1]));\n\t\to = o.replace(/\\.(\\d*)$/,function($$, $1) {\nreturn \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + (\"\"+aval).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify((\"\"+aval));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify((\"\"+val)) + \".\" + fill('0',r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_int(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_int(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_int(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(r[4].length,7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", r[1], ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + r[2] + \"/\" + r[3];\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = \"\" + val;\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify(\"\"+val).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(0,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(\"\"+aval); return x !== \"0\" ? sign + x : \"\";\n\t\tdefault:\n\t\t\tif(fmt.match(/\\.[0#?]*$/)) return write_num_int(type, fmt.slice(0,fmt.lastIndexOf(\".\")), val) + hashq(fmt.slice(fmt.lastIndexOf(\".\")));\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nreturn function write_num(type, fmt, val) {\n\treturn (val|0) === val ? write_num_int(type, fmt, val) : write_num_flt(type, fmt, val);\n};})();\nfunction split_fmt(fmt) {\n\tvar out = [];\n\tvar in_str = false/*, cc*/;\n\tfor(var i = 0, j = 0; i < fmt.length; ++i) switch((/*cc=*/fmt.charCodeAt(i))) {\n\t\tcase 34: /* '\"' */\n\t\t\tin_str = !in_str; break;\n\t\tcase 95: case 42: case 92: /* '_' '*' '\\\\' */\n\t\t\t++i; break;\n\t\tcase 59: /* ';' */\n\t\t\tout[out.length] = fmt.substr(j,i-j);\n\t\t\tj = i+1;\n\t}\n\tout[out.length] = fmt.substr(j);\n\tif(in_str === true) throw new Error(\"Format |\" + fmt + \"| unterminated string \");\n\treturn out;\n}\nSSF._split = split_fmt;\nvar abstime = /\\[[HhMmSs\\u0E0A\\u0E19\\u0E17]*\\]/;\nfunction fmt_is_date(fmt) {\n\tvar i = 0, /*cc = 0,*/ c = \"\", o = \"\";\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': if(isgeneral(fmt, i)) i+= 6; i++; break;\n\t\t\tcase '\"': for(;(/*cc=*/fmt.charCodeAt(++i)) !== 34 && i < fmt.length;){/*empty*/} ++i; break;\n\t\t\tcase '\\\\': i+=2; break;\n\t\t\tcase '_': i+=2; break;\n\t\t\tcase '@': ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") return true;\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g': return true;\n\t\t\tcase 'A': case 'a': case '\u4E0A':\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") return true;\n\t\t\t\tif(fmt.substr(i, 5).toUpperCase() === \"AM/PM\") return true;\n\t\t\t\tif(fmt.substr(i, 5).toUpperCase() === \"\u4E0A\u5348/\u4E0B\u5348\") return true;\n\t\t\t\t++i; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.match(abstime)) return true;\n\t\t\t\tbreak;\n\t\t\tcase '.':\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\twhile(i < fmt.length && (\"0#?.,E+-%\".indexOf(c=fmt.charAt(++i)) > -1 || (c=='\\\\' && fmt.charAt(i+1) == \"-\" && \"0#\".indexOf(fmt.charAt(i+2))>-1))){/* empty */}\n\t\t\t\tbreak;\n\t\t\tcase '?': while(fmt.charAt(++i) === c){/* empty */} break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break;\n\t\t\tcase '(': case ')': ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\twhile(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1){/* empty */} break;\n\t\t\tcase ' ': ++i; break;\n\t\t\tdefault: ++i; break;\n\t\t}\n\t}\n\treturn false;\n}\nSSF.is_date = fmt_is_date;\nfunction eval_fmt(fmt, v, opts, flen) {\n\tvar out = [], o = \"\", i = 0, c = \"\", lst='t', dt, j, cc;\n\tvar hr='H';\n\t/* Tokenize */\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': /* General */\n\t\t\t\tif(!isgeneral(fmt, i)) throw new Error('unrecognized character ' + c + ' in ' +fmt);\n\t\t\t\tout[out.length] = {t:'G', v:'General'}; i+=7; break;\n\t\t\tcase '\"': /* Literal text */\n\t\t\t\tfor(o=\"\";(cc=fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) o += String.fromCharCode(cc);\n\t\t\t\tout[out.length] = {t:'t', v:o}; ++i; break;\n\t\t\tcase '\\\\': var w = fmt.charAt(++i), t = (w === \"(\" || w === \")\") ? w : 't';\n\t\t\t\tout[out.length] = {t:t, v:w}; ++i; break;\n\t\t\tcase '_': out[out.length] = {t:'t', v:\" \"}; i+=2; break;\n\t\t\tcase '@': /* Text Placeholder */\n\t\t\t\tout[out.length] = {t:'T', v:v}; ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") {\n\t\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts, fmt.charAt(i+1) === \"2\"); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'X', v:fmt.substr(i,2)}; lst = c; i+=2; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\tc = c.toLowerCase();\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g':\n\t\t\t\tif(v < 0) return \"\";\n\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\to = c; while(++i < fmt.length && fmt.charAt(i).toLowerCase() === c) o+=c;\n\t\t\t\tif(c === 'm' && lst.toLowerCase() === 'h') c = 'M';\n\t\t\t\tif(c === 'h') c = hr;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase 'A': case 'a': case '\u4E0A':\n\t\t\t\tvar q={t:c, v:c};\n\t\t\t\tif(dt==null) dt=parse_date_code(v, opts);\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") { if(dt!=null) q.v = dt.H >= 12 ? fmt.charAt(i+2) : c; q.t = 'T'; hr='h';i+=3;}\n\t\t\t\telse if(fmt.substr(i,5).toUpperCase() === \"AM/PM\") { if(dt!=null) q.v = dt.H >= 12 ? \"PM\" : \"AM\"; q.t = 'T'; i+=5; hr='h'; }\n\t\t\t\telse if(fmt.substr(i,5).toUpperCase() === \"\u4E0A\u5348/\u4E0B\u5348\") { if(dt!=null) q.v = dt.H >= 12 ? \"\u4E0B\u5348\" : \"\u4E0A\u5348\"; q.t = 'T'; i+=5; hr='h'; }\n\t\t\t\telse { q.t = \"t\"; ++i; }\n\t\t\t\tif(dt==null && q.t === 'T') return \"\";\n\t\t\t\tout[out.length] = q; lst = c; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.slice(-1) !== ']') throw 'unterminated \"[\" block: |' + o + '|';\n\t\t\t\tif(o.match(abstime)) {\n\t\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'Z', v:o.toLowerCase()};\n\t\t\t\t\tlst = o.charAt(1);\n\t\t\t\t} else if(o.indexOf(\"$\") > -1) {\n\t\t\t\t\to = (o.match(/\\$([^-\\[\\]]*)/)||[])[1]||\"$\";\n\t\t\t\t\tif(!fmt_is_date(fmt)) out[out.length] = {t:'t',v:o};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t/* Numbers */\n\t\t\tcase '.':\n\t\t\t\tif(dt != null) {\n\t\t\t\t\to = c; while(++i < fmt.length && (c=fmt.charAt(i)) === \"0\") o += c;\n\t\t\t\t\tout[out.length] = {t:'s', v:o}; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\to = c; while(++i < fmt.length && \"0#?.,E+-%\".indexOf(c=fmt.charAt(i)) > -1) o += c;\n\t\t\t\tout[out.length] = {t:'n', v:o}; break;\n\t\t\tcase '?':\n\t\t\t\to = c; while(fmt.charAt(++i) === c) o+=c;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break; // **\n\t\t\tcase '(': case ')': out[out.length] = {t:(flen===1?'t':c), v:c}; ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\to = c; while(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1) o+=fmt.charAt(i);\n\t\t\t\tout[out.length] = {t:'D', v:o}; break;\n\t\t\tcase ' ': out[out.length] = {t:c, v:c}; ++i; break;\n\t\t\tcase '$': out[out.length] = {t:'t', v:'$'}; ++i; break;\n\t\t\tdefault:\n\t\t\t\tif(\",$-+/():!^&'~{}<>=\u20ACacfijklopqrtuvwxzP\".indexOf(c) === -1) throw new Error('unrecognized character ' + c + ' in ' + fmt);\n\t\t\t\tout[out.length] = {t:'t', v:c}; ++i; break;\n\t\t}\n\t}\n\n\t/* Scan for date/time parts */\n\tvar bt = 0, ss0 = 0, ssm;\n\tfor(i=out.length-1, lst='t'; i >= 0; --i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 'h': case 'H': out[i].t = hr; lst='h'; if(bt < 1) bt = 1; break;\n\t\t\tcase 's':\n\t\t\t\tif((ssm=out[i].v.match(/\\.0+$/))) { ss0=Math.max(ss0,ssm[0].length-1); bt = 4;}\n\t\t\t\tif(bt < 3) bt = 3;\n\t\t\t/* falls through */\n\t\t\tcase 'd': case 'y': case 'e': lst=out[i].t; break;\n\t\t\tcase 'M': lst=out[i].t; if(bt < 2) bt = 2; break;\n\t\t\tcase 'm': if(lst === 's') { out[i].t = 'M'; if(bt < 2) bt = 2; } break;\n\t\t\tcase 'X': /*if(out[i].v === \"B2\");*/\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\tif(bt < 1 && out[i].v.match(/[Hh]/)) bt = 1;\n\t\t\t\tif(bt < 2 && out[i].v.match(/[Mm]/)) bt = 2;\n\t\t\t\tif(bt < 3 && out[i].v.match(/[Ss]/)) bt = 3;\n\t\t}\n\t}\n\n\t/* time rounding depends on presence of minute / second / usec fields */\n\tvar _dt;\n\tswitch(bt) {\n\t\tcase 0: break;\n\t\tcase 1:\n\t\tcase 2:\n\t\tcase 3:\n\t\t\tif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tif(dt.M >=  60) { dt.M = 0; ++dt.H; }\n\t\t\tif(dt.H >=  24) { dt.H = 0; ++dt.D; _dt = parse_date_code(dt.D); _dt.u = dt.u; _dt.S = dt.S; _dt.M = dt.M; _dt.H = dt.H; dt = _dt; }\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tswitch(ss0) {\n\t\t\t\tcase 1: dt.u = Math.round(dt.u * 10)/10; break;\n\t\t\t\tcase 2: dt.u = Math.round(dt.u * 100)/100; break;\n\t\t\t\tcase 3: dt.u = Math.round(dt.u * 1000)/1000; break;\n\t\t\t}\n\t\t\tif(dt.u >=   1) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tif(dt.M >=  60) { dt.M = 0; ++dt.H; }\n\t\t\tif(dt.H >=  24) { dt.H = 0; ++dt.D; _dt = parse_date_code(dt.D); _dt.u = dt.u; _dt.S = dt.S; _dt.M = dt.M; _dt.H = dt.H; dt = _dt; }\n\t\t\tbreak;\n\t}\n\n\t/* replace fields */\n\tvar nstr = \"\", jj;\n\tfor(i=0; i < out.length; ++i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 't': case 'T': case ' ': case 'D': break;\n\t\t\tcase 'X': out[i].v = \"\"; out[i].t = \";\"; break;\n\t\t\tcase 'd': case 'm': case 'y': case 'h': case 'H': case 'M': case 's': case 'e': case 'b': case 'Z':\nout[i].v = write_date(out[i].t.charCodeAt(0), out[i].v, dt, ss0);\n\t\t\t\tout[i].t = 't'; break;\n\t\t\tcase 'n': case '?':\n\t\t\t\tjj = i+1;\n\t\t\t\twhile(out[jj] != null && (\n\t\t\t\t\t(c=out[jj].t) === \"?\" || c === \"D\" ||\n\t\t\t\t\t((c === \" \" || c === \"t\") && out[jj+1] != null && (out[jj+1].t === '?' || out[jj+1].t === \"t\" && out[jj+1].v === '/')) ||\n\t\t\t\t\t(out[i].t === '(' && (c === ' ' || c === 'n' || c === ')')) ||\n\t\t\t\t\t(c === 't' && (out[jj].v === '/' || out[jj].v === ' ' && out[jj+1] != null && out[jj+1].t == '?'))\n\t\t\t\t)) {\n\t\t\t\t\tout[i].v += out[jj].v;\n\t\t\t\t\tout[jj] = {v:\"\", t:\";\"}; ++jj;\n\t\t\t\t}\n\t\t\t\tnstr += out[i].v;\n\t\t\t\ti = jj-1; break;\n\t\t\tcase 'G': out[i].t = 't'; out[i].v = general_fmt(v,opts); break;\n\t\t}\n\t}\n\tvar vv = \"\", myv, ostr;\n\tif(nstr.length > 0) {\n\t\tif(nstr.charCodeAt(0) == 40) /* '(' */ {\n\t\t\tmyv = (v<0&&nstr.charCodeAt(0) === 45 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t} else {\n\t\t\tmyv = (v<0 && flen > 1 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t\tif(myv < 0 && out[0] && out[0].t == 't') {\n\t\t\t\tostr = ostr.substr(1);\n\t\t\t\tout[0].v = \"-\" + out[0].v;\n\t\t\t}\n\t\t}\n\t\tjj=ostr.length-1;\n\t\tvar decpt = out.length;\n\t\tfor(i=0; i < out.length; ++i) if(out[i] != null && out[i].t != 't' && out[i].v.indexOf(\".\") > -1) { decpt = i; break; }\n\t\tvar lasti=out.length;\n\t\tif(decpt === out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tfor(i=out.length-1; i>= 0;--i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tif(jj>=out[i].v.length-1) { jj -= out[i].v.length; out[i].v = ostr.substr(jj+1, out[i].v.length); }\n\t\t\t\telse if(jj < 0) out[i].v = \"\";\n\t\t\t\telse { out[i].v = ostr.substr(0, jj+1); jj = -1; }\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t}\n\t\telse if(decpt !== out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tjj = ostr.indexOf(\".\")-1;\n\t\t\tfor(i=decpt; i>= 0; --i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")-1:out[i].v.length-1;\n\t\t\t\tvv = out[i].v.substr(j+1);\n\t\t\t\tfor(; j>=0; --j) {\n\t\t\t\t\tif(jj>=0 && (out[i].v.charAt(j) === \"0\" || out[i].v.charAt(j) === \"#\")) vv = ostr.charAt(jj--) + vv;\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t\tjj = ostr.indexOf(\".\")+1;\n\t\t\tfor(i=decpt; i<out.length; ++i) {\n\t\t\t\tif(out[i] == null || ('n?('.indexOf(out[i].t) === -1 && i !== decpt)) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")+1:0;\n\t\t\t\tvv = out[i].v.substr(0,j);\n\t\t\t\tfor(; j<out[i].v.length; ++j) {\n\t\t\t\t\tif(jj<ostr.length) vv += ostr.charAt(jj++);\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0; i<out.length; ++i) if(out[i] != null && 'n?'.indexOf(out[i].t)>-1) {\n\t\tmyv = (flen >1 && v < 0 && i>0 && out[i-1].v === \"-\" ? -v:v);\n\t\tout[i].v = write_num(out[i].t, out[i].v, myv);\n\t\tout[i].t = 't';\n\t}\n\tvar retval = \"\";\n\tfor(i=0; i !== out.length; ++i) if(out[i] != null) retval += out[i].v;\n\treturn retval;\n}\nSSF._eval = eval_fmt;\nvar cfregex = /\\[[=<>]/;\nvar cfregex2 = /\\[(=|>[=]?|<[>=]?)(-?\\d+(?:\\.\\d*)?)\\]/;\nfunction chkcond(v, rr) {\n\tif(rr == null) return false;\n\tvar thresh = parseFloat(rr[2]);\n\tswitch(rr[1]) {\n\t\tcase \"=\":  if(v == thresh) return true; break;\n\t\tcase \">\":  if(v >  thresh) return true; break;\n\t\tcase \"<\":  if(v <  thresh) return true; break;\n\t\tcase \"<>\": if(v != thresh) return true; break;\n\t\tcase \">=\": if(v >= thresh) return true; break;\n\t\tcase \"<=\": if(v <= thresh) return true; break;\n\t}\n\treturn false;\n}\nfunction choose_fmt(f, v) {\n\tvar fmt = split_fmt(f);\n\tvar l = fmt.length, lat = fmt[l-1].indexOf(\"@\");\n\tif(l<4 && lat>-1) --l;\n\tif(fmt.length > 4) throw new Error(\"cannot find right format for |\" + fmt.join(\"|\") + \"|\");\n\tif(typeof v !== \"number\") return [4, fmt.length === 4 || lat>-1?fmt[fmt.length-1]:\"@\"];\n\tswitch(fmt.length) {\n\t\tcase 1: fmt = lat>-1 ? [\"General\", \"General\", \"General\", fmt[0]] : [fmt[0], fmt[0], fmt[0], \"@\"]; break;\n\t\tcase 2: fmt = lat>-1 ? [fmt[0], fmt[0], fmt[0], fmt[1]] : [fmt[0], fmt[1], fmt[0], \"@\"]; break;\n\t\tcase 3: fmt = lat>-1 ? [fmt[0], fmt[1], fmt[0], fmt[2]] : [fmt[0], fmt[1], fmt[2], \"@\"]; break;\n\t\tcase 4: break;\n\t}\n\tvar ff = v > 0 ? fmt[0] : v < 0 ? fmt[1] : fmt[2];\n\tif(fmt[0].indexOf(\"[\") === -1 && fmt[1].indexOf(\"[\") === -1) return [l, ff];\n\tif(fmt[0].match(cfregex) != null || fmt[1].match(cfregex) != null) {\n\t\tvar m1 = fmt[0].match(cfregex2);\n\t\tvar m2 = fmt[1].match(cfregex2);\n\t\treturn chkcond(v, m1) ? [l, fmt[0]] : chkcond(v, m2) ? [l, fmt[1]] : [l, fmt[m1 != null && m2 != null ? 2 : 1]];\n\t}\n\treturn [l, ff];\n}\nfunction format(fmt,v,o) {\n\tif(o == null) o = {};\n\tvar sfmt = \"\";\n\tswitch(typeof fmt) {\n\t\tcase \"string\":\n\t\t\tif(fmt == \"m/d/yy\" && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = fmt;\n\t\t\tbreak;\n\t\tcase \"number\":\n\t\t\tif(fmt == 14 && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = (o.table != null ? (o.table) : table_fmt)[fmt];\n\t\t\tif(sfmt == null) sfmt = (o.table && o.table[default_map[fmt]]) || table_fmt[default_map[fmt]];\n\t\t\tif(sfmt == null) sfmt = default_str[fmt] || \"General\";\n\t\t\tbreak;\n\t}\n\tif(isgeneral(sfmt,0)) return general_fmt(v, o);\n\tif(v instanceof Date) v = datenum_local(v, o.date1904);\n\tvar f = choose_fmt(sfmt, v);\n\tif(isgeneral(f[1])) return general_fmt(v, o);\n\tif(v === true) v = \"TRUE\"; else if(v === false) v = \"FALSE\";\n\telse if(v === \"\" || v == null) return \"\";\n\treturn eval_fmt(f[1], v, o, f[0]);\n}\nfunction load_entry(fmt, idx) {\n\tif(typeof idx != 'number') {\n\t\tidx = +idx || -1;\nfor(var i = 0; i < 0x0188; ++i) {\nif(table_fmt[i] == undefined) { if(idx < 0) idx = i; continue; }\n\t\t\tif(table_fmt[i] == fmt) { idx = i; break; }\n\t\t}\nif(idx < 0) idx = 0x187;\n\t}\ntable_fmt[idx] = fmt;\n\treturn idx;\n}\nSSF.load = load_entry;\nSSF._table = table_fmt;\nSSF.get_table = function get_table() { return table_fmt; };\nSSF.load_table = function load_table(tbl) {\n\tfor(var i=0; i!=0x0188; ++i)\n\t\tif(tbl[i] !== undefined) load_entry(tbl[i], i);\n};\nSSF.init_table = init_table;\nSSF.format = format;\nSSF.choose_format = choose_fmt;\n}\nmake_ssf(SSF);\n/*global module */\nif(typeof module !== 'undefined' && typeof DO_NOT_EXPORT_SSF === 'undefined') module.exports = SSF;\n", "import { ErrorTypes, BorderType } from '@/types';\n\nexport const DEFAULT_FONT_SIZE = 12;\nexport const MUST_FONT_FAMILY = 'sans-serif';\nexport const SHEET_NAME_PREFIX = 'Sheet';\nexport const CELL_HEIGHT = 22;\nexport const CELL_WIDTH = 76;\nexport const ROW_TITLE_HEIGHT = CELL_HEIGHT;\nexport const COL_TITLE_WIDTH = CELL_WIDTH / 2;\nexport const HIDE_CELL = 0;\nexport const TEXTAREA_MAX_ROWS = 10;\nexport const MERGE_CELL_LINE_BREAK = '&#10;';\nexport const LINE_BREAK = '\\n';\nexport const CSV_SPLITTER = ',';\nexport const XLSX_MAX_COL_COUNT = 16384; // XFD\nexport const XLSX_MAX_ROW_COUNT = 1048576;\nexport const DEFAULT_ROW_COUNT = 200;\nexport const MAX_ADD_ROW_THRESHOLD = 200;\nexport const DEFAULT_COL_COUNT = 30;\nexport const DEFAULT_POSITION = -999;\n\nexport const SHEET_ITEM_TEST_ID_PREFIX = '__sheet_item_';\nexport const FORMULA_PREFIX = '=';\nexport const SPLITTER = '_';\nexport const MAX_NAME_LENGTH = 35;\nexport const MAX_PARAMS_COUNT = 256;\nexport const DEFINED_NAME_REG_EXP = /^[a-zA-Z_][a-zA-Z0-9_.]*$/;\nexport const FORMULA_MAX_PRECISION = 9;\nexport const FORMULA_EDITOR_ROLE = '__FORMULA_EDITOR_ROLE__';\n\nexport const DEFAULT_FORMAT_CODE = 'General';\nexport const DEFAULT_TEXT_FORMAT_CODE = '@';\n\nexport const ERROR_SET = new Set<ErrorTypes>([\n  '#ERROR!',\n  '#DIV/0!',\n  '#NULL!',\n  '#NUM!',\n  '#REF!',\n  '#VALUE!',\n  '#N/A',\n  '#NAME?',\n]);\n\nexport const DEFAULT_LINE_WIDTH = 1;\n\nexport const BORDER_TYPE_MAP: Record<BorderType, number> = {\n  thin: DEFAULT_LINE_WIDTH,\n  hair: DEFAULT_LINE_WIDTH,\n  dotted: DEFAULT_LINE_WIDTH,\n  dashed: DEFAULT_LINE_WIDTH,\n  dashDot: DEFAULT_LINE_WIDTH,\n  dashDotDot: DEFAULT_LINE_WIDTH,\n  double: DEFAULT_LINE_WIDTH,\n  medium: DEFAULT_LINE_WIDTH * 2,\n  mediumDashed: DEFAULT_LINE_WIDTH * 2,\n  mediumDashDot: DEFAULT_LINE_WIDTH * 2,\n  mediumDashDotDot: DEFAULT_LINE_WIDTH * 2,\n  thick: DEFAULT_LINE_WIDTH * 4,\n};\n\nexport const COLOR_PICKER_COLOR_LIST = [\n  '#35322B',\n  '#505050',\n  '#606060',\n  '#6F6F6F',\n  '#8B8B8B',\n  '#B2B2B2',\n  '#CCCCCC',\n  '#E5E5E5',\n  '#F5F5F5',\n  '#FFFFFF',\n  '#9D0000',\n  '#B20000',\n  '#CD0F0F',\n  '#E30909',\n  '#F30B0B',\n  '#FE4B4B',\n  '#FA7979',\n  '#FB9D9D',\n  '#FDCECE',\n  '#FEE7E7',\n  '#B24000',\n  '#CC4F10',\n  '#DF5D00',\n  '#F96800',\n  '#FB8937',\n  '#FF8C51',\n  '#FCA669',\n  '#FDC49B',\n  '#FEE1CD',\n  '#FEF0E6',\n  '#B19401',\n  '#C5A300',\n  '#D8B300',\n  '#EBC301',\n  '#F9D700',\n  '#FBE137',\n  '#FCE869',\n  '#FDF09B',\n  '#FEF7CD',\n  '#FEFBE6',\n  '#58770A',\n  '#688C0D',\n  '#7AA017',\n  '#8BBB11',\n  '#A4DC16',\n  '#BEEE44',\n  '#CEF273',\n  '#DEF6A2',\n  '#EFFBD0',\n  '#F7FDE8',\n  '#007676',\n  '#008A8A',\n  '#009E9E',\n  '#00BBBB',\n  '#1CD8D8',\n  '#2AEAEA',\n  '#76EFEF',\n  '#A3F5F5',\n  '#D1FAFA',\n  '#E8FCFC',\n  '#001F9C',\n  '#0025B7',\n  '#012BD2',\n  '#133DE3',\n  '#2F55EB',\n  '#4567ED',\n  '#738DF2',\n  '#A2B3F6',\n  '#D0D9FB',\n  '#E8ECFD',\n  '#3F0198',\n  '#510EB0',\n  '#6721CB',\n  '#7735D4',\n  '#894EDE',\n  '#9E6DE3',\n  '#AA82E3',\n  '#C7ABED',\n  '#E3D5F6',\n  '#F1EAFA',\n  '#8F0550',\n  '#A1095C',\n  '#C1026B',\n  '#D4157E',\n  '#E7258F',\n  '#F248A6',\n  '#F273B9',\n  '#F6A2D0',\n  '#FBD0E8',\n  '#FDE8F3',\n];\n", "import { SHEET_NAME_PREFIX, SPLITTER } from './constant';\nimport type {\n  WorksheetType,\n  ChangeEventType,\n  Coordinate,\n  ICommandItem,\n  ResultType,\n} from '@/types';\n\nexport function parseNumber(value: any): [boolean, number] {\n  if (typeof value === 'boolean') {\n    return [true, Number(value)];\n  }\n  if (typeof value === 'number' && !isNaN(value)) {\n    return [true, value];\n  }\n  if (typeof value !== 'string') {\n    return [false, 0];\n  }\n  if (value.length > 12) {\n    return [false, 0];\n  }\n  const temp = Number(value);\n  if (isNaN(temp)) {\n    return [false, 0];\n  }\n  return [true, temp];\n}\n\nexport function getListMaxNum(list: string[] = []): number {\n  const idList: number[] = list\n    .map((item) => {\n      return parseNumber(item)[1];\n    })\n    .filter((v) => !isNaN(v));\n  return Math.max(Math.max(...idList), 0);\n}\n\nexport function getDefaultSheetInfo(\n  list: WorksheetType[] = [],\n): Pick<WorksheetType, 'name' | 'sheetId' | 'sort'> {\n  const sheetId =\n    Math.ceil(getListMaxNum(list.map((item) => item.sheetId))) + 1;\n  return {\n    name: `${SHEET_NAME_PREFIX}${sheetId}`,\n    sheetId: String(sheetId),\n    sort: sheetId,\n  };\n}\n\nexport function convertStringToResultType(value: any): ResultType {\n  if (typeof value === 'string') {\n    const temp = value.toUpperCase();\n    if (['TRUE', 'FALSE'].includes(temp)) {\n      return temp === 'TRUE';\n    }\n  }\n  if (typeof value === 'boolean') {\n    return value;\n  }\n  if (value === '') {\n    return '';\n  }\n  const [check, num] = parseNumber(value);\n  if (check) {\n    return num;\n  }\n  return value;\n}\n\nexport function coordinateToString(\n  row: number,\n  col: number,\n): `${number}_${number}` {\n  return `${row}${SPLITTER}${col}`;\n}\n\nexport function stringToCoordinate(key: string): Coordinate {\n  const [row, col] = key.split(SPLITTER);\n  const r = parseInt(row, 10);\n  const c = parseInt(col, 10);\n  return {\n    row: isNaN(r) ? -1 : r,\n    col: isNaN(c) ? -1 : c,\n  };\n}\n\nexport function getCustomWidthOrHeightKey(\n  sheetId: string,\n  rowOrCol: number,\n): `${string}_${number}` {\n  return `${sheetId}${SPLITTER}${rowOrCol}`;\n}\n\nexport function widthOrHeightKeyToData(key: string) {\n  const [sheetId, num] = key.split(SPLITTER);\n  const r = parseInt(num, 10);\n  return {\n    sheetId,\n    rowOrCol: isNaN(r) ? -1 : r,\n  };\n}\n\nexport function generateUUID() {\n  let d = new Date().getTime();\n\n  const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\n    /[xy]/g,\n    function (c) {\n      const r = (d + Math.random() * 16) % 16 | 0;\n      d = Math.floor(d / 16);\n      return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n    },\n  );\n\n  return uuid;\n}\n\nexport function isMobile() {\n  const matchList = [\n    /Android/i,\n    /webOS/i,\n    /iPhone/i,\n    /iPad/i,\n    /iPod/i,\n    /BlackBerry/i,\n    /Windows Phone/i,\n  ];\n  const ua = navigator.userAgent;\n  return matchList.some((v) => ua.match(v));\n}\n\nexport function modelToChangeSet(list: ICommandItem[]) {\n  const result = new Set<ChangeEventType>();\n  for (const item of list) {\n    const type = item.type;\n    result.add(type);\n    if (type === 'worksheets') {\n      if (item.key.includes('style')) {\n        result.add('cellStyle');\n      } else if (item.key.includes('value') || item.key.includes('formula')) {\n        result.add('cellValue');\n      } else {\n        result.add('cellValue');\n        result.add('cellStyle');\n      }\n    } else if (type === 'workbook') {\n      if (item.key.includes('rowCount')) {\n        result.add('row');\n      }\n      if (item.key.includes('colCount')) {\n        result.add('col');\n      }\n    } else if (type === 'customHeight') {\n      result.add('row');\n    } else if (type === 'customWidth') {\n      result.add('col');\n    }\n  }\n  return result;\n}\n\nexport function sleep(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport function isTestEnv(): boolean {\n  return process.env.NODE_ENV === 'test';\n}\n\nexport function isMac() {\n  return navigator.userAgent.indexOf('Mac OS X') > -1;\n}\n", "import type { ErrorTypes } from '@/types';\nimport { parseNumber } from '@/util/util';\n\nexport class CustomError extends Error {\n  readonly value: ErrorTypes;\n  constructor(value: ErrorTypes) {\n    super(value);\n    this.value = value;\n  }\n}\n\nexport function assert(\n  condition: boolean,\n  message: ErrorTypes = '#VALUE!',\n): asserts condition {\n  if (!condition) {\n    throw new CustomError(message);\n  }\n}\n\nexport function mustOne(list: any[]): any {\n  assert(list.length === 1);\n  const [value] = list;\n  return value;\n}\n\nexport function mustOneString(list: any[]): string {\n  const value = mustOne(list);\n  assert(typeof value === 'string');\n  return value;\n}\n\nexport function mustOneNumber(list: any[]): number {\n  const value = mustOne(list);\n  const [check, num] = parseNumber(value);\n  assert(check);\n  return num;\n}\n\nexport function mustEmpty(list: any[]) {\n  assert(list.length === 0);\n}\n\nexport function isRelativeReference(value: string) {\n  const realValue = value.toUpperCase();\n  return /^[A-Z]+\\d+$/.test(realValue) || /^[A-Z]+$/.test(realValue);\n}\n\n", "import type { TextFormulaType, ResultType } from '@/types';\nimport { MAX_PARAMS_COUNT } from '@/util/constant';\nimport { assert, mustOneString, mustOneNumber, mustOne } from './error';\n\nexport const T = (...list: ResultType[]): string => {\n  const value = mustOne(list);\n  return typeof value === 'string' ? value : '';\n};\n\nexport const LOWER = (...list: ResultType[]): string => {\n  const value = mustOneString(list);\n  return value.toLowerCase();\n};\nexport const CHAR = (...list: ResultType[]): string => {\n  const value = mustOneNumber(list);\n  return String.fromCharCode(value);\n};\nexport const CODE = (...list: ResultType[]): number => {\n  const value = mustOneString(list);\n  return value.charCodeAt(0);\n};\nexport const LEN = (...list: ResultType[]): number => {\n  const value = mustOneString(list);\n  return value.length;\n};\n\nexport const SPLIT = (...list: ResultType[]): string[] => {\n  assert(list.length === 2);\n  const [value, sep] = list;\n  assert(typeof value === 'string');\n  assert(typeof sep === 'string');\n  return value.split(sep);\n};\nexport const UPPER = (...list: ResultType[]): string => {\n  const value = mustOneString(list);\n  return value.toUpperCase();\n};\nexport const TRIM = (...list: ResultType[]): string => {\n  const value = mustOneString(list);\n  return value.replace(/ +/g, ' ').trim();\n};\nexport const CONCAT = (...list: ResultType[]): string => {\n  assert(list.length <= MAX_PARAMS_COUNT);\n  return list.join('');\n};\n\nconst formulas: TextFormulaType = {\n  CONCAT,\n  CONCATENATE: CONCAT,\n  SPLIT,\n  CHAR,\n  CODE,\n  UNICHAR: CHAR,\n  UNICODE: CODE,\n  LEN,\n  LOWER,\n  UPPER,\n  TRIM,\n  T,\n};\n\nexport default formulas;\n", "import { MAX_PARAMS_COUNT } from '@/util/constant';\nimport type { MathFormulaType, ResultType } from '../../types';\nimport { assert, mustOneNumber, mustEmpty } from './error';\nimport { parseNumber } from '@/util/util';\n\nfunction parseNumberArray(list: any[]): number[] {\n  const result: number[] = [];\n  for (let i = 0; i < list.length; i++) {\n    const [check, num] = parseNumber(list[i]);\n    if (check) {\n      result.push(num);\n    }\n  }\n  return result;\n}\n\nexport const ABS = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.abs(data);\n};\nexport const ACOS = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.acos(data);\n};\n\nexport const ACOSH = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.log(data + Math.sqrt(data * data - 1));\n};\n\nexport const ACOT = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.atan(1 / data);\n};\n\nexport const ACOTH = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return 0.5 * Math.log((data + 1) / (data - 1));\n};\nexport const ASIN = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.asin(data);\n};\n\nexport const ASINH = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.log(data + Math.sqrt(data * data + 1));\n};\nexport const ATAN = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.atan(data);\n};\nexport const ATAN2 = (...list: ResultType[]): number => {\n  assert(list.length === 2);\n  const [x, y] = list;\n  assert(typeof x === 'number');\n  assert(typeof y === 'number');\n  return Math.atan2(x, y);\n};\nexport const ATANH = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.log((1 + data) / (data + 1)) / 2;\n};\n\nexport const AVERAGE = (...rest: ResultType[]): number => {\n  const list = parseNumberArray(rest);\n  assert(list.length <= MAX_PARAMS_COUNT && list.length >= 1);\n  return list.reduce((sum, cur) => sum + cur, 0) / list.length;\n};\n\nexport const COS = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.cos(data);\n};\nexport const COT = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return 1 / Math.tan(data);\n};\nexport const CSC = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return 1 / Math.sin(data);\n};\nexport const DECIMAL = (...list: ResultType[]): number => {\n  assert(list.length === 2);\n  const [data, radix] = list;\n  assert(typeof data === 'string');\n  assert(typeof radix === 'number');\n  return parseInt(data, radix);\n};\nexport const DEGREES = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return (data * 180) / Math.PI;\n};\nexport const EXP = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.exp(data);\n};\nexport const INT = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.floor(data);\n};\nexport const LN10 = (...list: ResultType[]): number => {\n  mustEmpty(list);\n  return Math.log(10);\n};\nexport const LN2 = (...list: ResultType[]): number => {\n  mustEmpty(list);\n  return Math.log(2);\n};\nexport const LOG10E = (...list: ResultType[]): number => {\n  mustEmpty(list);\n  return Math.LOG10E;\n};\nexport const LOG2E = (...list: ResultType[]): number => {\n  mustEmpty(list);\n  return Math.LOG2E;\n};\nexport const LOG = (...list: ResultType[]): number => {\n  assert(list.length >= 1 && list.length <= 2);\n  const [data, base = 10] = list;\n  assert(typeof data === 'number');\n  assert(typeof base === 'number');\n  return Math.log(data) / Math.log(base);\n};\n\nexport const LOG10 = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.log(data) / Math.log(10);\n};\nexport const PI = (...list: ResultType[]): number => {\n  mustEmpty(list);\n  return Math.PI;\n};\nexport const E = (...list: ResultType[]): number => {\n  mustEmpty(list);\n  return Math.E;\n};\nexport const SIN = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.sin(data);\n};\nexport const SUM = (...rest: ResultType[]): number => {\n  const list = parseNumberArray(rest);\n  assert(list.length <= MAX_PARAMS_COUNT);\n  return list.reduce((sum, cur) => sum + cur, 0);\n};\n\nconst formulas: MathFormulaType = {\n  ABS,\n  ACOS,\n  ACOSH,\n  ACOT,\n  ACOTH,\n  ASIN,\n  ASINH,\n  ATAN,\n  ATAN2,\n  ATANH,\n  AVERAGE,\n  COT,\n  COS,\n  EXP,\n  INT,\n  PI,\n  E,\n  SIN,\n  SUM,\n};\n\nexport default formulas;\n", "import { FORMULA_MAX_PRECISION } from '@/util/constant';\n\nexport function roundNumber(a: number) {\n  const temp = String(a);\n  const result = /[.](\\d*)/.exec(temp);\n  if (result && result[1]) {\n    const f = Math.pow(10, Math.min(result[1].length, FORMULA_MAX_PRECISION));\n    const list = temp.split('.');\n    const t = list[0] + list[1].slice(0, FORMULA_MAX_PRECISION);\n    return Number(t) / f;\n  } else {\n    return a;\n  }\n}\n", "import textFormulas from './text';\nimport mathFormulas from './math';\nimport type { FormulaType } from '@/types';\n\nconst allFormulas: FormulaType = {\n  ...textFormulas,\n  ...mathFormulas,\n};\nexport * from './error';\nexport default allFormulas;\nexport * from './float';\n", "import type { TokenType } from '@/types';\n\nexport class Token {\n  type: TokenType;\n  value: string;\n  constructor(type: TokenType, value: string) {\n    this.type = type;\n    this.value = value;\n  }\n  toString(): string {\n    return this.value;\n  }\n}\n", "/**\n * convert column name to number. e.g A -> 0, a -> 0\n * @param { string } columnName\n */\nexport function columnNameToInt(columnName: string): number {\n  const temp = columnName.toUpperCase();\n  let num = 0;\n  for (let i = 0; i < temp.length; i++) {\n    num = temp.charCodeAt(i) - 64 + num * 26;\n  }\n  return num - 1;\n}\n/**\n * convert number to column name 0 -> A\n * @param { string } number\n */\nexport function intToColumnName(temp: number): string {\n  const num = temp + 1;\n  let columnName = '';\n  let dividend = Math.floor(Math.abs(num));\n  let rest;\n\n  while (dividend > 0) {\n    rest = (dividend - 1) % 26;\n    columnName = String.fromCharCode(65 + rest) + columnName;\n    dividend = Math.floor((dividend - rest) / 26);\n  }\n  return columnName.toUpperCase();\n}\n\nexport function rowLabelToInt(label: string): number {\n  let result = parseInt(label, 10);\n  if (isNaN(result)) {\n    result = -1;\n  } else {\n    result = Math.max(result - 1, -1);\n  }\n  return result;\n}\n", "import { IRange, WorksheetType } from '@/types';\n\nexport function isSheet(range: IRange): boolean {\n  return isRow(range) && isCol(range);\n}\nexport function isRow(range: IRange): boolean {\n  return range.colCount === 0;\n}\nexport function isCol(range: IRange): boolean {\n  return range.rowCount === 0;\n}\n\nexport function isSameRange(oldRange: IRange, newRange: IRange): boolean {\n  return (\n    oldRange.col === newRange.col &&\n    oldRange.row === newRange.row &&\n    oldRange.colCount === newRange.colCount &&\n    oldRange.rowCount === newRange.rowCount &&\n    oldRange.sheetId === newRange.sheetId\n  );\n}\n\nexport function containRange(\n  sourceRange: IRange,\n  targetRange: IRange,\n): boolean {\n  if (sourceRange.colCount === 0 && targetRange.colCount !== 0) {\n    return false;\n  }\n  if (sourceRange.rowCount === 0 && targetRange.rowCount !== 0) {\n    return false;\n  }\n  if (targetRange.colCount === 0 && targetRange.row === sourceRange.row) {\n    return true;\n  }\n  if (targetRange.rowCount === 0 && targetRange.col === sourceRange.col) {\n    return true;\n  }\n  const { row, col } = sourceRange;\n  const check =\n    row >= targetRange.row &&\n    row < targetRange.row + targetRange.rowCount &&\n    col >= targetRange.col &&\n    col < targetRange.col + targetRange.colCount;\n  if (check) {\n    return true;\n  }\n\n  return false;\n}\n\nexport class SheetRange implements IRange {\n  row = 0;\n  col = 0;\n  colCount = 0;\n  rowCount = 0;\n  sheetId = '';\n  constructor(\n    row: number,\n    col: number,\n    rowCount: number,\n    colCount: number,\n    sheetId: string,\n  ) {\n    this.row = row;\n    this.col = col;\n    this.colCount = colCount;\n    this.rowCount = rowCount;\n    this.sheetId = sheetId;\n  }\n\n  static makeRange(range: IRange): SheetRange {\n    return new SheetRange(\n      range.row,\n      range.col,\n      range.rowCount,\n      range.colCount,\n      range.sheetId,\n    );\n  }\n  toIRange(): IRange {\n    return {\n      row: this.row,\n      col: this.col,\n      rowCount: this.rowCount,\n      colCount: this.colCount,\n      sheetId: this.sheetId,\n    };\n  }\n}\n\nexport function iterateRange(\n  range: IRange,\n  sheetInfo: WorksheetType | undefined,\n  fn: (row: number, col: number) => boolean,\n) {\n  const { row, col, rowCount, colCount } = range;\n  if (!sheetInfo) {\n    return;\n  }\n  if (isSheet(range)) {\n    for (let r = 0; r < sheetInfo.rowCount; r++) {\n      for (let c = 0; c < sheetInfo.colCount; c++) {\n        if (fn(r, c)) {\n          return;\n        }\n      }\n    }\n    return;\n  }\n  if (isRow(range)) {\n    for (let i = 0; i < sheetInfo.colCount; i++) {\n      if (fn(row, i)) {\n        return;\n      }\n    }\n    return;\n  }\n  if (isCol(range)) {\n    for (let i = 0; i < sheetInfo.rowCount; i++) {\n      if (fn(i, col)) {\n        return;\n      }\n    }\n    return;\n  }\n\n  const endRow = row + rowCount;\n  const endCol = col + colCount;\n  for (let r = row; r < endRow; r++) {\n    for (let c = col; c < endCol; c++) {\n      if (fn(r, c)) {\n        return;\n      }\n    }\n  }\n}\n", "import { columnNameToInt, rowLabelToInt, intToColumnName } from './convert';\nimport { Coordinate, IRange, ReferenceType } from '@/types';\nimport { SheetRange } from './range';\nimport { XLSX_MAX_COL_COUNT, XLSX_MAX_ROW_COUNT } from './constant';\n\nexport const isAlpha = (char: string) =>\n  (char >= 'a' && char <= 'z') || (char >= 'A' && char <= 'Z');\nexport const isDigit = (char: string) => char >= '0' && char <= '9';\n\nfunction convertSheetNameToSheetId(value: string) {\n  return value;\n}\n\nfunction parseCell(\n  ref: string,\n  convertSheetName: typeof convertSheetNameToSheetId,\n): SheetRange | undefined {\n  if (!ref) {\n    return undefined;\n  }\n  const realRef = ref.trim();\n  let [sheetName, other = ''] = realRef.split('!');\n  if (!realRef.includes('!')) {\n    sheetName = '';\n    other = realRef;\n  }\n  if (\n    sheetName &&\n    sheetName[0] === \"'\" &&\n    sheetName[sheetName.length - 1] === \"'\"\n  ) {\n    sheetName = sheetName.slice(1, -1);\n  }\n  let i = 0;\n  let rowText = '';\n  let colText = '';\n  if (other[i] === '$') {\n    i++;\n  }\n  while (i < other.length && isAlpha(other[i])) {\n    colText += other[i++];\n  }\n  if (other[i] === '$') {\n    i++;\n  }\n  while (i < other.length && isDigit(other[i])) {\n    rowText += other[i++];\n  }\n  if (i !== other.length) {\n    return undefined;\n  }\n  if (!rowText && !colText) {\n    return undefined;\n  }\n\n  let rowCount = 1;\n  let colCount = 1;\n  let row = -1;\n  let col = -1;\n  if (rowText === '') {\n    rowCount = 0;\n    row = 0;\n  } else {\n    row = rowLabelToInt(rowText);\n  }\n  if (colText === '') {\n    colCount = 0;\n    col = 0;\n  } else {\n    col = columnNameToInt(colText);\n  }\n  if (\n    row < 0 ||\n    col < 0 ||\n    col >= XLSX_MAX_COL_COUNT ||\n    row >= XLSX_MAX_ROW_COUNT\n  ) {\n    return undefined;\n  }\n  const range = new SheetRange(\n    row,\n    col,\n    rowCount,\n    colCount,\n    convertSheetName(sheetName),\n  );\n  return range;\n}\n\nexport function parseReference(\n  text: string,\n  convertSheetName = convertSheetNameToSheetId,\n): SheetRange | undefined {\n  const [cell1, cell2] = text.split(':');\n  const startCell = parseCell(cell1, convertSheetName);\n  if (!startCell) {\n    return undefined;\n  }\n  const endCell = parseCell(cell2, convertSheetName);\n  if (!endCell) {\n    return startCell;\n  }\n  endCell.sheetId = startCell.sheetId;\n  return mergeRange(startCell, endCell);\n}\n\nexport function mergeRange(\n  start: SheetRange,\n  end: SheetRange,\n): SheetRange | undefined {\n  if (start.sheetId !== end.sheetId) {\n    return undefined;\n  }\n  if (\n    start.row === end.row &&\n    start.col === end.col &&\n    start.rowCount === end.rowCount &&\n    start.colCount === end.colCount\n  ) {\n    return start;\n  }\n  if (start.rowCount === 0 && end.rowCount !== 0) {\n    return undefined;\n  }\n  if (start.rowCount !== 0 && end.rowCount === 0) {\n    return undefined;\n  }\n  if (start.colCount === 0 && end.colCount !== 0) {\n    return undefined;\n  }\n  if (start.colCount !== 0 && end.colCount === 0) {\n    return undefined;\n  }\n\n  const rowCount = Math.abs(start.row - end.row) + 1;\n  const colCount = Math.abs(start.col - end.col) + 1;\n  const row = start.row < end.row ? start.row : end.row;\n  const col = start.col < end.col ? start.col : end.col;\n\n  return new SheetRange(row, col, rowCount, colCount, start.sheetId);\n}\n\nfunction convertCell(row: number, col: number, referenceType: ReferenceType) {\n  const first = referenceType === 'absolute' || referenceType === 'mixed';\n  const second = referenceType === 'absolute';\n  return `${first ? '$' : ''}${intToColumnName(col)}${second ? '$' : ''}${\n    row + 1\n  }`;\n}\n\nexport function convertToReference(\n  range: IRange,\n  referenceType: ReferenceType = 'relative',\n  convertSheetIdToSheetName = convertSheetNameToSheetId,\n) {\n  let result = convertCell(range.row, range.col, referenceType);\n  let sheetName = convertSheetIdToSheetName(range.sheetId);\n  sheetName = sheetName ? `${sheetName}!` : '';\n  if (range.colCount > 1 && range.rowCount > 1) {\n    const end = convertCell(\n      range.row + range.rowCount - 1,\n      range.col + range.colCount - 1,\n      referenceType,\n    );\n    result = `${result}:${end}`;\n  }\n  return sheetName + result;\n}\n\nexport const R1C1_REG = /^R(\\[-\\d+\\]|\\[\\d+\\]|\\d+)?C(\\[-\\d+\\]|\\[\\d+\\]|\\d+)?$/i;\n\nfunction parseNumber(text: string, num: number) {\n  let result = -1;\n  if (text.startsWith('[')) {\n    const t = parseInt(text.slice(1, -1), 10);\n    if (!isNaN(t)) {\n      result = num + t;\n    }\n  } else {\n    const t = parseInt(text, 10);\n    if (!isNaN(t)) {\n      result = t - 1;\n    }\n  }\n  return isNaN(result) ? -1 : result;\n}\n\nexport function parseR1C1(\n  name: string,\n  activeCell: Coordinate = { row: -1, col: -1 },\n): SheetRange | undefined {\n  const text = name.toUpperCase();\n  if (text[0] !== 'R') {\n    return undefined;\n  }\n  const list = text.slice(1).split('C');\n  if (list.length !== 2) {\n    return undefined;\n  }\n  const [rowText, colText] = list;\n  let row = -1;\n  let col = -1;\n  if (!rowText) {\n    row = activeCell.row;\n  } else {\n    row = parseNumber(rowText, activeCell.row);\n  }\n  if (!colText) {\n    col = activeCell.col;\n  } else {\n    col = parseNumber(colText, activeCell.col);\n  }\n  if (\n    col >= XLSX_MAX_COL_COUNT ||\n    row >= XLSX_MAX_ROW_COUNT ||\n    row < 0 ||\n    col < 0\n  ) {\n    return undefined;\n  }\n  const range = new SheetRange(row, col, 1, 1, '');\n  return range;\n}\n", "import { TokenType } from '@/types';\nimport { Token } from './token';\nimport { CustomError } from './formula';\nimport { FORMULA_PREFIX } from '@/util/constant';\nimport { isDigit, isAlpha } from '@/util/reference';\n\nconst emptyData = '';\nconst identifierMap = new Map<string, TokenType>([\n  ['TRUE', TokenType.TRUE],\n  ['FALSE', TokenType.FALSE],\n]);\n\nexport class Scanner {\n  private readonly list: string[];\n  private current = 0;\n  private start = 0;\n  private readonly tokens: Token[] = [];\n  constructor(source: string) {\n    this.list = [...source];\n  }\n  scan(): Token[] {\n    while (!this.isAtEnd()) {\n      this.start = this.current;\n      this.scanToken();\n    }\n    this.tokens.push(new Token(TokenType.EOF, ''));\n    if (this.tokens.length > 0 && this.tokens[0].type === TokenType.EQUAL) {\n      this.tokens.shift();\n    }\n    return this.tokens;\n  }\n  private peek() {\n    if (this.isAtEnd()) {\n      return emptyData;\n    }\n    return this.list[this.current];\n  }\n  private match(text: string) {\n    if (this.peek() !== text) {\n      return false;\n    }\n    this.next();\n    return true;\n  }\n  private next() {\n    if (this.isAtEnd()) {\n      return emptyData;\n    }\n    return this.list[this.current++];\n  }\n  private isAtEnd() {\n    return this.current >= this.list.length;\n  }\n  private addToken(type: TokenType) {\n    const text = this.list.slice(this.start, this.current).join('');\n    this.tokens.push(new Token(type, text));\n  }\n  private string(end: string) {\n    while (!this.isAtEnd() && this.peek() !== end) {\n      this.next();\n    }\n    if (this.peek() !== end) {\n      throw new CustomError('#VALUE!');\n    } else {\n      this.next();\n    }\n    const text = this.list.slice(this.start + 1, this.current - 1).join('');\n    this.tokens.push(new Token(TokenType.STRING, text));\n  }\n  private getDigits() {\n    while (!this.isAtEnd() && isDigit(this.peek())) {\n      this.next();\n    }\n  }\n  private getAlphas() {\n    while (!this.isAtEnd() && isAlpha(this.peek())) {\n      this.next();\n    }\n  }\n  private matchR1C1() {\n    if (this.match('[')) {\n      this.match('-');\n      if (isDigit(this.peek())) {\n        this.getDigits();\n      } else {\n        throw new CustomError('#VALUE!');\n      }\n      if (this.peek() !== ']') {\n        throw new CustomError('#VALUE!');\n      } else {\n        this.next();\n      }\n    } else {\n      this.getDigits();\n    }\n  }\n  private matchScientificCounting(isFloat: boolean) {\n    if (this.match('E') || this.match('e')) {\n      // 1E-10 1E+10\n      if (this.match('+') || this.match('-')) {\n        this.getDigits();\n        this.addToken(isFloat ? TokenType.FLOAT : TokenType.INTEGER);\n        return true;\n      }\n      if (isDigit(this.peek())) {\n        this.getDigits();\n        this.addToken(isFloat ? TokenType.FLOAT : TokenType.INTEGER);\n        return true;\n      }\n      // 1E or 1.1E not valid\n      throw new CustomError('#VALUE!');\n    }\n    return false;\n  }\n  private number() {\n    this.getDigits();\n    const check1 = this.matchScientificCounting(false);\n    if (check1) {\n      return;\n    }\n    let float = false;\n    if (this.match('.')) {\n      float = true;\n      this.getDigits();\n    }\n    const check2 = this.matchScientificCounting(true);\n    if (check2) {\n      return;\n    }\n    this.addToken(float ? TokenType.FLOAT : TokenType.INTEGER);\n  }\n  private addIdentifier() {\n    while (!this.isAtEnd() && this.anyChar(this.peek())) {\n      this.next();\n    }\n    let text = this.list.slice(this.start, this.current).join('');\n    const t = text.toUpperCase();\n    const temp = identifierMap.get(t);\n    let type: TokenType = TokenType.IDENTIFIER;\n    if (temp) {\n      text = t;\n      type = temp;\n    }\n    if (/^[A-Z]+\\$\\d+$/.test(t)) {\n      text = t;\n      type = TokenType.MIXED_CELL;\n    }\n\n    this.tokens.push(new Token(type, text));\n  }\n  private scanToken() {\n    const c = this.next();\n    switch (c) {\n      case '$': {\n        if (isAlpha(this.peek())) {\n          this.getAlphas();\n          if (this.match('$')) {\n            if (isDigit(this.peek())) {\n              // $A$1 absolute reference\n              this.getDigits();\n              this.addToken(TokenType.ABSOLUTE_CELL);\n            } else {\n              this.addIdentifier();\n            }\n          } else if (isDigit(this.peek())) {\n            // $A1 mixed reference\n            this.getDigits();\n            this.addToken(TokenType.MIXED_CELL);\n          } else {\n            // $A\n            this.addToken(TokenType.ABSOLUTE_CELL);\n          }\n        } else if (isDigit(this.peek())) {\n          // $1 absolute reference\n          this.getDigits();\n          this.addToken(TokenType.ABSOLUTE_CELL);\n        } else {\n          this.addIdentifier();\n        }\n        break;\n      }\n      case 'r':\n      case 'R': {\n        this.matchR1C1();\n        if (this.match('C') || this.match('c')) {\n          this.matchR1C1();\n          const text = this.list\n            .slice(this.start, this.current)\n            .join('')\n            .toUpperCase();\n          this.tokens.push(new Token(TokenType.R1C1, text));\n        } else {\n          this.addIdentifier();\n        }\n        break;\n      }\n      case '(':\n        this.addToken(TokenType.LEFT_BRACKET);\n        break;\n      case ')':\n        this.addToken(TokenType.RIGHT_BRACKET);\n        break;\n      case ',':\n        this.addToken(TokenType.COMMA);\n        break;\n      case ':':\n        this.addToken(TokenType.COLON);\n        break;\n      case FORMULA_PREFIX:\n        this.addToken(TokenType.EQUAL);\n        break;\n      case '<':\n        if (this.match('>')) {\n          this.addToken(TokenType.NOT_EQUAL);\n        } else if (this.match('=')) {\n          this.addToken(TokenType.LESS_EQUAL);\n        } else {\n          this.addToken(TokenType.LESS);\n        }\n        break;\n      case '>':\n        if (this.match('=')) {\n          this.addToken(TokenType.GREATER_EQUAL);\n        } else {\n          this.addToken(TokenType.GREATER);\n        }\n        break;\n      case '+':\n        this.addToken(TokenType.PLUS);\n        break;\n      case '-':\n        this.addToken(TokenType.MINUS);\n        break;\n      case '*':\n        this.addToken(TokenType.STAR);\n        break;\n      case '/':\n        this.addToken(TokenType.SLASH);\n        break;\n      case '^':\n        this.addToken(TokenType.EXPONENT);\n        break;\n      case '&':\n        this.addToken(TokenType.CONCATENATE);\n        break;\n      case '%':\n        this.addToken(TokenType.PERCENT);\n        break;\n      case '\"':\n        this.string(c);\n        break;\n      case \"'\":\n        this.string(c);\n        break;\n      case '!':\n        this.addToken(TokenType.EXCLAMATION);\n        break;\n      case ';':\n        this.addToken(TokenType.SEMICOLON);\n        break;\n      case '{':\n        this.addToken(TokenType.lEFT_BRACE);\n        break;\n      case '}':\n        this.addToken(TokenType.RIGHT_BRACE);\n        break;\n      case ' ':\n        // while (!this.isAtEnd() && this.peek() === ' ') {\n        // this.next();\n        // }\n        // this.addToken(TokenType.EMPTY_CHAR);\n        break;\n      case '\\r':\n      case '\\t':\n      case '\\n':\n        break;\n      default:\n        if (isDigit(c)) {\n          this.number();\n        } else if (this.anyChar(c)) {\n          this.addIdentifier();\n        } else {\n          throw new CustomError('#ERROR!');\n        }\n        break;\n    }\n  }\n  private anyChar(c: string) {\n    const text = '(),:=<>+-*/^&%\"{}!';\n    return !text.includes(c) && !this.isWhiteSpace(c);\n  }\n  private isWhiteSpace(c: string) {\n    return c === ' ' || c === '\\r' || c === '\\n' || c === '\\t';\n  }\n}\n", "import type { Token } from './token';\nimport type { ReferenceType } from '@/types';\nimport { TokenType } from '@/types';\n\nexport interface Visitor {\n  visitBinaryExpression: (expr: BinaryExpression) => any;\n  visitUnaryExpression: (expr: UnaryExpression) => any;\n  visitPostUnaryExpression: (expr: PostUnaryExpression) => any;\n  visitLiteralExpression: (expr: LiteralExpression) => any;\n  visitCellExpression: (expr: CellExpression) => any;\n  visitR1C1Expression: (expr: R1C1Expression) => any;\n  visitCellRangeExpression: (expr: CellRangeExpression) => any;\n  visitCallExpression: (expr: CallExpression) => any;\n  visitGroupExpression: (expr: GroupExpression) => any;\n  visitTokenExpression: (expr: TokenExpression) => any;\n}\n\nexport interface Expression {\n  accept: (visitor: Visitor) => any;\n  toString: () => string;\n}\n\nexport class BinaryExpression implements Expression {\n  readonly left: Expression;\n  readonly right: Expression;\n  readonly operator: Token;\n  constructor(left: Expression, operator: Token, right: Expression) {\n    this.left = left;\n    this.operator = operator;\n    this.right = right;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitBinaryExpression(this);\n  }\n  private handleConcatenate(value: Expression): string {\n    const result = value.toString();\n    const check =\n      this.operator.type === TokenType.CONCATENATE &&\n      value instanceof LiteralExpression &&\n      value.value.type === TokenType.STRING;\n    if (check) {\n      return JSON.stringify(result);\n    }\n    return result;\n  }\n  toString(): string {\n    const left = this.handleConcatenate(this.left);\n    const right = this.handleConcatenate(this.right);\n    return `${left}${this.operator.toString()}${right}`;\n  }\n}\n\nexport class UnaryExpression implements Expression {\n  readonly right: Expression;\n  readonly operator: Token;\n  constructor(operator: Token, right: Expression) {\n    this.operator = operator;\n    this.right = right;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitUnaryExpression(this);\n  }\n  toString(): string {\n    return this.operator.toString() + this.right.toString();\n  }\n}\n\nexport class PostUnaryExpression implements Expression {\n  readonly left: Expression;\n  readonly operator: Token;\n  constructor(operator: Token, left: Expression) {\n    this.operator = operator;\n    this.left = left;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitPostUnaryExpression(this);\n  }\n  toString(): string {\n    return this.left.toString() + this.operator.toString();\n  }\n}\n\nexport class LiteralExpression implements Expression {\n  readonly value: Token;\n  constructor(value: Token) {\n    this.value = value;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitLiteralExpression(this);\n  }\n  toString(): string {\n    return this.value.toString();\n  }\n}\n\nexport class R1C1Expression implements Expression {\n  readonly value: Token;\n  constructor(value: Token) {\n    this.value = value;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitR1C1Expression(this);\n  }\n  toString(): string {\n    return this.value.toString();\n  }\n}\nexport class CellExpression implements Expression {\n  readonly value: Token;\n  readonly sheetName: Token | undefined;\n  readonly type: ReferenceType;\n  constructor(value: Token, type: ReferenceType, sheetName: Token | undefined) {\n    this.value = value;\n    this.sheetName = sheetName;\n    this.type = type;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitCellExpression(this);\n  }\n  toString(): string {\n    const t = this.value.toString().toUpperCase();\n    if (this.sheetName) {\n      let name = this.sheetName.toString();\n      if (name.includes(' ')) {\n        name = `'${name}'`;\n      }\n      return `${name}!${t}`;\n    } else {\n      return t;\n    }\n  }\n}\n\nexport class CallExpression implements Expression {\n  readonly name: Expression;\n  readonly params: Expression[];\n  constructor(name: Expression, params: Expression[]) {\n    this.name = name;\n    this.params = params;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitCallExpression(this);\n  }\n  toString(): string {\n    return `${this.name.toString().toUpperCase()}(${this.params\n      .map((item) => item.toString())\n      .join(',')})`;\n  }\n}\n\nexport class CellRangeExpression implements Expression {\n  readonly right: CellExpression;\n  readonly operator: Token;\n  readonly left: CellExpression;\n  constructor(left: CellExpression, operator: Token, right: CellExpression) {\n    this.left = left;\n    this.operator = operator;\n    this.right = right;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitCellRangeExpression(this);\n  }\n  toString(): string {\n    return (\n      this.left.toString() + this.operator.toString() + this.right.toString()\n    );\n  }\n}\n\nexport class GroupExpression implements Expression {\n  readonly value: Expression;\n  constructor(value: Expression) {\n    this.value = value;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitGroupExpression(this);\n  }\n  toString(): string {\n    return `(${this.value.toString()})`;\n  }\n}\n\nexport class TokenExpression implements Expression {\n  readonly value: Token;\n  constructor(value: Token) {\n    this.value = value;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitTokenExpression(this);\n  }\n  toString(): string {\n    return this.value.toString();\n  }\n}\n", "import { TokenType, ErrorTypes } from '@/types';\nimport { Token } from './token';\nimport {\n  TokenExpression,\n  Expression,\n  GroupExpression,\n  PostUnaryExpression,\n  BinaryExpression,\n  UnaryExpression,\n  CallExpression,\n  LiteralExpression,\n  CellRangeExpression,\n  R1C1Expression,\n  CellExpression,\n} from './expression';\nimport { CustomError, isRelativeReference } from './formula';\nimport { ERROR_SET } from '@/util/constant';\n\nexport class Parser {\n  private readonly tokens: Token[];\n  private current = 0;\n  constructor(tokens: Token[]) {\n    this.tokens = tokens;\n  }\n  parse(): Expression[] {\n    const result: Expression[] = [];\n    while (!this.isAtEnd()) {\n      result.push(this.expression());\n    }\n    return result;\n  }\n  private expression(): Expression {\n    return this.comparison();\n  }\n  private comparison(): Expression {\n    let expr = this.concatenate();\n    while (\n      this.match(\n        TokenType.EQUAL,\n        TokenType.NOT_EQUAL,\n        TokenType.GREATER,\n        TokenType.GREATER_EQUAL,\n        TokenType.LESS,\n        TokenType.LESS_EQUAL,\n      )\n    ) {\n      const operator = this.previous();\n      const right = this.concatenate();\n      expr = new BinaryExpression(expr, operator, right);\n    }\n    return expr;\n  }\n  private concatenate(): Expression {\n    let expr = this.term();\n    while (this.match(TokenType.CONCATENATE)) {\n      const operator = this.previous();\n      const right = this.term();\n      expr = new BinaryExpression(expr, operator, right);\n    }\n    return expr;\n  }\n  private term(): Expression {\n    let expr = this.factor();\n    while (this.match(TokenType.PLUS, TokenType.MINUS)) {\n      const operator = this.previous();\n      const right = this.factor();\n      expr = new BinaryExpression(expr, operator, right);\n    }\n    return expr;\n  }\n  private factor(): Expression {\n    let expr = this.expo();\n    while (this.match(TokenType.SLASH, TokenType.STAR)) {\n      const operator = this.previous();\n      const right = this.expo();\n      expr = new BinaryExpression(expr, operator, right);\n    }\n    return expr;\n  }\n  private expo(): Expression {\n    let expr = this.unary();\n    while (this.match(TokenType.EXPONENT)) {\n      const operator = this.previous();\n      const right = this.unary();\n      expr = new BinaryExpression(expr, operator, right);\n    }\n    return expr;\n  }\n\n  private unary(): Expression {\n    if (this.match(TokenType.PLUS, TokenType.MINUS)) {\n      const operator = this.previous();\n      const right = this.unary();\n      return new UnaryExpression(operator, right);\n    }\n    return this.postUnary();\n  }\n  private postUnary(): Expression {\n    let expr = this.cellRange();\n    if (this.match(TokenType.PERCENT)) {\n      const operator = this.previous();\n      expr = new PostUnaryExpression(operator, expr);\n    }\n    return expr;\n  }\n  private cellRange(): Expression {\n    let expr = this.sheetRange();\n    while (this.match(TokenType.COLON)) {\n      const operator = this.previous();\n      const right = this.sheetRange();\n      const realRight = this.convertToCellExpression(right);\n      const realLeft = this.convertToCellExpression(expr);\n      expr = new CellRangeExpression(realLeft, operator, realRight);\n    }\n    return expr;\n  }\n  private convertToCellExpression(expr: Expression): CellExpression {\n    if (expr instanceof CellExpression) {\n      return expr;\n    }\n    if (\n      expr instanceof TokenExpression &&\n      isRelativeReference(expr.value.value)\n    ) {\n      return new CellExpression(expr.value, 'relative', undefined);\n    }\n    if (\n      expr instanceof LiteralExpression &&\n      expr.value.type === TokenType.INTEGER\n    ) {\n      return new CellExpression(expr.value, 'relative', undefined);\n    }\n    throw new CustomError('#NAME?');\n  }\n  private sheetRange(): Expression {\n    let expr = this.call();\n    if (this.match(TokenType.EXCLAMATION)) {\n      const right = this.call();\n      if (\n        expr instanceof TokenExpression ||\n        expr instanceof LiteralExpression\n      ) {\n        const cell = this.convertToCellExpression(right);\n        return new CellExpression(cell.value, cell.type, expr.value);\n      }\n    }\n    return expr;\n  }\n  private call(): Expression {\n    let expr = this.primary();\n    while (1) {\n      if (this.match(TokenType.LEFT_BRACKET)) {\n        expr = this.finishCall(expr);\n      } else {\n        break;\n      }\n    }\n    return expr;\n  }\n\n  private finishCall(name: Expression): CallExpression {\n    const params: Expression[] = [];\n    if (!this.check(TokenType.RIGHT_BRACKET)) {\n      do {\n        // fix SUM(1,)\n        if (this.peek().type == TokenType.RIGHT_BRACKET) {\n          break;\n        }\n        params.push(this.expression());\n      } while (this.match(TokenType.COMMA));\n    }\n    this.expect(TokenType.RIGHT_BRACKET);\n    return new CallExpression(name, params);\n  }\n  private primary(): Expression {\n    if (this.match(TokenType.LEFT_BRACKET)) {\n      const value = this.expression();\n      this.expect(TokenType.RIGHT_BRACKET);\n      return new GroupExpression(value);\n    }\n    if (\n      this.match(\n        TokenType.INTEGER,\n        TokenType.FLOAT,\n        TokenType.STRING,\n        TokenType.TRUE,\n        TokenType.FALSE,\n      )\n    ) {\n      return new LiteralExpression(this.previous());\n    }\n    if (this.match(TokenType.ABSOLUTE_CELL)) {\n      const token = this.previous();\n      return new CellExpression(token, 'absolute', undefined);\n    }\n    if (this.match(TokenType.MIXED_CELL)) {\n      const token = this.previous();\n      return new CellExpression(token, 'mixed', undefined);\n    }\n\n    if (this.match(TokenType.IDENTIFIER)) {\n      const name = this.previous();\n      const realValue = name.value.toUpperCase();\n      if (ERROR_SET.has(realValue as ErrorTypes)) {\n        throw new CustomError(realValue as ErrorTypes);\n      }\n      return new TokenExpression(name);\n    }\n    if (this.match(TokenType.R1C1)) {\n      return new R1C1Expression(this.previous());\n    }\n\n    throw new CustomError('#ERROR!');\n  }\n  private match(...types: TokenType[]): boolean {\n    const { type } = this.peek();\n    if (types.includes(type)) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n  private previous(): Token {\n    return this.tokens[this.current - 1];\n  }\n  private check(type: TokenType): boolean {\n    return this.peek().type === type;\n  }\n  private expect(type: TokenType): Token {\n    if (this.check(type)) {\n      this.next();\n      return this.previous();\n    } else {\n      throw new CustomError('#ERROR!');\n    }\n  }\n  private next() {\n    this.current++;\n  }\n  private isAtEnd() {\n    return this.peek().type === TokenType.EOF;\n  }\n  private peek(): Token {\n    if (this.current < this.tokens.length) {\n      return this.tokens[this.current];\n    }\n    return new Token(TokenType.EOF, '');\n  }\n}\n", "import { SheetRange } from '@/util/range';\nimport { mergeRange, parseReference, parseR1C1 } from '@/util/reference';\nimport { parseNumber } from '@/util/util';\nimport {\n  TokenType,\n  CellDataMap,\n  DefinedNamesMap,\n  FormulaType,\n  FormulaKeys,\n  ResultType,\n} from '@/types';\nimport type {\n  Visitor,\n  Expression,\n  CellRangeExpression,\n  PostUnaryExpression,\n  R1C1Expression,\n} from './expression';\nimport {\n  BinaryExpression,\n  UnaryExpression,\n  CellExpression,\n  CallExpression,\n  LiteralExpression,\n  TokenExpression,\n  GroupExpression,\n} from './expression';\nimport { CustomError, assert, isRelativeReference } from './formula';\n\nexport class Interpreter implements Visitor {\n  private readonly expressions: Expression[];\n  private readonly functionMap: FormulaType;\n  private readonly cellDataMap: CellDataMap;\n  private readonly definedNamesMap: DefinedNamesMap;\n  constructor(\n    expressions: Expression[],\n    cellDataMap: CellDataMap,\n    definedNamesMap: DefinedNamesMap,\n    functionMap: FormulaType,\n  ) {\n    this.expressions = expressions;\n    this.functionMap = functionMap;\n    this.cellDataMap = cellDataMap;\n    this.definedNamesMap = definedNamesMap;\n  }\n  interpret(): ResultType {\n    const result: ResultType[] = [];\n    for (const item of this.expressions) {\n      result.push(this.evaluate(item));\n    }\n    if (result.length === 1) {\n      return this.getRangeCellValue(result[0]);\n    } else {\n      throw new CustomError('#ERROR!');\n    }\n  }\n\n  visitBinaryExpression(data: BinaryExpression): any {\n    let left = this.evaluate(data.left);\n    let right = this.evaluate(data.right);\n    left = this.getRangeCellValue(left);\n    right = this.getRangeCellValue(right);\n    switch (data.operator.type) {\n      case TokenType.MINUS:\n        assert(typeof left === 'number');\n        assert(typeof right === 'number');\n        return left - right;\n      case TokenType.PLUS:\n        assert(typeof left === 'number');\n        assert(typeof right === 'number');\n        return left + right;\n      case TokenType.SLASH:\n        assert(typeof left === 'number');\n        assert(typeof right === 'number');\n        if (right === 0) {\n          throw new CustomError('#DIV/0!');\n        }\n        return left / right;\n      case TokenType.STAR:\n        assert(typeof left === 'number');\n        assert(typeof right === 'number');\n        return left * right;\n      case TokenType.EXPONENT:\n        assert(typeof left === 'number');\n        assert(typeof right === 'number');\n        return Math.pow(left, right);\n      case TokenType.EQUAL:\n        return left === right;\n      case TokenType.NOT_EQUAL:\n        return left !== right;\n      case TokenType.GREATER:\n        return left > right;\n      case TokenType.GREATER_EQUAL:\n        return left >= right;\n      case TokenType.LESS:\n        return left < right;\n      case TokenType.LESS_EQUAL:\n        return left <= right;\n      case TokenType.CONCATENATE:\n        return `${left}${right}`;\n      default:\n        throw new CustomError('#VALUE!');\n    }\n  }\n  visitCallExpression(expr: CallExpression) {\n    const callee = this.evaluate(expr.name);\n    if (callee && typeof callee === 'function') {\n      let params: ResultType[] = [];\n      for (const item of expr.params) {\n        const t = this.evaluate(item);\n        if (t instanceof SheetRange) {\n          const list = this.cellDataMap.get(t);\n          params = params.concat(list);\n        } else {\n          params.push(t);\n        }\n      }\n      return callee(...params);\n    }\n    throw new CustomError('#NAME?');\n  }\n  visitR1C1Expression(data: R1C1Expression) {\n    const range = parseR1C1(\n      data.value.value,\n      this.cellDataMap.getCurrentCell(),\n    );\n    if (!range) {\n      throw new CustomError('#NAME?');\n    }\n    return range;\n  }\n  visitCellExpression(data: CellExpression) {\n    let sheetId = '';\n    if (data.sheetName) {\n      sheetId = this.cellDataMap.convertSheetNameToSheetId(\n        data.sheetName.value,\n      );\n      if (!sheetId) {\n        throw new CustomError('#NAME?');\n      }\n    }\n    const range = parseReference(data.value.value);\n    if (!range) {\n      throw new CustomError('#NAME?');\n    }\n    if (sheetId) {\n      range.sheetId = sheetId;\n    }\n    return range;\n  }\n  visitLiteralExpression(expr: LiteralExpression) {\n    const { type, value } = expr.value;\n    switch (type) {\n      case TokenType.STRING:\n        return value;\n      case TokenType.FLOAT:\n      case TokenType.INTEGER: {\n        const [check, num] = parseNumber(value);\n        if (check) {\n          return num;\n        }\n        throw new CustomError('#VALUE!');\n      }\n      case TokenType.TRUE:\n        return true;\n      case TokenType.FALSE:\n        return false;\n      default:\n        throw new CustomError('#ERROR!');\n    }\n  }\n\n  visitTokenExpression(expr: TokenExpression) {\n    const { value } = expr.value;\n    const defineName = value.toLowerCase();\n    if (this.definedNamesMap.get(defineName)) {\n      const temp = this.definedNamesMap.get(defineName)!;\n      return this.cellDataMap.get(temp)[0];\n    }\n    const funcName = value.toUpperCase();\n    const func = this.functionMap[funcName as FormulaKeys];\n    if (func) {\n      return func;\n    }\n    if (isRelativeReference(value)) {\n      return this.visitCellExpression(\n        new CellExpression(expr.value, 'relative', undefined),\n      );\n    }\n    throw new CustomError('#NAME?');\n  }\n  visitUnaryExpression(data: UnaryExpression): any {\n    const value = this.evaluate(data.right);\n    switch (data.operator.type) {\n      case TokenType.MINUS:\n        assert(typeof value === 'number');\n        return -value;\n      case TokenType.PLUS:\n        assert(typeof value === 'number');\n        return value;\n      default:\n        throw new CustomError('#VALUE!');\n    }\n  }\n\n  visitCellRangeExpression(expr: CellRangeExpression): any {\n    switch (expr.operator.type) {\n      case TokenType.COLON: {\n        const a = this.visitCellExpression(expr.left);\n        const b = this.visitCellExpression(expr.right);\n        const result = mergeRange(a, b);\n        if (!result) {\n          throw new CustomError('#NAME?');\n        }\n        return result;\n      }\n      default:\n        throw new CustomError('#NAME?');\n    }\n  }\n  visitGroupExpression(expr: GroupExpression): any {\n    return this.evaluate(expr.value);\n  }\n  visitPostUnaryExpression(expr: PostUnaryExpression): any {\n    const value = this.evaluate(expr.left);\n    switch (expr.operator.type) {\n      case TokenType.PERCENT:\n        assert(typeof value === 'number');\n        return value * 0.01;\n      default:\n        throw new CustomError('#VALUE!');\n    }\n  }\n  private evaluate(expr: Expression) {\n    return expr.accept(this);\n  }\n  private getRangeCellValue(value: any): ResultType {\n    if (value instanceof SheetRange) {\n      if (value.colCount === value.rowCount && value.colCount === 1) {\n        const list = this.cellDataMap.get(value);\n        return list[0];\n      } else {\n        throw new CustomError('#REF!');\n      }\n    }\n    return value;\n  }\n}\n", "import { Scanner } from './scanner';\nimport { Parser } from './parser';\nimport allFormulas, { CustomError, roundNumber } from './formula';\nimport { Interpreter } from './interpreter';\nimport {\n  CellDataMap,\n  InterpreterResult,\n  DefinedNamesMap,\n  IRange,\n  FormulaType,\n  ResultType,\n  Coordinate,\n} from '@/types';\n\nexport function parseFormula(\n  source: string,\n  cellData: CellDataMap = new CellDataMapImpl(),\n  definedNamesMap: DefinedNamesMap = new DefinedNamesMapImpl(),\n  functionMap: FormulaType = allFormulas,\n): InterpreterResult {\n  let expressionStr = '';\n  try {\n    const list = new Scanner(source).scan();\n    const expressions = new Parser(list).parse();\n    const result = new Interpreter(\n      expressions,\n      cellData,\n      definedNamesMap,\n      functionMap,\n    ).interpret();\n\n    const strList: string[] = [];\n    for (const item of expressions) {\n      strList.push(item.toString());\n    }\n    expressionStr = strList.join('');\n    let value = result;\n    if (typeof value === 'number' && !isNaN(value)) {\n      value = roundNumber(value);\n    }\n    return {\n      result: value,\n      isError: false,\n      expressionStr,\n    };\n  } catch (error) {\n    if (error instanceof CustomError) {\n      return {\n        result: error.value,\n        isError: true,\n        expressionStr,\n      };\n    }\n  }\n  return {\n    result: '#ERROR!',\n    isError: true,\n    expressionStr,\n  };\n}\n\nexport class CellDataMapImpl implements CellDataMap {\n  private readonly map = new Map<string, ResultType>();\n  private sheetNameMap: Record<string, string> = {};\n  private cell: Coordinate = {\n    row: 0,\n    col: 0,\n  };\n  private getKey(row: number, col: number, sheetId: string) {\n    const key = `${row}_${col}_${sheetId}`;\n    return key;\n  }\n  setCurrentCell(cell: Coordinate) {\n    this.cell = cell;\n  }\n  setSheetNameMap(sheetNameMap: Record<string, string>) {\n    this.sheetNameMap = sheetNameMap;\n  }\n  set(range: IRange, value: ResultType[][]): void {\n    const { row, col, sheetId } = range;\n    for (let i = 0; i < value.length; i++) {\n      for (let j = 0; j < value[i].length; j++) {\n        const key = this.getKey(row + i, col + j, sheetId);\n        this.map.set(key, value[i][j]);\n      }\n    }\n  }\n  get(range: IRange): ResultType[] {\n    const list: ResultType[] = [];\n    const { row, col, rowCount, colCount, sheetId } = range;\n    for (let r = row, endRow = row + rowCount; r < endRow; r++) {\n      for (let c = col, endCol = col + colCount; c < endCol; c++) {\n        const key = this.getKey(r, c, sheetId);\n        const value = this.map.get(key);\n        if (typeof value !== 'undefined') {\n          list.push(value);\n        }\n      }\n    }\n\n    return list;\n  }\n  convertSheetNameToSheetId(sheetName: string): string {\n    return this.sheetNameMap[sheetName] || '';\n  }\n  getCurrentCell() {\n    return { ...this.cell };\n  }\n}\n\nexport class DefinedNamesMapImpl implements DefinedNamesMap {\n  private readonly map = new Map<string, IRange>();\n  set(name: string, value: IRange): void {\n    this.map.set(name, value);\n  }\n  get(name: string): IRange | undefined {\n    return this.map.get(name)!;\n  }\n}\n", "export function splitToWords(str: string): string[] {\n  if (!str) {\n    return [];\n  }\n  // unicode\n  if (typeof Intl === 'undefined' || typeof Intl.Segmenter !== 'function') {\n    // firefox\n    return [...str];\n  }\n  const list = new Intl.Segmenter([], { granularity: 'word' }).segment(str);\n  const arr = [...list];\n  return arr.map((x) => x.segment);\n}\n", "const size = {\n  smallFont: '10px',\n  font: '12px',\n  largeFont: '14px',\n  padding: '12px',\n  lineHeight: 1.5,\n  mediumPadding: '8px',\n  largePadding: '20px',\n  borderRadius: '4px',\n  borderLargeRadius: '8px',\n  tinyPadding: '4px',\n  scrollBarContent: '30px',\n  formulaBarHeight: '25px',\n};\nexport default size;\n", "const zIndex = {\n  lowZIndex: 2,\n  middleZIndex: 3,\n  highZIndex: 4,\n  highestZIndex: 9,\n};\nexport default zIndex;\n", "function hslaToHex(h: number, s: number, l: number, alpha: number) {\n  s = s / 100; // Convert percentage to decimal\n  l = l / 100; // Convert percentage to decimal\n\n  // Convert HSL to RGB\n  const c = (1 - Math.abs(2 * l - 1)) * s;\n  const x = c * (1 - Math.abs(((h / 60) % 2) - 1));\n  const m = l - c / 2;\n\n  let r, g, b;\n\n  if (h >= 0 && h < 60) {\n    r = c;\n    g = x;\n    b = 0;\n  } else if (h >= 60 && h < 120) {\n    r = x;\n    g = c;\n    b = 0;\n  } else if (h >= 120 && h < 180) {\n    r = 0;\n    g = c;\n    b = x;\n  } else if (h >= 180 && h < 240) {\n    r = 0;\n    g = x;\n    b = c;\n  } else if (h >= 240 && h < 300) {\n    r = x;\n    g = 0;\n    b = c;\n  } else {\n    r = c;\n    g = 0;\n    b = x;\n  }\n  if (alpha !== 1) {\n    return `rgba(${r},${g},${b},${alpha})`;\n  }\n\n  // Adjust RGB values and convert to HEX\n  const toHex = (value: number) =>\n    Math.round(value * 255)\n      .toString(16)\n      .padStart(2, '0');\n  const hexR = toHex(r + m);\n  const hexG = toHex(g + m);\n  const hexB = toHex(b + m);\n\n  // Combine the values and return the HEX color\n  return `#${hexR}${hexG}${hexB}`;\n}\n\nconst RGBToHSL = (red: number, green: number, blue: number) => {\n  // Make r, g, and b fractions of 1\n  const r = red / 255;\n  const g = green / 255;\n  const b = blue / 255;\n\n  // Find greatest and smallest channel values\n  const cmin = Math.min(r, g, b);\n  const cmax = Math.max(r, g, b);\n  const delta = cmax - cmin;\n  const hue = getHue(r, g, b);\n  const lightness = getLightness(cmax, cmin);\n  const saturation = getSaturation(delta, lightness);\n\n  return [hue, saturation * 100, lightness * 100];\n};\n\nconst getHue = (r: number, g: number, b: number) => {\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const c = max - min;\n  let hue: number = 0;\n  if (c == 0) {\n    hue = 0;\n  } else {\n    switch (max) {\n      case r: {\n        let segment = (g - b) / c;\n        let shift = 0; // R\u00B0 / (360\u00B0 / hex sides)\n        if (segment < 0) {\n          // hue > 180, full rotation\n          shift = 360 / 60; // R\u00B0 / (360\u00B0 / hex sides)\n        }\n        hue = segment + shift;\n        break;\n      }\n\n      case g: {\n        let segment = (b - r) / c;\n        let shift = 120 / 60; // G\u00B0 / (360\u00B0 / hex sides)\n        hue = segment + shift;\n        break;\n      }\n\n      case b:\n        let segment = (r - g) / c;\n        let shift = 240 / 60; // B\u00B0 / (360\u00B0 / hex sides)\n        hue = segment + shift;\n        break;\n    }\n  }\n  return hue * 60; // hue is in [0,6], scale it up\n};\n\nconst getSaturation = (delta: number, lightness: number) =>\n  delta == 0 ? 0 : delta / (1 - Math.abs(2 * lightness - 1));\n\nconst getLightness = (cmax: number, cmin: number) => (cmax + cmin) / 2;\n\nconst fullDarkMode = ([red, green, blue, alpha]: number[]) => {\n  const [hue, saturation, lightness] = RGBToHSL(red, green, blue);\n  return hslaToHex(hue, saturation * 0.9, 100 - lightness, alpha);\n};\n\nfunction hexToRgba(hex: string) {\n  if (hex.startsWith('#')) {\n    hex = hex.slice(1);\n  }\n\n  let r = parseInt(hex.substring(0, 2), 16);\n  let g = parseInt(hex.substring(2, 4), 16);\n  let b = parseInt(hex.substring(4, 6), 16);\n  let a = parseInt(hex.substring(6, 8) || 'ff', 16);\n  return [r, g, b, a / 255];\n}\n\nexport const convertColorToDark = (color: string) => {\n  if (color.startsWith('rgb')) {\n    const t = color\n      .replace('rgb', '')\n      .replace('a', '')\n      .replace('(', '')\n      .replace(')', '');\n    const list = t.split(',').map(Number);\n    if (list.length <= 3) {\n      list.push(1);\n    }\n    return fullDarkMode(list);\n  } else {\n    return fullDarkMode(hexToRgba(color));\n  }\n};\n", "import { convertColorToDark } from './convert';\n\nexport const lightColor = Object.freeze({\n  primaryColor: '#217346',\n  buttonActiveColor: '#c6c6c6',\n  selectionColor: 'rgba(198,198,198,0.3)',\n  backgroundColor: '#e6e6e6',\n  hoverColor: 'rgba(0, 0, 0, 0.04)',\n  scrollbarColor: 'rgba(0, 0, 0, 0.1)',\n  scrollbarHoveColor: 'rgba(0, 0, 0, 0.2)',\n  dialogBackground: 'rgba(0, 0, 0, 0.6)',\n  white: '#ffffff',\n  black: '#000000',\n  triangleFillColor: '#dddddd',\n  contentColor: '#333333',\n  borderColor: '#cccccc',\n  activeBorderColor: '#808080',\n  errorFormulaColor: '#ff0000',\n});\n\nexport const darkColor = Object.freeze(\n  Object.fromEntries(\n    Object.entries(lightColor).map(([k, v]) => [k, convertColorToDark(v)]),\n  ),\n);\n", "import { ThemeType } from '@/types';\nimport size from './size';\nimport zIndex from './zIndex';\nimport { lightColor, darkColor } from './color';\nimport { convertColorToDark } from './convert';\n\nexport const sizeConfig = {\n  ...size,\n  ...zIndex,\n};\n\nconst themeKey = 'data-theme' as const;\n\nexport function setTheme(value: ThemeType) {\n  sessionStorage.setItem(themeKey, value);\n  document.documentElement.setAttribute(themeKey, value);\n}\nexport function getTheme(): ThemeType {\n  if (typeof sessionStorage !== 'undefined') {\n    const l = sessionStorage.getItem(themeKey);\n    if (l && (l === 'dark' || l === 'light')) {\n      return l as ThemeType;\n    }\n  }\n  if (typeof matchMedia === 'function') {\n    const result = matchMedia('(prefers-color-scheme: dark)').matches\n      ? 'dark'\n      : 'light';\n    return result;\n  }\n  return 'light';\n}\n\nexport function getThemeColor(key: keyof typeof lightColor, type?: ThemeType) {\n  if (type === 'dark' || getTheme() === 'dark') {\n    return darkColor[key];\n  } else {\n    return lightColor[key];\n  }\n}\nexport { darkColor, lightColor, convertColorToDark };\n", "let dprData: number | undefined = undefined;\nexport function dpr(\n  data = typeof devicePixelRatio === 'undefined' ? undefined : devicePixelRatio,\n): number {\n  if (typeof dprData === 'number') {\n    return dprData;\n  }\n  return Math.max(Math.floor(data || 1), 1);\n}\n\nexport function npx(px: number): number {\n  return Math.floor(px * dpr());\n}\n\n// for worker\nexport function setDpr(data: number) {\n  dprData = Math.max(Math.floor(data || 1), 1);\n}\n", "type Params = any[];\n\nexport function throttle(fn: (...params: Params) => void, wait: number) {\n  let check = false;\n  let lastArgs: Params | undefined = undefined;\n  return function (...args: Params) {\n    if (check) {\n      lastArgs = args;\n    } else {\n      // @ts-ignore\n      fn.apply(this, args);\n      setTimeout(() => {\n        if (lastArgs) {\n          // @ts-ignore\n          fn.apply(this, lastArgs);\n        }\n        check = false;\n      }, wait);\n    }\n  };\n}\n\nexport function get<T>(\n  obj: Record<string, any> | null | undefined,\n  path: string,\n  defaultValue?: T,\n): T {\n  const result =\n    obj == null\n      ? undefined\n      : path\n          .replace(/\\[/g, '.')\n          .replace(/\\]/g, '')\n          .split('.')\n          .reduce((res, key) => {\n            return res == null ? res : res[key];\n          }, obj);\n  return (result === undefined ? defaultValue : result) as T;\n}\n\nexport function isEmpty(value: unknown): boolean {\n  const temp: any = value || {};\n  return (\n    [Object, Array].includes(temp.constructor) && !Object.entries(temp).length\n  );\n}\n\nexport function deepEqual(x: any, y: any) {\n  if (x === y) {\n    return true;\n  }\n  if (x && typeof x === 'object' && y && typeof y === 'object') {\n    if (Object.keys(x).length !== Object.keys(y).length) {\n      return false;\n    }\n    const keys1 = Object.keys(x);\n    const keys2 = Object.keys(y);\n    for (let i = 0; i < keys1.length; i++) {\n      const key1 = keys1[i];\n      const key2 = keys2[i];\n      if (key1 !== key2 || !deepEqual(x[key1], y[key2])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\nexport function noop() {}\n\nexport function camelCase(str: string) {\n  const a = str\n    .toLowerCase()\n    .replace(/[-_\\s.]+(.)?/g, (_, c) => (c ? c.toUpperCase() : ''));\n  return a.substring(0, 1).toLowerCase() + a.substring(1);\n}\n", "/**\n * font-style:  none | normal | italic | oblique\n * font-variant none | normal | small-caps // \u4F5C\u7528\u4E0D\u5927\n * font-weight  none | normal | bold | \u6570\u5B57\n * font-size\n * line-height\n * font-family\n * e.g italic bold 14px/16px sans-serif;\n */\n\nimport { EUnderLine, StyleType, ResultType } from '@/types';\nimport { DEFAULT_FONT_SIZE, MUST_FONT_FAMILY } from './constant';\nimport { camelCase } from './lodash';\nimport { parseNumber, isTestEnv } from './util';\n\nexport const FONT_SIZE_LIST = [\n  6,\n  8,\n  9,\n  10,\n  DEFAULT_FONT_SIZE,\n  14,\n  16,\n  18,\n  20,\n  22,\n  24,\n  26,\n  28,\n  36,\n  48,\n  72,\n];\n\nexport function makeFont(\n  fontStyle: 'none' | 'normal' | 'italic' | 'oblique' = 'normal',\n  fontWeight = 'normal',\n  fontSize = DEFAULT_FONT_SIZE,\n  fontFamily = '',\n): string {\n  const temp = `${fontStyle} ${fontWeight} ${fontSize}px `;\n  const fontFamilyList: string[] = [MUST_FONT_FAMILY];\n  // just for test\n  if (isTestEnv()) {\n    fontFamilyList.unshift('Source Code Pro');\n  }\n  if (fontFamily) {\n    fontFamilyList.unshift(fontFamily);\n  }\n  return temp + fontFamilyList.join(',');\n}\n\nexport function convertToCssString(style: Partial<StyleType>): string {\n  let result = '';\n  if (style.fontColor) {\n    result += `color:${style.fontColor};`;\n  }\n  if (style.fillColor) {\n    result += `background-color:${style.fillColor};`;\n  }\n  if (style.fontSize) {\n    result += `font-size:${style.fontSize}pt;`;\n  }\n  if (style.fontFamily) {\n    result += `font-family:${style.fontFamily};`;\n  }\n  if (style.isItalic) {\n    result += 'font-style:italic;';\n  }\n  if (style.isBold) {\n    result += 'font-weight:700;';\n  }\n  if (style.isWrapText) {\n    result += 'white-space:normal;';\n  }\n  if (style.underline && style.isStrike) {\n    result += 'text-decoration-line:underline line-through;';\n  } else if (style.underline) {\n    result += 'text-decoration-line:underline;';\n  } else if (style.isStrike) {\n    result += 'text-decoration-line:line-through;';\n  }\n  if (style.underline === EUnderLine.DOUBLE) {\n    result += 'text-decoration-style: double;';\n  }\n\n  return result;\n}\n\nfunction pickCSSStyle(style: Partial<CSSStyleDeclaration>): Partial<StyleType> {\n  const {\n    color,\n    backgroundColor,\n    fontSize,\n    fontFamily,\n    fontStyle,\n    fontWeight,\n    whiteSpace,\n    textDecorationLine,\n    textDecorationStyle,\n  } = style;\n  const result: Partial<StyleType> = {};\n  if (color) {\n    result.fontColor = color;\n  }\n  if (backgroundColor) {\n    result.fillColor = backgroundColor;\n  }\n  if (fontSize) {\n    const size = parseInt(fontSize, 10);\n    if (!isNaN(size)) {\n      result.fontSize = size;\n    }\n  }\n  if (fontFamily) {\n    result.fontFamily = fontFamily;\n  }\n  if (fontStyle === 'italic') {\n    result.isItalic = true;\n  }\n  if (fontWeight && [700, 800, 900, 'bold'].includes(fontWeight)) {\n    result.isBold = true;\n  }\n  if (\n    whiteSpace &&\n    [\n      'normal',\n      'pre-wrap',\n      'pre-line',\n      'break-spaces',\n      'revert',\n      'unset',\n    ].includes(whiteSpace)\n  ) {\n    result.isWrapText = true;\n  }\n  if (textDecorationLine?.includes('underline')) {\n    result.underline = EUnderLine.SINGLE;\n    if (textDecorationStyle === 'double') {\n      result.underline = EUnderLine.DOUBLE;\n    }\n  }\n  if (textDecorationLine?.includes('line-through')) {\n    result.isStrike = true;\n  }\n  return result;\n}\n\nfunction parseStyle(\n  styleMap: Record<string, CSSStyleDeclaration>,\n  style: CSSStyleDeclaration,\n  className: string,\n  tagName: string,\n): Partial<StyleType> {\n  let result: Partial<StyleType> = {};\n  const name = tagName.toLowerCase();\n  const t = styleMap[tagName] || styleMap[name];\n  if (t) {\n    result = pickCSSStyle(t);\n  }\n  if (styleMap[className]) {\n    result = Object.assign(result, pickCSSStyle(styleMap[className]));\n  }\n\n  result = Object.assign(result, pickCSSStyle(style));\n\n  if (name === 's' || name === 'strike') {\n    result.isStrike = true;\n  } else if (name === 'i') {\n    result.isItalic = true;\n  } else if (name === 'b' || name === 'strong') {\n    result.isBold = true;\n  } else if (name === 'u') {\n    result.underline = EUnderLine.SINGLE;\n  }\n  return result;\n}\n\nfunction convertToCssStyleDeclaration(cssStr: string) {\n  const str = cssStr.replace(/\\s+/g, '').replace('<!--', '');\n  const regex = /([^{}]+)\\s*\\{([^}]*)\\}/g;\n  const matches: Record<string, Record<string, string | number>> = {};\n  let match;\n  while ((match = regex.exec(str)) !== null) {\n    const name = (match[1] || '').trim();\n    const cssText = (match[2] || '').trim();\n    if (!name || !cssText) {\n      continue;\n    }\n    matches[name] = {};\n    const list = cssText.split(';');\n    for (const item of list) {\n      const [n, v] = item.split(':').map((v) => v.trim());\n      if (!v || !n) {\n        continue;\n      }\n      const realKey = camelCase(n);\n      const [check, num] = parseNumber(v);\n      const value = check ? num : v;\n      matches[name][realKey] = value;\n    }\n  }\n  return matches;\n}\n\nexport function convertToPx(value: string): number {\n  const num = parseInt(value, 10);\n  if (isNaN(num)) {\n    return -1;\n  }\n  // pt to px\n  if (value.endsWith('pt')) {\n    return Math.ceil((num * 96) / 72);\n  }\n  return num;\n}\nexport function convertPxToPt(px: number, other = 'pt'): string {\n  const pt = Math.floor((px * 72) / 96);\n  return String(pt) + other;\n}\nexport function parseText(text: string, splitter = '\\t') {\n  let list: string[];\n  if (text.indexOf('\\r\\n') >= 0) {\n    list = text.split('\\r\\n');\n  } else {\n    list = text.split('\\n');\n  }\n  const result = list\n    .map((v) => v.trim())\n    .filter((v) => v)\n    .map((v) =>\n      v\n        .split(splitter)\n        .map((v) => v.trim())\n        .filter((v) => v),\n    );\n  const textList: Array<Array<ResultType>> = [];\n  for (const item of result) {\n    if (item.length === 0) {\n      continue;\n    }\n    textList.push(item);\n  }\n  return textList;\n}\n\nexport function parseHTML(html: string) {\n  let template: HTMLTemplateElement | undefined =\n    document.createElement('template');\n  template.innerHTML = html;\n  const doc = template.content;\n  const styleMap: Record<string, CSSStyleDeclaration> = {};\n  for (const item of doc.querySelectorAll('style')) {\n    const temp = convertToCssStyleDeclaration(item.textContent || '');\n    for (const [key, value] of Object.entries(temp)) {\n      styleMap[key] = Object.assign(styleMap[key] || {}, value);\n    }\n  }\n  const textList: Array<Array<ResultType>> = [];\n  const styleList: Array<Array<Partial<StyleType>>> = [];\n  const trList = doc.querySelectorAll('tr');\n  const colMap = new Map<number, number>();\n  const rowMap = new Map<number, number>();\n  let row = 0;\n  for (const tr of trList) {\n    const height = convertToPx(tr.style.height);\n    if (height > 0) {\n      rowMap.set(row++, height);\n    }\n    const texts: ResultType[] = [];\n    const list: Array<Partial<StyleType>> = [];\n    let col = 0;\n    for (const td of tr.children) {\n      if (td.tagName !== 'TD') {\n        continue;\n      }\n\n      let temp = td as HTMLElement;\n      const width = convertToPx(temp.style.width);\n      if (width > 0 && !colMap.has(col)) {\n        colMap.set(col++, width);\n      }\n      let itemStyle: Partial<StyleType> = {};\n      while (temp.nodeType !== Node.TEXT_NODE) {\n        const style = parseStyle(\n          styleMap,\n          temp.style,\n          temp.className ? `.${temp.className}` : '',\n          temp.tagName,\n        );\n        itemStyle = Object.assign(itemStyle, style);\n        if (temp.firstChild) {\n          temp = temp.firstChild as HTMLElement;\n        } else {\n          break;\n        }\n      }\n      list.push(itemStyle);\n      texts.push((temp.textContent ?? '').trim());\n    }\n    textList.push(texts);\n    styleList.push(list);\n  }\n  template = undefined;\n  return {\n    textList,\n    styleList,\n    rowMap,\n    colMap,\n  };\n}\n", "import SSF from 'ssf';\nimport { NumberFormatValue } from '@/types';\nimport { DEFAULT_FORMAT_CODE } from '@/util/constant';\n\ntype FormatOptions = {\n  dateNF?: string;\n  date1904?: boolean;\n};\n\nexport function numberFormat(\n  value: NumberFormatValue,\n  pattern?: string,\n  options: FormatOptions = {},\n) {\n  return SSF.format(pattern || DEFAULT_FORMAT_CODE, value, options);\n}\n\nexport function isDateFormat(format?: string) {\n  if (!format) {\n    return false;\n  }\n  return SSF.is_date(format);\n}\n\nexport function convertDateToNumber(v: Date, date1904?: boolean): number {\n  const baseDate = new Date(1899, 11, 31, 0, 0, 0);\n  const baseDateTime = baseDate.getTime();\n  const base1904 = new Date(1900, 2, 1, 0, 0, 0);\n  let epoch = v.getTime();\n  if (date1904) epoch -= 1461 * 24 * 60 * 60 * 1000;\n  else if (v >= base1904) epoch += 24 * 60 * 60 * 1000;\n  return (\n    (epoch -\n      (baseDateTime +\n        (v.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000)) /\n    (24 * 60 * 60 * 1000)\n  );\n}\n", "import { splitToWords } from '@/util/split';\nimport { getThemeColor, sizeConfig } from '@/theme';\nimport { npx, dpr } from '@/util/dpr';\nimport { isEmpty } from '@/util/lodash';\nimport { makeFont } from '@/util/style';\nimport {\n  DEFAULT_FONT_SIZE,\n  ERROR_SET,\n  MERGE_CELL_LINE_BREAK,\n  DEFAULT_FORMAT_CODE,\n  DEFAULT_LINE_WIDTH,\n  BORDER_TYPE_MAP,\n} from '@/util/constant';\nimport {\n  CanvasOverlayPosition,\n  ErrorTypes,\n  Point,\n  EUnderLine,\n  IWindowSize,\n  ResultType,\n  StyleType,\n  EHorizontalAlign,\n  EVerticalAlign,\n  BorderType,\n  BorderItem,\n  ThemeType,\n} from '@/types';\nimport { numberFormat, isDateFormat } from '@/model/numberFormat';\n\nconst measureTextMap = new Map<string, IWindowSize>();\n\nexport function measureText(\n  ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D,\n  char: string,\n): IWindowSize {\n  const mapKey = `${char}__${ctx.font}`;\n  if (measureTextMap.has(mapKey)) {\n    return measureTextMap.get(mapKey)!;\n  }\n  const text = ctx.measureText(char);\n  const { actualBoundingBoxAscent, actualBoundingBoxDescent } = text;\n  const h = actualBoundingBoxAscent + actualBoundingBoxDescent;\n  const w = text.width;\n  const width = Math.ceil(w / dpr());\n  const height = Math.ceil(h / dpr());\n  const result = { width, height };\n  measureTextMap.set(mapKey, result);\n  return result;\n}\n\nexport function fillRect(\n  ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n): void {\n  ctx.fillRect(npx(x), npx(y), npx(width), npx(height));\n}\n/* jscpd:ignore-start */\nexport function strokeRect(\n  ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n): void {\n  ctx.strokeRect(npx(x), npx(y), npx(width), npx(height));\n}\n\nexport function clearRect(\n  ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n): void {\n  ctx.clearRect(npx(x), npx(y), npx(width), npx(height));\n}\n/* jscpd:ignore-end */\n\nexport function fillText(\n  ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D,\n  text: string,\n  x: number,\n  y: number,\n) {\n  ctx.fillText(text, npx(x), npx(y));\n}\n\nexport function drawLines(\n  ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D,\n  pointList: Point[],\n): void {\n  if (pointList.length === 0) {\n    return;\n  }\n  ctx.beginPath();\n  for (let i = 0; i < pointList.length; i += 2) {\n    const first = pointList[i];\n    const second = pointList[i + 1];\n    ctx.moveTo(npx(first[0]), npx(first[1]));\n    ctx.lineTo(npx(second[0]), npx(second[1]));\n  }\n  ctx.stroke();\n}\n\nexport function drawTriangle(\n  ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D,\n  point1: Point,\n  point2: Point,\n  point3: Point,\n) {\n  ctx.beginPath();\n  ctx.moveTo(npx(point1[0]), npx(point1[1]));\n  ctx.lineTo(npx(point2[0]), npx(point2[1]));\n  ctx.lineTo(npx(point3[0]), npx(point3[1]));\n  ctx.fill();\n}\n\nexport function getDoubleLine(\n  pointList: Point[],\n  position: 'top' | 'bottom' | 'left' | 'right' = 'bottom',\n  isShort: boolean = false,\n) {\n  const result = pointList.slice();\n  const [start, end] = pointList;\n  const t = DEFAULT_LINE_WIDTH * 2;\n  const other = isShort ? t : 0;\n  if (position === 'bottom') {\n    result.push([start[0] + other, start[1] - t], [end[0] - other, end[1] - t]);\n  } else if (position === 'top') {\n    result.push([start[0] + other, start[1] + t], [end[0] - other, end[1] + t]);\n  } else if (position === 'left') {\n    result.push([start[0] + t, start[1] + other], [end[0] + t, end[1] - other]);\n  } else if (position === 'right') {\n    result.push([start[0] - t, start[1] + other], [end[0] - t, end[1] - other]);\n  }\n  return result;\n}\n\nexport function resizeCanvas(\n  canvas: HTMLCanvasElement,\n  width: number,\n  height: number,\n): void {\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n  const realWidth = npx(width);\n  const realHeight = npx(height);\n  canvas.width = realWidth;\n  canvas.height = realHeight;\n}\n\nfunction splitWords(\n  text: string,\n  isWrapText?: boolean,\n  isMergeContent?: boolean,\n): string[] {\n  if (isWrapText && isMergeContent) {\n    return text.split(MERGE_CELL_LINE_BREAK);\n  }\n  if (isWrapText) {\n    return splitToWords(text);\n  }\n  return splitToWords(\n    isMergeContent ? text.replaceAll(MERGE_CELL_LINE_BREAK, '') : text,\n  );\n}\n\nexport function drawAntLine(\n  ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n) {\n  ctx.setLineDash([npx(8), npx(6)]);\n  const offset = DEFAULT_LINE_WIDTH;\n  strokeRect(\n    ctx,\n    x + offset,\n    y + offset,\n    width - offset * 2,\n    height - offset * 2,\n  );\n  ctx.setLineDash([]);\n}\n\nfunction getLineDash(type?: BorderType) {\n  let dash: number[] = [];\n  if (type === 'hair') {\n    dash = [DEFAULT_LINE_WIDTH, DEFAULT_LINE_WIDTH];\n  } else if (type === 'dotted' || type === 'mediumDashed') {\n    dash = [DEFAULT_LINE_WIDTH * 2, DEFAULT_LINE_WIDTH * 2];\n  } else if (type === 'dashed') {\n    dash = [DEFAULT_LINE_WIDTH * 4, DEFAULT_LINE_WIDTH * 4];\n  } else if (type === 'dashDot' || type === 'mediumDashDot') {\n    dash = [\n      DEFAULT_LINE_WIDTH * 4,\n      DEFAULT_LINE_WIDTH * 4,\n      DEFAULT_LINE_WIDTH * 8,\n      DEFAULT_LINE_WIDTH * 4,\n    ];\n  } else if (type === 'dashDotDot' || type === 'mediumDashDotDot') {\n    dash = [\n      DEFAULT_LINE_WIDTH * 4,\n      DEFAULT_LINE_WIDTH * 4,\n      DEFAULT_LINE_WIDTH * 8,\n      DEFAULT_LINE_WIDTH * 4,\n      DEFAULT_LINE_WIDTH * 4,\n      DEFAULT_LINE_WIDTH * 4,\n    ];\n  }\n  return dash;\n}\n\nexport function renderBorderItem(\n  ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D,\n  cellInfo: CanvasOverlayPosition,\n  borderItem: BorderItem | undefined,\n  position: 'top' | 'bottom' | 'left' | 'right',\n  theme?: ThemeType,\n) {\n  if (!borderItem) {\n    return;\n  }\n  const { top, left, width, height } = cellInfo;\n\n  let list: Point[] = [];\n  if (position === 'top') {\n    list = [\n      [left, top],\n      [left + width, top],\n    ];\n  } else if (position === 'bottom') {\n    list = [\n      [left, top + height],\n      [left + width, top + height],\n    ];\n  } else if (position === 'left') {\n    list = [\n      [left, top],\n      [left, top + height],\n    ];\n  } else if (position === 'right') {\n    list = [\n      [left + width, top],\n      [left + width, top + height],\n    ];\n  }\n  const { type, color } = borderItem;\n  ctx.lineWidth = BORDER_TYPE_MAP[type];\n  ctx.strokeStyle = color || getThemeColor('black', theme);\n  const lineDash = getLineDash(type);\n  if (type === 'double') {\n    list = getDoubleLine(list, position, true);\n  }\n  if (lineDash.length > 0) {\n    ctx.setLineDash(lineDash.map((v) => npx(v)));\n  }\n  drawLines(ctx, list);\n  if (lineDash.length > 0) {\n    ctx.setLineDash([]);\n  }\n}\n\ntype TextItem = { str: string; width: number; height: number };\nexport function renderCell(\n  ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D,\n  cellInfo: CanvasOverlayPosition,\n  value: ResultType,\n  style?: Partial<StyleType>,\n  isMergeContent?: boolean,\n  theme?: ThemeType,\n): IWindowSize {\n  const result: IWindowSize = { height: 0, width: 0 };\n  if (value === '' && isEmpty(style)) {\n    return result;\n  }\n  const format = style?.numberFormat || DEFAULT_FORMAT_CODE;\n  const isRight = format === DEFAULT_FORMAT_CODE && typeof value === 'number';\n  const text = numberFormat(value, format);\n  const fontSize = style?.fontSize ? style.fontSize : DEFAULT_FONT_SIZE;\n  const font = makeFont(\n    style?.isItalic ? 'italic' : 'normal',\n    style?.isBold ? 'bold' : '500',\n    npx(fontSize),\n    style?.fontFamily,\n  );\n\n  // draw background color\n  if (style?.fillColor) {\n    ctx.fillStyle = style?.fillColor;\n    fillRect(ctx, cellInfo.left, cellInfo.top, cellInfo.width, cellInfo.height);\n  }\n  // error text\n  let fillStyle = style?.fontColor || getThemeColor('contentColor', theme);\n  if (ERROR_SET.has(text as ErrorTypes)) {\n    fillStyle = getThemeColor('errorFormulaColor', theme);\n  }\n\n  ctx.font = font;\n  ctx.fillStyle = fillStyle;\n\n  const realStyle = style ? { ...style } : {};\n  let align = realStyle?.horizontalAlign;\n  if (realStyle?.horizontalAlign === undefined && isRight) {\n    align = EHorizontalAlign.RIGHT;\n  }\n  realStyle.horizontalAlign = align;\n\n  const texts = splitWords(text);\n  const textList: TextItem[] = texts.map((item) => {\n    const size = measureText(ctx, item);\n    return {\n      str: item,\n      width: size.width,\n      height: size.height === 0 ? fontSize : size.height,\n    };\n  });\n\n  // fill text\n  const { width, height, resultList } = computeCell(\n    textList,\n    cellInfo,\n    realStyle,\n    isMergeContent,\n  );\n  if (width > 0 && height > 0) {\n    const lineGap = Math.ceil((fontSize * (sizeConfig.lineHeight - 1)) / 2);\n    let list: Point[] = [];\n    for (const item of resultList) {\n      fillText(ctx, item.text, item.x, item.y);\n      if (realStyle?.underline) {\n        ctx.strokeStyle = fillStyle;\n        const t = item.y + item.height + lineGap / 2;\n        const point: Point[] = [\n          [item.x, t],\n          [item.x + item.width, t],\n        ];\n        if (realStyle?.underline === EUnderLine.DOUBLE) {\n          list = list.concat(getDoubleLine(point, 'bottom', false));\n        } else {\n          list = list.concat(point);\n        }\n      }\n      if (realStyle?.isStrike) {\n        ctx.strokeStyle = fillStyle;\n        const t = item.y + item.height / 2 + lineGap / 2;\n        list = list.concat([\n          [item.x, t],\n          [item.x + item.width, t],\n        ]);\n      }\n    }\n    // underline strike\n    drawLines(ctx, list);\n  }\n\n  result.height = Math.ceil(height);\n  result.width = Math.ceil(width);\n  if (!realStyle?.isWrapText && isDateFormat(format)) {\n    // show all date info\n    const temp = textList.reduce((prev, cur) => prev + cur.width, 0);\n    result.width = Math.max(Math.ceil(temp), result.width);\n  }\n\n  return result;\n}\nfunction computeCell(\n  texts: TextItem[],\n  cellInfo: CanvasOverlayPosition,\n  style?: Partial<StyleType>,\n  isMergeContent?: boolean,\n) {\n  const fontSize = style?.fontSize ? style.fontSize : DEFAULT_FONT_SIZE;\n  const lineGap = Math.ceil((fontSize * (sizeConfig.lineHeight - 1)) / 2);\n  const verticalAlign = style?.verticalAlign ?? EVerticalAlign.MIDDLE;\n  const { left, top, height } = cellInfo;\n  const width = Math.max(cellInfo.width, ...texts.map((v) => v.width));\n  const textList: Array<{\n    text: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n  }> = [];\n  let textWidth = 0;\n  let textHeight = 0;\n  if (style?.isWrapText && isMergeContent) {\n    let y = 0;\n    for (let i = 0; i < texts.length; i++) {\n      const item = texts[i];\n      textWidth = Math.max(textWidth, item.width);\n      const temp = item.height + lineGap * 2;\n      textHeight += temp;\n      textList.push({\n        text: item.str,\n        x: 0,\n        y,\n        width: item.width,\n        height: item.height,\n      });\n      y += temp;\n    }\n  } else if (style?.isWrapText) {\n    let y = 0;\n    for (let i = 0; i < texts.length; ) {\n      let temp = width;\n      let line = '';\n      let w = 0;\n      let h = 0;\n      while (i < texts.length) {\n        const item = texts[i];\n        if (temp >= item.width) {\n          w += item.width;\n          h = Math.max(h, item.height);\n          temp -= item.width;\n          line += item.str;\n          i++;\n        } else {\n          break;\n        }\n      }\n      if (line) {\n        textWidth = Math.max(textWidth, w);\n        const t = h + lineGap * 2;\n        textHeight += t;\n        textList.push({\n          text: line,\n          x: 0,\n          y,\n          width: w,\n          height: h,\n        });\n        y += t;\n      }\n    }\n  } else {\n    let line = '';\n    let temp = width;\n    for (let i = 0; i < texts.length; i++) {\n      const item = texts[i];\n      if (temp >= item.width) {\n        textWidth += item.width;\n        textHeight = Math.max(textHeight, item.height);\n        line += item.str;\n        temp -= item.width;\n      } else {\n        break;\n      }\n    }\n    textList.push({\n      text: line,\n      x: 0,\n      y: 0,\n      width: textWidth,\n      height: textHeight,\n    });\n  }\n  textHeight = Math.max(textHeight, fontSize * sizeConfig.lineHeight);\n  textWidth += lineGap;\n  textHeight += lineGap;\n  if (textWidth <= width && textHeight <= height) {\n    let x = left + lineGap;\n    let y = top + (height - textHeight) / 2 + lineGap;\n    if (verticalAlign === EVerticalAlign.TOP) {\n      y = top + lineGap;\n    } else if (verticalAlign === EVerticalAlign.BOTTOM) {\n      y = top + (height - textHeight) + lineGap;\n    }\n    if (style?.horizontalAlign === EHorizontalAlign.CENTER) {\n      x = left + (width - textWidth) / 2;\n    } else if (style?.horizontalAlign === EHorizontalAlign.RIGHT) {\n      x = left + (width - textWidth) - lineGap;\n    }\n    for (const item of textList) {\n      item.x = item.x + x;\n      item.y = item.y + y;\n    }\n  }\n  return {\n    width: textWidth,\n    height: textHeight,\n    resultList: textList,\n  };\n}\n", "import { getThemeColor } from '@/theme';\nimport { ThemeType } from '@/types';\nimport { DEFAULT_LINE_WIDTH, DEFAULT_FONT_SIZE } from '@/util/constant';\nimport { makeFont } from '@/util/style';\nimport { npx } from '@/util/dpr';\n\nexport function getHeaderStyle(\n  theme?: ThemeType,\n): Pick<\n  CanvasRenderingContext2D,\n  | 'textAlign'\n  | 'textBaseline'\n  | 'font'\n  | 'fillStyle'\n  | 'lineWidth'\n  | 'strokeStyle'\n> {\n  return {\n    textAlign: 'center',\n    textBaseline: 'middle',\n    font: makeFont(undefined, '500', npx(DEFAULT_FONT_SIZE)),\n    fillStyle: getThemeColor('black', theme),\n    lineWidth: DEFAULT_LINE_WIDTH,\n    strokeStyle: getThemeColor('borderColor', theme),\n  };\n}\n", "import {\n  RequestRender,\n  Point,\n  IRange,\n  CanvasOverlayPosition,\n  IPosition,\n  IWindowSize,\n  WorkerMainView,\n  ContentParams,\n} from '@/types';\nimport {\n  clearRect,\n  fillRect,\n  strokeRect,\n  fillText,\n  drawLines,\n  drawTriangle,\n  drawAntLine,\n  renderBorderItem,\n  renderCell,\n} from './util';\nimport { getThemeColor } from '@/theme';\nimport {\n  DEFAULT_LINE_WIDTH,\n  CELL_HEIGHT,\n  CELL_WIDTH,\n  HIDE_CELL,\n  BORDER_TYPE_MAP,\n} from '@/util/constant';\nimport { getHeaderStyle } from './constant';\nimport { intToColumnName } from '@/util/convert';\nimport { isSheet, isCol, isRow, containRange } from '@/util/range';\nimport { npx, dpr } from '@/util/dpr';\n\nconst lineWidth = Math.max(...Object.values(BORDER_TYPE_MAP));\n\n/**\n * run OffScreenWorker in Web Worker env\n */\nexport class OffScreenWorker implements WorkerMainView {\n  private canvas: OffscreenCanvas;\n  private ctx: OffscreenCanvasRenderingContext2D;\n  private width: number = 0;\n  private height: number = 0;\n  private isRendering = false;\n  private rowMap: Record<string, number> = {};\n  private colMap: Record<string, number> = {};\n  private eventData: Omit<RequestRender, 'status' | 'changeSet'> = {\n    theme: 'light',\n    sheetData: {},\n    canvasSize: {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n    },\n    headerSize: {\n      width: 0,\n      height: 0,\n    },\n    currentSheetInfo: {\n      isHide: false,\n      rowCount: 0,\n      colCount: 0,\n      name: '',\n      sheetId: '',\n      tabColor: '',\n      sort: 1,\n    },\n    scroll: {\n      left: 0,\n      top: 0,\n      row: 0,\n      col: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n    },\n    range: {\n      row: 0,\n      col: 0,\n      rowCount: 1,\n      colCount: 1,\n      sheetId: '',\n    },\n    copyRange: undefined,\n    customHeight: {},\n    customWidth: {},\n    currentMergeCells: [],\n  };\n  constructor(canvas: OffscreenCanvas) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d')!;\n    const size = dpr();\n    this.ctx.scale(size, size);\n  }\n  render(data: RequestRender) {\n    if (data.changeSet.size === 0) {\n      return;\n    }\n    if (this.isRendering) {\n      return;\n    }\n    this.isRendering = true;\n    this.eventData = data;\n    this.clear();\n    const { ctx } = this;\n    ctx.strokeStyle = getThemeColor('primaryColor', data.theme);\n    ctx.fillStyle = getThemeColor('white', data.theme);\n    ctx.lineWidth = DEFAULT_LINE_WIDTH * 2;\n\n    const { width, height } = this.eventData.canvasSize;\n    const headerSize = this.eventData.headerSize;\n    const { endRow, contentHeight } = this.renderRowsHeader(height);\n    const { endCol, contentWidth } = this.renderColsHeader(width);\n    this.renderGrid(width - headerSize.width, height - headerSize.height);\n    this.renderTriangle();\n\n    this.renderMergeCell();\n\n    this.ctx.fillStyle = getThemeColor('selectionColor', this.eventData.theme);\n    const result = this.renderSelection({\n      endRow,\n      endCol,\n      contentHeight,\n      contentWidth,\n    });\n    this.renderAntLine(result);\n    this.renderContent({ endRow, endCol, contentHeight, contentWidth });\n    this.ctx.lineWidth = lineWidth;\n    strokeRect(this.ctx, result.left, result.top, result.width, result.height);\n    this.isRendering = false;\n    return { rowMap: this.rowMap, colMap: this.colMap };\n  }\n  resize(data: IWindowSize) {\n    this.width = data.width;\n    this.height = data.height;\n    this.canvas.width = npx(data.width);\n    this.canvas.height = npx(data.height);\n  }\n  private clear() {\n    clearRect(this.ctx, 0, 0, this.width, this.height);\n  }\n\n  private renderRowsHeader(height: number) {\n    const { row: rowIndex } = this.eventData.scroll;\n    const headerSize = this.eventData.headerSize;\n    const { rowCount } = this.eventData.currentSheetInfo;\n    this.ctx.save();\n    const range = this.eventData.range;\n    fillRect(this.ctx, 0, headerSize.height, headerSize.width, height);\n    Object.assign(this.ctx, getHeaderStyle(this.eventData.theme));\n    const pointList: Point[] = [];\n    let y = headerSize.height;\n    let i = rowIndex;\n\n    for (; i < rowCount && y < height; i++) {\n      const rowHeight = this.getRowHeight(i);\n      let temp = y;\n      if (i === rowIndex) {\n        temp += DEFAULT_LINE_WIDTH / 2;\n      }\n      pointList.push([0, temp], [headerSize.width, temp]);\n      if (rowHeight > 0) {\n        const check = this.isHighlightRow(range, i);\n        this.ctx.fillStyle = check\n          ? getThemeColor('primaryColor', this.eventData.theme)\n          : getThemeColor('black', this.eventData.theme);\n\n        fillText(\n          this.ctx,\n          String(i + 1),\n          headerSize.width / 2,\n          temp + rowHeight / 2,\n        );\n      }\n      y += rowHeight;\n    }\n    pointList.push([0, y], [headerSize.width, y]);\n    pointList.push([0, 0], [0, y]);\n    drawLines(this.ctx, pointList);\n    this.ctx.restore();\n    const contentHeight = i >= rowCount ? y : height;\n\n    return { endRow: i, contentHeight: Math.floor(contentHeight) };\n  }\n  private renderColsHeader(width: number) {\n    const { col: colIndex } = this.eventData.scroll;\n    const headerSize = this.eventData.headerSize;\n    const { colCount } = this.eventData.currentSheetInfo;\n    const range = this.eventData.range;\n    const pointList: Point[] = [];\n    this.ctx.save();\n    fillRect(this.ctx, headerSize.width, 0, width, headerSize.height);\n    Object.assign(this.ctx, getHeaderStyle());\n\n    let x = headerSize.width;\n    let i = colIndex;\n    for (; i < colCount && x <= width; i++) {\n      const colWidth = this.getColWidth(i);\n      let temp = x;\n      if (i === colIndex) {\n        temp += DEFAULT_LINE_WIDTH / 2;\n      }\n      pointList.push([temp, 0], [temp, headerSize.height]);\n      if (colWidth > 0) {\n        const check = this.isHighlightCol(range, i);\n        this.ctx.fillStyle = check\n          ? getThemeColor('primaryColor', this.eventData.theme)\n          : getThemeColor('black', this.eventData.theme);\n        fillText(\n          this.ctx,\n          intToColumnName(i),\n          temp + colWidth / 2,\n          headerSize.height / 2,\n        );\n      }\n      x += colWidth;\n    }\n    pointList.push([x, 0], [x, headerSize.height]);\n    pointList.push([0, 0], [x, 0]);\n    drawLines(this.ctx, pointList);\n    this.ctx.restore();\n    const contentWidth = i >= colCount ? x : width;\n    return {\n      endCol: i,\n      contentWidth: Math.floor(contentWidth),\n    };\n  }\n  private renderGrid(width: number, height: number): void {\n    const headerSize = this.eventData.headerSize;\n    const { row: rowIndex, col: colIndex } = this.eventData.scroll;\n    const { rowCount, colCount } = this.eventData.currentSheetInfo;\n    this.ctx.save();\n    this.ctx.lineWidth = DEFAULT_LINE_WIDTH;\n    this.ctx.strokeStyle = getThemeColor('borderColor', this.eventData.theme);\n    this.ctx.translate(npx(headerSize.width), npx(headerSize.height));\n    const pointList: Point[] = [];\n    let y = 0;\n    let x = 0;\n    let maxX = 0;\n    for (let i = colIndex; i < colCount; i++) {\n      maxX += this.getColWidth(i);\n      if (maxX > width) {\n        break;\n      }\n    }\n    const realWidth = Math.min(maxX, width);\n    let skip = false;\n    for (let i = rowIndex; i < rowCount; i++) {\n      if (!skip) {\n        pointList.push([0, y], [realWidth, y]);\n      } else {\n        skip = false;\n      }\n      const h = this.getRowHeight(i);\n      if (h === 0) {\n        skip = true;\n      }\n      y += h;\n      if (y > height) {\n        break;\n      }\n    }\n    for (let i = colIndex; i < colCount; i++) {\n      if (!skip) {\n        pointList.push([x, 0], [x, y]);\n      } else {\n        skip = false;\n      }\n      const w = this.getColWidth(i);\n      if (w === 0) {\n        skip = true;\n      }\n      x += w;\n      if (x > realWidth) {\n        break;\n      }\n    }\n    pointList.push([0, y], [x, y]);\n    pointList.push([x, 0], [x, y]);\n    drawLines(this.ctx, pointList);\n    this.ctx.restore();\n  }\n  private renderTriangle(): void {\n    const headerSize = this.eventData.headerSize;\n    this.ctx.save();\n\n    fillRect(this.ctx, 0, 0, headerSize.width, headerSize.height);\n    this.ctx.fillStyle = getThemeColor(\n      'triangleFillColor',\n      this.eventData.theme,\n    );\n\n    const offset = 2;\n    const minY = Math.floor(offset);\n    const maxY = Math.floor(headerSize.height - offset);\n    const minX = Math.floor(headerSize.width * 0.4);\n    const maxX = Math.floor(headerSize.width - offset);\n\n    drawTriangle(this.ctx, [maxX, minY], [minX, maxY], [maxX, maxY]);\n\n    this.ctx.restore();\n  }\n  private getRowHeight(row: number) {\n    const key = `${this.eventData.currentSheetInfo.sheetId}_${row}`;\n    const data = this.eventData.customHeight[key];\n    if (!data) {\n      return CELL_HEIGHT;\n    }\n    return data.isHide ? HIDE_CELL : data.len;\n  }\n  private getColWidth(col: number) {\n    const key = `${this.eventData.currentSheetInfo.sheetId}_${col}`;\n    const data = this.eventData.customWidth[key];\n    if (!data) {\n      return CELL_WIDTH;\n    }\n    return data.isHide ? HIDE_CELL : data.len;\n  }\n  private isHighlightRow(range: IRange, row: number): boolean {\n    if (isSheet(range)) {\n      return true;\n    }\n    if (isCol(range)) {\n      return true;\n    }\n    if (row >= range.row && row < range.row + range.rowCount) {\n      return true;\n    }\n    return false;\n  }\n\n  private isHighlightCol(range: IRange, col: number): boolean {\n    if (isSheet(range)) {\n      return true;\n    }\n\n    if (isRow(range)) {\n      return true;\n    }\n    if (col >= range.col && col < range.col + range.colCount) {\n      return true;\n    }\n    return false;\n  }\n\n  private renderAntLine(position: CanvasOverlayPosition) {\n    const range = this.eventData.copyRange;\n    if (!range || range.sheetId !== this.eventData.currentSheetInfo.sheetId) {\n      return;\n    }\n    this.ctx.lineWidth = lineWidth;\n    this.ctx.strokeStyle = getThemeColor('primaryColor', this.eventData.theme);\n    drawAntLine(\n      this.ctx,\n      position.left,\n      position.top,\n      position.width,\n      position.height,\n    );\n  }\n  private renderMergeCell() {\n    const mergeCells = this.eventData.currentMergeCells;\n    if (mergeCells.length === 0) {\n      return;\n    }\n    const activeCell = this.eventData.range;\n    for (const range of mergeCells) {\n      if (activeCell.row === range.row && activeCell.col === range.col) {\n        continue;\n      }\n      this.clearRect(range);\n    }\n  }\n  /* jscpd:ignore-start */\n  private getCellSize(range: IRange): IWindowSize {\n    let { row, col, colCount, rowCount } = range;\n    let r = row;\n    let c = col;\n    let endRow = row + rowCount;\n    let endCol = col + colCount;\n    const sheetInfo = this.eventData.currentSheetInfo;\n    if (isSheet(range)) {\n      c = 0;\n      endCol = sheetInfo.colCount;\n      r = 0;\n      endRow = sheetInfo.rowCount;\n    } else if (isCol(range)) {\n      r = 0;\n      endRow = sheetInfo.rowCount;\n    } else if (isRow(range)) {\n      c = 0;\n      endCol = sheetInfo.colCount;\n    }\n    let width = 0;\n    let height = 0;\n    for (; r < endRow; r++) {\n      height += this.getRowHeight(r);\n    }\n    for (; c < endCol; c++) {\n      width += this.getColWidth(c);\n    }\n    return { width, height };\n  }\n  private computeCellPosition(range: IRange): IPosition {\n    const { row, col } = range;\n    const size = this.eventData.headerSize;\n    const scroll = this.eventData.scroll;\n\n    let resultX = size.width;\n    let resultY = size.height;\n    let r = scroll.row;\n    let c = scroll.col;\n    if (col >= scroll.col) {\n      while (c < col) {\n        resultX += this.getColWidth(c);\n        c++;\n      }\n    } else {\n      resultX = -size.width;\n      while (c > col) {\n        resultX -= this.getColWidth(c);\n        c--;\n      }\n    }\n    if (row >= scroll.row) {\n      while (r < row) {\n        resultY += this.getRowHeight(r);\n        r++;\n      }\n    } else {\n      resultY = -size.height;\n      while (r > row) {\n        resultY -= this.getRowHeight(r);\n        r--;\n      }\n    }\n    return {\n      top: resultY,\n      left: resultX,\n    };\n  }\n  private getActiveRange(r?: IRange) {\n    const range = r || this.eventData.range;\n    const mergeCells = this.eventData.currentMergeCells;\n    for (const item of mergeCells) {\n      if (containRange(range, item)) {\n        const newRange = {\n          ...item,\n          sheetId: item.sheetId,\n        };\n        return {\n          range: newRange,\n          isMerged: true,\n        };\n      }\n    }\n    return {\n      range,\n      isMerged: false,\n    };\n  }\n  /* jscpd:ignore-end */\n  private clearRect(range: IRange) {\n    const cellSize = this.getCellSize(range);\n    if (cellSize.width <= 0 || cellSize.height <= 0) {\n      return;\n    }\n    const activeCell = this.computeCellPosition(range);\n    const lineWidth = DEFAULT_LINE_WIDTH;\n    clearRect(\n      this.ctx,\n      activeCell.left + lineWidth,\n      activeCell.top + lineWidth,\n      cellSize.width - lineWidth * 2,\n      cellSize.height - lineWidth * 2,\n    );\n  }\n  private renderContent(params: ContentParams) {\n    const { endCol, endRow, contentHeight, contentWidth } = params;\n    const { ctx } = this;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'top';\n    ctx.lineWidth = DEFAULT_LINE_WIDTH * 2;\n    const headerSize = this.eventData.headerSize;\n    const { row, col } = this.eventData.scroll;\n\n    const maxWidth = Math.floor(contentWidth - headerSize.width);\n    const maxHeight = Math.floor(contentHeight - headerSize.height);\n    ctx.save();\n\n    this.rowMap = {};\n    this.colMap = {};\n\n    const mergeCells = this.eventData.currentMergeCells;\n    for (let rowIndex = row; rowIndex < endRow; rowIndex++) {\n      for (let colIndex = col; colIndex < endCol; colIndex++) {\n        const mergeCell = mergeCells.find(\n          (v) => v.row === rowIndex && v.col === colIndex,\n        );\n\n        this.renderCell(rowIndex, colIndex, mergeCell, maxWidth, maxHeight);\n      }\n    }\n    ctx.restore();\n  }\n  private renderCell(\n    row: number,\n    col: number,\n    mergeCell: IRange | undefined,\n    maxWidth: number,\n    maxHeight: number,\n  ) {\n    const { ctx } = this;\n    const range: IRange = {\n      row: row,\n      col: col,\n      rowCount: 1,\n      colCount: 1,\n      sheetId: '',\n    };\n    const key = `${row}_${col}`;\n    const cellInfo = this.eventData.sheetData[key];\n    if (!cellInfo) {\n      return;\n    }\n    const cellSize = this.getCellSize(mergeCell || range);\n    if (cellSize.width <= 0 || cellSize.height <= 0) {\n      return;\n    }\n    const position = this.computeCellPosition(range);\n    ctx.lineWidth = DEFAULT_LINE_WIDTH * 2;\n    const theme = this.eventData.theme;\n    const size = renderCell(\n      ctx,\n      {\n        top: position.top,\n        left: position.left,\n        width: Math.min(cellSize.width, maxWidth),\n        height: Math.min(cellSize.height, maxHeight),\n      },\n      cellInfo.value,\n      cellInfo.style,\n      false,\n      theme,\n    );\n    const height = Math.max(this.rowMap[row] ?? 0, size.height);\n    const width = Math.max(this.colMap[col] ?? 0, size.width);\n    if (!mergeCell) {\n      if (height >= CELL_HEIGHT) {\n        this.rowMap[row] = height;\n      }\n      if (width >= CELL_WIDTH) {\n        this.colMap[col] = width;\n      }\n    }\n    const cellPosition = {\n      top: position.top,\n      left: position.left,\n      height: Math.max(height, cellSize.height),\n      width: Math.max(width, cellSize.width),\n    };\n\n    renderBorderItem(\n      ctx,\n      cellPosition,\n      cellInfo.style?.borderTop,\n      'top',\n      theme,\n    );\n    renderBorderItem(\n      ctx,\n      cellPosition,\n      cellInfo.style?.borderBottom,\n      'bottom',\n      theme,\n    );\n    renderBorderItem(\n      ctx,\n      cellPosition,\n      cellInfo.style?.borderLeft,\n      'left',\n      theme,\n    );\n    renderBorderItem(\n      ctx,\n      cellPosition,\n      cellInfo.style?.borderRight,\n      'right',\n      theme,\n    );\n  }\n  private renderSelection(params: ContentParams): CanvasOverlayPosition {\n    const range = this.eventData.range;\n    if (isSheet(range)) {\n      const result = this.renderSelectAll(params);\n      return result;\n    }\n    if (isCol(range)) {\n      const result = this.renderSelectCol(params);\n      return result;\n    }\n    if (isRow(range)) {\n      const result = this.renderSelectRow(params);\n      return result;\n    }\n    return this.renderSelectRange();\n  }\n\n  private renderSelectRange() {\n    const headerSize = this.eventData.headerSize;\n    const range = this.eventData.range;\n\n    const activeCell = this.computeCellPosition({\n      row: range.row,\n      col: range.col,\n      rowCount: 1,\n      colCount: 1,\n      sheetId: '',\n    });\n    const endCellRow = range.row + range.rowCount - 1;\n    const endCellCol = range.col + range.colCount - 1;\n\n    const temp = {\n      row: endCellRow,\n      col: endCellCol,\n      rowCount: 1,\n      colCount: 1,\n      sheetId: '',\n    };\n    const endCell = this.computeCellPosition(temp);\n    const endCellSize = this.getCellSize(temp);\n    const width = endCell.left + endCellSize.width - activeCell.left;\n    const height = endCell.top + endCellSize.height - activeCell.top;\n\n    // col header\n    fillRect(this.ctx, activeCell.left, 0, width, headerSize.height);\n    // row header\n    fillRect(this.ctx, 0, activeCell.top, headerSize.width, height);\n    const check = range.rowCount > 1 || range.colCount > 1;\n    if (check) {\n      // main\n      fillRect(this.ctx, activeCell.left, activeCell.top, width, height);\n    }\n\n    const list: Point[] = [\n      [activeCell.left, headerSize.height],\n      [activeCell.left + width, headerSize.height],\n    ];\n    list.push(\n      [headerSize.width, activeCell.top],\n      [headerSize.width, activeCell.top + height],\n    );\n    drawLines(this.ctx, list);\n    if (check) {\n      this.renderActiveCell();\n    }\n    return {\n      left: activeCell.left,\n      top: activeCell.top,\n      width,\n      height,\n    };\n  }\n  private renderSelectAll(params: ContentParams): CanvasOverlayPosition {\n    const { contentHeight, contentWidth } = params;\n    const headerSize = this.eventData.headerSize;\n    // main\n    fillRect(this.ctx, 0, 0, contentWidth, contentHeight);\n    this.renderActiveCell();\n    const width = contentWidth - headerSize.width;\n    const height = contentHeight - headerSize.height;\n    return {\n      left: headerSize.width,\n      top: headerSize.height,\n      width,\n      height,\n    };\n  }\n  private renderSelectCol({ contentHeight }: ContentParams) {\n    const headerSize = this.eventData.headerSize;\n    const range = this.eventData.range;\n    const activeCell = this.computeCellPosition(range);\n\n    let strokeWidth = 0;\n    for (\n      let i = range.col, endCol = range.col + range.colCount;\n      i < endCol;\n      i++\n    ) {\n      strokeWidth += this.getColWidth(i);\n    }\n    const realHeight = contentHeight - headerSize.height;\n\n    // col header\n    fillRect(this.ctx, activeCell.left, 0, strokeWidth, contentHeight);\n\n    // row header\n    fillRect(this.ctx, 0, activeCell.top, headerSize.width, realHeight);\n\n    const list: Point[] = [\n      [headerSize.width, headerSize.height],\n      [headerSize.width, contentHeight],\n    ];\n    // row header highlight line\n    drawLines(this.ctx, list);\n    this.renderActiveCell();\n    return {\n      left: activeCell.left,\n      top: headerSize.height,\n      width: strokeWidth,\n      height: realHeight,\n    };\n  }\n  private renderSelectRow({ contentWidth }: ContentParams) {\n    const headerSize = this.eventData.headerSize;\n    const range = this.eventData.range;\n    const activeCell = this.computeCellPosition(range);\n    let strokeHeight = 0;\n    for (\n      let i = range.row, endRow = range.row + range.rowCount;\n      i < endRow;\n      i++\n    ) {\n      strokeHeight += this.getRowHeight(i);\n    }\n    const realWidth = contentWidth - headerSize.width - DEFAULT_LINE_WIDTH;\n    // col header\n    fillRect(this.ctx, activeCell.left, 0, realWidth, headerSize.height);\n\n    // row header\n    fillRect(this.ctx, 0, activeCell.top, contentWidth, strokeHeight);\n\n    const list: Point[] = [\n      [activeCell.left, headerSize.height],\n      [contentWidth, headerSize.height],\n    ];\n    // col header highlight line\n    drawLines(this.ctx, list);\n    this.renderActiveCell();\n    return {\n      left: headerSize.width,\n      top: activeCell.top,\n      width: realWidth,\n      height: strokeHeight,\n    };\n  }\n\n  private renderActiveCell() {\n    const range = this.eventData.range;\n    const temp = this.getActiveRange({\n      row: range.row,\n      col: range.col,\n      rowCount: 1,\n      colCount: 1,\n      sheetId: range.sheetId,\n    }).range;\n    this.clearRect(temp);\n  }\n}\n", "import {\n  RequestMessageType,\n  IRange,\n  ResultType,\n  ResponseMessageType,\n  InterpreterResult,\n  ResponseFormula,\n  Coordinate,\n  RequestFormula,\n} from './types';\nimport { parseFormula, CustomError } from './formula';\nimport { iterateRange } from '@/util/range';\nimport { coordinateToString, stringToCoordinate } from '@/util/util';\nimport { OffScreenWorker } from './canvas/offScreenWorker';\nimport { setDpr } from '@/util/dpr';\n\nlet offScreen: OffScreenWorker;\nself.addEventListener('message', (event: MessageEvent<RequestMessageType>) => {\n  if (event.data.status === 'formula') {\n    const list = parseAllFormulas(event.data);\n    const data: ResponseFormula = {\n      list,\n      status: 'formula',\n    };\n    self.postMessage(data);\n  } else if (event.data.status === 'init') {\n    offScreen = new OffScreenWorker(event.data.canvas);\n    setDpr(event.data.dpr);\n  } else if (event.data.status === 'render') {\n    const result = offScreen.render(event.data);\n    if (result) {\n      const data: ResponseMessageType = {\n        ...result,\n        status: 'render',\n      };\n      self.postMessage(data);\n    }\n  } else if (event.data.status === 'resize') {\n    offScreen.resize(event.data);\n  }\n});\n\nfunction parseAllFormulas(eventData: RequestFormula) {\n  const { currentSheetId, worksheets } = eventData;\n  const formulaCache = new Map<string, InterpreterResult>();\n  const sheetData = worksheets[currentSheetId] || {};\n  const list: ResponseFormula['list'] = [];\n  for (const [k, data] of Object.entries(sheetData)) {\n    if (data?.formula) {\n      const result = parseFormulaItem(\n        data.formula,\n        eventData,\n        formulaCache,\n        stringToCoordinate(k),\n        list,\n      );\n      if (result.result !== data.value) {\n        list.push({\n          key: k,\n          newValue: result.result,\n          sheetId: currentSheetId,\n        });\n      }\n    }\n  }\n  return list;\n}\n\nfunction parseFormulaItem(\n  formula: string,\n  eventData: RequestFormula,\n  cache: Map<string, InterpreterResult>,\n  coord: Coordinate,\n  list: ResponseFormula['list'],\n): InterpreterResult {\n  const temp = cache.get(formula);\n  if (temp) {\n    return temp;\n  }\n  const { currentSheetId, worksheets, definedNames, workbook } = eventData;\n  const result = parseFormula(\n    formula,\n    {\n      getCurrentCell: () => {\n        return coord;\n      },\n      get: (range: IRange) => {\n        const { row, col, sheetId } = range;\n        const realSheetId = sheetId || currentSheetId;\n        const result: ResultType[] = [];\n        const sheetInfo = workbook.find((v) => v.sheetId === realSheetId);\n        if (\n          !sheetInfo ||\n          row >= sheetInfo.rowCount ||\n          col >= sheetInfo.colCount\n        ) {\n          throw new CustomError('#REF!');\n        }\n        const sheetData = worksheets[realSheetId] || {};\n        iterateRange(range, sheetInfo, (r, c) => {\n          const key = coordinateToString(r, c);\n          if (sheetData[key]) {\n            const f = sheetData[key].formula;\n            const oldValue = sheetData[key].value;\n            if (f) {\n              const t = parseFormulaItem(\n                f,\n                eventData,\n                cache,\n                { row: r, col: c },\n                list,\n              );\n              if (t.result !== oldValue) {\n                list.push({ key, newValue: t.result, sheetId: realSheetId });\n              }\n              result.push(t?.result);\n            } else {\n              result.push(oldValue);\n            }\n          }\n          return false;\n        });\n        return result;\n      },\n      set: () => {\n        throw new CustomError('#REF!');\n      },\n      convertSheetNameToSheetId: (sheetName: string) => {\n        return workbook.find((v) => v.name === sheetName)?.sheetId || '';\n      },\n    },\n    {\n      set: () => {\n        throw new CustomError('#REF!');\n      },\n      get: (name: string) => {\n        return definedNames[name];\n      },\n    },\n  );\n  cache.set(formula, result);\n  return result;\n}\n"],
  "mappings": "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",
  "names": ["require_ssf", "__commonJSMin", "exports", "module", "SSF", "make_ssf", "_strrev", "x", "fill", "c", "l", "o", "pad0", "v", "d", "t", "pad_", "rpad_", "pad0r1", "pad0r2", "p2_32", "pad0r", "isgeneral", "i", "days", "months", "init_table", "table_fmt", "default_map", "defi", "default_str", "frac", "D", "mixed", "sgn", "B", "P_2", "P_1", "P", "Q_2", "Q_1", "Q", "A", "q", "normalize_xl_unsafe", "s", "m", "n", "parse_date_code", "opts", "b2", "date", "time", "dow", "dout", "out", "fix_hijri", "basedate", "dnthresh", "base1904", "datenum_local", "date1904", "epoch", "general_fmt_num", "trailing_zeroes_and_decimal", "strip_decimal", "mantissa_zeroes_and_decimal", "exp_with_single_digit", "normalize_exp", "small_exp", "w", "large_exp", "general_fmt_num_base", "V", "general_fmt", "format", "THAI_DIGITS", "write_date", "type", "fmt", "val", "ss0", "ss", "tt", "y", "outl", "outstr", "commaify", "j", "write_num", "pct1", "write_num_pct", "sfmt", "mul", "write_num_cm", "idx", "write_num_exp", "period", "ee", "fakee", "$$", "$1", "$2", "$3", "frac1", "write_num_f1", "r", "aval", "sign", "den", "rr", "base", "myn", "myd", "write_num_f2", "dec1", "closeparen", "phone", "hashq", "str", "cc", "rnd", "dd", "dec", "_frac", "carry", "flr", "write_num_flt", "ffmt", "ri", "ff", "oa", "lres", "rres", "write_num_cm2", "write_num_pct2", "write_num_exp2", "write_num_int", "split_fmt", "in_str", "abstime", "fmt_is_date", "eval_fmt", "flen", "lst", "dt", "hr", "bt", "ssm", "_dt", "nstr", "jj", "vv", "myv", "ostr", "decpt", "lasti", "retval", "cfregex", "cfregex2", "chkcond", "thresh", "choose_fmt", "f", "lat", "m1", "m2", "load_entry", "tbl", "DEFAULT_FONT_SIZE", "MUST_FONT_FAMILY", "CELL_HEIGHT", "CELL_WIDTH", "COL_TITLE_WIDTH", "CELL_WIDTH", "HIDE_CELL", "MERGE_CELL_LINE_BREAK", "XLSX_MAX_COL_COUNT", "XLSX_MAX_ROW_COUNT", "FORMULA_PREFIX", "SPLITTER", "MAX_PARAMS_COUNT", "FORMULA_MAX_PRECISION", "DEFAULT_FORMAT_CODE", "ERROR_SET", "DEFAULT_LINE_WIDTH", "BORDER_TYPE_MAP", "parseNumber", "value", "temp", "coordinateToString", "row", "col", "SPLITTER", "stringToCoordinate", "key", "r", "c", "isTestEnv", "CustomError", "value", "assert", "condition", "message", "mustOne", "list", "mustOneString", "mustOneNumber", "check", "num", "parseNumber", "mustEmpty", "isRelativeReference", "realValue", "T", "list", "value", "mustOne", "LOWER", "mustOneString", "CHAR", "mustOneNumber", "CODE", "LEN", "SPLIT", "assert", "sep", "UPPER", "TRIM", "CONCAT", "MAX_PARAMS_COUNT", "formulas", "text_default", "parseNumberArray", "list", "result", "i", "check", "num", "parseNumber", "ABS", "data", "mustOneNumber", "ACOS", "ACOSH", "ACOT", "ACOTH", "ASIN", "ASINH", "ATAN", "ATAN2", "assert", "x", "y", "ATANH", "AVERAGE", "rest", "MAX_PARAMS_COUNT", "sum", "cur", "COS", "COT", "EXP", "list", "data", "mustOneNumber", "INT", "PI", "list", "mustEmpty", "E", "SIN", "data", "mustOneNumber", "SUM", "rest", "parseNumberArray", "assert", "MAX_PARAMS_COUNT", "sum", "cur", "formulas", "ABS", "ACOS", "ACOSH", "ACOT", "ACOTH", "ASIN", "ASINH", "ATAN", "ATAN2", "ATANH", "AVERAGE", "COT", "COS", "EXP", "INT", "math_default", "roundNumber", "a", "temp", "result", "f", "FORMULA_MAX_PRECISION", "list", "t", "allFormulas", "text_default", "math_default", "formula_default", "Token", "type", "value", "columnNameToInt", "columnName", "temp", "num", "i", "intToColumnName", "dividend", "rest", "rowLabelToInt", "label", "result", "isSheet", "range", "isRow", "isCol", "containRange", "sourceRange", "targetRange", "row", "col", "SheetRange", "_SheetRange", "rowCount", "colCount", "sheetId", "range", "iterateRange", "sheetInfo", "fn", "isSheet", "r", "c", "isRow", "i", "isCol", "endRow", "endCol", "isAlpha", "char", "isDigit", "convertSheetNameToSheetId", "value", "parseCell", "ref", "convertSheetName", "realRef", "sheetName", "other", "i", "rowText", "colText", "rowCount", "colCount", "row", "col", "rowLabelToInt", "columnNameToInt", "XLSX_MAX_COL_COUNT", "XLSX_MAX_ROW_COUNT", "SheetRange", "parseReference", "text", "cell1", "cell2", "startCell", "endCell", "mergeRange", "start", "end", "parseNumber", "text", "num", "result", "t", "parseR1C1", "name", "activeCell", "list", "rowText", "colText", "row", "col", "XLSX_MAX_COL_COUNT", "XLSX_MAX_ROW_COUNT", "SheetRange", "emptyData", "identifierMap", "Scanner", "source", "Token", "text", "type", "end", "CustomError", "isDigit", "isAlpha", "isFloat", "float", "temp", "c", "FORMULA_PREFIX", "BinaryExpression", "left", "operator", "right", "visitor", "value", "result", "LiteralExpression", "UnaryExpression", "PostUnaryExpression", "R1C1Expression", "CellExpression", "type", "sheetName", "t", "name", "CallExpression", "params", "item", "CellRangeExpression", "GroupExpression", "TokenExpression", "Parser", "tokens", "result", "expr", "operator", "right", "BinaryExpression", "UnaryExpression", "PostUnaryExpression", "realRight", "realLeft", "CellRangeExpression", "CellExpression", "TokenExpression", "isRelativeReference", "LiteralExpression", "CustomError", "cell", "name", "params", "CallExpression", "value", "GroupExpression", "token", "realValue", "ERROR_SET", "R1C1Expression", "types", "type", "Token", "Interpreter", "expressions", "cellDataMap", "definedNamesMap", "functionMap", "result", "item", "CustomError", "data", "left", "right", "assert", "expr", "callee", "params", "t", "SheetRange", "list", "range", "parseR1C1", "sheetId", "parseReference", "type", "value", "check", "num", "parseNumber", "defineName", "temp", "funcName", "func", "isRelativeReference", "CellExpression", "a", "b", "mergeRange", "parseFormula", "source", "cellData", "CellDataMapImpl", "definedNamesMap", "DefinedNamesMapImpl", "functionMap", "formula_default", "expressionStr", "list", "Scanner", "expressions", "Parser", "result", "Interpreter", "strList", "item", "value", "roundNumber", "error", "CustomError", "row", "col", "sheetId", "cell", "sheetNameMap", "range", "i", "j", "key", "rowCount", "colCount", "r", "endRow", "c", "endCol", "sheetName", "name", "splitToWords", "str", "x", "size", "size_default", "zIndex", "zIndex_default", "hslaToHex", "h", "s", "l", "alpha", "c", "x", "m", "r", "g", "b", "toHex", "value", "hexR", "hexG", "hexB", "RGBToHSL", "red", "green", "blue", "cmin", "cmax", "delta", "hue", "getHue", "lightness", "getLightness", "saturation", "getSaturation", "max", "min", "segment", "shift", "fullDarkMode", "hexToRgba", "hex", "convertColorToDark", "color", "list", "lightColor", "darkColor", "k", "v", "convertColorToDark", "sizeConfig", "size_default", "zIndex_default", "themeKey", "getTheme", "l", "themeKey", "getThemeColor", "key", "type", "darkColor", "lightColor", "dprData", "dpr", "data", "npx", "px", "setDpr", "isEmpty", "value", "temp", "makeFont", "fontStyle", "fontWeight", "fontSize", "DEFAULT_FONT_SIZE", "fontFamily", "temp", "fontFamilyList", "MUST_FONT_FAMILY", "isTestEnv", "import_ssf", "numberFormat", "value", "pattern", "options", "SSF", "DEFAULT_FORMAT_CODE", "isDateFormat", "format", "measureTextMap", "measureText", "ctx", "char", "mapKey", "text", "actualBoundingBoxAscent", "actualBoundingBoxDescent", "h", "w", "width", "dpr", "height", "result", "fillRect", "x", "y", "npx", "strokeRect", "clearRect", "fillText", "drawLines", "pointList", "i", "first", "second", "drawTriangle", "point1", "point2", "point3", "getDoubleLine", "position", "isShort", "start", "end", "t", "DEFAULT_LINE_WIDTH", "other", "splitWords", "text", "isWrapText", "isMergeContent", "MERGE_CELL_LINE_BREAK", "splitToWords", "drawAntLine", "ctx", "x", "y", "width", "height", "npx", "offset", "DEFAULT_LINE_WIDTH", "strokeRect", "getLineDash", "type", "dash", "renderBorderItem", "cellInfo", "borderItem", "position", "theme", "top", "left", "list", "color", "BORDER_TYPE_MAP", "getThemeColor", "lineDash", "getDoubleLine", "v", "drawLines", "renderCell", "value", "style", "result", "isEmpty", "format", "DEFAULT_FORMAT_CODE", "isRight", "numberFormat", "fontSize", "DEFAULT_FONT_SIZE", "font", "makeFont", "fillRect", "fillStyle", "ERROR_SET", "realStyle", "align", "textList", "item", "size", "measureText", "resultList", "computeCell", "lineGap", "sizeConfig", "fillText", "t", "point", "isDateFormat", "temp", "prev", "cur", "texts", "verticalAlign", "textWidth", "textHeight", "i", "line", "w", "h", "getHeaderStyle", "theme", "makeFont", "npx", "DEFAULT_FONT_SIZE", "getThemeColor", "DEFAULT_LINE_WIDTH", "lineWidth", "BORDER_TYPE_MAP", "OffScreenWorker", "canvas", "size", "dpr", "data", "ctx", "getThemeColor", "DEFAULT_LINE_WIDTH", "width", "height", "headerSize", "endRow", "contentHeight", "endCol", "contentWidth", "result", "strokeRect", "npx", "clearRect", "rowIndex", "rowCount", "range", "fillRect", "getHeaderStyle", "pointList", "y", "i", "rowHeight", "temp", "check", "fillText", "drawLines", "colIndex", "colCount", "x", "colWidth", "intToColumnName", "maxX", "realWidth", "skip", "h", "w", "offset", "minY", "maxY", "minX", "drawTriangle", "row", "key", "HIDE_CELL", "CELL_HEIGHT", "col", "CELL_WIDTH", "isSheet", "isCol", "isRow", "position", "drawAntLine", "mergeCells", "activeCell", "r", "c", "sheetInfo", "scroll", "resultX", "resultY", "item", "containRange", "cellSize", "params", "maxWidth", "maxHeight", "mergeCell", "v", "cellInfo", "theme", "renderCell", "cellPosition", "renderBorderItem", "endCellRow", "endCellCol", "endCell", "endCellSize", "list", "strokeWidth", "realHeight", "strokeHeight", "offScreen", "event", "data", "parseAllFormulas", "OffScreenWorker", "setDpr", "result", "eventData", "currentSheetId", "worksheets", "formulaCache", "sheetData", "list", "k", "parseFormulaItem", "stringToCoordinate", "formula", "cache", "coord", "temp", "definedNames", "workbook", "parseFormula", "range", "row", "col", "sheetId", "realSheetId", "sheetInfo", "v", "CustomError", "iterateRange", "r", "c", "key", "coordinateToString", "f", "oldValue", "t", "sheetName", "name"]
}
