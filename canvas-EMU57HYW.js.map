{
  "version": 3,
  "sources": ["../src/containers/canvas/index.tsx", "../src/containers/canvas/index.module.css", "../src/containers/canvas/ScrollBar.tsx", "../src/containers/canvas/ContextMenu.tsx", "../src/containers/canvas/util.ts", "../src/containers/canvas/BottomBar.tsx", "../src/containers/FloatElement/index.tsx", "../src/containers/FloatElement/FloatElement.tsx", "../src/containers/FloatElement/FloatElement.module.css", "../src/containers/FloatElement/ContextMenu.tsx", "../src/containers/FloatElement/util.ts", "../src/containers/FloatElement/Chart.tsx", "../node_modules/.pnpm/@kurkle+color@0.3.2/node_modules/@kurkle/color/dist/color.esm.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/helpers/helpers.core.ts", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/helpers/helpers.math.ts", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/helpers/helpers.collection.ts", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/helpers/helpers.extras.ts", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/helpers/helpers.easing.ts", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/helpers/helpers.color.ts", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/core/core.animations.defaults.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/core/core.layouts.defaults.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/helpers/helpers.intl.ts", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/core/core.ticks.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/core/core.scale.defaults.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/core/core.defaults.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/helpers/helpers.canvas.ts", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/helpers/helpers.options.ts", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/helpers/helpers.config.ts", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/helpers/helpers.curve.ts", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/helpers/helpers.dom.ts", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/helpers/helpers.interpolation.ts", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/helpers/helpers.rtl.ts", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/helpers/helpers.segment.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/core/core.animator.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/core/core.animation.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/core/core.animations.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/core/core.datasetController.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/controllers/controller.bar.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/controllers/controller.bubble.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/controllers/controller.doughnut.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/controllers/controller.line.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/controllers/controller.polarArea.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/controllers/controller.pie.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/controllers/controller.radar.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/controllers/controller.scatter.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/core/core.adapters.ts", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/core/core.interaction.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/core/core.layouts.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/platform/platform.base.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/platform/platform.basic.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/platform/platform.dom.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/platform/index.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/core/core.element.ts", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/core/core.scale.autoskip.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/core/core.scale.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/core/core.typedRegistry.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/core/core.registry.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/core/core.plugins.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/core/core.config.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/core/core.controller.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/elements/element.arc.ts", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/elements/element.line.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/elements/element.point.ts", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/elements/element.bar.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/plugins/plugin.colors.ts", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/plugins/plugin.decimation.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/plugins/plugin.filler/filler.options.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/plugins/plugin.filler/filler.target.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/plugins/plugin.filler/index.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/plugins/plugin.legend.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/plugins/plugin.title.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/plugins/plugin.subtitle.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/plugins/plugin.tooltip.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/scales/scale.category.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/scales/scale.linearbase.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/scales/scale.linear.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/scales/scale.logarithmic.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/scales/scale.radialLinear.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/scales/scale.time.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/scales/scale.timeseries.js", "../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/src/index.ts", "../src/containers/FloatElement/chart.module.css"],
  "sourcesContent": ["import React, {\n  useRef,\n  useEffect,\n  Fragment,\n  useState,\n  memo,\n  useSyncExternalStore,\n} from 'react';\nimport { IController, EditorStatus } from '@/types';\nimport {\n  getHitInfo,\n  DEFAULT_POSITION,\n  headerSizeSet,\n  canvasSizeSet,\n  isSameRange,\n} from '@/util';\nimport styles from './index.module.css';\nimport { coreStore, floatElementStore } from '@/containers/store';\nimport { ScrollBar } from './ScrollBar';\nimport { ContextMenu } from './ContextMenu';\nimport { initCanvas } from './util';\nimport { checkFocus, setActiveCellValue } from '@/canvas';\nimport { BottomBar } from './BottomBar';\nimport FloatElementContainer from '../FloatElement';\n\ninterface Props {\n  controller: IController;\n}\nconst DOUBLE_CLICK_TIME = 300;\n\ntype State = {\n  timeStamp: number;\n};\n\nexport const CanvasContainer: React.FunctionComponent<Props> = memo((props) => {\n  const { controller } = props;\n  const floatElementList = useSyncExternalStore(\n    floatElementStore.subscribe,\n    floatElementStore.getSnapshot,\n  );\n  const { activeUuid } = useSyncExternalStore(\n    coreStore.subscribe,\n    coreStore.getSnapshot,\n  );\n  const state = useRef<State>({\n    timeStamp: 0,\n  });\n  const [menuPosition, setMenuPosition] = useState({\n    top: DEFAULT_POSITION,\n    left: DEFAULT_POSITION,\n  });\n\n  const ref = useRef<HTMLCanvasElement>(null);\n  useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n    const fn = initCanvas(controller, ref.current);\n    return () => {\n      fn();\n    };\n  }, []);\n  const handleContextMenu = (event: React.MouseEvent<HTMLCanvasElement>) => {\n    event.preventDefault();\n    setMenuPosition({\n      top: event.clientY,\n      left: event.clientX,\n    });\n  };\n  const hideContextMenu = () => {\n    setMenuPosition({\n      top: DEFAULT_POSITION,\n      left: DEFAULT_POSITION,\n    });\n  };\n  const handlePointerMove = (event: React.PointerEvent<HTMLCanvasElement>) => {\n    if (event.buttons <= 0) {\n      return;\n    }\n    const headerSize = headerSizeSet.get();\n    const rect = canvasSizeSet.get();\n    const { clientX = 0, clientY = 0 } = event;\n    const x = clientX - rect.left;\n    const y = clientY - rect.top;\n\n    const position = getHitInfo(controller, x, y);\n    if (!position) {\n      return;\n    }\n    const { range, isMerged } = controller.getActiveRange({\n      row: position.row,\n      col: position.col,\n      colCount: 1,\n      rowCount: 1,\n      sheetId: '',\n    });\n    const activeCell = controller.getActiveRange().range;\n    if (activeCell.row === range.row && activeCell.col === range.col) {\n      return;\n    }\n    let rowCount = 0;\n    let colCount = 0;\n    if (x > headerSize.width && y > headerSize.height) {\n      if (isMerged) {\n        controller.setActiveRange(range);\n        return;\n      }\n      colCount = Math.abs(position.col - activeCell.col) + 1;\n      rowCount = Math.abs(position.row - activeCell.row) + 1;\n    }\n    // select row\n    if (headerSize.width > x && headerSize.height <= y) {\n      rowCount = Math.abs(position.row - activeCell.row) + 1;\n    }\n    // select col\n    if (headerSize.width <= x && headerSize.height > y) {\n      colCount = Math.abs(position.col - activeCell.col) + 1;\n    }\n    controller.setActiveRange({\n      row: Math.min(position.row, activeCell.row),\n      col: Math.min(position.col, activeCell.col),\n      rowCount,\n      colCount,\n      sheetId: '',\n    });\n  };\n  const handlePointerDown = async (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    if (event.buttons <= 0) {\n      return;\n    }\n    const headerSize = headerSizeSet.get();\n    const canvasRect = canvasSizeSet.get();\n    const { timeStamp, clientX = 0, clientY = 0 } = event;\n    const x = clientX - canvasRect.left;\n    const y = clientY - canvasRect.top;\n    const position = getHitInfo(controller, x, y);\n    if (!position) {\n      return;\n    }\n    // select all\n    if (headerSize.width > x && headerSize.height > y) {\n      controller.setActiveRange({\n        row: 0,\n        col: 0,\n        colCount: 0,\n        rowCount: 0,\n        sheetId: '',\n      });\n      return;\n    }\n    // select row\n    if (headerSize.width > x && headerSize.height <= y) {\n      controller.setActiveRange({\n        row: position.row,\n        col: position.col,\n        rowCount: 1,\n        colCount: 0,\n        sheetId: '',\n      });\n      return;\n    }\n    // select col\n    if (headerSize.width <= x && headerSize.height > y) {\n      controller.setActiveRange({\n        row: position.row,\n        col: position.col,\n        rowCount: 0,\n        colCount: 1,\n        sheetId: '',\n      });\n      return;\n    }\n    const { range } = controller.getActiveRange({\n      row: position.row,\n      col: position.col,\n      colCount: 1,\n      rowCount: 1,\n      sheetId: controller.getCurrentSheetId(),\n    });\n    const activeCell = controller.getActiveRange().range;\n    if (isSameRange(activeCell, range)) {\n      const delay = timeStamp - state.current.timeStamp;\n      if (delay < DOUBLE_CLICK_TIME) {\n        coreStore.setState({ editorStatus: EditorStatus.EDIT_CELL });\n      }\n    } else {\n      if (checkFocus()) {\n        await setActiveCellValue(controller);\n      }\n      controller.setActiveRange({\n        row: position.row,\n        col: position.col,\n        rowCount: 1,\n        colCount: 1,\n        sheetId: '',\n      });\n    }\n    state.current.timeStamp = timeStamp;\n  };\n  return (\n    <Fragment>\n      <div\n        className={styles['canvas-container']}\n        data-testid=\"canvas-container\"\n      >\n        <canvas\n          className={styles['canvas-content']}\n          onContextMenu={handleContextMenu}\n          onPointerMove={handlePointerMove}\n          onPointerDown={handlePointerDown}\n          ref={ref}\n          data-testid=\"canvas-main\"\n        />\n        <ScrollBar controller={controller} />\n        <BottomBar controller={controller} />\n        {floatElementList.length > 0 && (\n          <FloatElementContainer\n            controller={controller}\n            floatElementList={floatElementList}\n            activeUuid={activeUuid}\n          />\n        )}\n      </div>\n      {menuPosition.top >= 0 && menuPosition.left >= 0 && (\n        <ContextMenu\n          {...menuPosition}\n          controller={controller}\n          hideContextMenu={hideContextMenu}\n        />\n      )}\n    </Fragment>\n  );\n});\nCanvasContainer.displayName = 'CanvasContainer';\n\nexport default CanvasContainer;\n", ".canvas-container {\n  flex: 1;\n  position: relative;\n  overflow: hidden;\n  height: 100%;\n  width: 100%;\n}\n\n.vertical-scroll-bar {\n  position: absolute;\n  width: var(--largePadding);\n  right: 0;\n  bottom: 0;\n  top: 0;\n  background-color: var(--white);\n  box-sizing: border-box;\n  padding: 0 5px;\n  border: 1px solid var(--borderColor);\n  border-top-color: var(--white);\n}\n\n.vertical-scroll-bar-content {\n  position: relative;\n  cursor: pointer;\n  border-radius: var(--borderRadius);\n  background-color: var(--scrollbarColor);\n  height: var(--scrollBarContent);\n}\n\n.horizontal-scroll-bar {\n  position: absolute;\n  height: var(--largePadding);\n  right: 0;\n  left: 0;\n  bottom: 0;\n  box-sizing: border-box;\n  padding: 5px 0;\n  border: 1px solid var(--borderColor);\n  border-left-color: var(--white);\n  background-color: var(--white);\n}\n\n.horizontal-scroll-bar-content {\n  position: relative;\n  cursor: pointer;\n  border-radius: var(--borderRadius);\n  background-color: var(--scrollbarColor);\n  height: 100%;\n  width: var(--scrollBarContent);\n}\n\n.horizontal-scroll-bar-content:hover,\n.vertical-scroll-bar-content:hover {\n  background-color: var(--scrollbarHoveColor);\n}\n\n.context-menu {\n  position: fixed;\n  background-color: var(--white);\n  border-radius: var(--borderRadius);\n  min-width: 150px;\n  z-index: 4;\n}\n\n.context-menu > button {\n  width: 100%;\n  background-color: var(--white);\n}\n\n.bottom-bar {\n  position: absolute;\n  display: none;\n  align-items: center;\n  padding: var(--tinyPadding) var(--mediumPadding);\n  padding-top: 50px;\n  right: 18px;\n  bottom: 36px;\n  left: 68px;\n}\n.bottom-bar.active {\n  display: flex;\n}\n\n.bottom-bar-text {\n  margin: 0 var(--tinyPadding);\n}\n\n.bottom-bar-input {\n  width: 60px;\n}\n.add-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n", "import React, {\n  useRef,\n  Fragment,\n  useSyncExternalStore,\n  memo,\n  useEffect,\n  useCallback,\n  useMemo,\n} from 'react';\nimport { IController, ScrollStatus, ScrollValue } from '@/types';\nimport { computeScrollRowAndCol, computeScrollPosition } from '@/canvas';\nimport styles from './index.module.css';\nimport { scrollStore } from '../store';\n\ninterface Props {\n  controller: IController;\n}\n\ninterface State {\n  prevPageY: number;\n  prevPageX: number;\n  scrollStatus: ScrollStatus;\n}\n\nfunction scrollBar(controller: IController, scrollX: number, scrollY: number) {\n  const oldScroll = controller.getScroll();\n  const { maxHeight, maxScrollHeight, maxScrollWidth, maxWidth } =\n    computeScrollPosition(oldScroll.left, oldScroll.top);\n\n  let scrollTop = oldScroll.scrollTop + Math.ceil(scrollY);\n  let scrollLeft = oldScroll.scrollLeft + Math.ceil(scrollX);\n  if (scrollTop < 0) {\n    scrollTop = 0;\n  } else if (scrollTop > maxScrollHeight) {\n    scrollTop = maxScrollHeight;\n  }\n  if (scrollLeft < 0) {\n    scrollLeft = 0;\n  } else if (scrollLeft > maxScrollWidth) {\n    scrollLeft = maxScrollWidth;\n  }\n  const top = Math.floor((maxHeight * scrollTop) / maxScrollHeight);\n  const left = Math.floor((maxWidth * scrollLeft) / maxScrollWidth);\n  const { row, col } = computeScrollRowAndCol(controller, left, top);\n  const data: ScrollValue = {\n    top,\n    left,\n    row,\n    col,\n    scrollLeft,\n    scrollTop,\n  };\n  const activeCell = controller.getActiveRange().range;\n  if (data.row != oldScroll.row) {\n    activeCell.row = data.row;\n  }\n  if (data.col !== oldScroll.col) {\n    activeCell.col = data.col;\n  }\n  controller.setScroll(data);\n  return data;\n}\nconst initState: State = {\n  prevPageX: 0,\n  prevPageY: 0,\n  scrollStatus: ScrollStatus.NONE,\n};\nexport const ScrollBar: React.FunctionComponent<Props> = memo(\n  ({ controller }) => {\n    const state = useRef<State>({ ...initState });\n    const { scrollLeft, scrollTop } = useSyncExternalStore(\n      scrollStore.subscribe,\n      scrollStore.getSnapshot,\n    );\n    const [toggleEvents] = useMemo(() => {\n      function handlePointerUp() {\n        state.current = { ...initState };\n        toggleEvents(false);\n      }\n      function handlePointerMove(event: PointerEvent) {\n        if (event.buttons <= 0) {\n          toggleEvents(false);\n          return;\n        }\n        if (state.current.scrollStatus === ScrollStatus.NONE) {\n          return;\n        }\n        if (state.current.scrollStatus === ScrollStatus.VERTICAL) {\n          scrollBar(controller, 0, event.clientY - state.current.prevPageY);\n          state.current.prevPageY = event.clientY;\n        } else if (state.current.scrollStatus === ScrollStatus.HORIZONTAL) {\n          scrollBar(controller, event.clientX - state.current.prevPageX, 0);\n          state.current.prevPageX = event.clientX;\n        }\n      }\n      function toggleEvents(state?: boolean) {\n        const toggleEvent = state\n          ? document.addEventListener\n          : document.removeEventListener;\n        toggleEvent('pointermove', handlePointerMove);\n        toggleEvent('pointerup', handlePointerUp);\n      }\n      return [toggleEvents];\n    }, []);\n    useEffect(() => toggleEvents, [toggleEvents]);\n\n    const addEvents = useCallback(\n      (event: React.PointerEvent<HTMLDivElement>, status: ScrollStatus) => {\n        if (event.buttons <= 0) {\n          return;\n        }\n        toggleEvents(true);\n        state.current.prevPageX = event.clientX;\n        state.current.prevPageY = event.clientY;\n        state.current.scrollStatus = status;\n      },\n      [toggleEvents],\n    );\n\n    const handleVerticalBarDown = useCallback(\n      (event: React.PointerEvent<HTMLDivElement>) => {\n        addEvents(event, ScrollStatus.VERTICAL);\n      },\n      [addEvents],\n    );\n    const handleHorizontalBarDown = useCallback(\n      (event: React.PointerEvent<HTMLDivElement>) => {\n        addEvents(event, ScrollStatus.HORIZONTAL);\n      },\n      [toggleEvents],\n    );\n    return (\n      <Fragment>\n        <div\n          className={styles['vertical-scroll-bar']}\n          data-testid=\"vertical-scroll-bar\"\n          onPointerDown={handleVerticalBarDown}\n        >\n          <div\n            className={styles['vertical-scroll-bar-content']}\n            style={{\n              transform: `translateY(${scrollTop}px)`,\n            }}\n            data-testid=\"vertical-scroll-bar-content\"\n          />\n        </div>\n        <div\n          className={styles['horizontal-scroll-bar']}\n          data-testid=\"horizontal-scroll-bar\"\n          onPointerDown={handleHorizontalBarDown}\n        >\n          <div\n            className={styles['horizontal-scroll-bar-content']}\n            style={{\n              transform: `translateX(${scrollLeft}px)`,\n            }}\n            data-testid=\"horizontal-scroll-bar-content\"\n          />\n        </div>\n      </Fragment>\n    );\n  },\n);\nScrollBar.displayName = 'ScrollBar';\n", "import React, { Fragment, memo, useMemo, useSyncExternalStore } from 'react';\nimport { Button, info, toast } from '../../components';\nimport { IController } from '@/types';\nimport styles from './index.module.css';\nimport { useClickOutside } from '../hooks';\nimport { activeCellStore } from '@/containers/store';\nimport { $ } from '@/i18n';\nimport { headerSizeSet, canvasSizeSet } from '@/util';\n\ninterface Props {\n  controller: IController;\n  top: number;\n  left: number;\n  hideContextMenu: () => void;\n}\n\nenum ClickPosition {\n  COLUMN_HEADER,\n  ROW_HEADER,\n  TRIANGLE,\n  CONTENT,\n}\n\nconst MENU_WIDTH = 110;\nconst ITEM_HEIGHT = 20;\n\nfunction computeMenuStyle(top: number, left: number) {\n  const headerSize = headerSizeSet.get();\n  const rect = canvasSizeSet.get();\n  let clickPosition = ClickPosition.CONTENT;\n  let menuHeight = ITEM_HEIGHT * 3;\n  const y = top - rect.top;\n  const x = left - rect.left;\n  if (y < headerSize.height && x < headerSize.width) {\n    clickPosition = ClickPosition.TRIANGLE;\n  } else if (y < headerSize.height) {\n    clickPosition = ClickPosition.COLUMN_HEADER;\n    menuHeight = ITEM_HEIGHT * 6;\n  } else if (x < headerSize.width) {\n    clickPosition = ClickPosition.ROW_HEADER;\n    menuHeight = ITEM_HEIGHT * 6;\n  }\n\n  // recompute menu position\n  let realTop = top;\n  let realLeft = left;\n  const gap = 18;\n  const height = rect.height + rect.top;\n  if (realTop + menuHeight > height) {\n    realTop = height - menuHeight - gap;\n  }\n  if (realLeft + MENU_WIDTH > rect.width) {\n    realLeft = rect.width - MENU_WIDTH - gap;\n  }\n\n  return {\n    style: {\n      top: realTop,\n      left: realLeft,\n    },\n    position: clickPosition,\n  };\n}\n\nconst threshold = 10000;\n\nexport const ContextMenu: React.FunctionComponent<Props> = memo((props) => {\n  const { controller, top, left, hideContextMenu } = props;\n  const { row, col, colCount, rowCount } = useSyncExternalStore(\n    activeCellStore.subscribe,\n    activeCellStore.getSnapshot,\n  );\n  const [ref] = useClickOutside(hideContextMenu);\n  const { style, position } = useMemo(() => {\n    const temp = computeMenuStyle(top, left);\n    return temp;\n  }, [top, left]);\n  const handleDialog = (isRow: boolean) => {\n    let value = isRow\n      ? controller.getRowHeight(row).len\n      : controller.getColWidth(col).len;\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      const t = parseInt(event.target.value, 10);\n      if (!isNaN(t)) {\n        if (t < 0) {\n          value = 0;\n        } else if (value > threshold) {\n          value = threshold;\n        } else {\n          value = t;\n        }\n      }\n      event.stopPropagation();\n    };\n    info({\n      visible: true,\n      title: isRow ? $('row-height') : $('column-width'),\n      testId: 'context-menu-width-height-dialog',\n      children: (\n        <input\n          type=\"number\"\n          min={0}\n          max={threshold}\n          style={{ width: '200px' }}\n          defaultValue={value}\n          onChange={handleChange}\n          data-testid=\"context-menu-width-height-dialog-input\"\n        />\n      ),\n      onOk: () => {\n        if (value < 0) {\n          return toast.error($('greater-than-zero'));\n        }\n        if (isRow) {\n          controller.batchUpdate(() => {\n            for (let i = 0; i < rowCount; i++) {\n              controller.setRowHeight(row + i, value);\n            }\n            return true;\n          });\n        } else {\n          controller.batchUpdate(() => {\n            for (let i = 0; i < colCount; i++) {\n              controller.setColWidth(col + i, value);\n            }\n            return true;\n          });\n        }\n        hideContextMenu();\n      },\n      onCancel: () => {\n        hideContextMenu();\n      },\n    });\n  };\n  return (\n    <div\n      className={styles['context-menu']}\n      data-testid=\"context-menu\"\n      style={style}\n      ref={ref}\n    >\n      <Button\n        onClick={() => {\n          hideContextMenu();\n          controller.setFloatElementUuid('');\n          controller.copy();\n        }}\n        testId=\"context-menu-copy\"\n      >\n        {$('copy')}\n      </Button>\n      <Button\n        onClick={() => {\n          hideContextMenu();\n          controller.setFloatElementUuid('');\n          controller.cut();\n        }}\n        testId=\"context-menu-cut\"\n      >\n        {$('cut')}\n      </Button>\n      <Button\n        testId=\"context-menu-paste\"\n        onClick={() => {\n          hideContextMenu();\n          controller.paste();\n        }}\n      >\n        {$('paste')}\n      </Button>\n      {(position === ClickPosition.ROW_HEADER ||\n        position === ClickPosition.CONTENT) && (\n        <Fragment>\n          <Button\n            testId=\"context-menu-insert-row-above\"\n            onClick={() => {\n              hideContextMenu();\n              controller.addRow(row, rowCount, true);\n            }}\n          >\n            {$('insert-row-above')}\n          </Button>\n          <Button\n            testId=\"context-menu-insert-row-below\"\n            onClick={() => {\n              hideContextMenu();\n              controller.addRow(row, rowCount);\n            }}\n          >\n            {$('insert-row-below')}\n          </Button>\n        </Fragment>\n      )}\n      {(position === ClickPosition.COLUMN_HEADER ||\n        position === ClickPosition.CONTENT) && (\n        <Fragment>\n          <Button\n            testId=\"context-menu-insert-column-left\"\n            onClick={() => {\n              hideContextMenu();\n              controller.addCol(col, colCount);\n            }}\n          >\n            {$('insert-column-left')}\n          </Button>\n          <Button\n            testId=\"context-menu-insert-column-right\"\n            onClick={() => {\n              hideContextMenu();\n              controller.addCol(col, colCount, true);\n            }}\n          >\n            {$('insert-column-right')}\n          </Button>\n        </Fragment>\n      )}\n      {position === ClickPosition.TRIANGLE && (\n        <Button\n          testId=\"context-menu-delete\"\n          onClick={() => {\n            hideContextMenu();\n            controller.deleteAll(controller.getCurrentSheetId());\n          }}\n        >\n          {$('delete')}\n        </Button>\n      )}\n      {position === ClickPosition.COLUMN_HEADER && (\n        <Fragment>\n          <Button\n            testId=\"context-menu-delete-column\"\n            onClick={() => {\n              hideContextMenu();\n              controller.deleteCol(col, colCount);\n            }}\n          >\n            {$('delete-columns')}\n          </Button>\n          <Button\n            testId=\"context-menu-hide-column\"\n            onClick={() => {\n              hideContextMenu();\n              controller.hideCol(col, colCount);\n            }}\n          >\n            {$('hide-columns')}\n          </Button>\n          <Button\n            testId=\"context-menu-column-width\"\n            onClick={() => {\n              handleDialog(false);\n            }}\n          >\n            {$('column-width')}\n          </Button>\n        </Fragment>\n      )}\n      {position === ClickPosition.ROW_HEADER && (\n        <Fragment>\n          <Button\n            testId=\"context-menu-delete-row\"\n            onClick={() => {\n              hideContextMenu();\n              controller.deleteRow(row, rowCount);\n            }}\n          >\n            {$('delete-rows')}\n          </Button>\n          <Button\n            testId=\"context-menu-hide-row\"\n            onClick={() => {\n              hideContextMenu();\n              controller.hideRow(row, rowCount);\n            }}\n          >\n            {$('hide-rows')}\n          </Button>\n          <Button\n            testId=\"context-menu-row-height\"\n            onClick={() => {\n              handleDialog(true);\n            }}\n          >\n            {$('row-height')}\n          </Button>\n        </Fragment>\n      )}\n    </div>\n  );\n});\nContextMenu.displayName = 'CanvasContextMenu';\n", "import {\n  IController,\n  ChangeEventType,\n  EUnderLine,\n  IRange,\n  EMergeCellType,\n  EHorizontalAlign,\n} from '@/types';\nimport {\n  DEFAULT_FONT_SIZE,\n  HIDE_CELL,\n  getThemeColor,\n  eventEmitter,\n  sizeConfig,\n  canvasSizeSet,\n  MERGE_CELL_LINE_BREAK,\n  LINE_BREAK,\n  DEFAULT_FORMAT_CODE,\n  getFormatCode,\n  parseNumber,\n} from '@/util';\nimport {\n  coreStore,\n  activeCellStore,\n  sheetListStore,\n  fontFamilyStore,\n  scrollStore,\n  floatElementStore,\n  FloatElementItem,\n  defineNameStore,\n  styleStore,\n} from '@/containers/store';\nimport {\n  initRenderCanvas,\n  registerGlobalEvent,\n  scrollSheetToView,\n} from '@/canvas';\nimport { numberFormat as numberFormatUtil, isDateFormat } from '@/model';\nimport { initFontFamilyList } from './isSupportFontFamily'\n\nfunction getChartData(\n  range: IRange,\n  controller: IController,\n): Pick<FloatElementItem, 'labels' | 'datasets'> {\n  const { row, col, rowCount, colCount, sheetId } = range;\n  const result: Pick<FloatElementItem, 'labels' | 'datasets'> = {\n    labels: [],\n    datasets: [],\n  };\n  for (\n    let r = row, index = 1, endRow = row + rowCount;\n    r < endRow;\n    r++, index++\n  ) {\n    const rowHeight = controller.getRowHeight(r).len;\n    if (rowHeight === HIDE_CELL) {\n      continue;\n    }\n    const list = [];\n    for (let c = col, endCol = col + colCount; c < endCol; c++) {\n      const t = controller.getCell({\n        row: r,\n        col: c,\n        rowCount: 1,\n        colCount: 1,\n        sheetId,\n      });\n      if (!t) {\n        continue;\n      }\n      list.push(parseNumber(t.value)[1]);\n    }\n    if (list.length > 0) {\n      result.datasets.push({ label: `Series${index}`, data: list });\n    }\n  }\n  if (result.datasets[0] && result.datasets[0].data.length > 0) {\n    result.labels = Array.from({ length: result.datasets[0].data.length })\n      .fill('')\n      .map((_value, i) => String(i + 1));\n  }\n  return result;\n}\n\nfunction updateActiveCell(controller: IController) {\n  const { top } = canvasSizeSet.get();\n  const { range: activeCell, isMerged } = controller.getActiveRange();\n  const sheetId = activeCell.sheetId || controller.getCurrentSheetId();\n  const cell = controller.getCell(activeCell);\n  const defineName = controller.getDefineName({\n    row: activeCell.row,\n    col: activeCell.col,\n    rowCount: 1,\n    colCount: 1,\n    sheetId,\n  });\n  const cellSize = controller.getCellSize(activeCell);\n  const cellPosition = controller.computeCellPosition(activeCell);\n  cellPosition.top = top + cellPosition.top;\n  let fontFamily = cell?.style?.fontFamily ?? '';\n  if (!fontFamily) {\n    let defaultFontFamily = '';\n    const list = fontFamilyStore.getSnapshot();\n    for (const item of list) {\n      if (!item.disabled) {\n        defaultFontFamily = String(item.value);\n        break;\n      }\n    }\n    fontFamily = defaultFontFamily;\n  }\n  const {\n    isBold = false,\n    isItalic = false,\n    isStrike = false,\n    fontSize = DEFAULT_FONT_SIZE,\n    fontColor = getThemeColor('contentColor'),\n    fillColor = '',\n    isWrapText = false,\n    underline = EUnderLine.NONE,\n    horizontalAlign,\n    verticalAlign,\n  } = cell?.style || {};\n\n  const numberFormat = cell?.style?.numberFormat || DEFAULT_FORMAT_CODE;\n  const isRight =\n    numberFormat === DEFAULT_FORMAT_CODE && typeof cell?.value === 'number';\n  let horAlign = horizontalAlign;\n  if (horizontalAlign === undefined && isRight) {\n    horAlign = EHorizontalAlign.RIGHT;\n  }\n  let displayValue = numberFormatUtil(cell?.value, numberFormat);\n  let realValue = '';\n  if (isDateFormat(numberFormat) || numberFormat === getFormatCode(10)) {\n    realValue = displayValue;\n  } else {\n    const t = cell?.value ?? '';\n    realValue = typeof t === 'boolean' ? t.toString().toUpperCase() : String(t);\n    displayValue = realValue;\n  }\n\n  let mergeType = '';\n  if (isMerged) {\n    if (displayValue.includes(MERGE_CELL_LINE_BREAK)) {\n      mergeType = String(EMergeCellType.MERGE_CONTENT);\n      displayValue = displayValue.replaceAll(MERGE_CELL_LINE_BREAK, LINE_BREAK);\n    } else {\n      mergeType = String(EMergeCellType.MERGE_CENTER);\n    }\n  }\n\n  activeCellStore.setState({\n    top: cellPosition.top,\n    left: cellPosition.left,\n    width: cellSize.width,\n    height: cellSize.height,\n    row: activeCell.row,\n    col: activeCell.col,\n    rowCount: activeCell.rowCount,\n    colCount: activeCell.colCount,\n    value: cell?.formula || realValue,\n    defineName,\n    displayValue: cell?.formula || displayValue,\n  });\n\n  styleStore.setState({\n    isBold,\n    isItalic,\n    isStrike,\n    fontColor,\n    fontSize,\n    fontFamily,\n    fillColor,\n    isWrapText,\n    underline,\n    numberFormat,\n    isMergeCell: isMerged,\n    mergeType,\n    horizontalAlign: horAlign,\n    verticalAlign,\n  });\n}\n\nconst handleStateChange = (\n  changeSet: Set<ChangeEventType>,\n  controller: IController,\n) => {\n  if (\n    changeSet.has('rangeMap') ||\n    changeSet.has('cellStyle') ||\n    changeSet.has('cellValue') ||\n    changeSet.has('currentSheetId') ||\n    changeSet.has('mergeCells')\n  ) {\n    updateActiveCell(controller);\n  }\n  if (changeSet.has('workbook')) {\n    const sheetList = controller.getSheetList().map((v) => ({\n      sheetId: v.sheetId,\n      name: v.name,\n      isHide: v.isHide,\n      tabColor: v.tabColor || '',\n    }));\n    sheetListStore.setState(sheetList);\n  }\n\n  if (changeSet.has('currentSheetId')) {\n    coreStore.setState({\n      canRedo: controller.canRedo(),\n      canUndo: controller.canUndo(),\n      activeUuid: '',\n      currentSheetId: controller.getCurrentSheetId(),\n    });\n  } else {\n    coreStore.setState({\n      canRedo: controller.canRedo(),\n      canUndo: controller.canUndo(),\n    });\n  }\n\n  if (changeSet.has('scroll')) {\n    const scroll = controller.getScroll();\n    const canvasSize = canvasSizeSet.get();\n    const showBottomBar = scroll.scrollTop / canvasSize.height >= 0.91;\n    scrollStore.setState({\n      scrollLeft: scroll.scrollLeft,\n      scrollTop: scroll.scrollTop,\n      showBottomBar,\n    });\n  }\n  if (changeSet.has('definedNames')) {\n    const list = controller.getDefineNameList().map((v) => v.name);\n    defineNameStore.setState(list);\n  }\n\n  if (\n    changeSet.has('drawings') ||\n    changeSet.has('cellValue') ||\n    changeSet.has('row') ||\n    changeSet.has('col') ||\n    changeSet.has('currentSheetId') ||\n    changeSet.has('scroll')\n  ) {\n    const scroll = controller.getScroll();\n    const canvasSize = canvasSizeSet.get();\n    const minX = scroll.left;\n    const minY = scroll.top;\n    const maxX = canvasSize.width + minX;\n    const maxY = canvasSize.height + minY;\n    const list = controller.getDrawingList(controller.getCurrentSheetId());\n    const result: FloatElementItem[] = [];\n    for (const v of list) {\n      const p = controller.computeCellPosition({\n        row: v.fromRow,\n        col: v.fromCol,\n        colCount: 1,\n        rowCount: 1,\n        sheetId: '',\n      });\n      const top = p.top + v.marginY;\n      const left = p.left + v.marginX;\n      // the start point in the box or the end point in the box\n      const check =\n        (top > minY && top < maxY) ||\n        (left > minX && left < maxX) ||\n        (top + v.height > minY && top + v.height < maxY) ||\n        (left + v.width > minX && left + v.width < maxX);\n      if (check) {\n        const t: FloatElementItem = {\n          ...v,\n          top,\n          left,\n          labels: [],\n          datasets: [],\n        };\n        if (v.type === 'chart') {\n          const c = getChartData(v.chartRange!, controller);\n          t.labels = c.labels;\n          t.datasets = c.datasets;\n        }\n        result.push(t);\n      }\n    }\n    floatElementStore.setState(result);\n  }\n\n  if (changeSet.has('currentSheetId')) {\n    // async update\n    setTimeout(() => {\n      scrollSheetToView(controller.getCurrentSheetId());\n    }, 0);\n  }\n};\n\nfunction computeCanvasSize(canvas: HTMLCanvasElement) {\n  const scrollbarSize = parseInt(sizeConfig.largePadding, 10);\n  const dom = canvas.parentElement;\n  if (!dom) {\n    return null;\n  }\n  const size = dom.getBoundingClientRect();\n  const result = {\n    top: size.top,\n    left: size.left,\n    width: dom.clientWidth - scrollbarSize,\n    height: dom.clientHeight - scrollbarSize,\n  };\n  canvasSizeSet.set(result);\n}\n\nexport function initCanvas(\n  controller: IController,\n  canvas: HTMLCanvasElement,\n): () => void {\n  const familyList = initFontFamilyList();\n  fontFamilyStore.setState(familyList);\n  const mainCanvas = initRenderCanvas(controller, canvas);\n  const resize = () => {\n    renderCanvas(new Set<ChangeEventType>(['row']));\n  };\n  const renderCanvas = (changeSet: Set<ChangeEventType>) => {\n    computeCanvasSize(canvas);\n    mainCanvas.resize();\n    mainCanvas.render({ changeSet });\n  };\n  const offEvent = eventEmitter.on('modelChange', ({ changeSet }) => {\n    handleStateChange(changeSet, controller);\n    mainCanvas.render({ changeSet });\n  });\n\n  const removeEvent = registerGlobalEvent(controller, resize);\n\n  const changeSet = new Set<ChangeEventType>([\n    'currentSheetId',\n    'rangeMap',\n    'workbook',\n    'worksheets',\n    'drawings',\n    'definedNames',\n    'mergeCells',\n    'scroll',\n    'cellValue',\n    'row',\n    'col',\n    'cellStyle',\n    'undo',\n    'redo',\n    'antLine',\n  ]);\n  handleStateChange(changeSet, controller);\n  renderCanvas(changeSet);\n  queueMicrotask(() => {\n    renderCanvas(changeSet);\n  });\n\n  return () => {\n    removeEvent();\n    offEvent();\n  };\n}\n", "import React, { useState, memo, useSyncExternalStore } from 'react';\nimport { Button } from '../../components';\nimport { IController } from '@/types';\nimport styles from './index.module.css';\nimport { scrollBar } from '@/canvas';\nimport { $ } from '@/i18n';\nimport { classnames, sheetViewSizeSet, MAX_ADD_ROW_THRESHOLD } from '@/util';\nimport { scrollStore } from '../store';\n\ninterface Props {\n  controller: IController;\n}\n\nconst defaultData = 10;\n\nexport const BottomBar: React.FunctionComponent<Props> = memo(\n  ({ controller }) => {\n    const [value, setValue] = useState(defaultData);\n    const { showBottomBar } = useSyncExternalStore(\n      scrollStore.subscribe,\n      scrollStore.getSnapshot,\n    );\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      event.stopPropagation();\n      const val = parseInt(event.target.value, 10);\n      if (!isNaN(val)) {\n        if (val < 1) {\n          setValue(1);\n        } else if (val > MAX_ADD_ROW_THRESHOLD) {\n          setValue(MAX_ADD_ROW_THRESHOLD);\n        } else {\n          setValue(val);\n        }\n      }\n    };\n    const handleClick = () => {\n      const sheetInfo = controller.getSheetInfo(\n        controller.getCurrentSheetId(),\n      )!;\n      controller.addRow(sheetInfo.rowCount - 1, value);\n      const viewSize = sheetViewSizeSet.get();\n      scrollBar(controller, 0, viewSize.height);\n    };\n    return (\n      <div\n        className={classnames(styles['bottom-bar'], {\n          [styles.active]: showBottomBar,\n        })}\n        data-testid=\"canvas-bottom-bar\"\n      >\n        <div className={styles['bottom-bar-text']}>\n          {$('add-at-the-bottom')}\n        </div>\n        <input\n          value={value}\n          onChange={handleChange}\n          type=\"number\"\n          min={1}\n          max={MAX_ADD_ROW_THRESHOLD}\n          data-testid=\"canvas-bottom-bar-input\"\n          className={styles['bottom-bar-input']}\n        />\n        <div className={styles['bottom-bar-text']}>{$('rows')}</div>\n        <Button\n          testId=\"canvas-bottom-bar-add\"\n          className={styles['add-button']}\n          onClick={handleClick}\n        >\n          {$('add')}\n        </Button>\n      </div>\n    );\n  },\n);\n\nBottomBar.displayName = 'BottomBar';\n", "import React, {\n  Fragment,\n  memo,\n  useState,\n  useEffect,\n  useRef,\n  useMemo,\n  useCallback,\n} from 'react';\nimport { IController, IWindowSize } from '@/types';\nimport { coreStore, FloatElementItem } from '@/containers/store';\nimport { FloatElement } from './FloatElement';\nimport styles from './FloatElement.module.css';\nimport { getHitInfo, classnames, canvasSizeSet } from '@/util';\nimport {\n  State,\n  ResizePosition,\n  FloatElementPosition,\n  INITIAL_STATE,\n  roundPosition,\n} from './util';\n\ninterface Props {\n  controller: IController;\n  floatElementList: FloatElementItem[];\n  activeUuid: string;\n}\nconst FloatElementContainer: React.FunctionComponent<Props> = memo(\n  ({ controller, floatElementList, activeUuid }) => {\n    const state = useRef<State>({\n      ...INITIAL_STATE,\n      position: { ...INITIAL_STATE.position },\n    });\n\n    const [position, setPosition] = useState<FloatElementPosition>({\n      width: -1,\n      height: -1,\n      imageAngle: 0,\n      top: -1,\n      left: -1,\n    });\n    state.current.activeUuid = activeUuid;\n    state.current.position = { ...position };\n\n    const [toggleEvents] = useMemo(() => {\n      const updateSize = (e: PointerEvent) => {\n        const deltaX = Math.round(e.clientX - state.current.moveStartX);\n        const deltaY = Math.round(e.clientY - state.current.moveStartY);\n        setPosition((old) => {\n          const p = state.current.resizePosition as ResizePosition;\n          let { top, left, width, height } = old;\n          if (\n            [\n              ResizePosition.topRight,\n              ResizePosition.topLeft,\n              ResizePosition.top,\n            ].includes(p)\n          ) {\n            height -= deltaY;\n            top += deltaY;\n          } else if (\n            [\n              ResizePosition.bottomRight,\n              ResizePosition.bottom,\n              ResizePosition.bottomLeft,\n            ].includes(p)\n          ) {\n            height += deltaY;\n          }\n\n          if (\n            [\n              ResizePosition.topLeft,\n              ResizePosition.bottomLeft,\n              ResizePosition.left,\n            ].includes(p)\n          ) {\n            width -= deltaX;\n            left += deltaX;\n          } else if (\n            [\n              ResizePosition.topRight,\n              ResizePosition.bottomRight,\n              ResizePosition.right,\n            ].includes(p)\n          ) {\n            width += deltaX;\n          }\n\n          const newData = {\n            ...roundPosition(top, left),\n            imageAngle: old.imageAngle,\n            width,\n            height,\n          };\n          return newData;\n        });\n      };\n      const handlePointerUp = (event: PointerEvent) => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const uuid = state.current.activeUuid;\n        if (!uuid || !state.current.resizePosition) {\n          state.current = {\n            ...INITIAL_STATE,\n            position: { ...INITIAL_STATE.position },\n          };\n          return;\n        }\n        const pos = state.current.position;\n        if (state.current.resizePosition === ResizePosition.rotate) {\n          controller.updateDrawing(uuid, {\n            imageAngle: pos.imageAngle,\n          });\n        } else if (state.current.resizePosition === ResizePosition.active) {\n          const rect = canvasSizeSet.get();\n          const { left, top } = pos;\n          if (left >= 0 && top >= 0 && left < rect.width && top < rect.height) {\n            const newRange = getHitInfo(controller, left, top);\n            if (newRange) {\n              controller.updateDrawing(uuid, {\n                fromCol: newRange.col,\n                fromRow: newRange.row,\n                marginX: newRange.marginX,\n                marginY: newRange.marginY,\n              });\n            }\n          }\n        } else {\n          if (pos.height > 0 && pos.width > 0) {\n            controller.updateDrawing(uuid, {\n              height: pos.height,\n              width: pos.width,\n            });\n          }\n        }\n        state.current = {\n          ...INITIAL_STATE,\n          position: { ...INITIAL_STATE.position },\n        };\n      };\n      const handlePointerMove = (event: PointerEvent) => {\n        if (!state.current.resizePosition || event.buttons <= 0) {\n          return;\n        }\n        event.stopPropagation();\n        event.preventDefault();\n        if (state.current.resizePosition === ResizePosition.rotate) {\n          const deltaX = event.clientX - state.current.moveStartX;\n          const deltaY = event.clientY - state.current.moveStartY;\n          const imageAngle = (Math.atan2(deltaY, deltaX) * 180) / Math.PI;\n          setPosition((old) => {\n            const newData = {\n              ...old,\n              imageAngle,\n            };\n            return newData;\n          });\n          return;\n        } else if (state.current.resizePosition === ResizePosition.active) {\n          const deltaX = Math.round(event.clientX - state.current.moveStartX);\n          const deltaY = Math.round(event.clientY - state.current.moveStartY);\n          setPosition((old) => {\n            const newTop = old.top + deltaY;\n            const newLeft = old.left + deltaX;\n            const newData = {\n              ...roundPosition(newTop, newLeft),\n              imageAngle: old.imageAngle,\n              width: old.width,\n              height: old.height,\n            };\n            return newData;\n          });\n          state.current.moveStartX = event.clientX;\n          state.current.moveStartY = event.clientY;\n        } else {\n          updateSize(event);\n          state.current.moveStartX = event.clientX;\n          state.current.moveStartY = event.clientY;\n          return;\n        }\n      };\n      function toggleEvents(state?: boolean) {\n        const toggleEvent = state\n          ? document.addEventListener\n          : document.removeEventListener;\n        toggleEvent('pointerup', handlePointerUp);\n        toggleEvent('pointermove', handlePointerMove);\n      }\n      return [toggleEvents];\n    }, []);\n\n    useEffect(() => toggleEvents, [toggleEvents]);\n\n    const handleResizePointerDown = useCallback(\n      (event: React.PointerEvent<HTMLDivElement>) => {\n        event.stopPropagation();\n        event.preventDefault();\n        if (event.buttons <= 0) {\n          return;\n        }\n\n        const p = event.currentTarget.dataset.position || '';\n        if (!p) {\n          return;\n        }\n        state.current.resizePosition = p;\n        state.current.moveStartX = event.clientX;\n        state.current.moveStartY = event.clientY;\n      },\n      [],\n    );\n    const resetResize = useCallback((size: IWindowSize) => {\n      setPosition((old) => ({ ...old, ...size }));\n    }, []);\n    const handleMaskPointerDown = useCallback(() => {\n      state.current = {\n        ...INITIAL_STATE,\n        position: { ...INITIAL_STATE.position },\n      };\n      coreStore.setState({ activeUuid: '' });\n      controller.setFloatElementUuid('');\n      toggleEvents(false);\n    }, [toggleEvents]);\n    return (\n      <Fragment>\n        <div\n          className={classnames(styles['float-element-mask'], {\n            [styles['active']]: !!activeUuid,\n          })}\n          data-testid=\"float-element-mask\"\n          onPointerDown={handleMaskPointerDown}\n        />\n        {floatElementList.map((v) => {\n          const isActive = v.uuid === activeUuid;\n          const props = {\n            ...v,\n            ...(isActive ? position : {}),\n          };\n          return (\n            <FloatElement\n              key={v.uuid}\n              {...props}\n              active={isActive}\n              controller={controller}\n              resetResize={resetResize}\n              pointerDown={(event) => {\n                event.stopPropagation();\n                event.preventDefault();\n                if (event.buttons <= 0) {\n                  return;\n                }\n                state.current.resizePosition = ResizePosition.active;\n                state.current.moveStartX = event.clientX;\n                state.current.moveStartY = event.clientY;\n                state.current.activeUuid = v.uuid;\n                controller.setFloatElementUuid(v.uuid);\n                coreStore.setState({ activeUuid: v.uuid });\n                setPosition({\n                  top: v.top,\n                  left: v.left,\n                  width: v.width,\n                  height: v.height,\n                  imageAngle: v.imageAngle || 0,\n                });\n                toggleEvents(true);\n              }}\n              resizeDown={handleResizePointerDown}\n            />\n          );\n        })}\n      </Fragment>\n    );\n  },\n);\nFloatElementContainer.displayName = 'FloatElementContainer';\n\nexport default FloatElementContainer;\n", "import React, { useState, memo, useCallback } from 'react';\nimport styles from './FloatElement.module.css';\nimport type { FloatElementItem } from '@/containers/store';\nimport { FloatElementContextMenu } from './ContextMenu';\nimport { DEFAULT_POSITION, classnames } from '@/util';\nimport { ResizePosition } from './util';\nimport { Icon } from '../../components';\nimport { IController, IWindowSize } from '@/types';\nimport Chart from './Chart';\n\ntype FloatElementProps = FloatElementItem & {\n  controller: IController;\n  active: boolean;\n  resetResize: (size: IWindowSize) => void;\n  pointerDown: (event: React.PointerEvent<HTMLDivElement>) => void;\n  resizeDown: (event: React.PointerEvent<HTMLDivElement>) => void;\n};\n\nexport const FloatElement: React.FunctionComponent<FloatElementProps> = memo(\n  (props) => {\n    const {\n      top,\n      left,\n      active,\n      width,\n      height,\n      type,\n      imageAngle = 0,\n      resetResize,\n      pointerDown,\n      resizeDown,\n    } = props;\n    const [contextMenuPosition, setContextMenuPosition] = useState({\n      top: DEFAULT_POSITION,\n      left: DEFAULT_POSITION,\n    });\n\n    const handleContextMenu = useCallback(\n      (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        event.stopPropagation();\n        setContextMenuPosition({ top: event.clientY, left: event.clientX });\n      },\n      [],\n    );\n    const hideContextMenu = useCallback(() => {\n      setContextMenuPosition({\n        top: DEFAULT_POSITION,\n        left: DEFAULT_POSITION,\n      });\n    }, []);\n\n    let children: React.ReactNode = undefined;\n    if (type === 'floating-picture') {\n      children = (\n        <img\n          title={props.title}\n          alt={props.title}\n          src={props.imageSrc!}\n          className={styles['image']}\n          data-uuid={props.uuid}\n          data-testid=\"float-element-image\"\n        />\n      );\n    } else if (type === 'chart') {\n      children = <Chart {...props} />;\n    }\n    if (!children) {\n      return children;\n    }\n    return (\n      <React.Fragment>\n        <div\n          onPointerDown={pointerDown}\n          onContextMenu={handleContextMenu}\n          className={classnames(styles['float-element'], {\n            [styles['active']]: active,\n          })}\n          style={{\n            transform: `translateX(${left}px) translateY(${top}px) ${\n              type === 'floating-picture' ? `rotate(${imageAngle}deg)` : ''\n            } `,\n            width,\n            height,\n          }}\n          data-testid=\"float-element\"\n        >\n          {children}\n          {active && (\n            <React.Fragment>\n              <div\n                className={classnames(styles['resize-handler'], styles['top'])}\n                data-position={ResizePosition.top}\n                onPointerDown={resizeDown}\n                data-testid=\"float-element-resize-top\"\n              >\n                <div className={styles['scale-dot']}></div>\n              </div>\n              <div\n                className={classnames(\n                  styles['resize-handler'],\n                  styles['top-right'],\n                )}\n                data-position={ResizePosition.topRight}\n                onPointerDown={resizeDown}\n                data-testid=\"float-element-resize-top-right\"\n              >\n                <div className={styles['scale-dot']}></div>\n              </div>\n              <div\n                className={classnames(\n                  styles['resize-handler'],\n                  styles['top-left'],\n                )}\n                data-position={ResizePosition.topLeft}\n                onPointerDown={resizeDown}\n                data-testid=\"float-element-resize-top-left\"\n              >\n                <div className={styles['scale-dot']}></div>\n              </div>\n              <div\n                className={classnames(styles['resize-handler'], styles['left'])}\n                data-position={ResizePosition.left}\n                onPointerDown={resizeDown}\n                data-testid=\"float-element-resize-left\"\n              >\n                <div className={styles['scale-dot']}></div>\n              </div>\n              <div\n                className={classnames(\n                  styles['resize-handler'],\n                  styles['right'],\n                )}\n                data-position={ResizePosition.right}\n                onPointerDown={resizeDown}\n                data-testid=\"float-element-resize-right\"\n              >\n                <div className={styles['scale-dot']}></div>\n              </div>\n              <div\n                className={classnames(\n                  styles['resize-handler'],\n                  styles['bottom-right'],\n                )}\n                data-position={ResizePosition.bottomRight}\n                onPointerDown={resizeDown}\n                data-testid=\"float-element-resize-bottom-right\"\n              >\n                <div className={styles['scale-dot']}></div>\n              </div>\n              <div\n                className={classnames(\n                  styles['resize-handler'],\n                  styles['bottom-left'],\n                )}\n                data-position={ResizePosition.bottomLeft}\n                onPointerDown={resizeDown}\n                data-testid=\"float-element-resize-bottom-left\"\n              >\n                <div className={styles['scale-dot']}></div>\n              </div>\n              <div\n                className={classnames(\n                  styles['resize-handler'],\n                  styles['bottom'],\n                )}\n                data-position={ResizePosition.bottom}\n                onPointerDown={resizeDown}\n                data-testid=\"float-element-resize-bottom\"\n              >\n                <div className={styles['scale-dot']}></div>\n              </div>\n              {type === 'floating-picture' && (\n                <div\n                  className={classnames(\n                    styles['resize-handler'],\n                    styles['rotate'],\n                  )}\n                  data-position={ResizePosition.rotate}\n                  onPointerDown={resizeDown}\n                  data-testid=\"float-element-rotate\"\n                >\n                  <div className={styles['rotate-icon']}>\n                    <Icon name=\"rotate\" />\n                  </div>\n                </div>\n              )}\n            </React.Fragment>\n          )}\n        </div>\n        {contextMenuPosition.top >= 0 && contextMenuPosition.left >= 0 && (\n          <FloatElementContextMenu\n            {...props}\n            resetResize={resetResize}\n            menuLeft={contextMenuPosition.left}\n            menuTop={contextMenuPosition.top}\n            hideContextMenu={hideContextMenu}\n          />\n        )}\n      </React.Fragment>\n    );\n  },\n);\n", ".float-element {\n  user-select: none;\n  position: absolute;\n  top: 0;\n  left: 0;\n  border: 1px solid var(--borderColor);\n  background-color: var(--white);\n  z-index: var(--lowZIndex);\n}\n\n.float-element.active {\n  border-style: dashed;\n  border-style: dashed;\n  cursor: move;\n  z-index: var(--middleZIndex);\n}\n\n.float-element-mask {\n  display: none;\n  top: 0;\n  bottom: -30px;\n  left: 0;\n  right: 0;\n}\n.float-element-mask.active {\n  position: absolute;\n  display: block;\n}\n\n.context-menu {\n  position: fixed;\n  background-color: var(--white);\n  border-radius: var(--borderRadius);\n  min-width: 150px;\n  z-index: var(--middleZIndex);\n}\n\n.context-menu > button {\n  width: 100%;\n  background-color: var(--white);\n}\n\n.title {\n  text-align: center;\n  font-weight: bold;\n  width: 98%;\n  border: none;\n  padding: var(--tinyPadding);\n  z-index: var(--middleZIndex);\n}\n\n.image {\n  width: 100%;\n  height: 100%;\n  display: block;\n}\n.resize-handler {\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 32px;\n  height: 32px;\n  box-sizing: content-box;\n}\n.resize-handler-rect {\n  width: 100%;\n  height: 16px;\n}\n.scale-dot {\n  border-radius: 50%;\n  background-color: var(--white);\n  width: 10px;\n  height: 10px;\n  border: 1px solid var(--borderColor);\n  box-sizing: content-box;\n}\n.rotate-icon {\n  color: var(--white);\n  background-color: var(--borderColor);\n  border-radius: 50%;\n  width: 16px;\n  height: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.top {\n  top: -16px;\n  left: 50%;\n  margin-left: -16px;\n  cursor: ns-resize;\n}\n.bottom {\n  bottom: -16px;\n  left: 50%;\n  margin-left: -16px;\n  cursor: ns-resize;\n}\n.top-right {\n  top: -16px;\n  right: -16px;\n  cursor: nesw-resize;\n}\n.top-left {\n  top: -16px;\n  left: -16px;\n  cursor: nwse-resize;\n}\n.bottom-right {\n  bottom: -16px;\n  right: -16px;\n  cursor: nwse-resize;\n}\n.bottom-left {\n  bottom: -16px;\n  left: -16px;\n  cursor: nesw-resize;\n}\n.right {\n  right: -16px;\n  top: 50%;\n  cursor: ew-resize;\n  margin-top: -10px;\n}\n.left {\n  left: -16px;\n  top: 50%;\n  margin-top: -16px;\n  cursor: ew-resize;\n}\n.rotate {\n  top: -48px;\n  left: 50%;\n  margin-left: -16px;\n  cursor: grabbing;\n}\n.rotate::after {\n  position: absolute;\n  content: '';\n  top: 14px;\n  height: 28px;\n  width: 1px;\n  background-color: var(--borderColor);\n}\n\n.chart-type-select {\n  width: 200px;\n}\n", "import React, { memo } from 'react';\nimport { Button, info, Select, toast } from '../../components';\nimport { IController } from '@/types';\nimport styles from './FloatElement.module.css';\nimport { useClickOutside } from '../hooks';\nimport type { ChartType } from 'chart.js';\nimport {\n  saveAs,\n  convertToReference,\n  parseReference,\n  isSameRange,\n  MAX_NAME_LENGTH,\n  extractImageType,\n  CHART_TYPE_LIST,\n} from '@/util';\nimport type { FloatElementItem } from '@/containers/store';\nimport { IWindowSize } from '@/types';\nimport { $ } from '@/i18n';\n\ntype Props = FloatElementItem & {\n  controller: IController;\n  menuLeft: number;\n  menuTop: number;\n  resetResize: (size: IWindowSize) => void;\n  hideContextMenu: () => void;\n};\n\nexport const FloatElementContextMenu: React.FunctionComponent<Props> = memo(\n  (props) => {\n    const {\n      controller,\n      menuLeft,\n      menuTop,\n      uuid,\n      type,\n      chartType,\n      title,\n      resetResize,\n      hideContextMenu,\n      originHeight,\n      originWidth,\n      width,\n      height,\n    } = props;\n    const [ref] = useClickOutside(hideContextMenu);\n    const selectData = () => {\n      let value = convertToReference(\n        props.chartRange!,\n        'absolute',\n        (sheetId: string) => {\n          return controller.getSheetInfo(sheetId)?.name || '';\n        },\n      );\n      info({\n        visible: true,\n        title: $('edit-data-source'),\n        testId: 'dialog-select-data',\n        children: (\n          <input\n            type=\"text\"\n            spellCheck\n            style={{ width: '400px' }}\n            defaultValue={value}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              value = event.target.value.trim();\n              event.stopPropagation();\n            }}\n            maxLength={MAX_NAME_LENGTH * 2}\n            data-testid=\"dialog-select-data-input\"\n          />\n        ),\n        onOk: () => {\n          if (!value) {\n            return toast.error(\n              $('reference-is-empty'),\n              'select-data-empty-toast',\n            );\n          }\n          const sheetList = controller.getSheetList();\n          const range = parseReference(value, (sheetName: string) => {\n            return sheetList.find((v) => v.name === sheetName)?.sheetId || '';\n          });\n          if (\n            !range ||\n            !controller.validateRange(range) ||\n            (props.chartRange && isSameRange(range, props.chartRange))\n          ) {\n            return toast.error(\n              $('reference-is-not-valid'),\n              'select-data-invalid-toast',\n            );\n          }\n          range.sheetId = range.sheetId || controller.getCurrentSheetId();\n          controller.updateDrawing(uuid, { chartRange: range });\n          hideContextMenu();\n        },\n        onCancel: () => {\n          hideContextMenu();\n        },\n      });\n    };\n    const changeChartTitle = () => {\n      let value = title.trim();\n      info({\n        visible: true,\n        title: $('change-chart-title'),\n        testId: 'dialog-change-chart-title',\n        children: (\n          <input\n            type=\"text\"\n            spellCheck\n            style={{ width: '200px' }}\n            defaultValue={value}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              value = event.target.value.trim();\n              event.stopPropagation();\n            }}\n            maxLength={MAX_NAME_LENGTH}\n            data-testid=\"dialog-change-chart-title-input\"\n          />\n        ),\n        onOk: () => {\n          if (!value) {\n            return toast.error(\n              $('the-value-cannot-be-empty'),\n              'change-chart-title-toast',\n            );\n          }\n          controller.updateDrawing(uuid, { title: value });\n          hideContextMenu();\n        },\n        onCancel: () => {\n          hideContextMenu();\n        },\n      });\n    };\n    const changeChartType = () => {\n      let newChartType: ChartType = chartType!;\n      info({\n        title: $('change-chart-type'),\n        testId: 'dialog-change-chart-type',\n        visible: true,\n        children: (\n          <Select\n            className={styles['chart-type-select']}\n            defaultValue={newChartType}\n            data={CHART_TYPE_LIST.map((v) => ({ ...v, disabled: false }))}\n            onChange={(v) => (newChartType = String(v) as ChartType)}\n            testId=\"dialog-change-chart-type-select\"\n          />\n        ),\n        onCancel() {\n          hideContextMenu();\n        },\n        onOk() {\n          controller.updateDrawing(uuid, { chartType: newChartType });\n          hideContextMenu();\n        },\n      });\n    };\n    const saveAsPicture = () => {\n      hideContextMenu();\n      const list = controller.getDrawingList(controller.getCurrentSheetId());\n      const item = list.find((v) => v.uuid === uuid);\n      if (!item) {\n        return;\n      }\n      if (type === 'floating-picture' && item.imageSrc) {\n        const result = extractImageType(item.imageSrc);\n        saveAs(item.imageSrc, item.title + result.ext);\n      }\n      if (type === 'chart') {\n        const dom = document.querySelector<HTMLCanvasElement>(\n          `canvas[data-uuid=\"${uuid}\"]`,\n        );\n        if (!dom) {\n          return;\n        }\n        const chartData = dom.toDataURL();\n        saveAs(chartData, item.title + '.png');\n      }\n    };\n    return (\n      <div\n        className={styles['context-menu']}\n        data-testid=\"float-element-context-menu\"\n        ref={ref}\n        style={{ top: menuTop, left: menuLeft }}\n      >\n        <Button\n          testId=\"float-element-context-menu-copy\"\n          onClick={() => {\n            hideContextMenu();\n            controller.setFloatElementUuid(uuid);\n            controller.copy();\n          }}\n        >\n          {$('copy')}\n        </Button>\n\n        <Button\n          testId=\"float-element-context-menu-cut\"\n          onClick={() => {\n            hideContextMenu();\n            controller.setFloatElementUuid(uuid);\n            controller.cut();\n          }}\n        >\n          {$('cut')}\n        </Button>\n        <Button\n          testId=\"float-element-context-menu-paste\"\n          onClick={() => {\n            hideContextMenu();\n            controller.paste();\n          }}\n        >\n          {$('paste')}\n        </Button>\n        <Button\n          testId=\"float-element-context-menu-duplicate\"\n          onClick={() => {\n            hideContextMenu();\n            controller.setFloatElementUuid(uuid);\n            controller.copy();\n            controller.paste();\n            controller.setFloatElementUuid('');\n          }}\n        >\n          {$('duplicate')}\n        </Button>\n        {type === 'chart' && (\n          <React.Fragment>\n            <Button\n              onClick={selectData}\n              testId=\"float-element-context-menu-select-data\"\n            >\n              {$('select-data')}\n            </Button>\n            <Button\n              onClick={changeChartTitle}\n              testId=\"float-element-context-menu-change-chart-title\"\n            >\n              {$('change-chart-title')}\n            </Button>\n            <Button\n              onClick={changeChartType}\n              testId=\"float-element-context-menu-change-chart-type\"\n            >\n              {$('change-chart-type')}\n            </Button>\n          </React.Fragment>\n        )}\n        <Button\n          testId=\"float-element-context-menu-save-as-picture\"\n          onClick={saveAsPicture}\n        >\n          {$('save-as-picture')}\n        </Button>\n        <Button\n          disabled={width === originWidth && height === originHeight}\n          testId=\"float-element-context-reset-size\"\n          onClick={() => {\n            hideContextMenu();\n            controller.updateDrawing(uuid, {\n              height: originHeight,\n              width: originWidth,\n            });\n            resetResize({ width: originWidth, height: originHeight });\n          }}\n        >\n          {$('reset-size')}\n        </Button>\n        <Button\n          testId=\"float-element-context-menu-delete\"\n          onClick={() => {\n            hideContextMenu();\n            controller.deleteDrawing(uuid);\n          }}\n        >\n          {$('delete')}\n        </Button>\n      </div>\n    );\n  },\n);\nFloatElementContextMenu.displayName = 'FloatElementContextMenu';\n", "import { headerSizeSet, canvasSizeSet } from '@/util';\n\nexport enum ResizePosition {\n  top = 'top',\n  topRight = 'top-right',\n  topLeft = 'top-left',\n  bottom = 'bottom',\n  bottomLeft = 'bottom-left',\n  bottomRight = 'bottom-right',\n  left = 'left',\n  right = 'right',\n  rotate = 'rotate',\n  active = 'active',\n}\nexport type FloatElementPosition = {\n  width: number;\n  top: number;\n  left: number;\n  height: number;\n  imageAngle: number;\n};\nexport type State = {\n  moveStartX: number;\n  moveStartY: number;\n  resizePosition: string;\n  activeUuid: string;\n  position: FloatElementPosition;\n};\n\nexport const INITIAL_STATE: State = {\n  resizePosition: '',\n  moveStartX: 0,\n  moveStartY: 0,\n  activeUuid: '',\n  position: {\n    width: -1,\n    height: -1,\n    imageAngle: 0,\n    top: -1,\n    left: -1,\n  },\n};\n\nexport function roundPosition(top: number, left: number) {\n  const size = headerSizeSet.get();\n  const canvasSize = canvasSizeSet.get();\n  const minTop = size.height;\n  const minLeft = size.width;\n  if (top < minTop) {\n    top = minTop;\n  }\n  if (top > canvasSize.height) {\n    top = canvasSize.height;\n  }\n  if (left < minLeft) {\n    left = minLeft;\n  }\n  if (left > canvasSize.width) {\n    left = canvasSize.width;\n  }\n  return {\n    top,\n    left,\n  };\n}\n", "import React, { useRef, useEffect, memo } from 'react';\nimport {\n  Chart as ChartJS,\n  BarController,\n  LineController,\n  PieController,\n  Filler,\n  ScatterController,\n  RadarController,\n  PolarAreaController,\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport type { ChartType, DefaultDataPoint, ChartComponentLike } from 'chart.js';\nimport {\n  COLOR_PICKER_COLOR_LIST,\n  parseNumber,\n  deepEqual,\n  getThemeColor,\n} from '@/util';\nimport type { FloatElementItem } from '@/containers/store';\nimport { ChartProps } from '@/types';\nimport styles from './chart.module.css';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend,\n);\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(props: ChartProps<TType, TData, TLabel>) {\n  const {\n    height = 400,\n    width = 200,\n    type,\n    options,\n    plugins,\n    data,\n    redraw,\n    updateMode,\n    uuid,\n  } = props as ChartProps;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS | null>();\n\n  useEffect(() => {\n    if (!chartRef.current) {\n      return;\n    }\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      if (!deepEqual(chartRef.current.data, data)) {\n        chartRef.current.data = data;\n      }\n      if (options && !deepEqual(chartRef.current.options, options)) {\n        chartRef.current.options = options;\n      }\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, updateMode, data, options]);\n\n  useEffect(() => {\n    renderChart();\n    return () => destroyChart();\n  }, []);\n\n  const renderChart = () => {\n    if (!canvasRef.current) {\n      return;\n    }\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data,\n      options,\n      plugins,\n    });\n  };\n  const destroyChart = () => {\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n  return (\n    <canvas\n      ref={canvasRef}\n      role=\"img\"\n      height={height}\n      width={width}\n      data-uuid={uuid}\n      className={styles['chart']}\n      data-testid=\"float-element-chart\"\n    />\n  );\n}\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  controller: ChartComponentLike,\n) {\n  ChartJS.register(controller);\n\n  return memo((props: Omit<ChartProps<T>, 'type'>) => (\n    <ChartComponent {...props} type={type} />\n  ));\n}\n\nconst Line = createTypedChart('line', LineController);\nconst Bar = createTypedChart('bar', BarController);\nconst Pie = createTypedChart('pie', PieController);\nconst Scatter = createTypedChart('scatter', ScatterController);\nconst Radar = createTypedChart('radar', RadarController);\nconst PolarArea = createTypedChart('polarArea', PolarAreaController);\n\nconst radarOptions = {\n  elements: {\n    line: {\n      borderWidth: 3,\n    },\n  },\n};\nconst radarPlugins = [Filler];\n\nconst colorOffset = 5;\n\nfunction getColor(i: number): string {\n  const index = Math.floor(i) % COLOR_PICKER_COLOR_LIST.length;\n  return COLOR_PICKER_COLOR_LIST[index];\n}\n\nconst Chart: React.FunctionComponent<FloatElementItem> = memo((props) => {\n  const { chartType, width, height, labels, datasets, uuid, title } = props;\n  const commonData = {\n    labels,\n    datasets: datasets.map((v, i) => ({\n      ...v,\n      backgroundColor: getColor(i * colorOffset),\n    })),\n  };\n  const extra = {\n    width,\n    height,\n    redraw: false,\n    uuid,\n    options: {\n      plugins: {\n        title: {\n          display: true,\n          text: title,\n          padding: {\n            top: 16,\n            bottom: 16,\n          },\n          font: {\n            size: 14,\n            weight: 'normal' as const,\n          },\n        },\n        legend: {\n          display: true,\n          position: 'bottom' as const,\n        },\n      },\n    },\n  };\n  let node: React.ReactNode = undefined;\n  if (chartType === 'line') {\n    node = <Line {...extra} data={commonData} />;\n  } else if (chartType === 'bar') {\n    node = <Bar {...extra} data={commonData} />;\n  } else if (chartType === 'pie') {\n    node = <Pie {...extra} data={commonData} />;\n  } else if (chartType === 'radar') {\n    const data = {\n      labels,\n      datasets: datasets.map((v, i) => {\n        const c = getColor(i * colorOffset + 4);\n        return {\n          ...v,\n          fill: true,\n          borderColor: c,\n          pointBackgroundColor: c,\n          pointBorderColor: getThemeColor('white'),\n          pointHoverBackgroundColor: getThemeColor('white'),\n          pointHoverBorderColor: c,\n          backgroundColor: getColor(i * colorOffset),\n        };\n      }),\n    };\n    node = (\n      <Radar\n        {...extra}\n        options={radarOptions}\n        plugins={radarPlugins}\n        data={data}\n      />\n    );\n  } else if (chartType === 'scatter') {\n    const data = {\n      datasets: datasets.map((v, i) => {\n        return {\n          label: v.label,\n          data: v.data.map((t, i) => ({ y: t, x: parseNumber(labels[i])[1] })),\n          backgroundColor: getColor(i * colorOffset),\n        };\n      }),\n    };\n    node = <Scatter {...extra} data={data} />;\n  } else if (chartType === 'polarArea') {\n    const data = {\n      labels,\n      datasets: datasets.map((v) => {\n        const list = Array.from({ length: v.data.length })\n          .fill('')\n          .map((_, i) => getColor(i * colorOffset));\n        return {\n          ...v,\n          backgroundColor: list,\n        };\n      }),\n    };\n    node = <PolarArea {...extra} data={data} />;\n  } else {\n    console.error('not support chart type', chartType);\n  }\n  return node;\n});\n\nChart.displayName = 'Chart';\n\nexport default Chart;\n", "/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n", "/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n", "import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n", "import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n", "import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n", "import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n", "import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n", "const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n", "export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n", "\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n", "import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n", "import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n", "import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n", "import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n", "import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n", "/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n", "import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n", "import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n", "import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n", "export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n", "import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n", "import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n", "import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n", "import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n", "import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n", "import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n", "/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n", "import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n", "import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n", "\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n", "/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n", "/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n", "import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n", "import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n", "import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n", "import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n", "import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n", "import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n", "import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n", "import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n", "import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n", "import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n", "import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n", "import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n", "import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n", "import {DoughnutController, PolarAreaController, defaults} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nfunction containsDefaultColorsDefenitions() {\n  return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    const containsColorDefenition = (\n      containsColorsDefinitions(datasets) ||\n      containsColorsDefinition(chartOptions) ||\n      (elements && containsColorsDefinitions(elements)) ||\n      containsDefaultColorsDefenitions());\n\n    if (!options.forceOverride && containsColorDefenition) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n", "import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n", "import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n", "/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n", "import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n", "/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n", "import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n", "import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n", "import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n", "/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n", "import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n", "import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n", "import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n", "import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n", "import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n", "import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n", "import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n", "import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n", "import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n", "import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n", "import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n", "export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n", ".chart {\n  background-color: var(--white);\n}\n"],
  "mappings": "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",
  "names": ["import_react", "canvas_default", "canvas-container", "vertical-scroll-bar", "vertical-scroll-bar-content", "horizontal-scroll-bar", "horizontal-scroll-bar-content", "context-menu", "bottom-bar", "active", "bottom-bar-text", "bottom-bar-input", "add-button", "import_react", "scrollBar", "controller", "scrollX", "scrollY", "oldScroll", "maxHeight", "maxScrollHeight", "maxScrollWidth", "maxWidth", "computeScrollPosition", "scrollTop", "scrollLeft", "top", "left", "row", "col", "computeScrollRowAndCol", "data", "activeCell", "initState", "ScrollBar", "state", "scrollStore", "toggleEvents", "handlePointerUp", "handlePointerMove", "event", "toggleEvent", "addEvents", "status", "handleVerticalBarDown", "handleHorizontalBarDown", "React", "canvas_default", "import_react", "MENU_WIDTH", "ITEM_HEIGHT", "computeMenuStyle", "top", "left", "headerSize", "headerSizeSet", "rect", "canvasSizeSet", "clickPosition", "menuHeight", "y", "x", "realTop", "realLeft", "gap", "height", "threshold", "ContextMenu", "props", "controller", "hideContextMenu", "row", "col", "colCount", "rowCount", "activeCellStore", "ref", "useClickOutside", "style", "position", "handleDialog", "isRow", "value", "handleChange", "event", "t", "info", "$", "React", "toast", "i", "canvas_default", "Button", "getChartData", "range", "controller", "row", "col", "rowCount", "colCount", "sheetId", "result", "r", "index", "endRow", "list", "c", "endCol", "t", "parseNumber", "_value", "i", "updateActiveCell", "top", "canvasSizeSet", "activeCell", "isMerged", "cell", "defineName", "cellSize", "cellPosition", "fontFamily", "defaultFontFamily", "fontFamilyStore", "item", "isBold", "isItalic", "isStrike", "fontSize", "fontColor", "getThemeColor", "fillColor", "isWrapText", "underline", "horizontalAlign", "verticalAlign", "numberFormat", "DEFAULT_FORMAT_CODE", "isRight", "horAlign", "displayValue", "realValue", "isDateFormat", "getFormatCode", "mergeType", "MERGE_CELL_LINE_BREAK", "LINE_BREAK", "activeCellStore", "styleStore", "handleStateChange", "changeSet", "sheetList", "v", "sheetListStore", "coreStore", "scroll", "canvasSize", "showBottomBar", "scrollStore", "defineNameStore", "minX", "minY", "maxX", "maxY", "p", "left", "floatElementStore", "scrollSheetToView", "computeCanvasSize", "canvas", "scrollbarSize", "sizeConfig", "dom", "size", "initCanvas", "familyList", "initFontFamilyList", "mainCanvas", "initRenderCanvas", "resize", "renderCanvas", "offEvent", "eventEmitter", "removeEvent", "registerGlobalEvent", "import_react", "defaultData", "BottomBar", "controller", "value", "setValue", "showBottomBar", "scrollStore", "handleChange", "event", "val", "handleClick", "sheetInfo", "viewSize", "sheetViewSizeSet", "scrollBar", "React", "classnames", "canvas_default", "$", "Button", "import_react", "import_react", "FloatElement_default", "float-element", "active", "float-element-mask", "context-menu", "title", "image", "resize-handler", "resize-handler-rect", "scale-dot", "rotate-icon", "top", "bottom", "top-right", "top-left", "bottom-right", "bottom-left", "right", "left", "rotate", "chart-type-select", "import_react", "FloatElementContextMenu", "props", "controller", "menuLeft", "menuTop", "uuid", "type", "chartType", "title", "resetResize", "hideContextMenu", "originHeight", "originWidth", "width", "height", "ref", "useClickOutside", "selectData", "value", "convertToReference", "sheetId", "info", "$", "React", "event", "toast", "sheetList", "range", "parseReference", "sheetName", "v", "isSameRange", "changeChartTitle", "changeChartType", "newChartType", "Select", "FloatElement_default", "CHART_TYPE_LIST", "saveAsPicture", "item", "result", "extractImageType", "saveAs", "dom", "chartData", "Button", "INITIAL_STATE", "roundPosition", "top", "left", "size", "headerSizeSet", "canvasSize", "canvasSizeSet", "minTop", "minLeft", "import_react", "round", "v", "lim", "l", "h", "p2b", "n2b", "v", "lim", "round", "b2n", "n2p", "map$1", "hex", "h1", "b", "h2", "eq", "isShort", "hexParse", "str", "len", "ret", "alpha", "a", "f", "hexString", "HUE_RE", "hsl2rgbn", "h", "s", "l", "n", "k", "hsv2rgbn", "hwb2rgbn", "w", "rgb", "i", "hueValue", "r", "g", "d", "max", "rgb2hsl", "min", "calln", "c", "hsl2rgb", "hwb2rgb", "hsv2rgb", "hue", "hueParse", "m", "p2b", "p1", "p2", "rotate", "deg", "hslString", "map", "names$1", "unpack", "unpacked", "keys", "tkeys", "j", "ok", "nk", "names", "nameParse", "RGB_RE", "rgbParse", "rgbString", "to", "from", "interpolate", "rgb1", "rgb2", "t", "modHSL", "ratio", "tmp", "clone", "proto", "fromObject", "input", "functionParse", "Color", "_Color", "type", "obj", "color", "weight", "c1", "c2", "w2", "p", "w1", "val", "noop", "uid", "id", "isNullOrUndef", "value", "isArray", "Array", "type", "Object", "prototype", "toString", "call", "slice", "isObject", "isNumberFinite", "Number", "isFinite", "finiteOrDefault", "defaultValue", "valueOrDefault", "toPercentage", "dimension", "endsWith", "parseFloat", "toDimension", "callback", "fn", "args", "thisArg", "apply", "each", "loopable", "reverse", "i", "len", "keys", "length", "_elementsEqual", "a0", "a1", "ilen", "v0", "v1", "datasetIndex", "index", "clone", "source", "map", "target", "create", "klen", "k", "isValidKey", "key", "indexOf", "_merger", "options", "tval", "sval", "merge", "sources", "merger", "current", "mergeIf", "_mergerIf", "hasOwnProperty", "keyResolvers", "v", "x", "o", "y", "_splitKey", "key", "parts", "split", "keys", "tmp", "part", "endsWith", "slice", "push", "_getKeyResolver", "obj", "k", "resolveObjectKey", "_capitalize", "str", "charAt", "toUpperCase", "defined", "value", "isFunction", "setsEqual", "a", "b", "size", "item", "has", "_isClickEvent", "e", "type", "PI", "Math", "TAU", "PITAU", "INFINITY", "Number", "POSITIVE_INFINITY", "RAD_PER_DEG", "HALF_PI", "QUARTER_PI", "TWO_THIRDS_PI", "log10", "sign", "almostEquals", "epsilon", "abs", "niceNum", "range", "roundedRange", "round", "niceRange", "pow", "floor", "fraction", "_factorize", "result", "sqrt", "i", "sort", "pop", "isNumber", "n", "isNaN", "parseFloat", "isFinite", "almostWhole", "rounded", "_setMinAndMaxByKey", "array", "target", "property", "ilen", "length", "min", "max", "toRadians", "degrees", "toDegrees", "radians", "_decimalPlaces", "isFiniteNumber", "p", "getAngleFromPoint", "centrePoint", "anglePoint", "distanceFromXCenter", "distanceFromYCenter", "radialDistanceFromCenter", "angle", "atan2", "distance", "distanceBetweenPoints", "pt1", "pt2", "_angleDiff", "_normalizeAngle", "_angleBetween", "start", "end", "sameAngleIsFullCircle", "s", "angleToStart", "angleToEnd", "startToAngle", "endToAngle", "_limitValue", "_int16Range", "_isBetween", "_lookup", "table", "cmp", "index", "hi", "lo", "mid", "_lookupByKey", "last", "ti", "_rlookupByKey", "_filterBetween", "values", "arrayEvents", "listenArrayEvents", "listener", "_chartjs", "listeners", "Object", "defineProperty", "configurable", "enumerable", "forEach", "method", "base", "args", "res", "apply", "object", "unlistenArrayEvents", "stub", "indexOf", "splice", "_arrayUnique", "items", "set", "Set", "Array", "from", "requestAnimFrame", "window", "callback", "requestAnimationFrame", "throttled", "fn", "thisArg", "argsToUse", "ticking", "args", "call", "apply", "debounce", "delay", "timeout", "clearTimeout", "setTimeout", "_toLeftRightCenter", "align", "_alignStartEnd", "start", "end", "_textX", "left", "right", "rtl", "_getStartAndCountOfVisiblePoints", "meta", "points", "animationsDisabled", "pointCount", "length", "count", "_sorted", "iScale", "_parsed", "axis", "min", "max", "minDefined", "maxDefined", "getUserBounds", "_limitValue", "Math", "_lookupByKey", "lo", "getPixelForValue", "hi", "_scaleRangesChanged", "xScale", "yScale", "_scaleRanges", "newRanges", "xmin", "xmax", "ymin", "ymax", "changed", "Object", "assign", "atEdge", "t", "elasticIn", "s", "p", "pow", "sin", "TAU", "elasticOut", "effects", "linear", "easeInQuad", "easeOutQuad", "easeInOutQuad", "easeInCubic", "easeOutCubic", "easeInOutCubic", "easeInQuart", "easeOutQuart", "easeInOutQuart", "easeInQuint", "easeOutQuint", "easeInOutQuint", "easeInSine", "cos", "HALF_PI", "easeOutSine", "easeInOutSine", "PI", "easeInExpo", "easeOutExpo", "easeInOutExpo", "easeInCirc", "sqrt", "easeOutCirc", "easeInOutCirc", "easeInElastic", "easeOutElastic", "easeInOutElastic", "easeInBack", "easeOutBack", "easeInOutBack", "easeInBounce", "easeOutBounce", "d", "m", "easeInOutBounce", "isPatternOrGradient", "value", "type", "toString", "color", "Color", "getHoverColor", "saturate", "darken", "hexString", "numbers", "colors", "applyAnimationsDefaults", "defaults", "set", "undefined", "duration", "easing", "from", "loop", "to", "describe", "_fallback", "_indexable", "_scriptable", "name", "properties", "active", "animation", "resize", "show", "animations", "visible", "hide", "v", "applyLayoutsDefaults", "autoPadding", "padding", "top", "bottom", "intlCache", "Map", "getNumberFormat", "locale", "options", "cacheKey", "JSON", "stringify", "formatter", "get", "Intl", "NumberFormat", "formatNumber", "num", "format", "formatters", "values", "isArray", "numeric", "tickValue", "index", "ticks", "chart", "notation", "delta", "maxTick", "abs", "calculateDelta", "logDelta", "log10", "numDecimal", "isNaN", "floor", "minimumFractionDigits", "maximumFractionDigits", "logarithmic", "remain", "significand", "includes", "Ticks", "applyScaleDefaults", "display", "offset", "reverse", "beginAtZero", "bounds", "clip", "grace", "grid", "lineWidth", "drawOnChartArea", "drawTicks", "tickLength", "tickWidth", "_ctx", "tickColor", "border", "dash", "dashOffset", "width", "title", "text", "minRotation", "maxRotation", "mirror", "textStrokeWidth", "textStrokeColor", "autoSkip", "autoSkipPadding", "labelOffset", "minor", "major", "crossAlign", "showLabelBackdrop", "backdropColor", "backdropPadding", "route", "startsWith", "overrides", "create", "descriptors", "getScope", "node", "key", "keys", "split", "i", "n", "k", "root", "scope", "merge", "Defaults", "constructor", "_descriptors", "_appliers", "backgroundColor", "borderColor", "datasets", "devicePixelRatio", "context", "platform", "getDevicePixelRatio", "elements", "events", "font", "family", "size", "style", "lineHeight", "weight", "hover", "hoverBackgroundColor", "ctx", "hoverBorderColor", "hoverColor", "indexAxis", "interaction", "mode", "intersect", "includeInvisible", "maintainAspectRatio", "onHover", "onClick", "parsing", "plugins", "responsive", "scale", "scales", "showLine", "drawActiveElementsOnTop", "override", "targetScope", "targetName", "scopeObject", "targetScopeObject", "privateName", "defineProperties", "writable", "enumerable", "local", "target", "isObject", "valueOrDefault", "appliers", "forEach", "toFontString", "isNullOrUndef", "_measureText", "data", "gc", "longest", "string", "textWidth", "measureText", "push", "_longestText", "arrayOfThings", "cache", "garbageCollect", "save", "ilen", "j", "jlen", "thing", "nestedThing", "restore", "gcLen", "splice", "_alignPixel", "pixel", "currentDevicePixelRatio", "halfWidth", "round", "clearCanvas", "canvas", "getContext", "resetTransform", "clearRect", "height", "drawPoint", "x", "y", "drawPointLegend", "w", "xOffset", "yOffset", "cornerRadius", "xOffsetW", "yOffsetW", "pointStyle", "rotation", "radius", "rad", "RAD_PER_DEG", "translate", "rotate", "drawImage", "beginPath", "ellipse", "arc", "closePath", "moveTo", "TWO_THIRDS_PI", "lineTo", "QUARTER_PI", "SQRT1_2", "rect", "fill", "borderWidth", "stroke", "_isPointInArea", "point", "area", "margin", "clipArea", "unclipArea", "_steppedLineTo", "previous", "flip", "midpoint", "_bezierCurveTo", "bezierCurveTo", "cp1x", "cp2x", "cp1y", "cp2y", "setRenderOpts", "opts", "translation", "fillStyle", "textAlign", "textBaseline", "decorateText", "line", "strikethrough", "underline", "metrics", "actualBoundingBoxLeft", "actualBoundingBoxRight", "actualBoundingBoxAscent", "actualBoundingBoxDescent", "yDecoration", "strokeStyle", "decorationWidth", "drawBackdrop", "oldColor", "fillRect", "renderText", "lines", "strokeWidth", "strokeColor", "backdrop", "strokeText", "maxWidth", "fillText", "Number", "addRoundedRectPath", "h", "topLeft", "bottomLeft", "bottomRight", "topRight", "LINE_HEIGHT", "FONT_STYLE", "toLineHeight", "matches", "match", "numberOrZero", "_readValueToProps", "props", "ret", "objProps", "read", "prop", "toTRBL", "toTRBLCorners", "toPadding", "obj", "toFont", "fallback", "parseInt", "console", "warn", "resolve", "inputs", "info", "cacheable", "_addGrace", "minmax", "change", "toDimension", "keepZero", "add", "createContext", "parentContext", "_createResolver", "scopes", "prefixes", "rootScopes", "getTarget", "finalRootScopes", "_resolve", "Symbol", "toStringTag", "_cacheable", "_scopes", "_rootScopes", "_getTarget", "Proxy", "deleteProperty", "_keys", "_cached", "_resolveWithPrefixes", "getOwnPropertyDescriptor", "Reflect", "getPrototypeOf", "has", "getKeysFromAllScopes", "ownKeys", "storage", "_storage", "_attachContext", "proxy", "subProxy", "descriptorDefaults", "_proxy", "_context", "_subProxy", "_stack", "Set", "setContext", "receiver", "_resolveWithContext", "allKeys", "configurable", "scriptable", "indexable", "_allKeys", "isScriptable", "isFunction", "isIndexable", "readKey", "prefix", "_capitalize", "needsSubResolver", "prototype", "hasOwnProperty", "_resolveScriptable", "_resolveArray", "getValue", "Error", "Array", "join", "delete", "createSubResolver", "arr", "filter", "item", "resolver", "resolveFallback", "parent", "resolveObjectKey", "addScopes", "parentScopes", "parentFallback", "allScopes", "addScopesFromKey", "subGetTarget", "resolveKeysFromAllScopes", "_parseObjectDataRadialScale", "_parsing", "parsed", "r", "parse", "EPSILON", "getPoint", "skip", "getValueAxis", "splineCurve", "firstPoint", "middlePoint", "afterPoint", "current", "next", "d01", "distanceBetweenPoints", "d12", "s01", "s12", "fa", "fb", "monotoneAdjust", "deltaK", "mK", "pointsLen", "alphaK", "betaK", "tauK", "squaredMagnitude", "pointCurrent", "pointAfter", "almostEquals", "monotoneCompute", "valueAxis", "pointBefore", "iPixel", "vPixel", "splineCurveMonotone", "slopeDelta", "sign", "capControlPoint", "pt", "capBezierPoints", "inArea", "inAreaPrev", "inAreaNext", "_updateBezierControlPoints", "controlPoints", "spanGaps", "cubicInterpolationMode", "prev", "tension", "_isDomSupported", "document", "_getParentNode", "domNode", "parentNode", "host", "parseMaxStyle", "styleValue", "parentProperty", "valueInPixels", "indexOf", "getComputedStyle", "element", "ownerDocument", "defaultView", "getStyle", "el", "property", "getPropertyValue", "positions", "getPositionedStyle", "styles", "suffix", "result", "pos", "parseFloat", "useOffsetPos", "shadowRoot", "getCanvasPosition", "e", "touches", "source", "offsetX", "offsetY", "box", "getBoundingClientRect", "clientX", "clientY", "getRelativePosition", "event", "borderBox", "boxSizing", "paddings", "borders", "getContainerSize", "maxHeight", "container", "clientWidth", "clientHeight", "containerStyle", "containerBorder", "containerPadding", "INFINITY", "round1", "getMaximumSize", "bbWidth", "bbHeight", "aspectRatio", "margins", "containerSize", "retinaScale", "forceRatio", "forceStyle", "pixelRatio", "deviceHeight", "deviceWidth", "setTransform", "supportsEventListenerOptions", "passiveSupported", "passive", "addEventListener", "removeEventListener", "readUsedSize", "_pointInLine", "p1", "p2", "_steppedInterpolation", "_bezierInterpolation", "cp1", "cp2", "a", "b", "c", "getRightToLeftAdapter", "rectX", "setWidth", "xPlus", "leftForLtr", "itemWidth", "getLeftToRightAdapter", "_itemWidth", "getRtlAdapter", "overrideTextDirection", "direction", "original", "getPropertyPriority", "setProperty", "prevTextDirection", "restoreTextDirection", "propertyFn", "between", "_angleBetween", "compare", "_angleDiff", "normalize", "_normalizeAngle", "_isBetween", "normalizeSegment", "getSegment", "segment", "startBound", "endBound", "_boundSegment", "inside", "subStart", "prevValue", "startIsBefore", "endIsBefore", "shouldStart", "shouldStop", "_boundSegments", "segments", "sub", "findStartAndEnd", "solidSegments", "last", "cur", "stop", "_computeSegments", "segmentOptions", "_loop", "splitByStyles", "completeLoop", "_fullLoop", "doSplitByStyles", "chartContext", "_chart", "baseStyle", "readStyle", "_datasetIndex", "datasetIndex", "prevStyle", "addStyle", "l", "st", "dir", "p0", "p0DataIndex", "p1DataIndex", "styleChanged", "borderCapStyle", "borderDash", "borderDashOffset", "borderJoinStyle", "replacer", "Animator", "constructor", "_request", "_charts", "Map", "_running", "_lastDate", "undefined", "_notify", "chart", "anims", "date", "type", "callbacks", "listeners", "numSteps", "duration", "forEach", "fn", "initial", "currentStep", "Math", "min", "start", "_refresh", "requestAnimFrame", "call", "window", "_update", "Date", "now", "remaining", "running", "items", "length", "i", "draw", "item", "_active", "_total", "tick", "pop", "_getAnims", "charts", "get", "complete", "progress", "set", "listen", "event", "cb", "push", "add", "has", "reduce", "acc", "cur", "max", "_duration", "stop", "cancel", "remove", "delete", "animator", "transparent", "interpolators", "boolean", "from", "to", "factor", "color", "c0", "helpersColor", "c1", "valid", "mix", "hexString", "number", "Animation", "cfg", "target", "prop", "currentValue", "resolve", "_fn", "_easing", "effects", "easing", "linear", "_start", "floor", "delay", "_loop", "loop", "_target", "_prop", "_from", "_to", "_promises", "active", "update", "elapsed", "remain", "wait", "promises", "Promise", "res", "rej", "resolved", "method", "Animations", "config", "_chart", "_properties", "configure", "isObject", "animationOptions", "Object", "keys", "defaults", "animation", "animatedProps", "getOwnPropertyNames", "key", "option", "isArray", "properties", "_animateOptions", "values", "newOptions", "options", "resolveTargetOptions", "animations", "_createAnimations", "$shared", "awaitAll", "$animations", "then", "props", "charAt", "value", "size", "assign", "anim", "all", "scaleClip", "scale", "allowedOverflow", "opts", "reverse", "end", "defaultClip", "xScale", "yScale", "x", "y", "top", "right", "bottom", "left", "toClip", "t", "r", "b", "l", "disabled", "getSortedDatasetIndices", "filterVisible", "metasets", "_getSortedDatasetMetas", "ilen", "index", "applyStack", "stack", "dsIndex", "singleMode", "mode", "datasetIndex", "otherValue", "found", "isFinite", "sign", "convertObjectDataToArray", "data", "meta", "iScale", "vScale", "iAxisKey", "axis", "vAxisKey", "adata", "Array", "isStacked", "stacked", "getStackKey", "indexScale", "valueScale", "id", "getUserBounds", "minDefined", "maxDefined", "Number", "NEGATIVE_INFINITY", "POSITIVE_INFINITY", "getOrCreateStack", "stacks", "stackKey", "indexValue", "subStack", "getLastIndexInStack", "positive", "getMatchingVisibleMetas", "updateStacks", "controller", "parsed", "_cachedMeta", "_stacks", "iAxis", "vAxis", "itemStacks", "_top", "_bottom", "visualValues", "_visualValues", "getFirstScaleId", "scales", "filter", "shift", "createDatasetContext", "parent", "createContext", "dataset", "createDataContext", "element", "dataIndex", "raw", "clearStacks", "_parsed", "isDirectUpdateMode", "cloneIfNotShared", "cached", "shared", "createStack", "canStack", "hidden", "_stacked", "DatasetController", "datasetElementType", "dataElementType", "_ctx", "ctx", "_cachedDataOpts", "getMeta", "_type", "_parsing", "_data", "_objectData", "_sharedOptions", "_drawStart", "_drawCount", "enableOptionSharing", "supportsDecimation", "$context", "_syncList", "initialize", "linkScales", "addElements", "fill", "isPluginEnabled", "console", "warn", "updateIndex", "getDataset", "chooseId", "xid", "xAxisID", "valueOrDefault", "yid", "yAxisID", "rid", "rAxisID", "indexAxis", "iid", "iAxisID", "vid", "vAxisID", "getScaleForId", "rScale", "datasets", "getDatasetMeta", "scaleID", "_getOtherScale", "reset", "_destroy", "unlistenArrayEvents", "_dataCheck", "isExtensible", "listenArrayEvents", "buildOrUpdateElements", "resetNewElements", "stackChanged", "oldStacked", "_resyncElements", "scopeKeys", "datasetScopeKeys", "scopes", "getOptionScopes", "createResolver", "getContext", "parsing", "parse", "count", "sorted", "_sorted", "prev", "parseArrayData", "parseObjectData", "parsePrimitiveData", "isNotInOrderComparedToPrev", "labels", "getLabels", "singleScale", "xAxisKey", "yAxisKey", "resolveObjectKey", "getParsed", "getDataElement", "updateRangeFromParsed", "range", "parsedValue", "NaN", "getMinMax", "otherScale", "otherMin", "otherMax", "_skip", "getAllParsedValues", "getMaxOverflow", "getLabelAndValue", "label", "getLabelForValue", "_clip", "clip", "elements", "area", "chartArea", "drawActiveElementsOnTop", "getStyle", "resolveDatasetElementOptions", "resolveDataElementOptions", "context", "_resolveElementOptions", "elementType", "cache", "cacheKey", "sharing", "defined", "datasetElementScopeKeys", "prefixes", "names", "resolveNamedOptions", "freeze", "_resolveAnimations", "transition", "datasetAnimationScopeKeys", "_cacheable", "getSharedOptions", "includeOptions", "sharedOptions", "_animationsDisabled", "_getSharedOptions", "firstOpts", "previouslySharedOptions", "updateSharedOptions", "updateElement", "_setStyle", "removeHoverStyle", "setHoverStyle", "_removeDatasetHoverStyle", "_setDatasetHoverStyle", "arg1", "arg2", "numMeta", "numData", "_insertElements", "_removeElements", "move", "arr", "updateElements", "removed", "splice", "_sync", "args", "_dataChanges", "_onDataPush", "arguments", "_onDataPop", "_onDataShift", "_onDataSplice", "newCount", "_onDataUnshift", "getAllScaleValues", "_cache", "$bar", "visibleMetas", "concat", "_arrayUnique", "sort", "a", "computeMinSampleSize", "_length", "curr", "updateMinAndPrev", "abs", "getPixelForValue", "ticks", "getPixelForTick", "computeFitCategoryTraits", "ruler", "stackCount", "thickness", "barThickness", "ratio", "isNullOrUndef", "categoryPercentage", "barPercentage", "chunk", "pixels", "computeFlexCategoryTraits", "next", "percent", "parseFloatBar", "entry", "startValue", "endValue", "barStart", "barEnd", "_custom", "parseValue", "parseArrayOrPrimitive", "isFloatBar", "custom", "barSign", "actualBase", "isHorizontal", "borderProps", "horizontal", "base", "setBorderSkipped", "edge", "borderSkipped", "enableBorderRadius", "parseEdge", "swap", "startEnd", "orig", "v1", "v2", "v", "setInflateAmount", "inflateAmount", "BarController", "grouped", "numbers", "overrides", "_index_", "offset", "grid", "_value_", "beginAtZero", "obj", "bars", "getBasePixel", "_getRuler", "vpixels", "head", "_calculateBarValuePixels", "ipixels", "_calculateBarIndexPixels", "center", "height", "width", "_getStacks", "last", "currentParsed", "iScaleValue", "skipNull", "find", "val", "isNaN", "indexOf", "_getStackCount", "_getStackIndex", "name", "_startPixel", "_endPixel", "baseValue", "minBarLength", "floating", "getDataVisibility", "startPixel", "getPixelForDecimal", "endPixel", "getValueForPixel", "halfGrid", "getLineWidthForValue", "maxBarThickness", "Infinity", "stackIndex", "rects", "getRatioAndOffset", "rotation", "circumference", "cutout", "ratioX", "ratioY", "offsetX", "offsetY", "TAU", "startAngle", "endAngle", "startX", "Math", "cos", "startY", "sin", "endX", "endY", "calcMax", "angle", "a", "b", "_angleBetween", "max", "calcMin", "min", "maxX", "maxY", "HALF_PI", "minX", "PI", "minY", "DoughnutController", "DatasetController", "id", "defaults", "datasetElementType", "dataElementType", "animation", "animateRotate", "animateScale", "animations", "numbers", "type", "properties", "radius", "spacing", "indexAxis", "descriptors", "_scriptable", "name", "_indexable", "startsWith", "overrides", "aspectRatio", "plugins", "legend", "labels", "generateLabels", "chart", "data", "length", "datasets", "pointStyle", "color", "options", "map", "label", "i", "style", "getDatasetMeta", "controller", "getStyle", "text", "fillStyle", "backgroundColor", "strokeStyle", "borderColor", "fontColor", "lineWidth", "borderWidth", "hidden", "getDataVisibility", "index", "onClick", "e", "legendItem", "toggleDataVisibility", "update", "constructor", "datasetIndex", "enableOptionSharing", "innerRadius", "undefined", "outerRadius", "linkScales", "parse", "start", "count", "getDataset", "meta", "_cachedMeta", "_parsing", "_parsed", "getter", "isObject", "key", "resolveObjectKey", "ilen", "_getRotation", "toRadians", "_getCircumference", "_getRotationExtents", "isDatasetVisible", "_type", "mode", "chartArea", "arcs", "getMaxBorderWidth", "getMaxOffset", "maxSize", "width", "height", "toPercentage", "chartWeight", "_getRingWeight", "maxWidth", "maxHeight", "maxRadius", "toDimension", "radiusLength", "_getVisibleDatasetWeightTotal", "total", "calculateTotal", "_getRingWeightOffset", "updateElements", "_circumference", "reset", "opts", "calculateCircumference", "animationOpts", "centerX", "left", "right", "centerY", "top", "bottom", "sharedOptions", "includeOptions", "_getSharedOptions", "arc", "x", "y", "resolveDataElementOptions", "active", "updateElement", "metaData", "value", "isNaN", "abs", "getLabelAndValue", "formatNumber", "locale", "borderAlign", "hoverBorderWidth", "offset", "hoverOffset", "ringWeightOffset", "valueOrDefault", "weight", "LineController", "showLine", "spanGaps", "scales", "_index_", "_value_", "initialize", "supportsDecimation", "dataset", "line", "points", "_dataset", "animationsDisabled", "_animationsDisabled", "_getStartAndCountOfVisiblePoints", "_drawStart", "_drawCount", "_scaleRangesChanged", "_chart", "_datasetIndex", "_decimated", "resolveDatasetElementOptions", "segment", "animated", "iScale", "vScale", "_stacked", "iAxis", "axis", "vAxis", "maxGapLength", "isNumber", "Number", "POSITIVE_INFINITY", "directUpdate", "end", "pointsCount", "prevParsed", "getParsed", "point", "skip", "parsed", "nullData", "isNullOrUndef", "iPixel", "getPixelForValue", "vPixel", "getBasePixel", "applyStack", "stop", "raw", "getMaxOverflow", "border", "firstPoint", "size", "lastPoint", "draw", "updateControlPoints", "PolarAreaController", "r", "angleLines", "display", "beginAtZero", "grid", "circular", "pointLabels", "parseObjectData", "_parseObjectDataRadialScale", "bind", "_updateRadius", "getMinMax", "range", "NEGATIVE_INFINITY", "forEach", "element", "minSize", "cutoutPercentage", "getVisibleDatasetCount", "scale", "rScale", "xCenter", "yCenter", "datasetStartAngle", "getIndexAngle", "defaultAngle", "countVisibleElements", "_computeAngle", "getDistanceFromCenterForValue", "PieController", "RadarController", "elements", "fill", "getLabels", "getLabelForValue", "_loop", "_fullLoop", "pointPosition", "getPointPositionForValue", "ScatterController", "interaction", "xScale", "yScale", "addElements", "registry", "getElement", "firstOpts", "getSharedOptions", "updateSharedOptions", "abstract", "Error", "DateAdapterBase", "override", "members", "Object", "assign", "prototype", "options", "constructor", "init", "formats", "parse", "format", "add", "diff", "startOf", "endOf", "adapters", "_date", "binarySearch", "metaset", "axis", "value", "intersect", "controller", "data", "_sorted", "iScale", "_cachedMeta", "length", "lookupMethod", "_reversePixels", "_rlookupByKey", "_lookupByKey", "_sharedOptions", "el", "range", "getRange", "start", "end", "lo", "hi", "evaluateInteractionItems", "chart", "position", "handler", "metasets", "getSortedVisibleDatasetMetas", "i", "ilen", "index", "j", "element", "skip", "getDistanceMetricForAxis", "useX", "indexOf", "useY", "pt1", "pt2", "deltaX", "Math", "abs", "x", "deltaY", "y", "sqrt", "pow", "getIntersectItems", "useFinalPosition", "includeInvisible", "items", "isPointInArea", "datasetIndex", "_isPointInArea", "chartArea", "inRange", "push", "getNearestRadialItems", "evaluationFunc", "startAngle", "endAngle", "getProps", "angle", "getAngleFromPoint", "_angleBetween", "getNearestCartesianItems", "distanceMetric", "minDistance", "Number", "POSITIVE_INFINITY", "center", "getCenterPoint", "distance", "getNearestItems", "getAxisItems", "rangeMethod", "intersectsItem", "Interaction", "modes", "e", "getRelativePosition", "elements", "forEach", "meta", "dataset", "getDatasetMeta", "point", "nearest", "STATIC_POSITIONS", "filterByPosition", "array", "filter", "v", "pos", "filterDynamicPositionByAxis", "box", "sortByWeight", "reverse", "sort", "a", "b", "v0", "v1", "weight", "wrapBoxes", "boxes", "layoutBoxes", "stack", "stackWeight", "horizontal", "isHorizontal", "buildStacks", "layouts", "stacks", "wrap", "includes", "_stack", "count", "placed", "size", "setLayoutDims", "params", "vBoxMaxWidth", "hBoxMaxHeight", "layout", "fullSize", "factor", "width", "availableWidth", "height", "availableHeight", "buildLayoutBoxes", "left", "right", "top", "bottom", "centerHorizontal", "centerVertical", "leftAndTop", "concat", "rightAndBottom", "vertical", "getCombinedMax", "maxPadding", "max", "updateMaxPadding", "boxPadding", "updateDims", "isObject", "getPadding", "newWidth", "outerWidth", "newHeight", "outerHeight", "widthChanged", "w", "heightChanged", "h", "same", "other", "handleMaxPadding", "updatePos", "change", "getMargins", "marginForPositions", "positions", "margin", "fitBoxes", "refitBoxes", "refit", "changed", "update", "setBoxDims", "placeBoxes", "userPadding", "padding", "defined", "addBox", "item", "_layers", "z", "draw", "removeBox", "layoutItem", "splice", "configure", "minPadding", "toPadding", "verticalBoxes", "horizontalBoxes", "each", "beforeLayout", "visibleVerticalBoxCount", "reduce", "total", "display", "freeze", "BasePlatform", "acquireContext", "canvas", "aspectRatio", "releaseContext", "context", "addEventListener", "type", "listener", "removeEventListener", "getDevicePixelRatio", "getMaximumSize", "floor", "isAttached", "updateConfig", "config", "BasicPlatform", "getContext", "animation", "EXPANDO_KEY", "EVENT_TYPES", "touchstart", "touchmove", "touchend", "pointerenter", "pointerdown", "pointermove", "pointerup", "pointerleave", "pointerout", "isNullOrEmpty", "initCanvas", "style", "renderHeight", "getAttribute", "renderWidth", "initial", "boxSizing", "displayWidth", "readUsedSize", "undefined", "displayHeight", "eventListenerOptions", "supportsEventListenerOptions", "passive", "addListener", "node", "removeListener", "fromNativeEvent", "event", "native", "nodeListContains", "nodeList", "contains", "createAttachObserver", "observer", "MutationObserver", "entries", "trigger", "entry", "addedNodes", "removedNodes", "observe", "document", "childList", "subtree", "createDetachObserver", "drpListeningCharts", "Map", "oldDevicePixelRatio", "onWindowResize", "dpr", "window", "devicePixelRatio", "resize", "currentDevicePixelRatio", "listenDevicePixelRatioChanges", "set", "unlistenDevicePixelRatioChanges", "delete", "createResizeObserver", "container", "_getParentNode", "throttled", "clientWidth", "ResizeObserver", "contentRect", "releaseObserver", "disconnect", "createProxyAndListen", "proxy", "ctx", "DomPlatform", "prop", "isNullOrUndef", "removeAttribute", "setAttribute", "keys", "key", "proxies", "$proxies", "attach", "detach", "isConnected", "_detectPlatform", "_isDomSupported", "OffscreenCanvas", "Element", "defaults", "defaultRoutes", "active", "$animations", "tooltipPosition", "hasValue", "isNumber", "props", "final", "anims", "ret", "_to", "autoSkip", "scale", "ticks", "tickOpts", "determinedMaxTicks", "determineMaxTicks", "ticksLimit", "min", "maxTicksLimit", "majorIndices", "major", "enabled", "getMajorIndices", "numMajorIndices", "first", "last", "newTicks", "skipMajors", "spacing", "calculateSpacing", "avgMajorSpacing", "round", "offset", "tickLength", "_tickSize", "maxScale", "_length", "maxChart", "_maxLength", "evenMajorSpacing", "getEvenSpacing", "factors", "_factorize", "result", "next", "ceil", "majorStart", "majorEnd", "valueOrDefault", "arr", "len", "reverseAlign", "align", "offsetFromEdge", "edge", "getTicksLimit", "ticksLength", "sample", "numItems", "increment", "getPixelForGridLine", "offsetGridLines", "validIndex", "_startPixel", "_endPixel", "epsilon", "lineValue", "getPixelForTick", "garbageCollect", "caches", "cache", "gc", "gcLen", "getTickMarkLength", "drawTicks", "getTitleHeight", "fallback", "font", "toFont", "isArray", "text", "lineHeight", "createScaleContext", "parent", "createContext", "createTickContext", "tick", "titleAlign", "_toLeftRightCenter", "titleArgs", "scales", "rotation", "maxWidth", "titleX", "titleY", "_alignStartEnd", "positionAxisID", "getPixelForValue", "HALF_PI", "Scale", "cfg", "id", "_margins", "maxHeight", "paddingTop", "paddingBottom", "paddingLeft", "paddingRight", "labelRotation", "_range", "_gridLineItems", "_labelItems", "_labelSizes", "_longestTextCache", "_userMax", "_userMin", "_suggestedMax", "_suggestedMin", "_ticksLength", "_borderValue", "_cache", "_dataLimitsCached", "$context", "setContext", "suggestedMin", "suggestedMax", "raw", "getUserBounds", "finiteOrDefault", "NEGATIVE_INFINITY", "minDefined", "isFinite", "maxDefined", "getMinMax", "canStack", "metas", "getMatchingVisibleMetas", "getTicks", "getLabels", "labels", "xLabels", "yLabels", "getLabelItems", "_computeLabelItems", "beforeUpdate", "call", "margins", "beginAtZero", "grace", "sampleSize", "beforeSetDimensions", "setDimensions", "afterSetDimensions", "beforeDataLimits", "determineDataLimits", "afterDataLimits", "_addGrace", "beforeBuildTicks", "buildTicks", "afterBuildTicks", "samplingEnabled", "_convertTicksToLabels", "beforeCalculateLabelRotation", "calculateLabelRotation", "afterCalculateLabelRotation", "source", "afterAutoSkip", "beforeFit", "fit", "afterFit", "afterUpdate", "reversePixels", "startPixel", "endPixel", "_alignToPixels", "alignToPixels", "_callHooks", "name", "notifyPlugins", "beforeTickToLabelConversion", "generateTickLabels", "label", "callback", "afterTickToLabelConversion", "numTicks", "minRotation", "maxRotation", "tickWidth", "maxLabelDiagonal", "_isVisible", "labelSizes", "_getLabelSizes", "maxLabelWidth", "widest", "maxLabelHeight", "highest", "_limitValue", "grid", "title", "toDegrees", "asin", "minSize", "titleOpts", "gridOpts", "titleHeight", "tickPadding", "angleRadians", "toRadians", "cos", "sin", "labelHeight", "mirror", "labelWidth", "_calculatePadding", "_handleMargins", "isRotated", "labelsBelowTicks", "offsetLeft", "offsetRight", "isFullSize", "_computeLabelSizes", "widths", "heights", "widestLabelSize", "highestLabelSize", "jlen", "tickFont", "fontString", "nestedLabel", "_resolveTickFontOptions", "string", "_measureText", "valueAt", "idx", "getLabelForValue", "NaN", "getValueForPixel", "pixel", "getPixelForDecimal", "decimal", "_int16Range", "_alignPixel", "getDecimalForPixel", "getBasePixel", "getBaseValue", "optionTicks", "rot", "autoSkipPadding", "_computeGridLineItems", "border", "tl", "borderOpts", "axisWidth", "axisHalfWidth", "alignBorderValue", "borderValue", "alignedLineValue", "tx1", "ty1", "tx2", "ty2", "x1", "y1", "x2", "y2", "limit", "step", "optsAtIndex", "optsAtIndexBorder", "lineWidth", "lineColor", "color", "borderDash", "dash", "borderDashOffset", "dashOffset", "tickColor", "tickBorderDash", "tickBorderDashOffset", "crossAlign", "tickAndPadding", "hTickAndPadding", "textAlign", "lineCount", "textOffset", "textBaseline", "_getXAxisLabelAlignment", "_getYAxisLabelAlignment", "labelOffset", "halfCount", "strokeColor", "textStrokeColor", "strokeWidth", "textStrokeWidth", "tickTextAlign", "showLabelBackdrop", "backdrop", "labelPadding", "backdropPadding", "backdropColor", "translation", "_computeLabelArea", "drawBackground", "backgroundColor", "save", "fillStyle", "fillRect", "restore", "getLineWidthForValue", "findIndex", "t", "drawGrid", "drawLine", "p1", "p2", "strokeStyle", "setLineDash", "lineDashOffset", "beginPath", "moveTo", "lineTo", "stroke", "drawOnChartArea", "drawBorder", "lastLineWidth", "drawLabels", "area", "clipArea", "renderTextOptions", "renderText", "unclipArea", "drawTitle", "opts", "tz", "gz", "bz", "axisID", "_maxDigits", "fontSize", "TypedRegistry", "scope", "create", "isForType", "isPrototypeOf", "register", "proto", "getPrototypeOf", "parentScope", "isIChartComponent", "registerDefaults", "overrides", "get", "unregister", "itemDefaults", "merge", "routeDefaults", "descriptors", "describe", "routes", "property", "propertyParts", "split", "sourceName", "pop", "sourceScope", "join", "parts", "targetName", "targetScope", "route", "Registry", "controllers", "DatasetController", "plugins", "_typedRegistries", "args", "_each", "remove", "addControllers", "addElements", "addPlugins", "addScales", "getController", "_get", "getElement", "getPlugin", "getScale", "removeControllers", "removeElements", "removePlugins", "removeScales", "method", "typedRegistry", "arg", "reg", "_getRegistryForType", "_exec", "itemReg", "registry", "component", "camelMethod", "_capitalize", "PluginService", "_init", "notify", "hook", "_createDescriptors", "_notify", "_descriptors", "descriptor", "plugin", "callCallback", "cancelable", "invalidate", "_oldCache", "_notifyStateChanges", "all", "allPlugins", "createDescriptors", "previousDescriptors", "some", "localIds", "local", "getOpts", "pluginOpts", "pluginScopeKeys", "scopes", "getOptionScopes", "createResolver", "scriptable", "indexable", "allKeys", "getIndexAxis", "datasetDefaults", "datasets", "indexAxis", "getAxisFromDefaultScaleID", "getDefaultScaleIDFromAxis", "idMatchesAxis", "axisFromPosition", "determineAxis", "scaleOptions", "toLowerCase", "getAxisFromDataset", "retrieveAxisFromDatasets", "boundDs", "d", "xAxisID", "yAxisID", "mergeScaleConfig", "chartDefaults", "configScales", "chartIndexAxis", "scaleConf", "console", "error", "_proxy", "warn", "defaultId", "defaultScaleOptions", "mergeIf", "defaultID", "initOptions", "initData", "initConfig", "keyCache", "keysCached", "Set", "cachedKeys", "cacheKey", "generate", "addIfFound", "obj", "resolveObjectKey", "Config", "_config", "_scopeCache", "_resolverCache", "platform", "clearCache", "clear", "datasetScopeKeys", "datasetType", "datasetAnimationScopeKeys", "transition", "datasetElementScopeKeys", "elementType", "additionalOptionScopes", "_cachedScopes", "mainScope", "resetCache", "keyLists", "cached", "Array", "from", "has", "chartOptionScopes", "resolveNamedOptions", "names", "prefixes", "$shared", "resolver", "subPrefixes", "getResolver", "needContext", "isFunction", "subResolver", "_attachContext", "descriptorDefaults", "resolverCache", "_createResolver", "p", "hasFunction", "getOwnPropertyNames", "isScriptable", "isIndexable", "KNOWN_POSITIONS", "positionIsHorizontal", "compare2Level", "l1", "l2", "onAnimationsComplete", "animationOptions", "onComplete", "onAnimationProgress", "onProgress", "getCanvas", "getElementById", "instances", "getChart", "values", "c", "moveNumericKeys", "move", "intKey", "determineLastEvent", "lastEvent", "inChartArea", "isClick", "getSizeForArea", "field", "clip", "getDatasetArea", "xScale", "yScale", "Chart", "version", "invalidatePlugins", "userConfig", "initialCanvas", "existingChart", "uid", "_options", "_aspectRatio", "_metasets", "_stacks", "_active", "_lastEvent", "_listeners", "_responsiveListeners", "_sortedMetasets", "_plugins", "_hiddenIndices", "attached", "_animationsDisabled", "_doResize", "debounce", "mode", "resizeDelay", "_dataChanges", "animator", "listen", "_initialize", "maintainAspectRatio", "responsive", "retinaScale", "bindEvents", "clearCanvas", "stop", "running", "_resizeBeforeDraw", "_resize", "newSize", "newRatio", "onResize", "render", "ensureScalesHaveIDs", "scalesOptions", "axisOptions", "buildOrUpdateScales", "scaleOpts", "updated", "map", "isRadial", "dposition", "dtype", "scaleType", "scaleClass", "hasUpdated", "_updateMetasets", "numData", "numMeta", "_destroyDatasetMeta", "slice", "_removeUnreferencedMetasets", "_dataset", "buildOrUpdateControllers", "newControllers", "order", "visible", "isDatasetVisible", "updateIndex", "linkScales", "ControllerClass", "datasetElementType", "dataElementType", "_resetElements", "reset", "animsDisabled", "_updateScales", "_checkEventBindings", "_updateHiddenIndices", "buildOrUpdateElements", "getMaxOverflow", "_minPadding", "autoPadding", "_updateLayout", "_updateDatasets", "_eventHandler", "_updateHoverStyles", "existingEvents", "newEvents", "events", "setsEqual", "unbindEvents", "changes", "_getUniformDataChanges", "datasetCount", "makeSet", "changeSet", "noArea", "_idx", "_updateDataset", "_update", "layers", "_drawDatasets", "_getSortedDatasetMetas", "filterVisible", "_drawDataset", "_clip", "useClip", "disabled", "getElementsAtEventForMode", "hidden", "_parsed", "getVisibleDatasetCount", "setDatasetVisibility", "toggleDataVisibility", "getDataVisibility", "_updateVisibility", "dataIndex", "_resolveAnimations", "hide", "show", "_destroy", "_stop", "destroy", "toBase64Image", "toDataURL", "bindUserEvents", "bindResponsiveEvents", "listeners", "_add", "offsetX", "offsetY", "_remove", "detached", "updateHoverStyle", "prefix", "getActiveElements", "setActiveElements", "activeElements", "lastActive", "_elementsEqual", "isPluginEnabled", "pluginId", "replay", "hoverOptions", "hover", "deactivated", "activated", "eventFilter", "_handleEvent", "_getActiveElements", "_isClickEvent", "onHover", "onClick", "clipArc", "pixelMargin", "outerRadius", "innerRadius", "angleMargin", "arc", "closePath", "toRadiusCorners", "_readValueToProps", "parseBorderRadius", "angleDelta", "o", "borderRadius", "halfThickness", "innerLimit", "computeOuterLimit", "val", "outerArcLimit", "outerStart", "outerEnd", "innerStart", "innerEnd", "rThetaToXY", "r", "theta", "pathArc", "circular", "innerR", "spacingOffset", "alpha", "noSpacingInnerRadius", "noSpacingOuterRadius", "avNogSpacingRadius", "adjustedAngle", "beta", "PI", "angleOffset", "outerStartAdjustedRadius", "outerEndAdjustedRadius", "outerStartAdjustedAngle", "outerEndAdjustedAngle", "innerStartAdjustedRadius", "innerEndAdjustedRadius", "innerStartAdjustedAngle", "innerEndAdjustedAngle", "outerMidAdjustedAngle", "pCenter", "p4", "innerMidAdjustedAngle", "p8", "outerStartX", "outerStartY", "outerEndX", "outerEndY", "drawArc", "fullCircles", "circumference", "fill", "isNaN", "TAU", "borderWidth", "borderJoinStyle", "inner", "borderAlign", "lineJoin", "ArcElement", "borderColor", "_scriptable", "_indexable", "chartX", "chartY", "rAdjust", "_circumference", "nonZeroBetween", "betweenAngles", "withinRadius", "_isBetween", "halfAngle", "halfRadius", "translate", "fix", "radiusOffset", "setStyle", "lineCap", "borderCapStyle", "previous", "target", "getLineMethod", "stepped", "_steppedLineTo", "tension", "cubicInterpolationMode", "_bezierCurveTo", "pathVars", "points", "segment", "paramsStart", "paramsEnd", "segmentStart", "segmentEnd", "outside", "loop", "pathSegment", "line", "lineMethod", "prev", "fastPathSegment", "avgX", "countX", "prevX", "minY", "maxY", "lastY", "pointIndex", "drawX", "truncX", "_getSegmentMethod", "_decimated", "_loop", "_getInterpolationMethod", "_steppedInterpolation", "_bezierInterpolation", "_pointInLine", "strokePathWithCache", "path", "_path", "Path2D", "strokePathDirect", "segments", "segmentMethod", "usePath2D", "LineElement", "capBezierPoints", "spanGaps", "animated", "_chart", "_fullLoop", "_points", "_segments", "_pointsUpdated", "_datasetIndex", "updateControlPoints", "_updateBezierControlPoints", "_computeSegments", "interpolate", "_boundSegments", "_interpolate", "interpolated", "radius", "hitRadius", "PointElement", "parsed", "hoverBorderWidth", "hoverRadius", "pointStyle", "mouseX", "mouseY", "inXRange", "inYRange", "drawPoint", "getBarBounds", "bar", "base", "half", "skipOrLimit", "parseBorderWidth", "maxW", "maxH", "borderSkipped", "toTRBL", "l", "enableBorderRadius", "toTRBLCorners", "maxR", "enableBorder", "topLeft", "topRight", "bottomLeft", "bottomRight", "boundingRects", "bounds", "outer", "skipX", "skipY", "hasRadius", "addNormalRectPath", "rect", "inflateRect", "amount", "refRect", "BarElement", "inflateAmount", "addRectPath", "addRoundedRectPath", "_segments", "line", "target", "property", "segments", "points", "tpoints", "parts", "segment", "start", "end", "_findSegmentEnd", "bounds", "_getBounds", "loop", "push", "source", "targetSegments", "_boundSegments", "tgt", "subBounds", "fillSources", "_boundSegment", "fillSource", "_getEdge", "Math", "max", "min", "first", "last", "_normalizeAngle", "_pointsFromSegments", "boundary", "x", "y", "linePoints", "forEach", "point", "isNaN", "a", "b", "prop", "fn", "_createBoundaryLine", "_loop", "isArray", "length", "LineElement", "options", "tension", "_fullLoop", "_shouldApplyFill", "fill", "_resolveTarget", "sources", "index", "propagate", "visited", "indexOf", "isFinite", "visible", "_decodeFill", "count", "parseFillOption", "isObject", "value", "parseFloat", "floor", "decodeTargetIndex", "firstCh", "_getTargetPixel", "scale", "pixel", "bottom", "top", "getPixelForValue", "getBasePixel", "_getTargetValue", "startValue", "reverse", "getBaseValue", "fillOption", "valueOrDefault", "undefined", "backgroundColor", "_buildStackLine", "sourcePoints", "linesBelow", "getLinesBelow", "i", "j", "addPointsBelow", "below", "metas", "getMatchingVisibleMetas", "meta", "hidden", "unshift", "dataset", "sourcePoint", "postponed", "findPoint", "interpolate", "pointValue", "firstValue", "lastValue", "_isBetween", "simpleArc", "constructor", "opts", "radius", "pathSegment", "ctx", "TAU", "arc", "angle", "cos", "sin", "_getTarget", "chart", "getLineByIndex", "computeBoundary", "getDatasetMeta", "isDatasetVisible", "getPointPositionForValue", "computeCircularBoundary", "computeLinearBoundary", "horizontal", "isHorizontal", "getLabels", "grid", "circular", "center", "getDistanceFromCenterForValue", "_drawfill", "area", "axis", "lineOpts", "color", "above", "clipArea", "doFill", "unclipArea", "cfg", "save", "clipVertical", "restore", "clipY", "lineLoop", "beginPath", "firstPoint", "lastPoint", "moveTo", "lineTo", "move", "closePath", "clip", "src", "style", "notShape", "fillStyle", "clipBounds", "interpolatedLineTo", "targetLoop", "chartArea", "rect", "interpolatedPoint", "id", "afterDatasetsUpdate", "_args", "data", "datasets", "controller", "indexAxis", "vScale", "$filler", "beforeDraw", "draw", "drawTime", "metasets", "getSortedVisibleDatasetMetas", "updateControlPoints", "beforeDatasetsDraw", "beforeDatasetDraw", "args", "defaults", "getBoxSize", "labelOpts", "fontSize", "boxHeight", "boxWidth", "usePointStyle", "pointStyleWidth", "itemHeight", "itemsEqual", "datasetIndex", "Legend", "Element", "config", "_added", "legendHitBoxes", "_hoveredItem", "doughnutMode", "legendItems", "columnSizes", "lineWidths", "maxHeight", "maxWidth", "left", "right", "height", "width", "_margins", "position", "weight", "fullSize", "update", "margins", "setDimensions", "buildLabels", "fit", "labels", "call", "generateLabels", "filter", "item", "sort", "display", "labelFont", "toFont", "font", "size", "titleHeight", "_computeTitleHeight", "string", "_fitRows", "_fitCols", "padding", "hitboxes", "lineHeight", "totalHeight", "textAlign", "textBaseline", "row", "legendItem", "itemWidth", "measureText", "text", "_itemHeight", "heightLimit", "totalWidth", "currentColWidth", "currentColHeight", "col", "calculateItemSize", "adjustHitBoxes", "align", "rtl", "rtlHelper", "getRtlAdapter", "_alignStartEnd", "hitbox", "leftForLtr", "_draw", "defaultColor", "halfFontSize", "cursor", "drawTitle", "lineWidth", "drawLegendBox", "lineCap", "lineDashOffset", "lineJoin", "strokeStyle", "setLineDash", "lineDash", "drawOptions", "SQRT2", "pointStyle", "rotation", "borderWidth", "centerX", "xPlus", "centerY", "drawPointLegend", "yBoxTop", "xBoxLeft", "borderRadius", "toTRBLCorners", "Object", "values", "some", "v", "addRoundedRectPath", "w", "h", "stroke", "fillText", "renderText", "strikethrough", "overrideTextDirection", "textDirection", "fontColor", "textWidth", "setWidth", "realX", "_textX", "fontLineHeight", "calculateLegendItemHeight", "restoreTextDirection", "titleOpts", "title", "titleFont", "titlePadding", "toPadding", "topPaddingPlusHalfFontSize", "reduce", "acc", "_toLeftRightCenter", "_getLegendItemAt", "hitBox", "lh", "handleEvent", "e", "isListened", "type", "hoveredItem", "previous", "sameItem", "onLeave", "onHover", "onClick", "calculateItemWidth", "calculateItemHeight", "legendItemText", "labelHeight", "plugin_legend", "_element", "legend", "layouts", "configure", "addBox", "stop", "removeBox", "beforeUpdate", "afterUpdate", "afterEvent", "replay", "event", "ci", "hide", "show", "useBorderRadius", "_getSortedDatasetMetas", "map", "getStyle", "label", "borderCapStyle", "borderDash", "borderDashOffset", "borderJoinStyle", "borderColor", "descriptors", "_scriptable", "name", "startsWith", "includes", "Title", "_padding", "lineCount", "textSize", "pos", "_drawArgs", "offset", "titleX", "titleY", "PI", "fontOpts", "translation", "createTitle", "titleBlock", "plugin_title", "defaultRoutes", "_indexable", "positioners", "average", "items", "length", "i", "len", "xSet", "Set", "y", "count", "el", "element", "hasValue", "pos", "tooltipPosition", "add", "x", "size", "reduce", "a", "b", "nearest", "eventPosition", "minDistance", "Number", "POSITIVE_INFINITY", "nearestElement", "center", "getCenterPoint", "d", "distanceBetweenPoints", "tp", "pushOrConcat", "base", "toPush", "isArray", "Array", "prototype", "push", "apply", "splitNewlines", "str", "String", "indexOf", "split", "createTooltipItem", "chart", "item", "datasetIndex", "index", "controller", "getDatasetMeta", "label", "value", "getLabelAndValue", "parsed", "getParsed", "raw", "data", "datasets", "formattedValue", "dataset", "getDataset", "dataIndex", "getTooltipSize", "tooltip", "options", "ctx", "body", "footer", "title", "boxWidth", "boxHeight", "bodyFont", "toFont", "titleFont", "footerFont", "titleLineCount", "footerLineCount", "bodyLineItemCount", "padding", "toPadding", "height", "width", "combinedBodyLength", "bodyItem", "before", "lines", "after", "beforeBody", "afterBody", "lineHeight", "titleSpacing", "titleMarginBottom", "bodyLineHeight", "displayColors", "Math", "max", "bodySpacing", "footerMarginTop", "footerSpacing", "widthPadding", "maxLineWidth", "line", "measureText", "save", "font", "string", "each", "concat", "boxPadding", "restore", "determineYAlign", "doesNotFitWithAlign", "xAlign", "caret", "caretSize", "caretPadding", "determineXAlign", "yAlign", "chartWidth", "chartArea", "left", "right", "determineAlignment", "alignX", "alignY", "paddingAndSize", "getBackgroundPoint", "alignment", "cornerRadius", "topLeft", "topRight", "bottomLeft", "bottomRight", "toTRBLCorners", "_limitValue", "getAlignedX", "align", "getBeforeAfterBodyLines", "callback", "createTooltipContext", "parent", "tooltipItems", "createContext", "type", "overrideCallbacks", "callbacks", "context", "override", "defaultCallbacks", "beforeTitle", "noop", "labels", "labelCount", "mode", "afterTitle", "beforeLabel", "tooltipItem", "isNullOrUndef", "labelColor", "getStyle", "borderColor", "backgroundColor", "borderWidth", "borderDash", "borderDashOffset", "borderRadius", "labelTextColor", "bodyColor", "labelPointStyle", "pointStyle", "rotation", "afterLabel", "beforeFooter", "afterFooter", "invokeCallbackWithFallback", "name", "arg", "result", "call", "Tooltip", "Element", "constructor", "config", "opacity", "_active", "_eventPosition", "undefined", "_size", "_cachedAnimations", "_tooltipItems", "$animations", "$context", "dataPoints", "caretX", "caretY", "labelColors", "labelPointStyles", "labelTextColors", "initialize", "_resolveAnimations", "cached", "setContext", "getContext", "opts", "enabled", "animation", "animations", "Animations", "_cacheable", "Object", "freeze", "getTitle", "getBeforeBody", "getBody", "bodyItems", "scoped", "getAfterBody", "getFooter", "_createItems", "active", "filter", "array", "itemSort", "sort", "update", "changed", "replay", "properties", "position", "positionAndSize", "assign", "backgroundPoint", "external", "drawCaret", "tooltipPoint", "caretPosition", "getCaretPosition", "lineTo", "x1", "y1", "x2", "y2", "x3", "y3", "ptX", "ptY", "drawTitle", "pt", "rtlHelper", "getRtlAdapter", "rtl", "titleAlign", "textAlign", "textBaseline", "fillStyle", "titleColor", "fillText", "_drawColorBox", "colorX", "rtlColorX", "yOffSet", "colorY", "usePointStyle", "drawOptions", "radius", "min", "centerX", "leftForLtr", "centerY", "strokeStyle", "multiKeyBackground", "drawPoint", "lineWidth", "isObject", "values", "setLineDash", "lineDashOffset", "outerX", "innerX", "xPlus", "some", "v", "beginPath", "addRoundedRectPath", "w", "h", "fill", "stroke", "fillRect", "strokeRect", "drawBody", "bodyAlign", "xLinePadding", "fillLineOfText", "bodyAlignForCalculation", "textColor", "j", "ilen", "jlen", "drawFooter", "footerAlign", "footerColor", "drawBackground", "tooltipSize", "moveTo", "quadraticCurveTo", "closePath", "_updateAnimationTarget", "anims", "animX", "animY", "point", "_to", "_willRender", "draw", "abs", "hasTooltipContent", "globalAlpha", "overrideTextDirection", "textDirection", "top", "restoreTextDirection", "getActiveElements", "setActiveElements", "activeElements", "lastActive", "map", "meta", "Error", "_elementsEqual", "positionChanged", "_positionChanged", "_ignoreReplayEvents", "handleEvent", "e", "inChartArea", "_getActiveElements", "getElementsAtEventForMode", "reverse", "plugin_tooltip", "id", "_element", "afterInit", "_args", "beforeUpdate", "reset", "afterDraw", "args", "notifyPlugins", "cancelable", "afterEvent", "useFinalPosition", "event", "defaults", "weight", "duration", "easing", "numbers", "defaultRoutes", "descriptors", "_scriptable", "_indexable", "_fallback", "additionalOptionScopes", "addIfString", "labels", "raw", "index", "addedLabels", "push", "unshift", "label", "isNaN", "findOrAddLabel", "first", "indexOf", "last", "lastIndexOf", "validIndex", "max", "_limitValue", "Math", "round", "_getLabelForValue", "value", "getLabels", "length", "CategoryScale", "Scale", "id", "defaults", "ticks", "callback", "constructor", "cfg", "_startValue", "undefined", "_valueRange", "_addedLabels", "init", "scaleOptions", "added", "splice", "parse", "isNullOrUndef", "isFinite", "valueOrDefault", "determineDataLimits", "minDefined", "maxDefined", "getUserBounds", "min", "getMinMax", "options", "bounds", "buildTicks", "offset", "slice", "getLabelForValue", "call", "configure", "isHorizontal", "_reversePixels", "getPixelForValue", "NaN", "getPixelForDecimal", "getPixelForTick", "getValueForPixel", "pixel", "getDecimalForPixel", "getBasePixel", "bottom", "generateTicks", "generationOptions", "dataRange", "step", "precision", "count", "maxTicks", "maxDigits", "includeBounds", "unit", "maxSpaces", "rmin", "rmax", "countDefined", "minSpacing", "spacing", "niceNum", "factor", "niceMin", "niceMax", "numSpaces", "MIN_SPACING", "ceil", "floor", "pow", "almostWhole", "almostEquals", "decimalPlaces", "_decimalPlaces", "j", "relativeLabelSize", "tickValue", "horizontal", "minRotation", "rad", "toRadians", "ratio", "sin", "cos", "LinearScaleBase", "start", "end", "_endValue", "Number", "handleTickRangeOptions", "beginAtZero", "setMin", "v", "setMax", "minSign", "sign", "maxSign", "abs", "getTickLimit", "tickOpts", "maxTicksLimit", "stepSize", "console", "warn", "computeTickLimit", "POSITIVE_INFINITY", "opts", "numericGeneratorOptions", "_maxDigits", "_range", "_setMinAndMaxByKey", "reverse", "formatNumber", "chart", "locale", "format", "LinearScale", "Ticks", "formatters", "numeric", "width", "height", "tickFont", "_resolveTickFontOptions", "lineHeight", "log10Floor", "log10", "changeExponent", "m", "isMajor", "tickVal", "steps", "rangeExp", "rangeStep", "startExp", "range", "finiteOrDefault", "minExp", "exp", "base", "significand", "major", "lastTick", "LogarithmicScale", "logarithmic", "enabled", "prototype", "apply", "_zero", "_suggestedMin", "_userMin", "_userMax", "decimal", "getTickBackdropHeight", "display", "padding", "toPadding", "backdropPadding", "font", "size", "measureLabelSize", "ctx", "isArray", "w", "_longestText", "string", "h", "determineLimits", "angle", "pos", "fitWithPointLabels", "scale", "orig", "l", "left", "_padding", "r", "right", "t", "top", "b", "limits", "Object", "assign", "labelSizes", "valueCount", "_pointLabels", "pointLabelOpts", "pointLabels", "additionalAngle", "centerPointLabels", "PI", "i", "setContext", "getPointLabelContext", "pointPosition", "getPointPosition", "drawingArea", "plFont", "toFont", "textSize", "angleRadians", "_normalizeAngle", "getIndexAngle", "toDegrees", "hLimits", "x", "vLimits", "y", "updateLimits", "setCenterPoint", "_pointLabelItems", "buildPointLabelItems", "createPointLabelItem", "itemOpts", "outerDistance", "extra", "pointLabelPosition", "HALF_PI", "yForAngle", "textAlign", "getTextAlignForAngle", "leftForTextAlign", "visible", "isNotOverlapped", "item", "area", "_isPointInArea", "items", "align", "drawPointLabelBox", "backdropColor", "borderRadius", "toTRBLCorners", "fillStyle", "backdropLeft", "backdropTop", "backdropWidth", "backdropHeight", "values", "some", "beginPath", "addRoundedRectPath", "radius", "fill", "fillRect", "drawPointLabels", "labelCount", "optsAtIndex", "renderText", "color", "textBaseline", "pathRadiusLine", "circular", "arc", "xCenter", "yCenter", "TAU", "moveTo", "lineTo", "drawRadiusLine", "gridLineOpts", "borderOpts", "lineWidth", "save", "strokeStyle", "setLineDash", "dash", "lineDashOffset", "dashOffset", "closePath", "stroke", "restore", "createPointLabelContext", "parent", "createContext", "type", "RadialLinearScale", "animate", "position", "angleLines", "borderDash", "borderDashOffset", "grid", "startAngle", "showLabelBackdrop", "defaultRoutes", "descriptors", "_fallback", "setDimensions", "maxWidth", "maxHeight", "generateTickLabels", "map", "callCallback", "filter", "getDataVisibility", "fit", "leftMovement", "rightMovement", "topMovement", "bottomMovement", "angleMultiplier", "getDistanceFromCenterForValue", "scalingFactor", "getValueForDistanceFromCenter", "distance", "scaledDistance", "pointLabel", "getContext", "distanceFromCenter", "getPointPositionForValue", "getBasePosition", "getBaseValue", "getPointLabelPosition", "drawBackground", "backgroundColor", "drawGrid", "border", "forEach", "tick", "context", "optsAtIndexBorder", "drawBorder", "drawLabels", "translate", "rotate", "measureText", "strokeColor", "textStrokeColor", "strokeWidth", "textStrokeWidth", "drawTitle", "INTERVALS", "millisecond", "common", "second", "minute", "hour", "day", "week", "month", "quarter", "year", "UNITS", "keys", "sorter", "a", "input", "adapter", "_adapter", "parser", "isoWeekday", "_parseOpts", "isNumber", "startOf", "determineUnitForAutoTicks", "minUnit", "capacity", "ilen", "interval", "MAX_SAFE_INTEGER", "determineUnitForFormatting", "numTicks", "diff", "determineMajorUnit", "addTick", "time", "timestamps", "lo", "hi", "_lookup", "timestamp", "setMajorTicks", "majorUnit", "add", "ticksFromTimestamps", "TimeScale", "adapters", "displayFormats", "source", "props", "_cache", "data", "all", "_unit", "_majorUnit", "_offsets", "_normalized", "scaleOpts", "_date", "date", "mergeIf", "formats", "normalized", "beforeLayout", "_applyBounds", "_getLabelBounds", "Date", "now", "endOf", "arr", "getLabelTimestamps", "NEGATIVE_INFINITY", "timeOpts", "_generate", "_filterBetween", "autoSkip", "_getLabelCapacity", "initOffsets", "afterAutoSkip", "offsetAfterAutoskip", "getDecimalForValue", "limit", "minor", "weekday", "hasWeekday", "Error", "getDataTimestamps", "sort", "tooltipFormat", "datetime", "fmt", "_tickFormatFunction", "formatter", "minorFormat", "majorFormat", "offsets", "_getLabelSize", "ticksOpts", "tickLabelWidth", "maxRotation", "cosRotation", "sinRotation", "tickFontSize", "exampleTime", "exampleLabel", "metas", "getMatchingVisibleMetas", "controller", "getAllParsedValues", "concat", "normalize", "_arrayUnique", "interpolate", "table", "val", "prevSource", "nextSource", "prevTarget", "nextTarget", "_lookupByKey", "span", "TimeSeriesScale", "_table", "_minPos", "_tableRange", "_getTimestampsForTable", "buildLookupTable", "prev", "curr", "next", "includes", "chart_default", "chart", "Chart", "CategoryScale", "LinearScale", "RadialLinearScale", "PointElement", "LineElement", "BarElement", "ArcElement", "plugin_title", "plugin_tooltip", "plugin_legend", "ChartComponent", "props", "height", "width", "type", "options", "plugins", "data", "redraw", "updateMode", "uuid", "canvasRef", "chartRef", "destroyChart", "renderChart", "deepEqual", "React", "chart_default", "createTypedChart", "controller", "Line", "LineController", "Bar", "BarController", "Pie", "PieController", "Scatter", "ScatterController", "Radar", "RadarController", "PolarArea", "PolarAreaController", "radarOptions", "radarPlugins", "index", "colorOffset", "getColor", "COLOR_PICKER_COLOR_LIST", "chartType", "labels", "datasets", "title", "commonData", "v", "i", "extra", "node", "c", "getThemeColor", "t", "parseNumber", "list", "_", "Chart_default", "FloatElement", "props", "top", "left", "active", "width", "height", "type", "imageAngle", "resetResize", "pointerDown", "resizeDown", "contextMenuPosition", "setContextMenuPosition", "handleContextMenu", "event", "hideContextMenu", "children", "React", "FloatElement_default", "Chart_default", "classnames", "Icon", "FloatElementContextMenu", "FloatElementContainer", "controller", "floatElementList", "activeUuid", "state", "INITIAL_STATE", "position", "setPosition", "toggleEvents", "updateSize", "e", "deltaX", "deltaY", "old", "p", "top", "left", "width", "height", "roundPosition", "handlePointerUp", "event", "uuid", "pos", "rect", "canvasSizeSet", "newRange", "getHitInfo", "handlePointerMove", "imageAngle", "newTop", "newLeft", "toggleEvent", "handleResizePointerDown", "resetResize", "size", "handleMaskPointerDown", "coreStore", "React", "classnames", "FloatElement_default", "v", "isActive", "props", "FloatElement", "DOUBLE_CLICK_TIME", "CanvasContainer", "props", "controller", "floatElementList", "floatElementStore", "activeUuid", "coreStore", "state", "menuPosition", "setMenuPosition", "ref", "fn", "initCanvas", "handleContextMenu", "event", "hideContextMenu", "handlePointerMove", "headerSize", "headerSizeSet", "rect", "canvasSizeSet", "clientX", "clientY", "x", "y", "position", "getHitInfo", "range", "isMerged", "activeCell", "rowCount", "colCount", "handlePointerDown", "canvasRect", "timeStamp", "isSameRange", "checkFocus", "setActiveCellValue", "React", "canvas_default", "ScrollBar", "BottomBar", "FloatElement_default", "ContextMenu"]
}
