{
  "version": 3,
  "sources": ["../src/containers/SheetBar/index.tsx", "../src/containers/SheetBar/SheetBarContextMenu.tsx", "../src/containers/SheetBar/index.module.css"],
  "sourcesContent": ["import React, {\n  FunctionComponent,\n  useSyncExternalStore,\n  useState,\n  useMemo,\n  memo,\n  useCallback,\n} from 'react';\nimport {\n  classnames,\n  DEFAULT_POSITION,\n  MAX_NAME_LENGTH,\n  SHEET_ITEM_TEST_ID_PREFIX,\n} from '@/util';\nimport { Button, Icon, SelectPopup } from '../../components';\nimport { SheetBarContextMenu } from './SheetBarContextMenu';\nimport styles from './index.module.css';\nimport { IController } from '@/types';\nimport { sheetListStore, coreStore } from '@/containers/store';\n\ninterface Props {\n  controller: IController;\n}\n\nexport const SheetBarContainer: FunctionComponent<Props> = memo(\n  ({ controller }) => {\n    const sheetList = useSyncExternalStore(\n      sheetListStore.subscribe,\n      sheetListStore.getSnapshot,\n    );\n    const realSheetList = useMemo(() => {\n      return sheetList.filter((v) => !v.isHide);\n    }, [sheetList]);\n    const popupList = useMemo(() => {\n      return sheetList\n        .filter((v) => !v.isHide)\n        .map((v) => ({ value: v.sheetId, label: v.name, disabled: false }));\n    }, [sheetList]);\n\n    const [popupActive, setPopupActive] = useState(false);\n    const { currentSheetId } = useSyncExternalStore(\n      coreStore.subscribe,\n      coreStore.getSnapshot,\n    );\n    const [menuPosition, setMenuPosition] = useState(DEFAULT_POSITION);\n    const [editing, setEditing] = useState(false);\n    const handleContextMenu = useCallback(\n      (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        const pos = event.clientX - 30;\n        setMenuPosition(pos);\n        return false;\n      },\n      [],\n    );\n    const handleKeyDown = useCallback(\n      (event: React.KeyboardEvent<HTMLInputElement>) => {\n        event.stopPropagation();\n        if (event.key === 'Enter') {\n          const t = event.currentTarget.value;\n          setEditing(false);\n          if (!t) {\n            return;\n          }\n          controller.renameSheet(t);\n        }\n      },\n      [],\n    );\n    const handleChange = useCallback((value: string) => {\n      setPopupActive(false);\n      controller.setCurrentSheetId(value);\n    }, []);\n    const addSheet = useCallback(() => {\n      controller.addSheet();\n    }, []);\n    const hideMenu = useCallback(() => {\n      setMenuPosition(DEFAULT_POSITION);\n    }, []);\n    const editSheetName = useCallback(() => {\n      setEditing(true);\n    }, []);\n    const togglePopup = useCallback(() => {\n      setPopupActive((v) => !v);\n    }, []);\n    return (\n      <div className={styles['sheet-bar-wrapper']} data-testid=\"sheet-bar\">\n        <div>\n          <Button\n            onClick={togglePopup}\n            className={styles['menu-button']}\n            testId=\"sheet-bar-select-sheet\"\n          >\n            <Icon name=\"menu\" />\n          </Button>\n          {popupActive && (\n            <SelectPopup\n              data={popupList}\n              onChange={handleChange}\n              active\n              position=\"top\"\n              value={currentSheetId}\n              testId=\"sheet-bar-select-sheet-popup\"\n              className={styles['select-popup']}\n            />\n          )}\n        </div>\n        <div className={styles['sheet-bar-list']} data-testid=\"sheet-bar-list\">\n          {realSheetList.map((item) => {\n            const isActive = currentSheetId === item.sheetId;\n            const showInput = isActive && editing;\n            const tabColor = item.tabColor || '';\n            const cls = classnames(styles['sheet-bar-item'], {\n              [styles['active']]: isActive,\n            });\n            let style = undefined;\n            if (!isActive && !editing && tabColor) {\n              style = { backgroundColor: tabColor };\n            }\n            const testId = isActive ? 'sheet-bar-active-item' : undefined;\n            return (\n              <div\n                data-testid={`${SHEET_ITEM_TEST_ID_PREFIX}${item.sheetId}`}\n                key={item.sheetId}\n                className={cls}\n                style={style}\n                onContextMenu={handleContextMenu}\n                onClick={() => {\n                  if (currentSheetId === item.sheetId) {\n                    return;\n                  }\n                  setEditing(false);\n                  controller.setCurrentSheetId(item.sheetId);\n                }}\n              >\n                {showInput ? (\n                  <input\n                    className={styles['sheet-bar-input']}\n                    defaultValue={item.name}\n                    onKeyDown={handleKeyDown}\n                    type=\"text\"\n                    spellCheck\n                    maxLength={MAX_NAME_LENGTH}\n                    data-testid=\"sheet-bar-rename-input\"\n                  />\n                ) : (\n                  <React.Fragment>\n                    {isActive && tabColor && (\n                      <span\n                        className={styles['sheet-bar-item-color']}\n                        style={{ backgroundColor: tabColor }}\n                        data-testid=\"sheet-bar-tab-color-item\"\n                      />\n                    )}\n                    <span\n                      className={styles['sheet-bar-item-text']}\n                      data-testid={testId}\n                    >\n                      {item.name}\n                    </span>\n                  </React.Fragment>\n                )}\n              </div>\n            );\n          })}\n        </div>\n        <Button\n          onClick={addSheet}\n          type=\"circle\"\n          className={styles['add-button']}\n          testId=\"sheet-bar-add-sheet\"\n        >\n          <Icon name=\"plus\" />\n        </Button>\n        {menuPosition >= 0 && (\n          <SheetBarContextMenu\n            controller={controller}\n            position={menuPosition}\n            sheetList={sheetList}\n            currentSheetId={currentSheetId}\n            hideMenu={hideMenu}\n            editSheetName={editSheetName}\n          />\n        )}\n      </div>\n    );\n  },\n);\nSheetBarContainer.displayName = 'SheetBarContainer';\n\nexport default SheetBarContainer\n", "import React, { useMemo, memo } from 'react';\nimport { Button, Select, info, ColorPicker, toast } from '../../components';\nimport { IController, OptionItem } from '@/types';\nimport styles from './index.module.css';\nimport { useClickOutside } from '../hooks';\nimport { SheetItem } from '../store';\nimport { $ } from '@/i18n';\n\ninterface Props {\n  controller: IController;\n  position: number;\n  sheetList: SheetItem[];\n  currentSheetId: string;\n  hideMenu: () => void;\n  editSheetName: () => void;\n}\n\nexport const SheetBarContextMenu: React.FunctionComponent<Props> = memo(\n  ({\n    controller,\n    position,\n    sheetList,\n    currentSheetId,\n    hideMenu,\n    editSheetName,\n  }) => {\n    const ref = useClickOutside(hideMenu);\n    const tabColor = useMemo(() => {\n      return (\n        sheetList.find((v) => v.sheetId === currentSheetId)?.tabColor || ''\n      );\n    }, [sheetList, currentSheetId]);\n    const hideSheetList: OptionItem[] = useMemo(() => {\n      return sheetList\n        .filter((v) => v.isHide)\n        .map((item) => ({\n          value: String(item.sheetId),\n          label: item.name,\n          disabled: false,\n        }));\n    }, [sheetList]);\n    const handleUnhide = () => {\n      let value = String(hideSheetList[0]?.value) || '';\n      info({\n        visible: true,\n        title: $('unhide-sheet'),\n        testId: 'sheet-bar-context-menu-unhide-dialog',\n        children: (\n          <Select\n            data={hideSheetList}\n            onChange={(v) => {\n              value = String(v);\n            }}\n            className={styles['unhide-select']}\n            defaultValue={value}\n            testId=\"sheet-bar-context-menu-unhide-dialog-select\"\n          />\n        ),\n        onCancel: hideMenu,\n        onOk() {\n          if (!value) {\n            return toast.error($('sheet-id-can-not-be-empty'));\n          }\n          controller.unhideSheet(value);\n          hideMenu();\n        },\n      });\n    };\n    const handleTabColorChange = (color: string) => {\n      controller.updateSheetInfo({ tabColor: color });\n      hideMenu();\n    };\n    return (\n      <div\n        className={styles['sheet-bar-context-menu']}\n        style={{ left: position }}\n        ref={ref}\n        data-testid=\"sheet-bar-context-menu\"\n      >\n        <Button\n          testId=\"sheet-bar-context-menu-insert\"\n          onClick={() => {\n            hideMenu();\n            controller.addSheet();\n          }}\n        >\n          {$('insert')}\n        </Button>\n        <Button\n          testId=\"sheet-bar-context-menu-delete\"\n          onClick={() => {\n            hideMenu();\n            controller.deleteSheet();\n          }}\n        >\n          {$('delete')}\n        </Button>\n        <Button\n          testId=\"sheet-bar-context-menu-rename\"\n          onClick={() => {\n            hideMenu();\n            editSheetName();\n          }}\n        >\n          {$('rename')}\n        </Button>\n        <Button\n          testId=\"sheet-bar-context-menu-hide\"\n          onClick={() => {\n            hideMenu();\n            controller.hideSheet();\n          }}\n        >\n          {$('hide')}\n        </Button>\n        <Button\n          testId=\"sheet-bar-context-menu-unhide\"\n          className={styles['sheet-bar-unhide']}\n          disabled={hideSheetList.length === 0}\n          onClick={handleUnhide}\n        >\n          {$('unhide')}\n        </Button>\n        <ColorPicker\n          color={tabColor}\n          onChange={handleTabColorChange}\n          position=\"top\"\n          testId=\"sheet-bar-context-menu-tab-color\"\n        >\n          <Button\n            className={styles['sheet-bar-unhide']}\n            testId=\"sheet-bar-context-menu-tab-color\"\n          >\n            {$('tab-color')}\n          </Button>\n        </ColorPicker>\n      </div>\n    );\n  },\n);\nSheetBarContextMenu.displayName = 'SheetBarContextMenu';\n", ".sheet-bar-wrapper {\n  width: 100%;\n  box-sizing: border-box;\n  padding: 0 var(--mediumPadding);\n  display: flex;\n  align-items: center;\n  position: relative;\n  background-color: var(--backgroundColor);\n}\n\n.sheet-bar-list {\n  overflow-y: hidden;\n  overflow-x: auto;\n  line-height: 30px;\n  flex: 1;\n  display: flex;\n  flex-wrap: nowrap;\n  border-left: 1px solid var(--borderColor);\n  box-shadow: 0 2px 10px 0 var(--scrollbarHoveColor);\n}\n\n.sheet-bar-item {\n  padding: 4px 10px;\n  border-right: 1px solid var(--borderColor);\n  user-select: none;\n  position: relative;\n  display: inline-block;\n}\n\n.sheet-bar-item.active {\n  background-color: var(--white);\n  color: var(--primaryColor);\n}\n\n.sheet-bar-item-text {\n  white-space: nowrap;\n}\n\n.sheet-bar-item-color {\n  width: 100%;\n  height: 3px;\n  position: absolute;\n  bottom: 2px;\n  left: 0;\n  right: 0;\n}\n\n.sheet-bar-context-menu {\n  position: fixed;\n  left: 0;\n  bottom: 32px;\n  background-color: var(--white);\n  border-radius: var(--borderRadius);\n  width: 100px;\n  z-index: var(--lowZIndex);\n}\n\n.sheet-bar-context-menu > button {\n  width: 100%;\n  background-color: var(--white);\n}\n\n.sheet-bar-input {\n  width: 100%;\n  height: 100%;\n  min-width: 100px;\n  overflow: hidden;\n  background-color: var(--white);\n  outline: none;\n  font: inherit;\n  border: none;\n  border-radius: unset;\n}\n\n.show-block {\n  display: inline-block;\n}\n\n.sheet-bar-unhide {\n  width: 100%;\n  background-color: var(--white);\n}\n.add-button {\n  margin-left: var(--mediumPadding);\n  background-color: var(--buttonActiveColor);\n  display: flex;\n  align-items: center;\n  justify-self: center;\n}\n.menu-button {\n  margin-right: var(--mediumPadding);\n  background-color: var(--buttonActiveColor);\n  display: flex;\n  align-items: center;\n  justify-self: center;\n}\n\n.sheet-bar-wrapper .select-popup {\n  left: var(--largePadding);\n  width: 200px;\n}\n\n.unhide-select {\n  width: 300px;\n}\n"],
  "mappings": "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",
  "names": ["import_react", "import_react", "SheetBar_default", "sheet-bar-wrapper", "sheet-bar-list", "sheet-bar-item", "active", "sheet-bar-item-text", "sheet-bar-item-color", "sheet-bar-context-menu", "sheet-bar-input", "show-block", "sheet-bar-unhide", "add-button", "menu-button", "select-popup", "unhide-select", "SheetBarContextMenu", "controller", "position", "sheetList", "currentSheetId", "hideMenu", "editSheetName", "ref", "useClickOutside", "tabColor", "v", "hideSheetList", "item", "handleUnhide", "value", "info", "$", "React", "Select", "SheetBar_default", "toast", "handleTabColorChange", "color", "Button", "ColorPicker", "SheetBarContainer", "controller", "sheetList", "sheetListStore", "realSheetList", "v", "popupList", "popupActive", "setPopupActive", "currentSheetId", "coreStore", "menuPosition", "setMenuPosition", "editing", "setEditing", "handleContextMenu", "event", "pos", "handleKeyDown", "t", "handleChange", "value", "addSheet", "hideMenu", "editSheetName", "togglePopup", "React", "SheetBar_default", "Button", "Icon", "SelectPopup", "item", "isActive", "showInput", "tabColor", "cls", "classnames", "style", "testId", "SHEET_ITEM_TEST_ID_PREFIX", "SheetBarContextMenu"]
}
