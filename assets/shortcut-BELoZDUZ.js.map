{"version":3,"file":"shortcut-BELoZDUZ.js","sources":["../../src/containers/store/activeCell.ts","../../src/containers/store/defineName.ts","../../src/canvas/shortcut.ts"],"sourcesContent":["import type { CanvasOverlayPosition } from '@/types';\nimport { DEFAULT_POSITION } from '@/util';\nimport { BaseStore } from './base';\n\nexport type CellStoreType = CanvasOverlayPosition & {\n  defineName: string;\n  value: string; // real value\n  displayValue: string; // display value\n  row: number;\n  col: number;\n  rowCount: number;\n  colCount: number;\n};\n\nconst cellData: CellStoreType = {\n  value: '',\n  displayValue: '',\n  row: 0,\n  col: 0,\n  left: DEFAULT_POSITION,\n  top: DEFAULT_POSITION,\n  width: 0,\n  height: 0,\n  defineName: '',\n  rowCount: 1,\n  colCount: 1,\n};\n\nexport const activeCellStore = new BaseStore<CellStoreType>(cellData);\n","import { BaseStore } from './base';\n\nexport const defineNameStore = new BaseStore<string[]>([]);\n","import {\n  KeyboardEventItem,\n  IController,\n  EUnderLine,\n  EditorStatus,\n  IRange,\n  ScrollValue,\n} from '@/types';\nimport {\n  isMac,\n  SHEET_ITEM_TEST_ID_PREFIX,\n  sheetViewSizeSet,\n  headerSizeSet,\n  sizeConfig,\n  canvasSizeSet,\n  FORMULA_EDITOR_ROLE,\n  MERGE_CELL_LINE_BREAK,\n  LINE_BREAK,\n  isMergeContent,\n} from '@/util';\nimport { coreStore } from '@/containers/store';\nexport const BOTTOM_BUFF = 200;\n\nexport function handleTabClick(controller: IController) {\n  controller.batchUpdate(() => {\n    checkActiveElement(controller);\n    controller.setNextActiveCell('right');\n    recalculateScroll(controller);\n    return true;\n  });\n}\n\nexport function handleEnterClick(controller: IController) {\n  controller.batchUpdate(() => {\n    checkActiveElement(controller);\n    controller.setNextActiveCell('down');\n    recalculateScroll(controller);\n    return true;\n  });\n}\n\nexport function computeScrollRowAndCol(\n  controller: IController,\n  left: number,\n  top: number,\n) {\n  const oldScroll = controller.getScroll();\n  let { row, col } = oldScroll;\n  if (oldScroll.top !== top) {\n    row = 0;\n    let t = top;\n    while (t > 0) {\n      const a = controller.getRowHeight(row).len;\n      if (a > t) {\n        break;\n      }\n      t -= a;\n      row++;\n    }\n  }\n  if (oldScroll.left !== left) {\n    col = 0;\n    let t = left;\n    while (t > 0) {\n      const a = controller.getColWidth(col).len;\n      if (a > t) {\n        break;\n      }\n      t -= a;\n      col++;\n    }\n  }\n\n  return {\n    row,\n    col,\n  };\n}\n\nexport function scrollSheetToView(sheetId: string) {\n  const selector = `div[data-testid=\"${SHEET_ITEM_TEST_ID_PREFIX}${sheetId}\"]`;\n  const dom = document.querySelector(selector);\n  if (dom && typeof dom.scrollIntoView === 'function') {\n    dom.scrollIntoView();\n  }\n}\n\nexport function scrollToView(controller: IController, range: IRange) {\n  controller.batchUpdate(() => {\n    const sheetId = range.sheetId || controller.getCurrentSheetId();\n    if (sheetId !== controller.getCurrentSheetId()) {\n      controller.setCurrentSheetId(sheetId);\n    }\n    const sheetInfo = controller.getSheetInfo(sheetId);\n    if (!sheetInfo) {\n      return true;\n    }\n    if (\n      range.row < 0 ||\n      range.col < 0 ||\n      range.row >= sheetInfo.rowCount ||\n      range.col >= sheetInfo.colCount\n    ) {\n      return true;\n    }\n    const scroll = controller.getScroll(sheetId);\n    const old = controller.computeCellPosition({\n      row: scroll.row,\n      col: scroll.col,\n      colCount: 1,\n      rowCount: 1,\n      sheetId: sheetId,\n    });\n    const size = canvasSizeSet.get();\n    const headerSize = headerSizeSet.get();\n    const { top, left } = controller.computeCellPosition(range);\n    const minTop = old.top;\n    const minLeft = old.left;\n    const maxTop = old.top + size.height - headerSize.height;\n    const maxLeft = old.left + size.width - headerSize.width;\n    if (top >= minTop && top < maxTop && left >= minLeft && left <= maxLeft) {\n      controller.setActiveRange(range);\n      return true;\n    }\n    const oldPosition = controller.computeCellPosition(\n      controller.getActiveRange().range,\n    );\n\n    scrollBar(controller, left - oldPosition.left, top - oldPosition.top);\n    controller.setActiveRange(range);\n    return true;\n  });\n}\n\nexport function computeScrollPosition(left: number, top: number) {\n  const contentSize = parseInt(sizeConfig.scrollBarContent, 10);\n  const canvasRect = canvasSizeSet.get();\n  const viewSize = sheetViewSizeSet.get();\n  const maxHeight = viewSize.height - canvasRect.height + BOTTOM_BUFF;\n  const maxWidth = viewSize.width - canvasRect.width + BOTTOM_BUFF;\n  const maxScrollHeight = canvasRect.height - contentSize;\n  const maxScrollWidth = canvasRect.width - contentSize;\n\n  const scrollTop = Math.floor((top * maxScrollHeight) / maxHeight);\n  const scrollLeft = Math.floor((left * maxScrollWidth) / maxWidth);\n  return {\n    maxHeight,\n    maxWidth,\n    maxScrollHeight,\n    maxScrollWidth,\n    scrollTop,\n    scrollLeft,\n  };\n}\nexport function scrollBar(\n  controller: IController,\n  scrollX: number,\n  scrollY: number,\n) {\n  const oldScroll = controller.getScroll();\n  const { maxHeight, maxWidth, maxScrollHeight, maxScrollWidth } =\n    computeScrollPosition(oldScroll.left, oldScroll.top);\n  let top = oldScroll.top + Math.ceil(scrollY);\n  if (top < 0) {\n    top = 0;\n  } else if (top > maxHeight) {\n    top = maxHeight;\n  }\n\n  let left = oldScroll.left + Math.ceil(scrollX);\n  if (left < 0) {\n    left = 0;\n  } else if (left > maxWidth) {\n    left = maxWidth;\n  }\n  const { row, col } = computeScrollRowAndCol(controller, left, top);\n  const scrollTop = Math.floor((top * maxScrollHeight) / maxHeight);\n  const scrollLeft = Math.floor((left * maxScrollWidth) / maxWidth);\n  const newValue: ScrollValue = {\n    row,\n    col,\n    top,\n    left,\n    scrollTop,\n    scrollLeft,\n  };\n  controller.setScroll(newValue);\n}\n\nexport function recalculateScroll(controller: IController) {\n  const activeCell = controller.getActiveRange().range;\n  const temp = {\n    row: activeCell.row,\n    col: activeCell.col,\n    colCount: 1,\n    rowCount: 1,\n    sheetId: '',\n  };\n  const position = controller.computeCellPosition(temp);\n  const cellSize = controller.getCellSize(temp);\n  const domRect = canvasSizeSet.get();\n  const oldScroll = controller.getScroll();\n  const sheetInfo = controller.getSheetInfo(controller.getCurrentSheetId())!;\n  const headerSize = headerSizeSet.get();\n  const buff = 5;\n  const { maxHeight, maxWidth, maxScrollHeight, maxScrollWidth } =\n    computeScrollPosition(oldScroll.left, oldScroll.top);\n  if (position.left + cellSize.width + buff > domRect.width) {\n    if (oldScroll.col <= sheetInfo.colCount - 2) {\n      const left = oldScroll.left + controller.getColWidth(oldScroll.col).len;\n      const scrollLeft = Math.floor((left * maxScrollWidth) / maxWidth);\n      controller.setScroll({\n        ...oldScroll,\n        col: oldScroll.col + 1,\n        left,\n        scrollLeft,\n      });\n    }\n  }\n\n  if (position.left - headerSize.width < domRect.left + buff) {\n    if (oldScroll.col >= 1) {\n      const left = oldScroll.left - controller.getColWidth(oldScroll.col).len;\n      const scrollLeft = Math.floor((left * maxScrollWidth) / maxWidth);\n      controller.setScroll({\n        ...oldScroll,\n        col: oldScroll.col - 1,\n        left,\n        scrollLeft,\n      });\n    }\n  }\n  if (position.top + cellSize.height + buff > domRect.height) {\n    if (oldScroll.row <= sheetInfo.rowCount - 2) {\n      const top = oldScroll.top + controller.getRowHeight(oldScroll.row).len;\n      const scrollTop = Math.floor((top * maxScrollHeight) / maxHeight);\n      controller.setScroll({\n        ...oldScroll,\n        row: oldScroll.row + 1,\n        top,\n        scrollTop,\n      });\n    }\n  }\n\n  if (position.top - headerSize.height < domRect.top + buff) {\n    if (oldScroll.row >= 1) {\n      const top = oldScroll.top - controller.getRowHeight(oldScroll.row).len;\n      const scrollTop = Math.floor((top * maxScrollHeight) / maxHeight);\n      controller.setScroll({\n        ...oldScroll,\n        row: oldScroll.row - 1,\n        top,\n        scrollTop,\n      });\n    }\n  }\n}\n\nexport function checkFocus() {\n  const dom = document.activeElement;\n  if (!dom || dom.getAttribute('data-role') !== FORMULA_EDITOR_ROLE) {\n    return false;\n  }\n  return true;\n}\n\nexport function setActiveCellValue(controller: IController) {\n  const inputDom = document.activeElement as\n    | HTMLInputElement\n    | HTMLTextAreaElement;\n  const { range, isMerged } = controller.getActiveRange();\n  const cellData = controller.getCell(range);\n  let value = inputDom.value;\n  if (typeof cellData?.value === 'string' && isMergeContent(isMerged, cellData?.value)) {\n    value = value.replaceAll(LINE_BREAK, MERGE_CELL_LINE_BREAK);\n  }\n  controller.setCellValue(value, range);\n  inputDom.value = '';\n  inputDom.blur();\n  coreStore.setState({\n    editorStatus: EditorStatus.NONE,\n  });\n}\n\nfunction checkActiveElement(controller: IController) {\n  if (!checkFocus()) {\n    return;\n  }\n  setActiveCellValue(controller);\n}\n/* jscpd:ignore-start */\nexport const keyboardEventList: KeyboardEventItem[] = [\n  {\n    key: 'Enter',\n    modifierKey: [],\n    handler: handleEnterClick,\n  },\n  {\n    key: 'Tab',\n    modifierKey: [],\n    handler: handleTabClick,\n  },\n  {\n    key: 'ArrowDown',\n    modifierKey: [isMac() ? 'meta' : 'ctrl'],\n    handler: (controller) => {\n      if (checkFocus()) {\n        return;\n      }\n      controller.batchUpdate(() => {\n        checkActiveElement(controller);\n        const viewSize = sheetViewSizeSet.get();\n        scrollBar(controller, 0, viewSize.height);\n        return true;\n      });\n    },\n  },\n  {\n    key: 'ArrowUp',\n    modifierKey: [isMac() ? 'meta' : 'ctrl'],\n    handler: (controller) => {\n      if (checkFocus()) {\n        return;\n      }\n      controller.batchUpdate(() => {\n        checkActiveElement(controller);\n        const viewSize = sheetViewSizeSet.get();\n        scrollBar(controller, 0, -viewSize.height);\n        return true;\n      });\n    },\n  },\n  {\n    key: 'ArrowRight',\n    modifierKey: [isMac() ? 'meta' : 'ctrl'],\n    handler: (controller) => {\n      if (checkFocus()) {\n        return;\n      }\n      controller.batchUpdate(() => {\n        checkActiveElement(controller);\n        const viewSize = sheetViewSizeSet.get();\n        scrollBar(controller, viewSize.width, 0);\n        return true;\n      });\n    },\n  },\n  {\n    key: 'ArrowLeft',\n    modifierKey: [isMac() ? 'meta' : 'ctrl'],\n    handler: (controller) => {\n      if (checkFocus()) {\n        return;\n      }\n      controller.batchUpdate(() => {\n        checkActiveElement(controller);\n        const viewSize = sheetViewSizeSet.get();\n        scrollBar(controller, -viewSize.width, 0);\n        return true;\n      });\n    },\n  },\n  {\n    key: 'ArrowDown',\n    modifierKey: [],\n    handler: (controller) => {\n      if (checkFocus()) {\n        return;\n      }\n      handleEnterClick(controller);\n    },\n  },\n  {\n    key: 'ArrowUp',\n    modifierKey: [],\n    handler: (controller) => {\n      if (checkFocus()) {\n        return;\n      }\n      controller.batchUpdate(() => {\n        checkActiveElement(controller);\n        controller.setNextActiveCell('up');\n        recalculateScroll(controller);\n        return true;\n      });\n    },\n  },\n  {\n    key: 'ArrowRight',\n    modifierKey: [],\n    handler: (controller) => {\n      if (checkFocus()) {\n        return;\n      }\n      handleTabClick(controller);\n    },\n  },\n  {\n    key: 'ArrowLeft',\n    modifierKey: [],\n    handler: (controller) => {\n      if (checkFocus()) {\n        return;\n      }\n      controller.batchUpdate(() => {\n        checkActiveElement(controller);\n        controller.setNextActiveCell('left');\n        recalculateScroll(controller);\n        return true;\n      });\n    },\n  },\n  {\n    key: 'b',\n    modifierKey: [isMac() ? 'meta' : 'ctrl'],\n    handler: (controller) => {\n      if (checkFocus()) {\n        return;\n      }\n      const cellData = controller.getCell(controller.getActiveRange().range);\n      controller.updateCellStyle(\n        { isBold: !cellData?.style?.isBold },\n        controller.getActiveRange().range,\n      );\n    },\n  },\n  {\n    key: 'i',\n    modifierKey: [isMac() ? 'meta' : 'ctrl'],\n    handler: (controller) => {\n      if (checkFocus()) {\n        return;\n      }\n\n      const cellData = controller.getCell(controller.getActiveRange().range);\n      controller.updateCellStyle(\n        { isItalic: !cellData?.style?.isItalic },\n        controller.getActiveRange().range,\n      );\n    },\n  },\n  {\n    key: '5',\n    modifierKey: [isMac() ? 'meta' : 'ctrl'],\n    handler: (controller) => {\n      if (checkFocus()) {\n        return;\n      }\n      const cellData = controller.getCell(controller.getActiveRange().range);\n      controller.updateCellStyle(\n        { isStrike: !cellData?.style?.isStrike },\n        controller.getActiveRange().range,\n      );\n    },\n  },\n  {\n    key: 'u',\n    modifierKey: [isMac() ? 'meta' : 'ctrl'],\n    handler: (controller) => {\n      if (checkFocus()) {\n        return;\n      }\n      const cellData = controller.getCell(controller.getActiveRange().range);\n      const underline = cellData?.style?.underline;\n      let newUnderline = EUnderLine.NONE;\n      if (underline === undefined || underline === EUnderLine.NONE) {\n        newUnderline = EUnderLine.SINGLE;\n      } else {\n        newUnderline = EUnderLine.NONE;\n      }\n      controller.updateCellStyle(\n        { underline: newUnderline },\n        controller.getActiveRange().range,\n      );\n    },\n  },\n  {\n    key: 'z',\n    modifierKey: [isMac() ? 'meta' : 'ctrl'],\n    handler: (controller) => {\n      controller.undo();\n    },\n  },\n  {\n    key: 'y',\n    modifierKey: [isMac() ? 'meta' : 'ctrl'],\n    handler: (controller) => {\n      controller.redo();\n    },\n  },\n];\n/* jscpd:ignore-end */\n"],"names":["cellData","DEFAULT_POSITION","activeCellStore","BaseStore","defineNameStore","BOTTOM_BUFF","handleTabClick","controller","checkActiveElement","recalculateScroll","handleEnterClick","computeScrollRowAndCol","left","top","oldScroll","row","col","t","a","scrollSheetToView","sheetId","selector","SHEET_ITEM_TEST_ID_PREFIX","dom","scrollToView","range","sheetInfo","scroll","old","size","canvasSizeSet","headerSize","headerSizeSet","minTop","minLeft","maxTop","maxLeft","oldPosition","scrollBar","computeScrollPosition","contentSize","sizeConfig","canvasRect","viewSize","sheetViewSizeSet","maxHeight","maxWidth","maxScrollHeight","maxScrollWidth","scrollTop","scrollLeft","scrollX","scrollY","newValue","activeCell","temp","position","cellSize","domRect","buff","checkFocus","FORMULA_EDITOR_ROLE","setActiveCellValue","inputDom","isMerged","value","isMergeContent","LINE_BREAK","MERGE_CELL_LINE_BREAK","coreStore","EditorStatus","keyboardEventList","isMac","_a","underline","newUnderline","EUnderLine"],"mappings":"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"}