{"version":3,"file":"index-CA_crYMO.js","sources":["../../src/containers/SheetBar/SheetBarContextMenu.tsx","../../src/containers/SheetBar/index.tsx"],"sourcesContent":["import React, { useMemo, memo } from 'react';\nimport { Button, Select, info, ColorPicker, toast } from '../../components';\nimport { IController, OptionItem } from '@/types';\nimport styles from './index.module.css';\nimport { useClickOutside } from '../hooks';\nimport { SheetItem } from '../store';\nimport { $ } from '@/i18n';\n\ninterface Props {\n  controller: IController;\n  position: number;\n  sheetList: SheetItem[];\n  currentSheetId: string;\n  hideMenu: () => void;\n  editSheetName: () => void;\n}\n\nexport const SheetBarContextMenu: React.FunctionComponent<Props> = memo(\n  ({\n    controller,\n    position,\n    sheetList,\n    currentSheetId,\n    hideMenu,\n    editSheetName,\n  }) => {\n    const ref = useClickOutside(hideMenu);\n    const tabColor = useMemo(() => {\n      return (\n        sheetList.find((v) => v.sheetId === currentSheetId)?.tabColor || ''\n      );\n    }, [sheetList, currentSheetId]);\n    const hideSheetList: OptionItem[] = useMemo(() => {\n      return sheetList\n        .filter((v) => v.isHide)\n        .map((item) => ({\n          value: String(item.sheetId),\n          label: item.name,\n          disabled: false,\n        }));\n    }, [sheetList]);\n    const handleUnhide = () => {\n      let value = String(hideSheetList[0]?.value) || '';\n      info({\n        visible: true,\n        title: $('unhide-sheet'),\n        testId: 'sheet-bar-context-menu-unhide-dialog',\n        children: (\n          <Select\n            data={hideSheetList}\n            onChange={(v) => {\n              value = String(v);\n            }}\n            className={styles['unhide-select']}\n            defaultValue={value}\n            testId=\"sheet-bar-context-menu-unhide-dialog-select\"\n          />\n        ),\n        onCancel: hideMenu,\n        onOk() {\n          if (!value) {\n            return toast.error($('sheet-id-can-not-be-empty'));\n          }\n          controller.unhideSheet(value);\n          hideMenu();\n        },\n      });\n    };\n    const handleTabColorChange = (color: string) => {\n      controller.updateSheetInfo({ tabColor: color });\n      hideMenu();\n    };\n    return (\n      <div\n        className={styles['sheet-bar-context-menu']}\n        style={{ left: position }}\n        ref={ref}\n        data-testid=\"sheet-bar-context-menu\"\n      >\n        <Button\n          testId=\"sheet-bar-context-menu-insert\"\n          onClick={() => {\n            hideMenu();\n            controller.addSheet();\n          }}\n        >\n          {$('insert')}\n        </Button>\n        <Button\n          testId=\"sheet-bar-context-menu-delete\"\n          onClick={() => {\n            hideMenu();\n            controller.deleteSheet();\n          }}\n        >\n          {$('delete')}\n        </Button>\n        <Button\n          testId=\"sheet-bar-context-menu-rename\"\n          onClick={() => {\n            hideMenu();\n            editSheetName();\n          }}\n        >\n          {$('rename')}\n        </Button>\n        <Button\n          testId=\"sheet-bar-context-menu-hide\"\n          onClick={() => {\n            hideMenu();\n            controller.hideSheet();\n          }}\n        >\n          {$('hide')}\n        </Button>\n        <Button\n          testId=\"sheet-bar-context-menu-unhide\"\n          className={styles['sheet-bar-unhide']}\n          disabled={hideSheetList.length === 0}\n          onClick={handleUnhide}\n        >\n          {$('unhide')}\n        </Button>\n        <ColorPicker\n          color={tabColor}\n          onChange={handleTabColorChange}\n          position=\"top\"\n          testId=\"sheet-bar-context-menu-tab-color\"\n        >\n          <Button\n            className={styles['sheet-bar-unhide']}\n            testId=\"sheet-bar-context-menu-tab-color\"\n          >\n            {$('tab-color')}\n          </Button>\n        </ColorPicker>\n      </div>\n    );\n  },\n);\nSheetBarContextMenu.displayName = 'SheetBarContextMenu';\n","import React, {\n  FunctionComponent,\n  useSyncExternalStore,\n  useState,\n  useMemo,\n  memo,\n  useCallback,\n} from 'react';\nimport {\n  classnames,\n  DEFAULT_POSITION,\n  MAX_NAME_LENGTH,\n  SHEET_ITEM_TEST_ID_PREFIX,\n} from '@/util';\nimport { Button, Icon, SelectPopup } from '../../components';\nimport { SheetBarContextMenu } from './SheetBarContextMenu';\nimport styles from './index.module.css';\nimport { IController } from '@/types';\nimport { sheetListStore, coreStore } from '@/containers/store';\n\ninterface Props {\n  controller: IController;\n}\n\nexport const SheetBarContainer: FunctionComponent<Props> = memo(\n  ({ controller }) => {\n    const sheetList = useSyncExternalStore(\n      sheetListStore.subscribe,\n      sheetListStore.getSnapshot,\n    );\n    const realSheetList = useMemo(() => {\n      return sheetList.filter((v) => !v.isHide);\n    }, [sheetList]);\n    const popupList = useMemo(() => {\n      return sheetList\n        .filter((v) => !v.isHide)\n        .map((v) => ({ value: v.sheetId, label: v.name, disabled: false }));\n    }, [sheetList]);\n\n    const [popupActive, setPopupActive] = useState(false);\n    const { currentSheetId } = useSyncExternalStore(\n      coreStore.subscribe,\n      coreStore.getSnapshot,\n    );\n    const [menuPosition, setMenuPosition] = useState(DEFAULT_POSITION);\n    const [editing, setEditing] = useState(false);\n    const handleContextMenu = useCallback(\n      (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        const pos = event.clientX - 30;\n        setMenuPosition(pos);\n        return false;\n      },\n      [],\n    );\n    const handleKeyDown = useCallback(\n      (event: React.KeyboardEvent<HTMLInputElement>) => {\n        event.stopPropagation();\n        if (event.key === 'Enter') {\n          const t = event.currentTarget.value;\n          setEditing(false);\n          if (!t) {\n            return;\n          }\n          controller.renameSheet(t);\n        }\n      },\n      [],\n    );\n    const handleChange = useCallback((value: string) => {\n      setPopupActive(false);\n      controller.setCurrentSheetId(value);\n    }, []);\n    const addSheet = useCallback(() => {\n      controller.addSheet();\n    }, []);\n    const hideMenu = useCallback(() => {\n      setMenuPosition(DEFAULT_POSITION);\n    }, []);\n    const editSheetName = useCallback(() => {\n      setEditing(true);\n    }, []);\n    const togglePopup = useCallback(() => {\n      setPopupActive((v) => !v);\n    }, []);\n    return (\n      <div className={styles['sheet-bar-wrapper']} data-testid=\"sheet-bar\">\n        <div>\n          <Button\n            onClick={togglePopup}\n            className={styles['menu-button']}\n            testId=\"sheet-bar-select-sheet\"\n          >\n            <Icon name=\"menu\" />\n          </Button>\n          {popupActive && (\n            <SelectPopup\n              data={popupList}\n              onChange={handleChange}\n              active\n              position=\"top\"\n              value={currentSheetId}\n              testId=\"sheet-bar-select-sheet-popup\"\n              className={styles['select-popup']}\n            />\n          )}\n        </div>\n        <div className={styles['sheet-bar-list']} data-testid=\"sheet-bar-list\">\n          {realSheetList.map((item) => {\n            const isActive = currentSheetId === item.sheetId;\n            const showInput = isActive && editing;\n            const tabColor = item.tabColor || '';\n            const cls = classnames(styles['sheet-bar-item'], {\n              [styles['active']]: isActive,\n            });\n            let style = undefined;\n            if (!isActive && !editing && tabColor) {\n              style = { backgroundColor: tabColor };\n            }\n            const testId = isActive ? 'sheet-bar-active-item' : undefined;\n            return (\n              <div\n                data-testid={`${SHEET_ITEM_TEST_ID_PREFIX}${item.sheetId}`}\n                key={item.sheetId}\n                className={cls}\n                style={style}\n                onContextMenu={handleContextMenu}\n                onClick={() => {\n                  if (currentSheetId === item.sheetId) {\n                    return;\n                  }\n                  setEditing(false);\n                  controller.setCurrentSheetId(item.sheetId);\n                }}\n              >\n                {showInput ? (\n                  <input\n                    className={styles['sheet-bar-input']}\n                    defaultValue={item.name}\n                    onKeyDown={handleKeyDown}\n                    type=\"text\"\n                    spellCheck\n                    maxLength={MAX_NAME_LENGTH}\n                    data-testid=\"sheet-bar-rename-input\"\n                  />\n                ) : (\n                  <React.Fragment>\n                    {isActive && tabColor && (\n                      <span\n                        className={styles['sheet-bar-item-color']}\n                        style={{ backgroundColor: tabColor }}\n                        data-testid=\"sheet-bar-tab-color-item\"\n                      />\n                    )}\n                    <span\n                      className={styles['sheet-bar-item-text']}\n                      data-testid={testId}\n                    >\n                      {item.name}\n                    </span>\n                  </React.Fragment>\n                )}\n              </div>\n            );\n          })}\n        </div>\n        <Button\n          onClick={addSheet}\n          type=\"circle\"\n          className={styles['add-button']}\n          testId=\"sheet-bar-add-sheet\"\n        >\n          <Icon name=\"plus\" />\n        </Button>\n        {menuPosition >= 0 && (\n          <SheetBarContextMenu\n            controller={controller}\n            position={menuPosition}\n            sheetList={sheetList}\n            currentSheetId={currentSheetId}\n            hideMenu={hideMenu}\n            editSheetName={editSheetName}\n          />\n        )}\n      </div>\n    );\n  },\n);\nSheetBarContainer.displayName = 'SheetBarContainer';\n\nexport default SheetBarContainer\n"],"names":["SheetBarContextMenu","memo","controller","position","sheetList","currentSheetId","hideMenu","editSheetName","ref","useClickOutside","tabColor","useMemo","_a","v","hideSheetList","item","handleUnhide","value","info","$","jsx","Select","styles","toast","handleTabColorChange","color","jsxs","Button","ColorPicker","SheetBarContainer","useSyncExternalStore","sheetListStore","realSheetList","popupList","popupActive","setPopupActive","useState","coreStore","menuPosition","setMenuPosition","DEFAULT_POSITION","editing","setEditing","handleContextMenu","useCallback","event","pos","handleKeyDown","t","handleChange","addSheet","togglePopup","Icon","SelectPopup","isActive","showInput","cls","classnames","style","testId","SHEET_ITEM_TEST_ID_PREFIX","MAX_NAME_LENGTH","React"],"mappings":"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"}