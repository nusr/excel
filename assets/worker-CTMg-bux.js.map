{"version":3,"file":"worker-CTMg-bux.js","sources":["../node_modules/.pnpm/comlink@4.4.2/node_modules/comlink/dist/esm/comlink.mjs","../src/types/model.ts","../src/types/parser.ts","../src/formula/token.ts","../src/util/constant.ts","../src/util/util.ts","../src/formula/formula/error.ts","../node_modules/.pnpm/ssf@https+++cdn.sheetjs.com+ssf-0.11.3+ssf-0.11.3.tgz/node_modules/ssf/ssf.js","../src/model/numberFormat.ts","../src/formula/formula/text.ts","../src/formula/formula/math.ts","../src/formula/formula/float.ts","../src/formula/formula/index.ts","../src/util/convert.ts","../src/util/range.ts","../src/util/reference.ts","../src/formula/scanner.ts","../src/formula/expression.ts","../src/formula/parser.ts","../src/formula/interpreter.ts","../src/util/lodash.ts","../src/util/style.ts","../src/util/dpr.ts","../src/util/debug.ts","../src/theme/size.ts","../src/theme/zIndex.ts","../src/theme/convert.ts","../src/theme/color.ts","../src/theme/index.ts","../src/i18n/index.ts","../src/util/i18n-constant.ts","../src/formula/eval.ts","../src/util/split.ts","../src/canvas/util.ts","../src/canvas/constant.ts","../src/canvas/offScreenWorker.ts","../src/canvas/worker.ts","../src/worker.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst proxyMarker = Symbol(\"Comlink.proxy\");\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\nconst finalizer = Symbol(\"Comlink.finalizer\");\nconst throwMarker = Symbol(\"Comlink.thrown\");\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler = {\n    canHandle: (val) => isObject(val) && val[proxyMarker],\n    serialize(obj) {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return [port2, [port2]];\n    },\n    deserialize(port) {\n        port.start();\n        return wrap(port);\n    },\n};\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler = {\n    canHandle: (value) => isObject(value) && throwMarker in value,\n    serialize({ value }) {\n        let serialized;\n        if (value instanceof Error) {\n            serialized = {\n                isError: true,\n                value: {\n                    message: value.message,\n                    name: value.name,\n                    stack: value.stack,\n                },\n            };\n        }\n        else {\n            serialized = { isError: false, value };\n        }\n        return [serialized, []];\n    },\n    deserialize(serialized) {\n        if (serialized.isError) {\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\n        }\n        throw serialized.value;\n    },\n};\n/**\n * Allows customizing the serialization of certain values.\n */\nconst transferHandlers = new Map([\n    [\"proxy\", proxyTransferHandler],\n    [\"throw\", throwTransferHandler],\n]);\nfunction isAllowedOrigin(allowedOrigins, origin) {\n    for (const allowedOrigin of allowedOrigins) {\n        if (origin === allowedOrigin || allowedOrigin === \"*\") {\n            return true;\n        }\n        if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction expose(obj, ep = globalThis, allowedOrigins = [\"*\"]) {\n    ep.addEventListener(\"message\", function callback(ev) {\n        if (!ev || !ev.data) {\n            return;\n        }\n        if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n            console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n            return;\n        }\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n        let returnValue;\n        try {\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n            switch (type) {\n                case \"GET\" /* MessageType.GET */:\n                    {\n                        returnValue = rawValue;\n                    }\n                    break;\n                case \"SET\" /* MessageType.SET */:\n                    {\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n                        returnValue = true;\n                    }\n                    break;\n                case \"APPLY\" /* MessageType.APPLY */:\n                    {\n                        returnValue = rawValue.apply(parent, argumentList);\n                    }\n                    break;\n                case \"CONSTRUCT\" /* MessageType.CONSTRUCT */:\n                    {\n                        const value = new rawValue(...argumentList);\n                        returnValue = proxy(value);\n                    }\n                    break;\n                case \"ENDPOINT\" /* MessageType.ENDPOINT */:\n                    {\n                        const { port1, port2 } = new MessageChannel();\n                        expose(obj, port2);\n                        returnValue = transfer(port1, [port1]);\n                    }\n                    break;\n                case \"RELEASE\" /* MessageType.RELEASE */:\n                    {\n                        returnValue = undefined;\n                    }\n                    break;\n                default:\n                    return;\n            }\n        }\n        catch (value) {\n            returnValue = { value, [throwMarker]: 0 };\n        }\n        Promise.resolve(returnValue)\n            .catch((value) => {\n            return { value, [throwMarker]: 0 };\n        })\n            .then((returnValue) => {\n            const [wireValue, transferables] = toWireValue(returnValue);\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n            if (type === \"RELEASE\" /* MessageType.RELEASE */) {\n                // detach and deactive after sending release response above.\n                ep.removeEventListener(\"message\", callback);\n                closeEndPoint(ep);\n                if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n                    obj[finalizer]();\n                }\n            }\n        })\n            .catch((error) => {\n            // Send Serialization Error To Caller\n            const [wireValue, transferables] = toWireValue({\n                value: new TypeError(\"Unserializable return value\"),\n                [throwMarker]: 0,\n            });\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n        });\n    });\n    if (ep.start) {\n        ep.start();\n    }\n}\nfunction isMessagePort(endpoint) {\n    return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n    if (isMessagePort(endpoint))\n        endpoint.close();\n}\nfunction wrap(ep, target) {\n    const pendingListeners = new Map();\n    ep.addEventListener(\"message\", function handleMessage(ev) {\n        const { data } = ev;\n        if (!data || !data.id) {\n            return;\n        }\n        const resolver = pendingListeners.get(data.id);\n        if (!resolver) {\n            return;\n        }\n        try {\n            resolver(data);\n        }\n        finally {\n            pendingListeners.delete(data.id);\n        }\n    });\n    return createProxy(ep, pendingListeners, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n    if (isReleased) {\n        throw new Error(\"Proxy has been released and is not useable\");\n    }\n}\nfunction releaseEndpoint(ep) {\n    return requestResponseMessage(ep, new Map(), {\n        type: \"RELEASE\" /* MessageType.RELEASE */,\n    }).then(() => {\n        closeEndPoint(ep);\n    });\n}\nconst proxyCounter = new WeakMap();\nconst proxyFinalizers = \"FinalizationRegistry\" in globalThis &&\n    new FinalizationRegistry((ep) => {\n        const newCount = (proxyCounter.get(ep) || 0) - 1;\n        proxyCounter.set(ep, newCount);\n        if (newCount === 0) {\n            releaseEndpoint(ep);\n        }\n    });\nfunction registerProxy(proxy, ep) {\n    const newCount = (proxyCounter.get(ep) || 0) + 1;\n    proxyCounter.set(ep, newCount);\n    if (proxyFinalizers) {\n        proxyFinalizers.register(proxy, ep, proxy);\n    }\n}\nfunction unregisterProxy(proxy) {\n    if (proxyFinalizers) {\n        proxyFinalizers.unregister(proxy);\n    }\n}\nfunction createProxy(ep, pendingListeners, path = [], target = function () { }) {\n    let isProxyReleased = false;\n    const proxy = new Proxy(target, {\n        get(_target, prop) {\n            throwIfProxyReleased(isProxyReleased);\n            if (prop === releaseProxy) {\n                return () => {\n                    unregisterProxy(proxy);\n                    releaseEndpoint(ep);\n                    pendingListeners.clear();\n                    isProxyReleased = true;\n                };\n            }\n            if (prop === \"then\") {\n                if (path.length === 0) {\n                    return { then: () => proxy };\n                }\n                const r = requestResponseMessage(ep, pendingListeners, {\n                    type: \"GET\" /* MessageType.GET */,\n                    path: path.map((p) => p.toString()),\n                }).then(fromWireValue);\n                return r.then.bind(r);\n            }\n            return createProxy(ep, pendingListeners, [...path, prop]);\n        },\n        set(_target, prop, rawValue) {\n            throwIfProxyReleased(isProxyReleased);\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n            const [value, transferables] = toWireValue(rawValue);\n            return requestResponseMessage(ep, pendingListeners, {\n                type: \"SET\" /* MessageType.SET */,\n                path: [...path, prop].map((p) => p.toString()),\n                value,\n            }, transferables).then(fromWireValue);\n        },\n        apply(_target, _thisArg, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const last = path[path.length - 1];\n            if (last === createEndpoint) {\n                return requestResponseMessage(ep, pendingListeners, {\n                    type: \"ENDPOINT\" /* MessageType.ENDPOINT */,\n                }).then(fromWireValue);\n            }\n            // We just pretend that `bind()` didn’t happen.\n            if (last === \"bind\") {\n                return createProxy(ep, pendingListeners, path.slice(0, -1));\n            }\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, pendingListeners, {\n                type: \"APPLY\" /* MessageType.APPLY */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n        construct(_target, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, pendingListeners, {\n                type: \"CONSTRUCT\" /* MessageType.CONSTRUCT */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n    });\n    registerProxy(proxy, ep);\n    return proxy;\n}\nfunction myFlat(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n    const processed = argumentList.map(toWireValue);\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\nconst transferCache = new WeakMap();\nfunction transfer(obj, transfers) {\n    transferCache.set(obj, transfers);\n    return obj;\n}\nfunction proxy(obj) {\n    return Object.assign(obj, { [proxyMarker]: true });\n}\nfunction windowEndpoint(w, context = globalThis, targetOrigin = \"*\") {\n    return {\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\n        addEventListener: context.addEventListener.bind(context),\n        removeEventListener: context.removeEventListener.bind(context),\n    };\n}\nfunction toWireValue(value) {\n    for (const [name, handler] of transferHandlers) {\n        if (handler.canHandle(value)) {\n            const [serializedValue, transferables] = handler.serialize(value);\n            return [\n                {\n                    type: \"HANDLER\" /* WireValueType.HANDLER */,\n                    name,\n                    value: serializedValue,\n                },\n                transferables,\n            ];\n        }\n    }\n    return [\n        {\n            type: \"RAW\" /* WireValueType.RAW */,\n            value,\n        },\n        transferCache.get(value) || [],\n    ];\n}\nfunction fromWireValue(value) {\n    switch (value.type) {\n        case \"HANDLER\" /* WireValueType.HANDLER */:\n            return transferHandlers.get(value.name).deserialize(value.value);\n        case \"RAW\" /* WireValueType.RAW */:\n            return value.value;\n    }\n}\nfunction requestResponseMessage(ep, pendingListeners, msg, transfers) {\n    return new Promise((resolve) => {\n        const id = generateUUID();\n        pendingListeners.set(id, resolve);\n        if (ep.start) {\n            ep.start();\n        }\n        ep.postMessage(Object.assign({ id }, msg), transfers);\n    });\n}\nfunction generateUUID() {\n    return new Array(4)\n        .fill(0)\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n        .join(\"-\");\n}\n\nexport { createEndpoint, expose, finalizer, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","import { ResultType } from './parser';\nimport { IRange } from './range';\nimport type { ChartType } from 'chart.js';\nimport type { ICommandItem } from './history';\n\nexport enum EVerticalAlign {\n  TOP,\n  MIDDLE,\n  BOTTOM,\n}\nexport enum EHorizontalAlign {\n  LEFT,\n  CENTER,\n  RIGHT,\n}\nexport enum EUnderLine {\n  NONE = 0,\n  SINGLE,\n  DOUBLE,\n}\n\nexport type BorderType =\n  | 'thin'\n  | 'hair'\n  | 'dotted'\n  | 'dashed'\n  | 'dashDot'\n  | 'dashDotDot'\n  | 'double'\n  | 'medium'\n  | 'mediumDashed'\n  | 'mediumDashDot'\n  | 'mediumDashDotDot'\n  | 'thick';\n// | 'slantDashDot'\n\nexport type BorderItem = {\n  color: string;\n  type: BorderType;\n};\n/**\n * XML to model\n * 1. styleId = worksheets_*.xml worksheet.sheetData.row.c.s\n * 2. styles = styles.xml styleSheet\n * 3. xf = styles.cellXfs.xf[styleId]\n * 4. fillColor = xf.applyFill != undefined && xf.fillId != undefined && styles.fills.fill[xf.fillId]\n * 5. font = xf.applyFont != undefined && xf.fontId != undefined && styles.fonts.font[xf.fontId]\n * 6. fontColor = font.color,fontSize = font.sz,isBold= font.b,isItalic=font.i,underline=font.u,fontFamily=font.name\n * 7. alignment = xf.ApplyAlignment != undefined && xf.alignment != undefined\n * 8. verticalAlign = alignment.vertical,horizontalAlign = alignment.horizontal,isWrapText = alignment.wrapText\n * 9. numberFormat = xl.applyNumberFormat != undefined && styles.numFmts.numFmt.find(v => v.numFmtId === xf.numFmtId).formatCode\n *\n * model to XML\n */\nexport interface StyleType {\n  fontColor: string;\n  fillColor: string;\n  fontSize: number;\n  fontFamily: string;\n  verticalAlign: EVerticalAlign;\n  horizontalAlign: EHorizontalAlign;\n  isWrapText: boolean;\n  underline: EUnderLine;\n  isItalic: boolean;\n  isBold: boolean;\n  isStrike: boolean;\n  numberFormat: string;\n  borderLeft?: BorderItem;\n  borderRight?: BorderItem;\n  borderTop?: BorderItem;\n  borderBottom?: BorderItem;\n}\nexport interface WorksheetType {\n  sheetId: string;\n  name: string;\n  isHide: boolean;\n  rowCount: number;\n  colCount: number;\n  sort: number; // sort\n  tabColor?: string;\n}\n\nexport interface ModelCellType {\n  value: ResultType;\n  formula?: string;\n  style?: Partial<StyleType>;\n}\nexport interface Coordinate {\n  row: number;\n  col: number;\n}\nexport type ModelCellValue = ModelCellType & Coordinate;\n\nexport type ModelColType = Record<string, ModelCellType>; // key: col number\nexport type ModelRowType = Record<string, ModelColType>; // key: row number\n\nexport interface CustomItem {\n  len: number; // width or height\n  isHide: boolean;\n}\nexport type CustomHeightOrWidthItem = Record<string, CustomItem>; // key: sheetId + '_' + row number or col number value: height or width\n\nexport type DrawingElement = {\n  title: string;\n  type: 'floating-picture' | 'chart';\n  uuid: string;\n  width: number;\n  height: number;\n  originWidth: number;\n  originHeight: number;\n  fromCol: number; // insert col\n  fromRow: number; // insert row\n  sheetId: string; // insert sheetId\n  marginX: number; // the x distance of (fromCol, fromRow)\n  marginY: number; // the Y distance of (fromCol, fromRow)\n  imageAngle?: number;\n  imageSrc?: string; // floating-picture src\n  chartType?: ChartType;\n  chartRange?: IRange; // chart reference range\n};\nexport type WorksheetData = Record<string, ModelCellType>; // key: row + col worksheets_*.xml_worksheet_sheetData\n\nexport type ChangeEventType =\n  | ICommandItem['type']\n  | 'row'\n  | 'col'\n  | 'cellValue'\n  | 'cellStyle'\n  | 'undo'\n  | 'redo'\n  | 'autoFilter'\n  | 'noHistory';\nexport interface EventType {\n  changeSet: Set<ChangeEventType>;\n}\n\nexport enum EMergeCellType {\n  MERGE_CENTER = 0,\n  MERGE_CELL,\n  MERGE_CONTENT,\n}\n\nexport interface MergeCellItem {\n  range: IRange; // merge range\n  type: EMergeCellType; // merge type\n  firstCell: Coordinate; // first cell not empty\n}\n\nexport type NumberFilter = {\n  type: 'number';\n  value: Array<{ type: string; value: number }>;\n};\n\nexport type TextFilter = {\n  type: 'text';\n  value: Array<{ type: string; value: string }>;\n};\n\nexport type ColorFilter = {\n  type: 'color';\n  value: string;\n  colorType: 'fillColor' | 'fontColor';\n};\n\nexport type NormalFilter = {\n  type: 'normal';\n  value: ResultType[];\n};\n\nexport type AutoFilterItem = {\n  range: IRange;\n  col?: number;\n  value?: NormalFilter | NumberFilter | TextFilter | ColorFilter;\n};\n\nexport type WorkBookJSON = {\n  worksheets: Record<string, WorksheetData>; // key: sheetId\n  workbook: Record<string, WorksheetType>; // key: sheetId, workbook.xml_workbook_sheets\n  mergeCells: Record<string, IRange>; // key: ref, worksheets_*.xml_worksheet_mergeCells\n  customHeight: CustomHeightOrWidthItem; // key: sheetId_row worksheets_*.xml_worksheet_sheetData_customHeight\n  customWidth: CustomHeightOrWidthItem; // key: sheetId_col worksheets_*.xml_worksheet_sheetData_customHeight\n  definedNames: Record<string, IRange>; // key: defineName workbook.xml_workbook_definedNames\n  currentSheetId: string;\n  drawings: Record<string, DrawingElement>; // key: uuid,  chart floatImage\n  rangeMap: Record<string, IRange>; // key: sheetId\n  autoFilter: Record<string, AutoFilterItem>; // key: sheetId\n};\n\nexport type DefinedNameItem = { range: IRange; name: string };\n\nexport interface IBaseManager {\n  fromJSON(json: WorkBookJSON): void;\n  undo(item: ICommandItem): void;\n  redo(item: ICommandItem): void;\n  deleteAll(sheetId?: string): void;\n}\n\nexport interface IWorkbook extends IBaseManager {\n  toJSON(): Pick<WorkBookJSON, 'currentSheetId' | 'workbook'>;\n  setCurrentSheetId(id: string): void;\n  getCurrentSheetId(): string;\n  addSheet(): WorksheetType | undefined;\n  deleteSheet(sheetId?: string): void;\n  hideSheet(sheetId?: string): void;\n  unhideSheet(sheetId: string): void;\n  renameSheet(sheetName: string, sheetId?: string): void;\n  getSheetInfo(sheetId?: string): WorksheetType | undefined;\n  updateSheetInfo(data: Partial<WorksheetType>, sheetId?: string): void;\n  getSheetList(): WorksheetType[];\n  validateSheet(data: WorksheetType): boolean;\n}\nexport type ActiveRange = {\n  isMerged: boolean;\n  range: IRange; // merge range\n};\nexport interface IRangeMap extends IBaseManager {\n  toJSON(): Pick<WorkBookJSON, 'rangeMap'>;\n  setActiveRange(range: IRange): void;\n  getActiveRange(range?: IRange): ActiveRange;\n  validateRange(range: IRange): boolean;\n}\n\nexport interface IDrawings extends IBaseManager {\n  toJSON(): Pick<WorkBookJSON, 'drawings'>;\n  getDrawingList(sheetId?: string): DrawingElement[];\n  addDrawing(...data: DrawingElement[]): void;\n  updateDrawing(uuid: string, value: Partial<DrawingElement>): void;\n  deleteDrawing(uuid: string): void;\n  addCol(colIndex: number, count: number): void;\n  addRow(rowIndex: number, count: number): void;\n  deleteCol(colIndex: number, count: number): void;\n  deleteRow(rowIndex: number, count: number): void;\n  validateDrawing(item: DrawingElement): boolean;\n}\n\nexport interface IDefinedName extends IBaseManager {\n  toJSON(): Pick<WorkBookJSON, 'definedNames'>;\n  getDefineName(range: IRange): string;\n  setDefineName(range: IRange, name: string): boolean;\n  checkDefineName(name: string): IRange | undefined;\n  getDefineNameList(): DefinedNameItem[];\n  validateDefinedName(name: string): boolean;\n}\n\nexport interface IMergeCell extends IBaseManager {\n  toJSON(): Pick<WorkBookJSON, 'mergeCells'>;\n  getMergeCellList(sheetId?: string): IRange[];\n  addMergeCell(range: IRange, type?: EMergeCellType): void;\n  deleteMergeCell(range: IRange): void;\n}\n\nexport interface IRow extends IBaseManager {\n  toJSON(): Pick<WorkBookJSON, 'customHeight'>;\n  hideRow(rowIndex: number, count: number): void;\n  unhideRow(rowIndex: number, count: number): void;\n  getRowHeight(row: number, sheetId?: string): CustomItem;\n  setRowHeight(row: number, height: number, sheetId?: string): void;\n}\n\nexport interface ICol extends IBaseManager {\n  toJSON(): Pick<WorkBookJSON, 'customWidth'>;\n  hideCol(colIndex: number, count: number): void;\n  unhideCol(colIndex: number, count: number): void;\n  getColWidth(col: number, sheetId?: string): CustomItem;\n  setColWidth(col: number, width: number, sheetId?: string): void;\n}\nexport interface IWorksheet extends IBaseManager {\n  toJSON(): Pick<WorkBookJSON, 'worksheets'>;\n  addCol(colIndex: number, count: number, isRight?: boolean): void;\n  addRow(rowIndex: number, count: number, isAbove?: boolean): void;\n  deleteCol(colIndex: number, count: number): void;\n  deleteRow(rowIndex: number, count: number): void;\n  pasteRange(fromRange: IRange, isCut: boolean): IRange;\n  getWorksheet(sheetId?: string): WorksheetData | undefined;\n  setWorksheet(data: WorksheetData, sheetId?: string): void;\n  getCell(range: IRange, noCheck?: boolean): ModelCellType | undefined;\n  setCell(\n    value: ResultType[][],\n    style: Array<Array<Partial<StyleType>>>,\n    range: IRange,\n  ): void;\n  updateCellStyle(style: Partial<StyleType>, range: IRange): void;\n  setCellValue(value: ResultType, range: IRange): void;\n  computeFormulas(): void;\n  addMergeCell(range: IRange, type?: EMergeCellType): void;\n}\n\nexport interface IFilter extends IBaseManager {\n  toJSON(): Pick<WorkBookJSON, 'autoFilter'>;\n  addFilter(range: IRange): void;\n  deleteFilter(sheetId?: string): void;\n  getFilter(sheetId?: string): AutoFilterItem | undefined;\n  updateFilter(sheetId: string, value: Partial<AutoFilterItem>): void;\n}\n\nexport interface IBaseModel\n  extends Pick<\n      IWorkbook,\n      | 'setCurrentSheetId'\n      | 'getCurrentSheetId'\n      | 'addSheet'\n      | 'deleteSheet'\n      | 'hideSheet'\n      | 'unhideSheet'\n      | 'renameSheet'\n      | 'getSheetInfo'\n      | 'updateSheetInfo'\n      | 'getSheetList'\n      | 'deleteAll'\n      | 'fromJSON'\n    >,\n    Pick<IRangeMap, 'setActiveRange' | 'getActiveRange' | 'validateRange'>,\n    Pick<\n      IDrawings,\n      | 'getDrawingList'\n      | 'addDrawing'\n      | 'updateDrawing'\n      | 'deleteDrawing'\n      | 'validateDrawing'\n    >,\n    Pick<\n      IDefinedName,\n      | 'getDefineName'\n      | 'setDefineName'\n      | 'checkDefineName'\n      | 'getDefineNameList'\n      | 'validateDefinedName'\n    >,\n    Pick<IMergeCell, 'getMergeCellList' | 'addMergeCell' | 'deleteMergeCell'>,\n    Pick<IRow, 'hideRow' | 'getRowHeight' | 'setRowHeight' | 'unhideRow'>,\n    Pick<ICol, 'hideCol' | 'getColWidth' | 'setColWidth' | 'unhideCol'>,\n    Pick<\n      IWorksheet,\n      | 'addRow'\n      | 'deleteRow'\n      | 'addCol'\n      | 'deleteCol'\n      | 'getCell'\n      | 'setCell'\n      | 'updateCellStyle'\n      | 'getWorksheet'\n      | 'setWorksheet'\n      | 'setCellValue'\n    >,\n    Pick<IFilter, 'addFilter' | 'getFilter' | 'deleteFilter' | 'updateFilter'> {\n  toJSON(): WorkBookJSON;\n  canRedo(): boolean;\n  canUndo(): boolean;\n  undo(): void;\n  redo(): void;\n  applyCommandList(result: EventEmitterType['modelChange']): void;\n}\n\nexport interface IModel extends IBaseModel {\n  pasteRange(range: IRange, isCut: boolean): IRange;\n  emitChange(dataset: Set<ChangeEventType>): void;\n  push(command: ICommandItem): void;\n  render(dataset: Set<ChangeEventType>): void;\n}\n\nexport type NumberFormatValue =\n  | number\n  | string\n  | boolean\n  | Date\n  | null\n  | undefined;\n\nexport type EventEmitterType = {\n  modelChange: {\n    changeSet: Set<ChangeEventType>;\n    commandList?: ICommandItem[];\n  };\n};\n","import {\n  Coordinate,\n  IRange,\n  WorksheetType,\n  ModelCellType,\n  FormulaFunction,\n} from '@/types';\nimport { type SheetRange } from '@/util/range';\n\nexport type ResultType = boolean | string | number;\n\nexport enum TokenType {\n  EQUAL, // =\n  NOT_EQUAL, // <>\n  PLUS, // +\n  MINUS, // -\n  STAR, // *\n  SLASH, // /\n  EXPONENT, // ^\n  GREATER, // >\n  GREATER_EQUAL, // >=\n  CONCATENATE, // &\n  COLON, // : 区域运算符，形成区域\n  COMMA, // , 联合运算符 求并集\n  EMPTY_CHAR, // ' ' 交叉运算符 求交集\n  PERCENT, // %\n  LESS, // <\n  LESS_EQUAL, // <=\n  STRING, // string\n  NUMBER, // integer | float\n  BOOL, // TRUE | FALSE\n  ERROR, // #DIV/0! | #NAME? | #N/A | #NULL! | #NUM! | #VALUE! | #GETTING_DATA\n  ERROR_REF, // #REF!\n  LEFT_BRACKET, // (\n  RIGHT_BRACKET, // )\n  lEFT_BRACE, // {\n  RIGHT_BRACE, // }\n  SEMICOLON, // ;\n  EXCLAMATION, // !\n  R1C1, // R1C1 reference\n  SHEET_NAME, // sheet name !\n  CELL, // /[$]?[A-Za-z]{1,3}[$]?[1-9][0-9]*/\n  COLUMN, // /[$]?[A-Za-z]{1,3}/\n  ROW, // /^\\$[1-9][0-9]*/\n  DEFINED_NAME, // /[a-zA-Z_][a-zA-Z0-9_.?]*/\n  EXCEL_FUNCTION, // built-in function \\(\n  REF_FUNCTION, // (INDEX | OFFSET | INDIRECT)\\( 5\n  REF_FUNCTION_COND, //  (IF | CHOOSE)\\( 5\n  EOF,\n}\n\nexport interface CellDataMap {\n  set: (range: IRange, value: ResultType[][]) => void;\n  getCell: (range: IRange) => ModelCellType | undefined;\n  getSheetInfo: (\n    sheetId?: string,\n    sheetName?: string,\n  ) => WorksheetType | undefined;\n  setDefinedName: (name: string, value: IRange) => void;\n  getDefinedName: (name: string) => SheetRange | undefined;\n  handleCell: (\n    value: ModelCellType | undefined,\n    coord: Coordinate,\n  ) => ResultType[];\n  getFunction: (name: string) => FormulaFunction | undefined;\n}\n\nexport interface InterpreterResult {\n  result: ResultType[];\n  expressionStr?: string;\n}\n\nexport type ReferenceType = 'absolute' | 'mixed' | 'relative';\n\nexport type ConvertSheetName = (value: string) => string;\n","import type { TokenType } from '@/types';\n\nexport class Token {\n  type: TokenType;\n  value: string;\n  constructor(type: TokenType, value: string) {\n    this.type = type;\n    this.value = value;\n  }\n  toString(): string {\n    return this.value;\n  }\n}\n","import type { BorderType } from '@/types';\n\nexport const DEFAULT_FONT_SIZE = 12;\nexport const MUST_FONT_FAMILY = 'sans-serif';\nexport const SHEET_NAME_PREFIX = 'Sheet';\nexport const CELL_HEIGHT = 22;\nexport const CELL_WIDTH = 76;\nexport const ROW_TITLE_HEIGHT = CELL_HEIGHT;\nexport const COL_TITLE_WIDTH = CELL_WIDTH / 2;\nexport const HIDE_CELL = 0;\nexport const TEXTAREA_MAX_ROWS = 10;\nexport const MERGE_CELL_LINE_BREAK = '&#10;';\nexport const LINE_BREAK = '\\n';\nexport const CSV_SPLITTER = ',';\nexport const XLSX_MAX_COL_COUNT = 16384; // XFD\nexport const XLSX_MAX_ROW_COUNT = 1048576;\nexport const DEFAULT_ROW_COUNT = 200;\nexport const MAX_ADD_ROW_THRESHOLD = 200;\nexport const DEFAULT_COL_COUNT = 30;\nexport const DEFAULT_POSITION = -999;\nexport const FILTER_RECT_SIZE = 16;\n\nexport const SHEET_ITEM_TEST_ID_PREFIX = '__sheet_item_';\nexport const FORMULA_PREFIX = '=';\nexport const SPLITTER = '_';\nexport const MAX_NAME_LENGTH = 35;\nexport const MAX_PARAMS_COUNT = 256;\nexport const FORMULA_MAX_PRECISION = 9;\nexport const FORMULA_EDITOR_ROLE = '__FORMULA_EDITOR_ROLE__';\n\nexport const DEFAULT_FORMAT_CODE = 'General';\nexport const DEFAULT_TEXT_FORMAT_CODE = '@';\n\nexport const ERROR_SET = new Set([\n  '#GETTING_DATA',\n  '#DIV/0!',\n  '#NULL!',\n  '#NUM!',\n  '#REF!',\n  '#VALUE!',\n  '#N/A',\n  '#NAME?',\n] as const);\n\nexport type ErrorTypes = typeof ERROR_SET extends Set<infer T> ? T : never;\n\nexport const DEFAULT_LINE_WIDTH = 1;\n\nexport const BORDER_TYPE_MAP: Record<BorderType, number> = {\n  thin: DEFAULT_LINE_WIDTH,\n  hair: DEFAULT_LINE_WIDTH,\n  dotted: DEFAULT_LINE_WIDTH,\n  dashed: DEFAULT_LINE_WIDTH,\n  dashDot: DEFAULT_LINE_WIDTH,\n  dashDotDot: DEFAULT_LINE_WIDTH,\n  double: DEFAULT_LINE_WIDTH,\n  medium: DEFAULT_LINE_WIDTH * 2,\n  mediumDashed: DEFAULT_LINE_WIDTH * 2,\n  mediumDashDot: DEFAULT_LINE_WIDTH * 2,\n  mediumDashDotDot: DEFAULT_LINE_WIDTH * 2,\n  thick: DEFAULT_LINE_WIDTH * 4,\n};\n\nexport const COLOR_PICKER_COLOR_LIST = [\n  '#35322B',\n  '#505050',\n  '#606060',\n  '#6F6F6F',\n  '#8B8B8B',\n  '#B2B2B2',\n  '#CCCCCC',\n  '#E5E5E5',\n  '#F5F5F5',\n  '#FFFFFF',\n  '#9D0000',\n  '#B20000',\n  '#CD0F0F',\n  '#E30909',\n  '#F30B0B',\n  '#FE4B4B',\n  '#FA7979',\n  '#FB9D9D',\n  '#FDCECE',\n  '#FEE7E7',\n  '#B24000',\n  '#CC4F10',\n  '#DF5D00',\n  '#F96800',\n  '#FB8937',\n  '#FF8C51',\n  '#FCA669',\n  '#FDC49B',\n  '#FEE1CD',\n  '#FEF0E6',\n  '#B19401',\n  '#C5A300',\n  '#D8B300',\n  '#EBC301',\n  '#F9D700',\n  '#FBE137',\n  '#FCE869',\n  '#FDF09B',\n  '#FEF7CD',\n  '#FEFBE6',\n  '#58770A',\n  '#688C0D',\n  '#7AA017',\n  '#8BBB11',\n  '#A4DC16',\n  '#BEEE44',\n  '#CEF273',\n  '#DEF6A2',\n  '#EFFBD0',\n  '#F7FDE8',\n  '#007676',\n  '#008A8A',\n  '#009E9E',\n  '#00BBBB',\n  '#1CD8D8',\n  '#2AEAEA',\n  '#76EFEF',\n  '#A3F5F5',\n  '#D1FAFA',\n  '#E8FCFC',\n  '#001F9C',\n  '#0025B7',\n  '#012BD2',\n  '#133DE3',\n  '#2F55EB',\n  '#4567ED',\n  '#738DF2',\n  '#A2B3F6',\n  '#D0D9FB',\n  '#E8ECFD',\n  '#3F0198',\n  '#510EB0',\n  '#6721CB',\n  '#7735D4',\n  '#894EDE',\n  '#9E6DE3',\n  '#AA82E3',\n  '#C7ABED',\n  '#E3D5F6',\n  '#F1EAFA',\n  '#8F0550',\n  '#A1095C',\n  '#C1026B',\n  '#D4157E',\n  '#E7258F',\n  '#F248A6',\n  '#F273B9',\n  '#F6A2D0',\n  '#FBD0E8',\n  '#FDE8F3',\n];\n\nexport const TEXT_FLAG = '#TEXT' as const;\n\nexport const CELL_REG_EXP = /^[$]?[A-Za-z]{1,3}[$]?[1-9][0-9]*$/;\nexport const COLUMN_REG_EXP = /^[$]?[A-Za-z]{1,3}$/;\nexport const ROW_REG_EXP = /^\\$[1-9][0-9]*$/;\nexport const DEFINED_NAME_REG_EXP = /^[a-zA-Z_][a-zA-Z0-9_.?]*$/;\n\nexport const BUILT_IN_FUNCTION_SET = new Set([\n  'ABS',\n  'ACCRINT',\n  'ACCRINTM',\n  'ACOS',\n  'ACOSH',\n  'ACOT',\n  'ACOTH',\n  'ADDRESS',\n  'AGGREGATE',\n  'AMORDEGRC',\n  'AMORLINC',\n  'AND',\n  'ARABIC',\n  'AREAS',\n  'ARRAYTOTEXT',\n  'ASC',\n  'ASIN',\n  'ASINH',\n  'ATAN',\n  'ATAN2',\n  'ATANH',\n  'AVEDEV',\n  'AVERAGE',\n  'AVERAGEA',\n  'AVERAGEIF',\n  'AVERAGEIFS',\n  'BAHTTEXT',\n  'BASE',\n  'BESSELI',\n  'BESSELJ',\n  'BESSELK',\n  'BESSELY',\n  'BETA.DIST',\n  'BETA.INV',\n  'BETADIST',\n  'BETAINV',\n  'BIN2DEC',\n  'BIN2HEX',\n  'BIN2OCT',\n  'BINOM.DIST',\n  'BINOM.DIST.RANGE',\n  'BINOM.INV',\n  'BINOMDIST',\n  'BITAND',\n  'BITLSHIFT',\n  'BITOR',\n  'BITRSHIFT',\n  'BITXOR',\n  'CALL',\n  'CEILING',\n  'CEILING.MATH',\n  'CEILING.PRECISE',\n  'CELL',\n  'CHAR',\n  'CHIDIST',\n  'CHIINV',\n  'CHISQ.DIST',\n  'CHISQ.DIST.RT',\n  'CHISQ.INV',\n  'CHISQ.INV.RT',\n  'CHISQ.TEST',\n  'CHITEST',\n  'CLEAN',\n  'CODE',\n  'COLUMN',\n  'COLUMNS',\n  'COMBIN',\n  'COMBINA',\n  'COMPLEX',\n  'CONCAT',\n  'CONCATENATE',\n  'CONFIDENCE',\n  'CONFIDENCE.NORM',\n  'CONFIDENCE.T',\n  'CONVERT',\n  'CORREL',\n  'COS',\n  'COSH',\n  'COT',\n  'COTH',\n  'COUNT',\n  'COUNTA',\n  'COUNTBLANK',\n  'COUNTIF',\n  'COUNTIFS',\n  'COUPDAYBS',\n  'COUPDAYS',\n  'COUPDAYSNC',\n  'COUPNCD',\n  'COUPNUM',\n  'COUPPCD',\n  'COVAR',\n  'COVARIANCE.P',\n  'COVARIANCE.S',\n  'CRITBINOM',\n  'CSC',\n  'CSCH',\n  'CUBEKPIMEMBER',\n  'CUBEMEMBER',\n  'CUBEMEMBERPROPERTY',\n  'CUBERANKEDMEMBER',\n  'CUBESET',\n  'CUBESETCOUNT',\n  'CUBEVALUE',\n  'CUMIPMT',\n  'CUMPRINC',\n  'DATE',\n  'DATEDIF',\n  'DATEVALUE',\n  'DAVERAGE',\n  'DAY',\n  'DAYS',\n  'DAYS360',\n  'DB',\n  'DBCS',\n  'DCOUNT',\n  'DCOUNTA',\n  'DDB',\n  'DEC2BIN',\n  'DEC2HEX',\n  'DEC2OCT',\n  'DECIMAL',\n  'DEGREES',\n  'DELTA',\n  'DEVSQ',\n  'DGET',\n  'DISC',\n  'DMAX',\n  'DMIN',\n  'DOLLAR',\n  'DOLLARDE',\n  'DOLLARFR',\n  'DPRODUCT',\n  'DSTDEV',\n  'DSTDEVP',\n  'DSUM',\n  'DURATION',\n  'DVAR',\n  'DVARP',\n  'EDATE',\n  'EFFECT',\n  'ENCODEURL',\n  'EOMONTH',\n  'ERF',\n  'ERF.PRECISE',\n  'ERFC',\n  'ERFC.PRECISE',\n  'ERROR.TYPE',\n  'EUROCONVERT',\n  'EVEN',\n  'EXACT',\n  'EXP',\n  'EXPON.DIST',\n  'EXPONDIST',\n  'F.DIST',\n  'F.DIST.RT',\n  'F.INV',\n  'F.INV.RT',\n  'F.TEST',\n  'FACT',\n  'FACTDOUBLE',\n  'FALSE',\n  'FDIST',\n  'FILTER',\n  'FILTERXML',\n  'FIND',\n  'FINDB',\n  'FINV',\n  'FISHER',\n  'FISHERINV',\n  'FIXED',\n  'FLOOR',\n  'FLOOR.MATH',\n  'FLOOR.PRECISE',\n  'FORECAST',\n  'FORECAST.ETS',\n  'FORECAST.ETS.CONFINT',\n  'FORECAST.ETS.SEASONALITY',\n  'FORECAST.ETS.STAT',\n  'FORECAST.LINEAR',\n  'FORMULATEXT',\n  'FREQUENCY',\n  'FTEST',\n  'FV',\n  'FVSCHEDULE',\n  'GAMMA',\n  'GAMMA.DIST',\n  'GAMMA.INV',\n  'GAMMADIST',\n  'GAMMAINV',\n  'GAMMALN',\n  'GAMMALN.PRECISE',\n  'GAUSS',\n  'GCD',\n  'GEOMEAN',\n  'GESTEP',\n  'GETPIVOTDATA',\n  'GROWTH',\n  'HARMEAN',\n  'HEX2BIN',\n  'HEX2DEC',\n  'HEX2OCT',\n  'HLOOKUP',\n  'HOUR',\n  'HYPERLINK',\n  'HYPGEOM.DIST',\n  'HYPGEOMDIST',\n  'IFERROR',\n  'IFNA',\n  'IFS',\n  'IMABS',\n  'IMAGINARY',\n  'IMARGUMENT',\n  'IMCONJUGATE',\n  'IMCOS',\n  'IMCOSH',\n  'IMCOT',\n  'IMCSC',\n  'IMCSCH',\n  'IMDIV',\n  'IMEXP',\n  'IMLN',\n  'IMLOG10',\n  'IMLOG2',\n  'IMPOWER',\n  'IMPRODUCT',\n  'IMREAL',\n  'IMSEC',\n  'IMSECH',\n  'IMSIN',\n  'IMSINH',\n  'IMSQRT',\n  'IMSUB',\n  'IMSUM',\n  'IMTAN',\n  'INFO',\n  'INT',\n  'INTERCEPT',\n  'INTRATE',\n  'IPMT',\n  'IRR',\n  'ISBLANK',\n  'ISERR',\n  'ISERROR',\n  'ISEVEN',\n  'ISFORMULA',\n  'ISLOGICAL',\n  'ISNA',\n  'ISNONTEXT',\n  'ISNUMBER',\n  'ISO.CEILING',\n  'ISODD',\n  'ISOWEEKNUM',\n  'ISPMT',\n  'ISREF',\n  'ISTEXT',\n  'JIS',\n  'KURT',\n  'LARGE',\n  'LCM',\n  'LEFT',\n  'LEFTB',\n  'LEN',\n  'LENB',\n  'LET',\n  'LINEST',\n  'LN',\n  'LOG',\n  'LOG10',\n  'LOGEST',\n  'LOGINV',\n  'LOGNORM.DIST',\n  'LOGNORM.INV',\n  'LOGNORMDIST',\n  'LOOKUP',\n  'LOWER',\n  'MATCH',\n  'MAX',\n  'MAXA',\n  'MAXIFS',\n  'MDETERM',\n  'MDURATION',\n  'MEDIAN',\n  'MID',\n  'MIDB',\n  'MIN',\n  'MINA',\n  'MINIFS',\n  'MINUTE',\n  'MINVERSE',\n  'MIRR',\n  'MMULT',\n  'MOD',\n  'MODE',\n  'MODE.MULT',\n  'MODE.SNGL',\n  'MONTH',\n  'MROUND',\n  'MULTINOMIAL',\n  'MUNIT',\n  'N',\n  'NA',\n  'NEGBINOM.DIST',\n  'NEGBINOMDIST',\n  'NETWORKDAYS',\n  'NETWORKDAYS.INTL',\n  'NOMINAL',\n  'NORM.DIST',\n  'NORM.INV',\n  'NORM.S.DIST',\n  'NORM.S.INV',\n  'NORMDIST',\n  'NORMINV',\n  'NORMSDIST',\n  'NORMSINV',\n  'NOT',\n  'NOW',\n  'NPER',\n  'NPV',\n  'NUMBERVALUE',\n  'OCT2BIN',\n  'OCT2DEC',\n  'OCT2HEX',\n  'ODD',\n  'ODDFPRICE',\n  'ODDFYIELD',\n  'ODDLPRICE',\n  'ODDLYIELD',\n  'OR',\n  'PDURATION',\n  'PEARSON',\n  'PERCENTILE',\n  'PERCENTILE.EXC',\n  'PERCENTILE.INC',\n  'PERCENTRANK',\n  'PERCENTRANK.EXC',\n  'PERCENTRANK.INC',\n  'PERMUT',\n  'PERMUTATIONA',\n  'PHI',\n  'PHONETIC',\n  'PI',\n  'PMT',\n  'POISSON',\n  'POISSON.DIST',\n  'POWER',\n  'PPMT',\n  'PRICE',\n  'PRICEDISC',\n  'PRICEMAT',\n  'PROB',\n  'PRODUCT',\n  'PROPER',\n  'PV',\n  'QUARTILE',\n  'QUARTILE.EXC',\n  'QUARTILE.INC',\n  'QUOTIENT',\n  'RADIANS',\n  'RAND',\n  'RANDARRAY',\n  'RANDBETWEEN',\n  'RANK',\n  'RANK.AVG',\n  'RANK.EQ',\n  'RATE',\n  'RECEIVED',\n  'REGISTER.ID',\n  'REPLACE',\n  'REPLACEB',\n  'REPT',\n  'RIGHT',\n  'RIGHTB',\n  'ROMAN',\n  'ROUND',\n  'ROUNDDOWN',\n  'ROUNDUP',\n  'ROW',\n  'ROWS',\n  'RRI',\n  'RSQ',\n  'RTD',\n  'SEARCH',\n  'SEARCHB',\n  'SEC',\n  'SECH',\n  'SECOND',\n  'SEQUENCE',\n  'SERIESSUM',\n  'SHEET',\n  'SHEETS',\n  'SIGN',\n  'SIN',\n  'SINH',\n  'SKEW',\n  'SKEW.P',\n  'SLN',\n  'SLOPE',\n  'SMALL',\n  'SORT',\n  'SORTBY',\n  'SQRT',\n  'SQRTPI',\n  'STANDARDIZE',\n  'STDEV',\n  'STDEV.P',\n  'STDEV.S',\n  'STDEVA',\n  'STDEVP',\n  'STDEVPA',\n  'STEYX',\n  'SUBSTITUTE',\n  'SUBTOTAL',\n  'SUM',\n  'SUMIF',\n  'SUMIFS',\n  'SUMPRODUCT',\n  'SUMSQ',\n  'SUMX2MY2',\n  'SUMX2PY2',\n  'SUMXMY2',\n  'SWITCH',\n  'SYD',\n  'T',\n  'T.DIST',\n  'T.DIST.2T',\n  'T.DIST.RT',\n  'T.INV',\n  'T.INV.2T',\n  'T.TEST',\n  'TAN',\n  'TANH',\n  'TBILLEQ',\n  'TBILLPRICE',\n  'TBILLYIELD',\n  'TDIST',\n  'TEXT',\n  'TEXTJOIN',\n  'TIME',\n  'TIMEVALUE',\n  'TINV',\n  'TODAY',\n  'TRANSPOSE',\n  'TREND',\n  'TRIM',\n  'TRIMMEAN',\n  'TRUE',\n  'TRUNC',\n  'TTEST',\n  'TYPE',\n  'UNICHAR',\n  'UNICODE',\n  'UNIQUE',\n  'UPPER',\n  'VALUE',\n  'VALUETOTEXT',\n  'VAR',\n  'VAR.P',\n  'VAR.S',\n  'VARA',\n  'VARP',\n  'VARPA',\n  'VDB',\n  'VLOOKUP',\n  'WEBSERVICE',\n  'WEEKDAY',\n  'WEEKNUM',\n  'WEIBULL',\n  'WEIBULL.DIST',\n  'WORKDAY',\n  'WORKDAY.INTL',\n  'XIRR',\n  'XLOOKUP',\n  'XMATCH',\n  'XNPV',\n  'XOR',\n  'YEAR',\n  'YEARFRAC',\n  'YIELD',\n  'YIELDDISC',\n  'YIELDMAT',\n  'Z.TEST',\n  'ZTEST',\n] as const);\n\nexport type BuiltInFormulas = typeof BUILT_IN_FUNCTION_SET extends Set<infer T>\n  ? T\n  : never;\n","import {\n  SHEET_NAME_PREFIX,\n  SPLITTER,\n  FORMULA_PREFIX,\n  MERGE_CELL_LINE_BREAK,\n} from './constant';\nimport type {\n  WorksheetType,\n  ChangeEventType,\n  Coordinate,\n  ICommandItem,\n  ResultType,\n} from '@/types';\n\nexport function parseNumber(value: any): [boolean, number] {\n  if (typeof value === 'boolean') {\n    return [true, Number(value)];\n  }\n  if (typeof value === 'number' && !isNaN(value)) {\n    return [true, value];\n  }\n  if (typeof value !== 'string') {\n    return [false, 0];\n  }\n  if (value.length > 12) {\n    return [false, 0];\n  }\n  const temp = Number(value);\n  if (isNaN(temp)) {\n    return [false, 0];\n  }\n  return [true, temp];\n}\n\nexport function getListMaxNum(list: string[] = []): number {\n  const idList: number[] = list\n    .map((item) => {\n      return parseNumber(item)[1];\n    })\n    .filter((v) => !isNaN(v));\n  return Math.max(Math.max(...idList), 0);\n}\n\nexport function getDefaultSheetInfo(\n  list: WorksheetType[] = [],\n): Pick<WorksheetType, 'name' | 'sheetId' | 'sort'> {\n  const sheetId =\n    Math.ceil(getListMaxNum(list.map((item) => item.sheetId))) + 1;\n  return {\n    name: `${SHEET_NAME_PREFIX}${sheetId}`,\n    sheetId: String(sheetId),\n    sort: sheetId,\n  };\n}\n\nexport function convertStringToResultType(value: any): ResultType {\n  if (typeof value === 'string') {\n    const temp = value.toUpperCase();\n    if (['TRUE', 'FALSE'].includes(temp)) {\n      return temp === 'TRUE';\n    }\n  }\n  if (typeof value === 'boolean') {\n    return value;\n  }\n  if (value === '') {\n    return '';\n  }\n  const [check, num] = parseNumber(value);\n  if (check) {\n    return num;\n  }\n  return value;\n}\n\nexport function coordinateToString(\n  row: number,\n  col: number,\n): `${number}_${number}` {\n  return `${row}${SPLITTER}${col}`;\n}\n\nexport function stringToCoordinate(key: string): Coordinate {\n  const [row, col] = key.split(SPLITTER);\n  const r = parseInt(row, 10);\n  const c = parseInt(col, 10);\n  return {\n    row: isNaN(r) ? -1 : r,\n    col: isNaN(c) ? -1 : c,\n  };\n}\n\nexport function getCustomWidthOrHeightKey(\n  sheetId: string,\n  rowOrCol: number,\n): `${string}_${number}` {\n  return `${sheetId}${SPLITTER}${rowOrCol}`;\n}\n\nexport function widthOrHeightKeyToData(key: string) {\n  const [sheetId, num] = key.split(SPLITTER);\n  const r = parseInt(num, 10);\n  return {\n    sheetId,\n    rowOrCol: isNaN(r) ? -1 : r,\n  };\n}\n\nexport function generateUUID() {\n  let d = new Date().getTime();\n\n  const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\n    /[xy]/g,\n    function (c) {\n      const r = (d + Math.random() * 16) % 16 | 0;\n      d = Math.floor(d / 16);\n      return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n    },\n  );\n\n  return uuid;\n}\n\nexport function isMobile() {\n  const matchList = [\n    /Android/i,\n    /webOS/i,\n    /iPhone/i,\n    /iPad/i,\n    /iPod/i,\n    /BlackBerry/i,\n    /Windows Phone/i,\n  ];\n  const ua = navigator.userAgent;\n  return matchList.some((v) => ua.match(v));\n}\n\nexport function modelToChangeSet(list: ICommandItem[]) {\n  const result = new Set<ChangeEventType>();\n  for (const item of list) {\n    const type = item.type;\n    result.add(type);\n    if (type === 'worksheets') {\n      if (item.key.includes('style')) {\n        result.add('cellStyle');\n      } else if (item.key.includes('value') || item.key.includes('formula')) {\n        result.add('cellValue');\n      } else {\n        result.add('cellValue');\n        result.add('cellStyle');\n      }\n    } else if (type === 'workbook') {\n      if (item.key.includes('rowCount')) {\n        result.add('row');\n      }\n      if (item.key.includes('colCount')) {\n        result.add('col');\n      }\n    } else if (type === 'customHeight') {\n      result.add('row');\n    } else if (type === 'customWidth') {\n      result.add('col');\n    } else if (type === 'autoFilter') {\n      result.add('autoFilter');\n    }\n  }\n  return result;\n}\n\nexport function sleep(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport function isTestEnv(): boolean {\n  return process.env.NODE_ENV === 'test';\n}\n\nexport function isMac() {\n  return navigator.userAgent.indexOf('Mac OS X') > -1;\n}\n\nexport function isFormula(value: ResultType) {\n  if (\n    typeof value === 'string' &&\n    value &&\n    value.startsWith(FORMULA_PREFIX) &&\n    value.length > 1\n  ) {\n    return true;\n  }\n  return false;\n}\n\nexport function isMergeContent(isMergeCell: boolean, text: string) {\n  return isMergeCell && text.includes(MERGE_CELL_LINE_BREAK);\n}\n","import type { ResultType } from '@/types';\nimport { parseNumber } from '@/util/util';\nimport { type ErrorTypes } from '@/util/constant';\n\nexport class CustomError extends Error {\n  readonly value: ErrorTypes | '#TEXT';\n  constructor(value: ErrorTypes | '#TEXT') {\n    super(value);\n    this.value = value;\n  }\n}\n\nexport function assert(\n  condition: boolean,\n  message: ErrorTypes = '#VALUE!',\n): asserts condition {\n  if (!condition) {\n    throw new CustomError(message);\n  }\n}\n\nexport function mustOne(list: ResultType[]): ResultType {\n  assert(list.length === 1);\n  const [value] = list;\n  return value;\n}\n\nexport function mustOneString(list: ResultType[]): string {\n  const value = mustOne(list);\n  assert(typeof value === 'string');\n  return value;\n}\n\nexport function mustOneNumber(list: ResultType[]): number {\n  const value = mustOne(list);\n  const [check, num] = parseNumber(value);\n  assert(check);\n  return num;\n}\n\nexport function mustEmpty(list: ResultType[]) {\n  assert(list.length === 0);\n}\n","/* ssf.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*jshint -W041 */\nvar SSF = ({});\nfunction make_ssf(SSF){\nSSF.version = '0.11.3';\nfunction _strrev(x) { var o = \"\", i = x.length-1; while(i>=0) o += x.charAt(i--); return o; }\nfunction fill(c,l) { var o = \"\"; while(o.length < l) o+=c; return o; }\nfunction pad0(v,d){var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad_(v,d){var t=\"\"+v;return t.length>=d?t:fill(' ',d-t.length)+t;}\nfunction rpad_(v,d){var t=\"\"+v; return t.length>=d?t:t+fill(' ',d-t.length);}\nfunction pad0r1(v,d){var t=\"\"+Math.round(v); return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad0r2(v,d){var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nvar p2_32 = Math.pow(2,32);\nfunction pad0r(v,d){if(v>p2_32||v<-p2_32) return pad0r1(v,d); var i = Math.round(v); return pad0r2(i,d); }\nfunction isgeneral(s, i) { i = i || 0; return s.length >= 7 + i && (s.charCodeAt(i)|32) === 103 && (s.charCodeAt(i+1)|32) === 101 && (s.charCodeAt(i+2)|32) === 110 && (s.charCodeAt(i+3)|32) === 101 && (s.charCodeAt(i+4)|32) === 114 && (s.charCodeAt(i+5)|32) === 97 && (s.charCodeAt(i+6)|32) === 108; }\nvar days = [\n\t['Sun', 'Sunday'],\n\t['Mon', 'Monday'],\n\t['Tue', 'Tuesday'],\n\t['Wed', 'Wednesday'],\n\t['Thu', 'Thursday'],\n\t['Fri', 'Friday'],\n\t['Sat', 'Saturday']\n];\nvar months = [\n\t['J', 'Jan', 'January'],\n\t['F', 'Feb', 'February'],\n\t['M', 'Mar', 'March'],\n\t['A', 'Apr', 'April'],\n\t['M', 'May', 'May'],\n\t['J', 'Jun', 'June'],\n\t['J', 'Jul', 'July'],\n\t['A', 'Aug', 'August'],\n\t['S', 'Sep', 'September'],\n\t['O', 'Oct', 'October'],\n\t['N', 'Nov', 'November'],\n\t['D', 'Dec', 'December']\n];\nfunction init_table(t) {\n\tt[0]=  'General';\n\tt[1]=  '0';\n\tt[2]=  '0.00';\n\tt[3]=  '#,##0';\n\tt[4]=  '#,##0.00';\n\tt[9]=  '0%';\n\tt[10]= '0.00%';\n\tt[11]= '0.00E+00';\n\tt[12]= '# ?/?';\n\tt[13]= '# ??/??';\n\tt[14]= 'm/d/yy';\n\tt[15]= 'd-mmm-yy';\n\tt[16]= 'd-mmm';\n\tt[17]= 'mmm-yy';\n\tt[18]= 'h:mm AM/PM';\n\tt[19]= 'h:mm:ss AM/PM';\n\tt[20]= 'h:mm';\n\tt[21]= 'h:mm:ss';\n\tt[22]= 'm/d/yy h:mm';\n\tt[37]= '#,##0 ;(#,##0)';\n\tt[38]= '#,##0 ;[Red](#,##0)';\n\tt[39]= '#,##0.00;(#,##0.00)';\n\tt[40]= '#,##0.00;[Red](#,##0.00)';\n\tt[45]= 'mm:ss';\n\tt[46]= '[h]:mm:ss';\n\tt[47]= 'mmss.0';\n\tt[48]= '##0.0E+0';\n\tt[49]= '@';\n\tt[56]= '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"';\n}\n\nvar table_fmt = {};\ninit_table(table_fmt);\n/* Defaults determined by systematically testing in Excel 2019 */\n\n/* These formats appear to default to other formats in the table */\nvar default_map = [];\nvar defi = 0;\n\n//  5 -> 37 ...  8 -> 40\nfor(defi = 5; defi <= 8; ++defi) default_map[defi] = 32 + defi;\n\n// 23 ->  0 ... 26 ->  0\nfor(defi = 23; defi <= 26; ++defi) default_map[defi] = 0;\n\n// 27 -> 14 ... 31 -> 14\nfor(defi = 27; defi <= 31; ++defi) default_map[defi] = 14;\n// 50 -> 14 ... 58 -> 14\nfor(defi = 50; defi <= 58; ++defi) default_map[defi] = 14;\n\n// 59 ->  1 ... 62 ->  4\nfor(defi = 59; defi <= 62; ++defi) default_map[defi] = defi - 58;\n// 67 ->  9 ... 68 -> 10\nfor(defi = 67; defi <= 68; ++defi) default_map[defi] = defi - 58;\n// 72 -> 14 ... 75 -> 17\nfor(defi = 72; defi <= 75; ++defi) default_map[defi] = defi - 58;\n\n// 69 -> 12 ... 71 -> 14\nfor(defi = 67; defi <= 68; ++defi) default_map[defi] = defi - 57;\n\n// 76 -> 20 ... 78 -> 22\nfor(defi = 76; defi <= 78; ++defi) default_map[defi] = defi - 56;\n\n// 79 -> 45 ... 81 -> 47\nfor(defi = 79; defi <= 81; ++defi) default_map[defi] = defi - 34;\n\n// 82 ->  0 ... 65536 -> 0 (omitted)\n\n/* These formats technically refer to Accounting formats with no equivalent */\nvar default_str = {\n\t//  5 -- Currency,   0 decimal, black negative\n\t5:  '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n\t63: '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n\n\t//  6 -- Currency,   0 decimal, red   negative\n\t6:  '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n\t64: '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n\n\t//  7 -- Currency,   2 decimal, black negative\n\t7:  '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n\t65: '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n\n\t//  8 -- Currency,   2 decimal, red   negative\n\t8:  '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\t66: '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\n\t// 41 -- Accounting, 0 decimal, No Symbol\n\t41: '_(* #,##0_);_(* \\\\(#,##0\\\\);_(* \"-\"_);_(@_)',\n\n\t// 42 -- Accounting, 0 decimal, $  Symbol\n\t42: '_(\"$\"* #,##0_);_(\"$\"* \\\\(#,##0\\\\);_(\"$\"* \"-\"_);_(@_)',\n\n\t// 43 -- Accounting, 2 decimal, No Symbol\n\t43: '_(* #,##0.00_);_(* \\\\(#,##0.00\\\\);_(* \"-\"??_);_(@_)',\n\n\t// 44 -- Accounting, 2 decimal, $  Symbol\n\t44: '_(\"$\"* #,##0.00_);_(\"$\"* \\\\(#,##0.00\\\\);_(\"$\"* \"-\"??_);_(@_)'\n};\n\nfunction frac(x, D, mixed) {\n\tvar sgn = x < 0 ? -1 : 1;\n\tvar B = x * sgn;\n\tvar P_2 = 0, P_1 = 1, P = 0;\n\tvar Q_2 = 1, Q_1 = 0, Q = 0;\n\tvar A = Math.floor(B);\n\twhile(Q_1 < D) {\n\t\tA = Math.floor(B);\n\t\tP = A * P_1 + P_2;\n\t\tQ = A * Q_1 + Q_2;\n\t\tif((B - A) < 0.00000005) break;\n\t\tB = 1 / (B - A);\n\t\tP_2 = P_1; P_1 = P;\n\t\tQ_2 = Q_1; Q_1 = Q;\n\t}\n\tif(Q > D) { if(Q_1 > D) { Q = Q_2; P = P_2; } else { Q = Q_1; P = P_1; } }\n\tif(!mixed) return [0, sgn * P, Q];\n\tvar q = Math.floor(sgn * P/Q);\n\treturn [q, sgn*P - q*Q, Q];\n}\nfunction normalize_xl_unsafe(v) {\n\tvar s = v.toPrecision(16);\n\tif(s.indexOf(\"e\") > -1) {\n\t\tvar m = s.slice(0, s.indexOf(\"e\"));\n\t\tm = m.indexOf(\".\") > -1 ? m.slice(0, (m.slice(0,2) == \"0.\" ? 17 : 16)) : (m.slice(0,15) + fill(\"0\", m.length - 15));\n\t\treturn m + s.slice(s.indexOf(\"e\"));\n\t}\n\tvar n = s.indexOf(\".\") > -1 ? s.slice(0, (s.slice(0,2) == \"0.\" ? 17 : 16)) : (s.slice(0,15) + fill(\"0\", s.length - 15));\n\treturn Number(n);\n}\n\nfunction parse_date_code(v,opts,b2) {\n\tif(v > 2958465 || v < 0) return null;\n\tv = normalize_xl_unsafe(v);\n\tvar date = (v|0), time = Math.floor(86400 * (v - date)), dow=0;\n\tvar dout=[];\n\tvar out={D:date, T:time, u:86400*(v-date)-time,y:0,m:0,d:0,H:0,M:0,S:0,q:0};\n\tif(Math.abs(out.u) < 1e-6) out.u = 0;\n\tif(opts && opts.date1904) date += 1462;\n\tif(out.u > 0.9999) {\n\t\tout.u = 0;\n\t\tif(++time == 86400) { out.T = time = 0; ++date; ++out.D; }\n\t}\n\tif(date === 60) {dout = b2 ? [1317,10,29] : [1900,2,29]; dow=3;}\n\telse if(date === 0) {dout = b2 ? [1317,8,29] : [1900,1,0]; dow=6;}\n\telse {\n\t\tif(date > 60) --date;\n\t\t/* 1 = Jan 1 1900 in Gregorian */\n\t\tvar d = new Date(1900, 0, 1);\n\t\td.setDate(d.getDate() + date - 1);\n\t\tdout = [d.getFullYear(), d.getMonth()+1,d.getDate()];\n\t\tdow = d.getDay();\n\t\tif(date < 60) dow = (dow + 6) % 7;\n\t\tif(b2) dow = fix_hijri(d, dout);\n\t}\n\tout.y = dout[0]; out.m = dout[1]; out.d = dout[2];\n\tout.S = time % 60; time = Math.floor(time / 60);\n\tout.M = time % 60; time = Math.floor(time / 60);\n\tout.H = time;\n\tout.q = dow;\n\treturn out;\n}\nSSF.parse_date_code = parse_date_code;\nvar basedate = new Date(1899, 11, 31, 0, 0, 0);\nvar dnthresh = basedate.getTime();\nvar base1904 = new Date(1900, 2, 1, 0, 0, 0);\nfunction datenum_local(v, date1904) {\n\tvar epoch = v.getTime();\n\tif(date1904) epoch -= 1461*24*60*60*1000;\n\telse if(v >= base1904) epoch += 24*60*60*1000;\n\treturn (epoch - (dnthresh + (v.getTimezoneOffset() - basedate.getTimezoneOffset()) * 60000)) / (24 * 60 * 60 * 1000);\n}\n/* ECMA-376 18.8.30 numFmt*/\n/* Note: `toPrecision` uses standard form when prec > E and E >= -6 */\nvar general_fmt_num = (function make_general_fmt_num() {\n\tvar trailing_zeroes_and_decimal = /(?:\\.0*|(\\.\\d*[1-9])0+)$/;\n\tfunction strip_decimal(o) {\n\t\treturn (o.indexOf(\".\") == -1) ? o : o.replace(trailing_zeroes_and_decimal, \"$1\");\n\t}\n\n\t/* General Exponential always shows 2 digits exp and trims the mantissa */\n\tvar mantissa_zeroes_and_decimal = /(?:\\.0*|(\\.\\d*[1-9])0+)[Ee]/;\n\tvar exp_with_single_digit = /(E[+-])(\\d)$/;\n\tfunction normalize_exp(o) {\n\t\tif(o.indexOf(\"E\") == -1) return o;\n\t\treturn o.replace(mantissa_zeroes_and_decimal,\"$1E\").replace(exp_with_single_digit,\"$10$2\");\n\t}\n\n\t/* exponent >= -9 and <= 9 */\n\tfunction small_exp(v) {\n\t\tvar w = (v<0?12:11);\n\t\tvar o = strip_decimal(v.toFixed(12)); if(o.length <= w) return o;\n\t\to = v.toPrecision(10); if(o.length <= w) return o;\n\t\treturn v.toExponential(5);\n\t}\n\n\t/* exponent >= 11 or <= -10 likely exponential */\n\tfunction large_exp(v) {\n\t\tvar o = strip_decimal(v.toFixed(11));\n\t\treturn (o.length > (v<0?12:11) || o === \"0\" || o === \"-0\") ? v.toPrecision(6) : o;\n\t}\n\n\tfunction general_fmt_num_base(v) {\n\t\tvar V = Math.floor(Math.log(Math.abs(v))*Math.LOG10E), o;\n\n\t\tif(V >= -4 && V <= -1) o = v.toPrecision(10+V);\n\t\telse if(Math.abs(V) <= 9) o = small_exp(v);\n\t\telse if(V === 10) o = v.toFixed(10).substr(0,12);\n\t\telse o = large_exp(v);\n\n\t\treturn strip_decimal(normalize_exp(o.toUpperCase()));\n\t}\n\n\treturn general_fmt_num_base;\n})();\nSSF._general_num = general_fmt_num;\n\n/*\n\t\"General\" rules:\n\t- text is passed through (\"@\")\n\t- booleans are rendered as TRUE/FALSE\n\t- \"up to 11 characters\" displayed for numbers\n\t- Default date format (code 14) used for Dates\n\n\tThe longest 32-bit integer text is \"-2147483648\", exactly 11 chars\n\tTODO: technically the display depends on the width of the cell\n*/\nfunction general_fmt(v, opts) {\n\tswitch(typeof v) {\n\t\tcase 'string': return v;\n\t\tcase 'boolean': return v ? \"TRUE\" : \"FALSE\";\n\t\tcase 'number': return (v|0) === v ? v.toString(10) : general_fmt_num(v);\n\t\tcase 'undefined': return \"\";\n\t\tcase 'object':\n\t\t\tif(v == null) return \"\";\n\t\t\tif(v instanceof Date) return format(14, datenum_local(v, opts && opts.date1904), opts);\n\t}\n\tthrow new Error(\"unsupported value in General format: \" + v);\n}\nSSF._general = general_fmt;\nfunction fix_hijri(date, o) {\n  /* TODO: properly adjust y/m/d and  */\n  o[0] -= 581;\n  var dow = date.getDay();\n  if(date < 60) dow = (dow + 6) % 7;\n  return dow;\n}\nvar THAI_DIGITS = \"\\u0E50\\u0E51\\u0E52\\u0E53\\u0E54\\u0E55\\u0E56\\u0E57\\u0E58\\u0E59\".split(\"\");\n/*jshint -W086 */\nfunction write_date(type, fmt, val, ss0) {\n\tvar o=\"\", ss=0, tt=0, y = val.y, out, outl = 0;\n\tswitch(type) {\n\t\tcase 98: /* 'b' buddhist year */\n\t\t\ty = val.y + 543;\n\t\t\t/* falls through */\n\t\tcase 121: /* 'y' year */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = y % 100; outl = 2; break;\n\t\t\tdefault: out = y % 10000; outl = 4; break;\n\t\t} break;\n\t\tcase 109: /* 'm' month */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.m; outl = fmt.length; break;\n\t\t\tcase 3: return months[val.m-1][1];\n\t\t\tcase 5: return months[val.m-1][0];\n\t\t\tdefault: return months[val.m-1][2];\n\t\t} break;\n\t\tcase 100: /* 'd' day */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.d; outl = fmt.length; break;\n\t\t\tcase 3: return days[val.q][0];\n\t\t\tdefault: return days[val.q][1];\n\t\t} break;\n\t\tcase 104: /* 'h' 12-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = 1+(val.H+11)%12; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 72: /* 'H' 24-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.H; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 77: /* 'M' minutes */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.M; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad minute format: ' + fmt;\n\t\t} break;\n\t\tcase 115: /* 's' seconds */\n\t\t\tif(fmt != 's' && fmt != 'ss' && fmt != '.0' && fmt != '.00' && fmt != '.000') throw 'bad second format: ' + fmt;\n\t\t\tif(val.u === 0 && (fmt == \"s\" || fmt == \"ss\")) return pad0(val.S, fmt.length);\nif(ss0 >= 2) tt = ss0 === 3 ? 1000 : 100;\n\t\t\telse tt = ss0 === 1 ? 10 : 1;\n\t\t\tss = Math.round((tt)*(val.S + val.u));\n\t\t\tif(ss >= 60*tt) ss = 0;\n\t\t\tif(fmt === 's') return ss === 0 ? \"0\" : \"\"+ss/tt;\n\t\t\to = pad0(ss,2 + ss0);\n\t\t\tif(fmt === 'ss') return o.substr(0,2);\n\t\t\treturn \".\" + o.substr(2,fmt.length-1);\n\t\tcase 90: /* 'Z' absolute time */\n\t\tswitch(fmt) {\n\t\t\tcase '[h]': case '[hh]': out = val.D*24+val.H; break;\n\t\t\tcase '[m]': case '[mm]': out = (val.D*24+val.H)*60+val.M; break;\n\t\t\tcase '[s]': case '[ss]': out = ((val.D*24+val.H)*60+val.M)*60+(ss0 == 0 ? Math.round(val.S+val.u) : val.S); break;\n\t\t\tdefault: throw 'bad abstime format: ' + fmt;\n\t\t} outl = fmt.length === 3 ? 1 : 2; break;\n\t\tcase 101: /* 'e' era */\n\t\t\tout = y; outl = 1; break;\n\t}\n\tvar outstr = outl > 0 ? pad0(out, outl) : \"\";\n\treturn outstr;\n}\n/*jshint +W086 */\nfunction commaify(s) {\n\tvar w = 3;\n\tif(s.length <= w) return s;\n\tvar j = (s.length % w), o = s.substr(0,j);\n\tfor(; j!=s.length; j+=w) o+=(o.length > 0 ? \",\" : \"\") + s.substr(j,w);\n\treturn o;\n}\nvar write_num = (function make_write_num(){\nvar pct1 = /%/g;\nfunction write_num_pct(type, fmt, val){\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_cm(type, fmt, val){\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_exp(fmt, val){\n\tvar o;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(o.indexOf(\"e\") === -1) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\twhile(o.substr(0,2) === \"0.\") {\n\t\t\t\to = o.charAt(0) + o.substr(2,period) + \".\" + o.substr(2+period);\n\t\t\t\to = o.replace(/^0+([1-9])/,\"$1\").replace(/^0+\\./,\"0.\");\n\t\t\t}\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nvar frac1 = /# (\\?+)( ?)\\/( ?)(\\d+)/;\nfunction write_num_f1(r, aval, sign) {\n\tvar den = parseInt(r[4],10), rr = Math.round(aval * den), base = Math.floor(rr/den);\n\tvar myn = (rr - base*den), myd = den;\n\treturn sign + (base === 0 ? \"\" : \"\"+base) + \" \" + (myn === 0 ? fill(\" \", r[1].length + 1 + r[4].length) : pad_(myn,r[1].length) + r[2] + \"/\" + r[3] + pad0(myd,r[4].length));\n}\nfunction write_num_f2(r, aval, sign) {\n\treturn sign + (aval === 0 ? \"\" : \"\"+aval) + fill(\" \", r[1].length + 2 + r[4].length);\n}\nvar dec1 = /^#*0*\\.([0#]+)/;\nvar closeparen = /\\).*[0#]/;\nvar phone = /\\(###\\) ###\\\\?-####/;\nfunction hashq(str) {\n\tvar o = \"\", cc;\n\tfor(var i = 0; i != str.length; ++i) switch((cc=str.charCodeAt(i))) {\n\t\tcase 35: break;\n\t\tcase 63: o+= \" \"; break;\n\t\tcase 48: o+= \"0\"; break;\n\t\tdefault: o+= String.fromCharCode(cc);\n\t}\n\treturn o;\n}\nfunction rnd(val, d) { var dd = Math.pow(10,d); return \"\"+(Math.round(val * dd)/dd); }\nfunction dec(val, d) {\n\tvar _frac = val - Math.floor(val), dd = Math.pow(10,d);\n\tif (d < ('' + Math.round(_frac * dd)).length) return 0;\n\treturn Math.round(_frac * dd);\n}\nfunction carry(val, d) {\n\tif (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nfunction flr(val) {\n\tif(val < 2147483647 && val > -2147483648) return \"\"+(val >= 0 ? (val|0) : (val-1|0));\n\treturn \"\"+Math.floor(val);\n}\nfunction write_num_flt(type, fmt, val) {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_flt('n', ffmt, val);\n\t\treturn '(' + write_num_flt('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_flt(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0r(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = pad0r(val,0); if(o === \"0\") o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f1(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0r(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\n\t\to = rnd(val, r[1].length).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1])).replace(/\\.(\\d*)$/,function($$, $1) { return \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + rnd(aval, r[2].length).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify(pad0r(aval,0));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(\"\"+(Math.floor(val) + carry(val, r[1].length))) + \".\" + pad0(dec(val, r[1].length),r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_flt(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_flt(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_flt(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(r[4].length,7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", r[1], ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + r[2] + \"/\" + r[3];\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = pad0r(val, 0);\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0?]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\tri = dec(val, r[1].length);\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(flr(val)).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(ri,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,##0.00\": return write_num_flt(type, \"#,##0.00\", val);\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(pad0r(aval,0)); return x !== \"0\" ? sign + x : \"\";\n\t\tcase \"###,###.00\": return write_num_flt(type, \"###,##0.00\",val).replace(/^0\\./,\".\");\n\t\tcase \"#,###.00\": return write_num_flt(type, \"#,##0.00\",val).replace(/^0\\./,\".\");\n\t\tdefault:\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nfunction write_num_cm2(type, fmt, val){\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_pct2(type, fmt, val){\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_exp2(fmt, val){\n\tvar o;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp2(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(!o.match(/[Ee]/)) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nfunction write_num_int(type, fmt, val) {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_int('n', ffmt, val);\n\t\treturn '(' + write_num_int('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm2(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct2(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp2(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_int(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = (\"\"+val); if(val === 0) o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f2(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\no = (\"\"+val).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1]));\n\t\to = o.replace(/\\.(\\d*)$/,function($$, $1) {\nreturn \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + (\"\"+aval).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify((\"\"+aval));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify((\"\"+val)) + \".\" + fill('0',r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_int(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_int(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_int(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(r[4].length,7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", r[1], ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + r[2] + \"/\" + r[3];\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = \"\" + val;\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify(\"\"+val).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(0,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(\"\"+aval); return x !== \"0\" ? sign + x : \"\";\n\t\tdefault:\n\t\t\tif(fmt.match(/\\.[0#?]*$/)) return write_num_int(type, fmt.slice(0,fmt.lastIndexOf(\".\")), val) + hashq(fmt.slice(fmt.lastIndexOf(\".\")));\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nreturn function write_num(type, fmt, val) {\n\treturn (val|0) === val ? write_num_int(type, fmt, val) : write_num_flt(type, fmt, val);\n};})();\nfunction split_fmt(fmt) {\n\tvar out = [];\n\tvar in_str = false/*, cc*/;\n\tfor(var i = 0, j = 0; i < fmt.length; ++i) switch((/*cc=*/fmt.charCodeAt(i))) {\n\t\tcase 34: /* '\"' */\n\t\t\tin_str = !in_str; break;\n\t\tcase 95: case 42: case 92: /* '_' '*' '\\\\' */\n\t\t\t++i; break;\n\t\tcase 59: /* ';' */\n\t\t\tout[out.length] = fmt.substr(j,i-j);\n\t\t\tj = i+1;\n\t}\n\tout[out.length] = fmt.substr(j);\n\tif(in_str === true) throw new Error(\"Format |\" + fmt + \"| unterminated string \");\n\treturn out;\n}\nSSF._split = split_fmt;\nvar abstime = /\\[[HhMmSs\\u0E0A\\u0E19\\u0E17]*\\]/;\nfunction fmt_is_date(fmt) {\n\tvar i = 0, /*cc = 0,*/ c = \"\", o = \"\";\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': if(isgeneral(fmt, i)) i+= 6; i++; break;\n\t\t\tcase '\"': for(;(/*cc=*/fmt.charCodeAt(++i)) !== 34 && i < fmt.length;){/*empty*/} ++i; break;\n\t\t\tcase '\\\\': i+=2; break;\n\t\t\tcase '_': i+=2; break;\n\t\t\tcase '@': ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") return true;\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g': return true;\n\t\t\tcase 'A': case 'a': case '上':\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") return true;\n\t\t\t\tif(fmt.substr(i, 5).toUpperCase() === \"AM/PM\") return true;\n\t\t\t\tif(fmt.substr(i, 5).toUpperCase() === \"上午/下午\") return true;\n\t\t\t\t++i; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.match(abstime)) return true;\n\t\t\t\tbreak;\n\t\t\tcase '.':\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\twhile(i < fmt.length && (\"0#?.,E+-%\".indexOf(c=fmt.charAt(++i)) > -1 || (c=='\\\\' && fmt.charAt(i+1) == \"-\" && \"0#\".indexOf(fmt.charAt(i+2))>-1))){/* empty */}\n\t\t\t\tbreak;\n\t\t\tcase '?': while(fmt.charAt(++i) === c){/* empty */} break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break;\n\t\t\tcase '(': case ')': ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\twhile(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1){/* empty */} break;\n\t\t\tcase ' ': ++i; break;\n\t\t\tdefault: ++i; break;\n\t\t}\n\t}\n\treturn false;\n}\nSSF.is_date = fmt_is_date;\nfunction eval_fmt(fmt, v, opts, flen) {\n\tvar out = [], o = \"\", i = 0, c = \"\", lst='t', dt, j, cc;\n\tvar hr='H';\n\t/* Tokenize */\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': /* General */\n\t\t\t\tif(!isgeneral(fmt, i)) throw new Error('unrecognized character ' + c + ' in ' +fmt);\n\t\t\t\tout[out.length] = {t:'G', v:'General'}; i+=7; break;\n\t\t\tcase '\"': /* Literal text */\n\t\t\t\tfor(o=\"\";(cc=fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) o += String.fromCharCode(cc);\n\t\t\t\tout[out.length] = {t:'t', v:o}; ++i; break;\n\t\t\tcase '\\\\': var w = fmt.charAt(++i), t = (w === \"(\" || w === \")\") ? w : 't';\n\t\t\t\tout[out.length] = {t:t, v:w}; ++i; break;\n\t\t\tcase '_': out[out.length] = {t:'t', v:\" \"}; i+=2; break;\n\t\t\tcase '@': /* Text Placeholder */\n\t\t\t\tout[out.length] = {t:'T', v:v}; ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") {\n\t\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts, fmt.charAt(i+1) === \"2\"); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'X', v:fmt.substr(i,2)}; lst = c; i+=2; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\tc = c.toLowerCase();\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g':\n\t\t\t\tif(v < 0) return \"\";\n\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\to = c; while(++i < fmt.length && fmt.charAt(i).toLowerCase() === c) o+=c;\n\t\t\t\tif(c === 'm' && lst.toLowerCase() === 'h') c = 'M';\n\t\t\t\tif(c === 'h') c = hr;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase 'A': case 'a': case '上':\n\t\t\t\tvar q={t:c, v:c};\n\t\t\t\tif(dt==null) dt=parse_date_code(v, opts);\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") { if(dt!=null) q.v = dt.H >= 12 ? fmt.charAt(i+2) : c; q.t = 'T'; hr='h';i+=3;}\n\t\t\t\telse if(fmt.substr(i,5).toUpperCase() === \"AM/PM\") { if(dt!=null) q.v = dt.H >= 12 ? \"PM\" : \"AM\"; q.t = 'T'; i+=5; hr='h'; }\n\t\t\t\telse if(fmt.substr(i,5).toUpperCase() === \"上午/下午\") { if(dt!=null) q.v = dt.H >= 12 ? \"下午\" : \"上午\"; q.t = 'T'; i+=5; hr='h'; }\n\t\t\t\telse { q.t = \"t\"; ++i; }\n\t\t\t\tif(dt==null && q.t === 'T') return \"\";\n\t\t\t\tout[out.length] = q; lst = c; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.slice(-1) !== ']') throw 'unterminated \"[\" block: |' + o + '|';\n\t\t\t\tif(o.match(abstime)) {\n\t\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'Z', v:o.toLowerCase()};\n\t\t\t\t\tlst = o.charAt(1);\n\t\t\t\t} else if(o.indexOf(\"$\") > -1) {\n\t\t\t\t\to = (o.match(/\\$([^-\\[\\]]*)/)||[])[1]||\"$\";\n\t\t\t\t\tif(!fmt_is_date(fmt)) out[out.length] = {t:'t',v:o};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t/* Numbers */\n\t\t\tcase '.':\n\t\t\t\tif(dt != null) {\n\t\t\t\t\to = c; while(++i < fmt.length && (c=fmt.charAt(i)) === \"0\") o += c;\n\t\t\t\t\tout[out.length] = {t:'s', v:o}; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\to = c; while(++i < fmt.length && \"0#?.,E+-%\".indexOf(c=fmt.charAt(i)) > -1) o += c;\n\t\t\t\tout[out.length] = {t:'n', v:o}; break;\n\t\t\tcase '?':\n\t\t\t\to = c; while(fmt.charAt(++i) === c) o+=c;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break; // **\n\t\t\tcase '(': case ')': out[out.length] = {t:(flen===1?'t':c), v:c}; ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\to = c; while(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1) o+=fmt.charAt(i);\n\t\t\t\tout[out.length] = {t:'D', v:o}; break;\n\t\t\tcase ' ': out[out.length] = {t:c, v:c}; ++i; break;\n\t\t\tcase '$': out[out.length] = {t:'t', v:'$'}; ++i; break;\n\t\t\tdefault:\n\t\t\t\tif(\",$-+/():!^&'~{}<>=€acfijklopqrtuvwxzP\".indexOf(c) === -1) throw new Error('unrecognized character ' + c + ' in ' + fmt);\n\t\t\t\tout[out.length] = {t:'t', v:c}; ++i; break;\n\t\t}\n\t}\n\n\t/* Scan for date/time parts */\n\tvar bt = 0, ss0 = 0, ssm;\n\tfor(i=out.length-1, lst='t'; i >= 0; --i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 'h': case 'H': out[i].t = hr; lst='h'; if(bt < 1) bt = 1; break;\n\t\t\tcase 's':\n\t\t\t\tif((ssm=out[i].v.match(/\\.0+$/))) { ss0=Math.max(ss0,ssm[0].length-1); bt = 4;}\n\t\t\t\tif(bt < 3) bt = 3;\n\t\t\t/* falls through */\n\t\t\tcase 'd': case 'y': case 'e': lst=out[i].t; break;\n\t\t\tcase 'M': lst=out[i].t; if(bt < 2) bt = 2; break;\n\t\t\tcase 'm': if(lst === 's') { out[i].t = 'M'; if(bt < 2) bt = 2; } break;\n\t\t\tcase 'X': /*if(out[i].v === \"B2\");*/\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\tif(bt < 1 && out[i].v.match(/[Hh]/)) bt = 1;\n\t\t\t\tif(bt < 2 && out[i].v.match(/[Mm]/)) bt = 2;\n\t\t\t\tif(bt < 3 && out[i].v.match(/[Ss]/)) bt = 3;\n\t\t}\n\t}\n\n\t/* time rounding depends on presence of minute / second / usec fields */\n\tvar _dt;\n\tswitch(bt) {\n\t\tcase 0: break;\n\t\tcase 1:\n\t\tcase 2:\n\t\tcase 3:\n\t\t\tif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tif(dt.M >=  60) { dt.M = 0; ++dt.H; }\n\t\t\tif(dt.H >=  24) { dt.H = 0; ++dt.D; _dt = parse_date_code(dt.D); _dt.u = dt.u; _dt.S = dt.S; _dt.M = dt.M; _dt.H = dt.H; dt = _dt; }\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tswitch(ss0) {\n\t\t\t\tcase 1: dt.u = Math.round(dt.u * 10)/10; break;\n\t\t\t\tcase 2: dt.u = Math.round(dt.u * 100)/100; break;\n\t\t\t\tcase 3: dt.u = Math.round(dt.u * 1000)/1000; break;\n\t\t\t}\n\t\t\tif(dt.u >=   1) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tif(dt.M >=  60) { dt.M = 0; ++dt.H; }\n\t\t\tif(dt.H >=  24) { dt.H = 0; ++dt.D; _dt = parse_date_code(dt.D); _dt.u = dt.u; _dt.S = dt.S; _dt.M = dt.M; _dt.H = dt.H; dt = _dt; }\n\t\t\tbreak;\n\t}\n\n\t/* replace fields */\n\tvar nstr = \"\", jj;\n\tfor(i=0; i < out.length; ++i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 't': case 'T': case ' ': case 'D': break;\n\t\t\tcase 'X': out[i].v = \"\"; out[i].t = \";\"; break;\n\t\t\tcase 'd': case 'm': case 'y': case 'h': case 'H': case 'M': case 's': case 'e': case 'b': case 'Z':\nout[i].v = write_date(out[i].t.charCodeAt(0), out[i].v, dt, ss0);\n\t\t\t\tout[i].t = 't'; break;\n\t\t\tcase 'n': case '?':\n\t\t\t\tjj = i+1;\n\t\t\t\twhile(out[jj] != null && (\n\t\t\t\t\t(c=out[jj].t) === \"?\" || c === \"D\" ||\n\t\t\t\t\t((c === \" \" || c === \"t\") && out[jj+1] != null && (out[jj+1].t === '?' || out[jj+1].t === \"t\" && out[jj+1].v === '/')) ||\n\t\t\t\t\t(out[i].t === '(' && (c === ' ' || c === 'n' || c === ')')) ||\n\t\t\t\t\t(c === 't' && (out[jj].v === '/' || out[jj].v === ' ' && out[jj+1] != null && out[jj+1].t == '?'))\n\t\t\t\t)) {\n\t\t\t\t\tout[i].v += out[jj].v;\n\t\t\t\t\tout[jj] = {v:\"\", t:\";\"}; ++jj;\n\t\t\t\t}\n\t\t\t\tnstr += out[i].v;\n\t\t\t\ti = jj-1; break;\n\t\t\tcase 'G': out[i].t = 't'; out[i].v = general_fmt(v,opts); break;\n\t\t}\n\t}\n\tvar vv = \"\", myv, ostr;\n\tif(nstr.length > 0) {\n\t\tif(nstr.charCodeAt(0) == 40) /* '(' */ {\n\t\t\tmyv = (v<0&&nstr.charCodeAt(0) === 45 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t} else {\n\t\t\tmyv = (v<0 && flen > 1 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t\tif(myv < 0 && out[0] && out[0].t == 't') {\n\t\t\t\tostr = ostr.substr(1);\n\t\t\t\tout[0].v = \"-\" + out[0].v;\n\t\t\t}\n\t\t}\n\t\tjj=ostr.length-1;\n\t\tvar decpt = out.length;\n\t\tfor(i=0; i < out.length; ++i) if(out[i] != null && out[i].t != 't' && out[i].v.indexOf(\".\") > -1) { decpt = i; break; }\n\t\tvar lasti=out.length;\n\t\tif(decpt === out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tfor(i=out.length-1; i>= 0;--i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tif(jj>=out[i].v.length-1) { jj -= out[i].v.length; out[i].v = ostr.substr(jj+1, out[i].v.length); }\n\t\t\t\telse if(jj < 0) out[i].v = \"\";\n\t\t\t\telse { out[i].v = ostr.substr(0, jj+1); jj = -1; }\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t}\n\t\telse if(decpt !== out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tjj = ostr.indexOf(\".\")-1;\n\t\t\tfor(i=decpt; i>= 0; --i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")-1:out[i].v.length-1;\n\t\t\t\tvv = out[i].v.substr(j+1);\n\t\t\t\tfor(; j>=0; --j) {\n\t\t\t\t\tif(jj>=0 && (out[i].v.charAt(j) === \"0\" || out[i].v.charAt(j) === \"#\")) vv = ostr.charAt(jj--) + vv;\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t\tjj = ostr.indexOf(\".\")+1;\n\t\t\tfor(i=decpt; i<out.length; ++i) {\n\t\t\t\tif(out[i] == null || ('n?('.indexOf(out[i].t) === -1 && i !== decpt)) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")+1:0;\n\t\t\t\tvv = out[i].v.substr(0,j);\n\t\t\t\tfor(; j<out[i].v.length; ++j) {\n\t\t\t\t\tif(jj<ostr.length) vv += ostr.charAt(jj++);\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0; i<out.length; ++i) if(out[i] != null && 'n?'.indexOf(out[i].t)>-1) {\n\t\tmyv = (flen >1 && v < 0 && i>0 && out[i-1].v === \"-\" ? -v:v);\n\t\tout[i].v = write_num(out[i].t, out[i].v, myv);\n\t\tout[i].t = 't';\n\t}\n\tvar retval = \"\";\n\tfor(i=0; i !== out.length; ++i) if(out[i] != null) retval += out[i].v;\n\treturn retval;\n}\nSSF._eval = eval_fmt;\nvar cfregex = /\\[[=<>]/;\nvar cfregex2 = /\\[(=|>[=]?|<[>=]?)(-?\\d+(?:\\.\\d*)?)\\]/;\nfunction chkcond(v, rr) {\n\tif(rr == null) return false;\n\tvar thresh = parseFloat(rr[2]);\n\tswitch(rr[1]) {\n\t\tcase \"=\":  if(v == thresh) return true; break;\n\t\tcase \">\":  if(v >  thresh) return true; break;\n\t\tcase \"<\":  if(v <  thresh) return true; break;\n\t\tcase \"<>\": if(v != thresh) return true; break;\n\t\tcase \">=\": if(v >= thresh) return true; break;\n\t\tcase \"<=\": if(v <= thresh) return true; break;\n\t}\n\treturn false;\n}\nfunction choose_fmt(f, v) {\n\tvar fmt = split_fmt(f);\n\tvar l = fmt.length, lat = fmt[l-1].indexOf(\"@\");\n\tif(l<4 && lat>-1) --l;\n\tif(fmt.length > 4) throw new Error(\"cannot find right format for |\" + fmt.join(\"|\") + \"|\");\n\tif(typeof v !== \"number\") return [4, fmt.length === 4 || lat>-1?fmt[fmt.length-1]:\"@\"];\n\tswitch(fmt.length) {\n\t\tcase 1: fmt = lat>-1 ? [\"General\", \"General\", \"General\", fmt[0]] : [fmt[0], fmt[0], fmt[0], \"@\"]; break;\n\t\tcase 2: fmt = lat>-1 ? [fmt[0], fmt[0], fmt[0], fmt[1]] : [fmt[0], fmt[1], fmt[0], \"@\"]; break;\n\t\tcase 3: fmt = lat>-1 ? [fmt[0], fmt[1], fmt[0], fmt[2]] : [fmt[0], fmt[1], fmt[2], \"@\"]; break;\n\t\tcase 4: break;\n\t}\n\tvar ff = v > 0 ? fmt[0] : v < 0 ? fmt[1] : fmt[2];\n\tif(fmt[0].indexOf(\"[\") === -1 && fmt[1].indexOf(\"[\") === -1) return [l, ff];\n\tif(fmt[0].match(cfregex) != null || fmt[1].match(cfregex) != null) {\n\t\tvar m1 = fmt[0].match(cfregex2);\n\t\tvar m2 = fmt[1].match(cfregex2);\n\t\treturn chkcond(v, m1) ? [l, fmt[0]] : chkcond(v, m2) ? [l, fmt[1]] : [l, fmt[m1 != null && m2 != null ? 2 : 1]];\n\t}\n\treturn [l, ff];\n}\nfunction format(fmt,v,o) {\n\tif(o == null) o = {};\n\tvar sfmt = \"\";\n\tswitch(typeof fmt) {\n\t\tcase \"string\":\n\t\t\tif(fmt == \"m/d/yy\" && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = fmt;\n\t\t\tbreak;\n\t\tcase \"number\":\n\t\t\tif(fmt == 14 && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = (o.table != null ? (o.table) : table_fmt)[fmt];\n\t\t\tif(sfmt == null) sfmt = (o.table && o.table[default_map[fmt]]) || table_fmt[default_map[fmt]];\n\t\t\tif(sfmt == null) sfmt = default_str[fmt] || \"General\";\n\t\t\tbreak;\n\t}\n\tif(isgeneral(sfmt,0)) return general_fmt(v, o);\n\tif(v instanceof Date) v = datenum_local(v, o.date1904);\n\tvar f = choose_fmt(sfmt, v);\n\tif(isgeneral(f[1])) return general_fmt(v, o);\n\tif(v === true) v = \"TRUE\"; else if(v === false) v = \"FALSE\";\n\telse if(v === \"\" || v == null) return \"\";\n\treturn eval_fmt(f[1], v, o, f[0]);\n}\nfunction load_entry(fmt, idx) {\n\tif(typeof idx != 'number') {\n\t\tidx = +idx || -1;\nfor(var i = 0; i < 0x0188; ++i) {\nif(table_fmt[i] == undefined) { if(idx < 0) idx = i; continue; }\n\t\t\tif(table_fmt[i] == fmt) { idx = i; break; }\n\t\t}\nif(idx < 0) idx = 0x187;\n\t}\ntable_fmt[idx] = fmt;\n\treturn idx;\n}\nSSF.load = load_entry;\nSSF._table = table_fmt;\nSSF.get_table = function get_table() { return table_fmt; };\nSSF.load_table = function load_table(tbl) {\n\tfor(var i=0; i!=0x0188; ++i)\n\t\tif(tbl[i] !== undefined) load_entry(tbl[i], i);\n};\nSSF.init_table = init_table;\nSSF.format = format;\nSSF.choose_format = choose_fmt;\n}\nmake_ssf(SSF);\n/*global module */\nif(typeof module !== 'undefined' && typeof DO_NOT_EXPORT_SSF === 'undefined') module.exports = SSF;\n","import SSF from 'ssf';\nimport { NumberFormatValue } from '@/types';\nimport { DEFAULT_FORMAT_CODE } from '@/util/constant';\n\ntype FormatOptions = {\n  dateNF?: string;\n  date1904?: boolean;\n};\n\nexport function numberFormat(\n  value: NumberFormatValue,\n  pattern?: string,\n  options: FormatOptions = {},\n) {\n  return SSF.format(pattern || DEFAULT_FORMAT_CODE, value, options);\n}\n\nexport function isDateFormat(format?: string) {\n  if (!format) {\n    return false;\n  }\n  return SSF.is_date(format);\n}\n\nexport function convertDateToNumber(v: Date, date1904?: boolean): number {\n  const baseDate = new Date(1899, 11, 31, 0, 0, 0);\n  const baseDateTime = baseDate.getTime();\n  const base1904 = new Date(1900, 2, 1, 0, 0, 0);\n  let epoch = v.getTime();\n  if (date1904) {\n    epoch -= 1461 * 24 * 60 * 60 * 1000;\n  } else if (v >= base1904) {\n    epoch += 24 * 60 * 60 * 1000;\n  }\n  const result =\n    (epoch -\n      (baseDateTime +\n        (v.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000)) /\n    (24 * 60 * 60 * 1000);\n  return result\n}\n","import type { ResultType } from '@/types';\nimport { MAX_PARAMS_COUNT } from '@/util/constant';\nimport { assert, mustOneString, mustOneNumber, mustOne } from './error';\nimport { numberFormat } from '@/model/numberFormat'\n\nexport const T = (...list: ResultType[]): string => {\n  const value = mustOne(list);\n  return typeof value === 'string' ? value : '';\n};\n\nexport const LOWER = (...list: ResultType[]): string => {\n  const value = mustOneString(list);\n  return value.toLowerCase();\n};\nexport const CHAR = (...list: ResultType[]): string => {\n  const value = mustOneNumber(list);\n  return String.fromCharCode(value);\n};\nexport const CODE = (...list: ResultType[]): number => {\n  const value = mustOneString(list);\n  return value.charCodeAt(0);\n};\nexport const LEN = (...list: ResultType[]): number => {\n  const value = mustOneString(list);\n  return value.length;\n};\n\nexport const SPLIT = (...list: ResultType[]): string[] => {\n  assert(list.length === 2);\n  const [value, sep] = list;\n  assert(typeof value === 'string');\n  assert(typeof sep === 'string');\n  return value.split(sep);\n};\nexport const UPPER = (...list: ResultType[]): string => {\n  const value = mustOneString(list);\n  return value.toUpperCase();\n};\nexport const TEXT = (...list: ResultType[]): string => {\n  assert(list.length === 2);\n  const [value, format] = list;\n  assert(typeof value === 'string' || typeof value === 'number');\n  assert(typeof format === 'string');\n  return numberFormat(value, format)\n};\nexport const TRIM = (...list: ResultType[]): string => {\n  const value = mustOneString(list);\n  return value.replace(/ +/g, ' ').trim();\n};\nexport const CONCAT = (...list: ResultType[]): string => {\n  assert(list.length <= MAX_PARAMS_COUNT);\n  return list.join('');\n};\n\nconst formulas = {\n  CONCAT,\n  CONCATENATE: CONCAT,\n  SPLIT,\n  CHAR,\n  CODE,\n  UNICHAR: CHAR,\n  UNICODE: CODE,\n  LEN,\n  LOWER,\n  UPPER,\n  TRIM,\n  TEXT,\n  T,\n};\n\nexport default formulas;\n","import { MAX_PARAMS_COUNT } from '@/util/constant';\nimport type { ResultType } from '../../types';\nimport { assert, mustOneNumber, mustEmpty } from './error';\nimport { parseNumber } from '@/util/util';\n\nfunction parseNumberArray(list: ResultType[]): number[] {\n  const result: number[] = [];\n  for (let i = 0; i < list.length; i++) {\n    const [check, num] = parseNumber(list[i]);\n    if (check) {\n      result.push(num);\n    }\n  }\n  return result;\n}\n\nexport const ABS = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.abs(data);\n};\nexport const ACOS = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.acos(data);\n};\n\nexport const ACOSH = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.log(data + Math.sqrt(data * data - 1));\n};\n\nexport const ACOT = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.atan(1 / data);\n};\n\nexport const ACOTH = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return 0.5 * Math.log((data + 1) / (data - 1));\n};\nexport const ASIN = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.asin(data);\n};\n\nexport const ASINH = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.log(data + Math.sqrt(data * data + 1));\n};\nexport const ATAN = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.atan(data);\n};\nexport const ATAN2 = (...list: ResultType[]): number => {\n  assert(list.length === 2);\n  const [x, y] = list;\n  assert(typeof x === 'number');\n  assert(typeof y === 'number');\n  return Math.atan2(x, y);\n};\nexport const ATANH = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.log((1 + data) / (data + 1)) / 2;\n};\n\nexport const AVERAGE = (...rest: ResultType[]): number => {\n  const list = parseNumberArray(rest);\n  assert(list.length <= MAX_PARAMS_COUNT && list.length >= 1);\n  return list.reduce((sum, cur) => sum + cur, 0) / list.length;\n};\n\nexport const COS = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.cos(data);\n};\nexport const COT = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return 1 / Math.tan(data);\n};\nexport const CSC = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return 1 / Math.sin(data);\n};\nexport const DECIMAL = (...list: ResultType[]): number => {\n  assert(list.length === 2);\n  const [data, radix] = list;\n  assert(typeof data === 'string');\n  assert(typeof radix === 'number');\n  return parseInt(data, radix);\n};\nexport const DEGREES = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return (data * 180) / Math.PI;\n};\nexport const EXP = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.exp(data);\n};\nexport const INT = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.floor(data);\n};\nexport const LN10 = (...list: ResultType[]): number => {\n  mustEmpty(list);\n  return Math.log(10);\n};\nexport const LN2 = (...list: ResultType[]): number => {\n  mustEmpty(list);\n  return Math.log(2);\n};\nexport const LOG10E = (...list: ResultType[]): number => {\n  mustEmpty(list);\n  return Math.LOG10E;\n};\nexport const LOG2E = (...list: ResultType[]): number => {\n  mustEmpty(list);\n  return Math.LOG2E;\n};\nexport const LOG = (...list: ResultType[]): number => {\n  assert(list.length >= 1 && list.length <= 2);\n  const [data, base = 10] = list;\n  assert(typeof data === 'number');\n  assert(typeof base === 'number');\n  return Math.log(data) / Math.log(base);\n};\n\nexport const LOG10 = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.log(data) / Math.log(10);\n};\nexport const PI = (...list: ResultType[]): number => {\n  mustEmpty(list);\n  return Math.PI;\n};\nexport const SIN = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.sin(data);\n};\nexport const SUM = (...rest: ResultType[]): number => {\n  const list = parseNumberArray(rest);\n  assert(list.length <= MAX_PARAMS_COUNT);\n  return list.reduce((sum, cur) => sum + cur, 0);\n};\n\nconst formulas = {\n  ABS,\n  ACOS,\n  ACOSH,\n  ACOT,\n  ACOTH,\n  ASIN,\n  ASINH,\n  ATAN,\n  ATAN2,\n  ATANH,\n  AVERAGE,\n  COT,\n  COS,\n  EXP,\n  INT,\n  PI,\n  SIN,\n  SUM,\n};\n\nexport default formulas;\n","import { FORMULA_MAX_PRECISION } from '@/util/constant';\n\nexport function roundNumber(a: number) {\n  const temp = String(a);\n  const result = /[.](\\d*)/.exec(temp);\n  if (result && result[1]) {\n    const f = Math.pow(10, Math.min(result[1].length, FORMULA_MAX_PRECISION));\n    const list = temp.split('.');\n    const t = list[0] + list[1].slice(0, FORMULA_MAX_PRECISION);\n    return Number(t) / f;\n  } else {\n    return a;\n  }\n}\n","import textFormulas from './text';\nimport mathFormulas from './math';\nimport { BuiltInFormulas } from '@/util/constant';\n\ntype MergeType<T, A> = {\n  [K in keyof T | keyof A as K extends BuiltInFormulas\n    ? K\n    : never]: K extends keyof T ? T[K] : K extends keyof A ? A[K] : never;\n};\n\nexport type FormulaMap = MergeType<typeof textFormulas, typeof mathFormulas>;\n\nexport type FormulaKeys = keyof FormulaMap;\n\nconst allFormulas: FormulaMap = {\n  ...textFormulas,\n  ...mathFormulas,\n};\nexport * from './error';\nexport default allFormulas;\nexport * from './float';\n","/**\n * convert column name to number. e.g A -> 0, a -> 0\n * @param { string } columnName\n */\nexport function columnNameToInt(columnName: string): number {\n  const temp = columnName.toUpperCase();\n  let num = 0;\n  for (let i = 0; i < temp.length; i++) {\n    num = temp.charCodeAt(i) - 64 + num * 26;\n  }\n  return num - 1;\n}\n/**\n * convert number to column name 0 -> A\n * @param { string } number\n */\nexport function intToColumnName(temp: number): string {\n  const num = temp + 1;\n  let columnName = '';\n  let dividend = Math.floor(Math.abs(num));\n  let rest;\n\n  while (dividend > 0) {\n    rest = (dividend - 1) % 26;\n    columnName = String.fromCharCode(65 + rest) + columnName;\n    dividend = Math.floor((dividend - rest) / 26);\n  }\n  return columnName.toUpperCase();\n}\n\nexport function rowLabelToInt(label: string): number {\n  let result = parseInt(label, 10);\n  if (isNaN(result)) {\n    result = -1;\n  } else {\n    result = Math.max(result - 1, -1);\n  }\n  return result;\n}\n","import { IRange } from '@/types';\n\nexport function isSheet(range: IRange): boolean {\n  return isRow(range) && isCol(range);\n}\nexport function isRow(range: IRange): boolean {\n  return range.colCount === 0;\n}\nexport function isCol(range: IRange): boolean {\n  return range.rowCount === 0;\n}\n\nexport function isSameRange(oldRange: IRange, newRange: IRange): boolean {\n  return (\n    oldRange.col === newRange.col &&\n    oldRange.row === newRange.row &&\n    oldRange.colCount === newRange.colCount &&\n    oldRange.rowCount === newRange.rowCount &&\n    oldRange.sheetId === newRange.sheetId\n  );\n}\n\nexport function containRange(\n  sourceRange: IRange,\n  targetRange: IRange,\n): boolean {\n  if (sourceRange.colCount === 0 && targetRange.colCount !== 0) {\n    return false;\n  }\n  if (sourceRange.rowCount === 0 && targetRange.rowCount !== 0) {\n    return false;\n  }\n  if (targetRange.colCount === 0 && targetRange.row === sourceRange.row) {\n    return true;\n  }\n  if (targetRange.rowCount === 0 && targetRange.col === sourceRange.col) {\n    return true;\n  }\n  const { row, col } = sourceRange;\n  const check =\n    row >= targetRange.row &&\n    row < targetRange.row + targetRange.rowCount &&\n    col >= targetRange.col &&\n    col < targetRange.col + targetRange.colCount;\n  if (check) {\n    return true;\n  }\n\n  return false;\n}\n\nexport class SheetRange implements IRange {\n  row = 0;\n  col = 0;\n  colCount = 0;\n  rowCount = 0;\n  sheetId = '';\n  constructor(\n    row: number,\n    col: number,\n    rowCount: number,\n    colCount: number,\n    sheetId: string,\n  ) {\n    this.row = row;\n    this.col = col;\n    this.colCount = colCount;\n    this.rowCount = rowCount;\n    this.sheetId = sheetId;\n  }\n\n  static makeRange(range: IRange): SheetRange {\n    return new SheetRange(\n      range.row,\n      range.col,\n      range.rowCount,\n      range.colCount,\n      range.sheetId,\n    );\n  }\n  toIRange(): IRange {\n    return {\n      row: this.row,\n      col: this.col,\n      rowCount: this.rowCount,\n      colCount: this.colCount,\n      sheetId: this.sheetId,\n    };\n  }\n}\n\nexport function iterateRange(\n  range: IRange,\n  sheetRowCount: number,\n  sheetColCount: number,\n  fn: (row: number, col: number) => boolean,\n) {\n  const { row, col, rowCount, colCount } = range;\n  if (isSheet(range)) {\n    for (let r = 0; r < sheetRowCount; r++) {\n      for (let c = 0; c < sheetColCount; c++) {\n        if (fn(r, c)) {\n          return;\n        }\n      }\n    }\n    return;\n  }\n  if (isRow(range)) {\n    for (let i = 0; i < sheetColCount; i++) {\n      if (fn(row, i)) {\n        return;\n      }\n    }\n    return;\n  }\n  if (isCol(range)) {\n    for (let i = 0; i < sheetRowCount; i++) {\n      if (fn(i, col)) {\n        return;\n      }\n    }\n    return;\n  }\n\n  const endRow = row + rowCount;\n  const endCol = col + colCount;\n  for (let r = row; r < endRow; r++) {\n    for (let c = col; c < endCol; c++) {\n      if (fn(r, c)) {\n        return;\n      }\n    }\n  }\n}\n","import { columnNameToInt, rowLabelToInt, intToColumnName } from './convert';\nimport { Coordinate, IRange, ReferenceType } from '@/types';\nimport { SheetRange } from './range';\nimport { XLSX_MAX_COL_COUNT, XLSX_MAX_ROW_COUNT } from './constant';\n\nexport const isAlpha = (char: string) =>\n  (char >= 'a' && char <= 'z') || (char >= 'A' && char <= 'Z');\nexport const isDigit = (char: string) => char >= '0' && char <= '9';\n\nfunction convertSheetNameToSheetId(value: string) {\n  return value;\n}\n\nfunction parseCell(\n  ref: string,\n  convertSheetName: typeof convertSheetNameToSheetId,\n): SheetRange | undefined {\n  if (!ref) {\n    return undefined;\n  }\n  const realRef = ref.trim();\n  let [sheetName, other = ''] = realRef.split('!');\n  if (!realRef.includes('!')) {\n    sheetName = '';\n    other = realRef;\n  }\n  if (\n    sheetName &&\n    sheetName[0] === \"'\" &&\n    sheetName[sheetName.length - 1] === \"'\"\n  ) {\n    sheetName = sheetName.slice(1, -1);\n  }\n  let i = 0;\n  let rowText = '';\n  let colText = '';\n  if (other[i] === '$') {\n    i++;\n  }\n  while (i < other.length && isAlpha(other[i])) {\n    colText += other[i++];\n  }\n  if (other[i] === '$') {\n    i++;\n  }\n  while (i < other.length && isDigit(other[i])) {\n    rowText += other[i++];\n  }\n  if (i !== other.length) {\n    return undefined;\n  }\n  if (!rowText && !colText) {\n    return undefined;\n  }\n\n  let rowCount = 1;\n  let colCount = 1;\n  let row = -1;\n  let col = -1;\n  if (rowText === '') {\n    rowCount = 0;\n    row = 0;\n  } else {\n    row = rowLabelToInt(rowText);\n  }\n  if (colText === '') {\n    colCount = 0;\n    col = 0;\n  } else {\n    col = columnNameToInt(colText);\n  }\n  if (\n    row < 0 ||\n    col < 0 ||\n    col >= XLSX_MAX_COL_COUNT ||\n    row >= XLSX_MAX_ROW_COUNT\n  ) {\n    return undefined;\n  }\n  const range = new SheetRange(\n    row,\n    col,\n    rowCount,\n    colCount,\n    convertSheetName(sheetName),\n  );\n  return range;\n}\n\nexport function parseReference(\n  text: string,\n  convertSheetName = convertSheetNameToSheetId,\n): SheetRange | undefined {\n  const [cell1, cell2] = text.split(':');\n  const startCell = parseCell(cell1, convertSheetName);\n  if (!startCell) {\n    return undefined;\n  }\n  const endCell = parseCell(cell2, convertSheetName);\n  if (!endCell) {\n    return startCell;\n  }\n  endCell.sheetId = startCell.sheetId;\n  return mergeRange(startCell, endCell);\n}\n\nexport function mergeRange(start: IRange, end: IRange): SheetRange | undefined {\n  if (start.sheetId !== end.sheetId) {\n    return undefined;\n  }\n  if (\n    start.row === end.row &&\n    start.col === end.col &&\n    start.rowCount === end.rowCount &&\n    start.colCount === end.colCount\n  ) {\n    return SheetRange.makeRange(start);\n  }\n  if (start.rowCount === 0 && end.rowCount !== 0) {\n    return undefined;\n  }\n  if (start.rowCount !== 0 && end.rowCount === 0) {\n    return undefined;\n  }\n  if (start.colCount === 0 && end.colCount !== 0) {\n    return undefined;\n  }\n  if (start.colCount !== 0 && end.colCount === 0) {\n    return undefined;\n  }\n\n  const rowCount = Math.abs(start.row - end.row) + 1;\n  const colCount = Math.abs(start.col - end.col) + 1;\n  const row = start.row < end.row ? start.row : end.row;\n  const col = start.col < end.col ? start.col : end.col;\n\n  return new SheetRange(row, col, rowCount, colCount, start.sheetId);\n}\n\nfunction convertCell(row: number, col: number, referenceType: ReferenceType) {\n  const first = referenceType === 'absolute' || referenceType === 'mixed';\n  const second = referenceType === 'absolute';\n  return `${first ? '$' : ''}${intToColumnName(col)}${second ? '$' : ''}${\n    row + 1\n  }`;\n}\n\nexport function convertToReference(\n  range: IRange,\n  referenceType: ReferenceType = 'relative',\n  convertSheetIdToSheetName = convertSheetNameToSheetId,\n) {\n  let result = convertCell(range.row, range.col, referenceType);\n  let sheetName = convertSheetIdToSheetName(range.sheetId);\n  sheetName = sheetName ? `${sheetName}!` : '';\n  if (range.colCount > 1 && range.rowCount > 1) {\n    const end = convertCell(\n      range.row + range.rowCount - 1,\n      range.col + range.colCount - 1,\n      referenceType,\n    );\n    result = `${result}:${end}`;\n  }\n  return sheetName + result;\n}\n\nexport const R1C1_REG = /^R(\\[-\\d+\\]|\\[\\d+\\]|\\d+)?C(\\[-\\d+\\]|\\[\\d+\\]|\\d+)?$/i;\n\nfunction parseNumber(text: string, num: number) {\n  let result = -1;\n  if (text.startsWith('[')) {\n    const t = parseInt(text.slice(1, -1), 10);\n    if (!isNaN(t)) {\n      result = num + t;\n    }\n  } else {\n    const t = parseInt(text, 10);\n    if (!isNaN(t)) {\n      result = t - 1;\n    }\n  }\n  return isNaN(result) ? -1 : result;\n}\n\nexport function parseR1C1(\n  name: string,\n  activeCell: Coordinate = { row: -1, col: -1 },\n): SheetRange | undefined {\n  const text = name.toUpperCase();\n  if (text[0] !== 'R') {\n    return undefined;\n  }\n  const list = text.slice(1).split('C');\n  if (list.length !== 2) {\n    return undefined;\n  }\n  const [rowText, colText] = list;\n  let row = -1;\n  let col = -1;\n  if (!rowText) {\n    row = activeCell.row;\n  } else {\n    row = parseNumber(rowText, activeCell.row);\n  }\n  if (!colText) {\n    col = activeCell.col;\n  } else {\n    col = parseNumber(colText, activeCell.col);\n  }\n  if (\n    col >= XLSX_MAX_COL_COUNT ||\n    row >= XLSX_MAX_ROW_COUNT ||\n    row < 0 ||\n    col < 0\n  ) {\n    return undefined;\n  }\n  const range = new SheetRange(row, col, 1, 1, '');\n  return range;\n}\n","import { TokenType } from '@/types';\nimport { Token } from './token';\nimport { CustomError } from './formula';\nimport {\n  FORMULA_PREFIX,\n  ERROR_SET,\n  BUILT_IN_FUNCTION_SET,\n  CELL_REG_EXP,\n  COLUMN_REG_EXP,\n  DEFINED_NAME_REG_EXP,\n  type BuiltInFormulas,\n  ROW_REG_EXP,\n  type ErrorTypes,\n} from '@/util/constant';\nimport { isDigit, isAlpha } from '@/util/reference';\n\nconst emptyData = '';\n\nexport class Scanner {\n  private readonly list: string[];\n  private current = 0;\n  private start = 0;\n  private readonly tokens: Token[] = [];\n  constructor(source: string) {\n    this.list = [...source];\n  }\n  scan(): Token[] {\n    while (!this.isAtEnd()) {\n      this.start = this.current;\n      this.scanToken();\n    }\n    this.tokens.push(new Token(TokenType.EOF, ''));\n    if (this.tokens.length > 0 && this.tokens[0].type === TokenType.EQUAL) {\n      this.tokens.shift();\n    }\n    return this.tokens;\n  }\n  private peek() {\n    if (this.isAtEnd()) {\n      return emptyData;\n    }\n    return this.list[this.current];\n  }\n  private match(text: string) {\n    if (this.peek() !== text) {\n      return false;\n    }\n    this.next();\n    return true;\n  }\n  private next() {\n    if (this.isAtEnd()) {\n      return emptyData;\n    }\n    return this.list[this.current++];\n  }\n  private isAtEnd() {\n    return this.current >= this.list.length;\n  }\n  private addToken(type: TokenType) {\n    const text = this.list.slice(this.start, this.current).join('');\n    this.tokens.push(new Token(type, text));\n  }\n  private string(end: string) {\n    while (!this.isAtEnd() && this.peek() !== end) {\n      this.next();\n    }\n    if (this.peek() !== end) {\n      throw new CustomError('#VALUE!');\n    } else {\n      this.next();\n    }\n    const text = this.list.slice(this.start + 1, this.current - 1).join('');\n    if (end === \"'\" && this.match('!')) {\n      this.tokens.push(new Token(TokenType.SHEET_NAME, text));\n      return;\n    }\n    this.tokens.push(new Token(TokenType.STRING, text));\n  }\n  private getDigits() {\n    while (!this.isAtEnd() && isDigit(this.peek())) {\n      this.next();\n    }\n  }\n  private getAlphas() {\n    while (!this.isAtEnd() && isAlpha(this.peek())) {\n      this.next();\n    }\n  }\n  private matchR1C1() {\n    if (this.match('[')) {\n      this.match('-');\n      if (isDigit(this.peek())) {\n        this.getDigits();\n      } else {\n        throw new CustomError('#VALUE!');\n      }\n      if (this.peek() !== ']') {\n        throw new CustomError('#VALUE!');\n      } else {\n        this.next();\n      }\n    } else {\n      this.getDigits();\n    }\n  }\n  private matchScientificCounting() {\n    if (this.match('E') || this.match('e')) {\n      // 1E-10 1E+10\n      if (this.match('+') || this.match('-')) {\n        this.getDigits();\n        this.addToken(TokenType.NUMBER);\n        return true;\n      }\n      if (isDigit(this.peek())) {\n        this.getDigits();\n        this.addToken(TokenType.NUMBER);\n        return true;\n      }\n      // 1E or 1.1E not valid\n      throw new CustomError('#VALUE!');\n    }\n    return false;\n  }\n  private number() {\n    this.getDigits();\n    const check1 = this.matchScientificCounting();\n    if (check1) {\n      return;\n    }\n    if (this.match('.')) {\n      this.getDigits();\n    }\n    const check2 = this.matchScientificCounting();\n    if (check2) {\n      return;\n    }\n    this.addToken(TokenType.NUMBER);\n  }\n  private addIdentifier() {\n    while (!this.isAtEnd() && this.anyChar(this.peek())) {\n      this.next();\n    }\n    let text = this.list.slice(this.start, this.current).join('');\n    const t = text.toUpperCase();\n    if (BUILT_IN_FUNCTION_SET.has(t as BuiltInFormulas) && this.match('(')) {\n      this.tokens.push(new Token(TokenType.EXCEL_FUNCTION, t));\n      return;\n    }\n    if (['IF', 'CHOOSE'].includes(t) && this.match('(')) {\n      this.tokens.push(new Token(TokenType.REF_FUNCTION_COND, t));\n      return;\n    }\n    if (['INDEX', 'OFFSET', 'INDIRECT'].includes(t) && this.match('(')) {\n      this.tokens.push(new Token(TokenType.REF_FUNCTION, t));\n      return;\n    }\n    if (this.match('!')) {\n      this.tokens.push(new Token(TokenType.SHEET_NAME, text));\n      return;\n    }\n    let type: TokenType = TokenType.BOOL;\n    if (t === 'TRUE' || t === 'FALSE') {\n      text = t;\n      type = TokenType.BOOL;\n    } else if (ERROR_SET.has(t as ErrorTypes)) {\n      text = t;\n      type = t === '#REF!' ? TokenType.ERROR_REF : TokenType.ERROR;\n    } else if (CELL_REG_EXP.test(t)) {\n      type = TokenType.CELL;\n    } else if (COLUMN_REG_EXP.test(t)) {\n      type = TokenType.COLUMN;\n    } else if (ROW_REG_EXP.test(t)) {\n      type = TokenType.ROW;\n    } else if (DEFINED_NAME_REG_EXP.test(t)) {\n      type = TokenType.DEFINED_NAME;\n    } else {\n      throw new CustomError('#NAME?');\n    }\n\n    this.tokens.push(new Token(type, text));\n  }\n  private scanToken() {\n    const c = this.next();\n    switch (c) {\n      case '$': {\n        if (isAlpha(this.peek())) {\n          this.getAlphas();\n          if (this.match('$')) {\n            if (isDigit(this.peek())) {\n              // $A$1 absolute reference\n              this.getDigits();\n              this.addToken(TokenType.CELL);\n            } else {\n              this.addIdentifier();\n            }\n          } else if (isDigit(this.peek())) {\n            // $A1 mixed reference\n            this.getDigits();\n            this.addToken(TokenType.CELL);\n          } else {\n            // $A\n            this.addToken(TokenType.COLUMN);\n          }\n        } else if (isDigit(this.peek())) {\n          // $1 absolute reference\n          this.getDigits();\n          this.addToken(TokenType.ROW);\n        } else {\n          this.addIdentifier();\n        }\n        break;\n      }\n      case 'r':\n      case 'R': {\n        this.matchR1C1();\n        if (this.match('C') || this.match('c')) {\n          this.matchR1C1();\n          const text = this.list\n            .slice(this.start, this.current)\n            .join('')\n            .toUpperCase();\n          this.tokens.push(new Token(TokenType.R1C1, text));\n        } else {\n          this.addIdentifier();\n        }\n        break;\n      }\n      case '(':\n        this.addToken(TokenType.LEFT_BRACKET);\n        break;\n      case ')':\n        this.addToken(TokenType.RIGHT_BRACKET);\n        break;\n      case ',':\n        this.addToken(TokenType.COMMA);\n        break;\n      case ':':\n        this.addToken(TokenType.COLON);\n        break;\n      case FORMULA_PREFIX:\n        this.addToken(TokenType.EQUAL);\n        break;\n      case '<':\n        if (this.match('>')) {\n          this.addToken(TokenType.NOT_EQUAL);\n        } else if (this.match('=')) {\n          this.addToken(TokenType.LESS_EQUAL);\n        } else {\n          this.addToken(TokenType.LESS);\n        }\n        break;\n      case '>':\n        if (this.match('=')) {\n          this.addToken(TokenType.GREATER_EQUAL);\n        } else {\n          this.addToken(TokenType.GREATER);\n        }\n        break;\n      case '+':\n        this.addToken(TokenType.PLUS);\n        break;\n      case '-':\n        this.addToken(TokenType.MINUS);\n        break;\n      case '*':\n        this.addToken(TokenType.STAR);\n        break;\n      case '/':\n        this.addToken(TokenType.SLASH);\n        break;\n      case '^':\n        this.addToken(TokenType.EXPONENT);\n        break;\n      case '&':\n        this.addToken(TokenType.CONCATENATE);\n        break;\n      case '%':\n        this.addToken(TokenType.PERCENT);\n        break;\n      case '\"':\n        this.string(c);\n        break;\n      case \"'\":\n        this.string(c);\n        break;\n      case '!':\n        this.addToken(TokenType.EXCLAMATION);\n        break;\n      case ';':\n        this.addToken(TokenType.SEMICOLON);\n        break;\n      case '{':\n        this.addToken(TokenType.lEFT_BRACE);\n        break;\n      case '}':\n        this.addToken(TokenType.RIGHT_BRACE);\n        break;\n      case ' ':\n        // while (!this.isAtEnd() && this.peek() === ' ') {\n        // this.next();\n        // }\n        // this.addToken(TokenType.EMPTY_CHAR);\n        break;\n      case '\\r':\n      case '\\t':\n      case '\\n':\n        break;\n      default:\n        if (isDigit(c)) {\n          this.number();\n        } else {\n          this.addIdentifier();\n        }\n        break;\n    }\n  }\n  private anyChar(c: string) {\n    const text = '(),:=<>+-*/^&%\"{}!';\n    return !text.includes(c) && !this.isWhiteSpace(c);\n  }\n  private isWhiteSpace(c: string) {\n    return c === ' ' || c === '\\r' || c === '\\n' || c === '\\t';\n  }\n}\n","import type { Token } from './token';\nimport { TokenType } from '@/types';\n\nexport interface Visitor {\n  visitBinaryExpression: (expr: BinaryExpression) => any;\n  visitUnaryExpression: (expr: UnaryExpression) => any;\n  visitPostUnaryExpression: (expr: PostUnaryExpression) => any;\n  visitLiteralExpression: (expr: LiteralExpression) => any;\n  visitCellExpression: (expr: CellExpression) => any;\n  visitCellRangeExpression: (expr: CellRangeExpression) => any;\n  visitCallExpression: (expr: CallExpression) => any;\n  visitGroupExpression: (expr: GroupExpression) => any;\n  visitArrayExpression: (expr: ArrayExpression) => any;\n}\n\nexport interface Expression {\n  accept: (visitor: Visitor) => any;\n  toString: () => string;\n}\n\nexport class BinaryExpression implements Expression {\n  readonly left: Expression;\n  readonly right: Expression;\n  readonly operator: Token;\n  constructor(left: Expression, operator: Token, right: Expression) {\n    this.left = left;\n    this.operator = operator;\n    this.right = right;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitBinaryExpression(this);\n  }\n  private handleConcatenate(value: Expression): string {\n    const result = value.toString();\n    const check =\n      this.operator.type === TokenType.CONCATENATE &&\n      value instanceof LiteralExpression &&\n      value.value.type === TokenType.STRING;\n    if (check) {\n      return JSON.stringify(result);\n    }\n    return result;\n  }\n  toString(): string {\n    const left = this.handleConcatenate(this.left);\n    const right = this.handleConcatenate(this.right);\n    return `${left}${this.operator.toString()}${right}`;\n  }\n}\n\nexport class UnaryExpression implements Expression {\n  readonly right: Expression;\n  readonly operator: Token;\n  constructor(operator: Token, right: Expression) {\n    this.operator = operator;\n    this.right = right;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitUnaryExpression(this);\n  }\n  toString(): string {\n    return this.operator.toString() + this.right.toString();\n  }\n}\n\nexport class PostUnaryExpression implements Expression {\n  readonly left: Expression;\n  readonly operator: Token;\n  constructor(operator: Token, left: Expression) {\n    this.operator = operator;\n    this.left = left;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitPostUnaryExpression(this);\n  }\n  toString(): string {\n    return this.left.toString() + this.operator.toString();\n  }\n}\n\nexport class LiteralExpression implements Expression {\n  readonly value: Token;\n  constructor(value: Token) {\n    this.value = value;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitLiteralExpression(this);\n  }\n  toString(): string {\n    return this.value.toString();\n  }\n}\n\nexport class CellExpression implements Expression {\n  readonly value: Token;\n  readonly sheetName: Token | undefined;\n  constructor(value: Token, sheetName: Token | undefined) {\n    this.value = value;\n    this.sheetName = sheetName;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitCellExpression(this);\n  }\n  toString(): string {\n    const t = this.value.toString().toUpperCase();\n    if (this.sheetName) {\n      let name = this.sheetName.toString();\n      if (name.includes(' ')) {\n        name = `'${name}'`;\n      }\n      return `${name}!${t}`;\n    } else {\n      return t;\n    }\n  }\n}\n\nexport class CallExpression implements Expression {\n  readonly name: Token;\n  readonly params: Expression[];\n  constructor(name: Token, params: Expression[]) {\n    this.name = name;\n    this.params = params;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitCallExpression(this);\n  }\n  toString(): string {\n    return `${this.name.toString()}(${this.params\n      .map((item) => item.toString())\n      .join(',')})`;\n  }\n}\n\nexport class CellRangeExpression implements Expression {\n  readonly right: CellExpression;\n  readonly operator: Token;\n  readonly left: CellExpression;\n  constructor(left: CellExpression, operator: Token, right: CellExpression) {\n    this.left = left;\n    this.operator = operator;\n    this.right = right;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitCellRangeExpression(this);\n  }\n  toString(): string {\n    return (\n      this.left.toString() + this.operator.toString() + this.right.toString()\n    );\n  }\n}\n\nexport class GroupExpression implements Expression {\n  readonly value: Expression;\n  constructor(value: Expression) {\n    this.value = value;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitGroupExpression(this);\n  }\n  toString(): string {\n    return `(${this.value.toString()})`;\n  }\n}\n\nexport class ArrayExpression implements Expression {\n  readonly value: Expression[];\n  constructor(value: Expression[]) {\n    this.value = value;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitArrayExpression(this);\n  }\n  toString(): string {\n    const temp = this.value.map((v) => v.toString()).join(',');\n    return `{${temp}}`;\n  }\n}\n","import { TokenType } from '@/types';\nimport { Token } from './token';\nimport {\n  Expression,\n  GroupExpression,\n  PostUnaryExpression,\n  BinaryExpression,\n  UnaryExpression,\n  CallExpression,\n  LiteralExpression,\n  CellRangeExpression,\n  CellExpression,\n  ArrayExpression,\n} from './expression';\nimport { CustomError } from './formula';\nimport { type ErrorTypes } from '@/util/constant';\n\nexport class Parser {\n  private readonly tokens: Token[];\n  private current = 0;\n  constructor(tokens: Token[]) {\n    this.tokens = tokens;\n  }\n  parse(): Expression[] {\n    const result: Expression[] = [];\n    while (!this.isAtEnd()) {\n      result.push(this.expression());\n    }\n    return result;\n  }\n  private expression(): Expression {\n    return this.comparison();\n  }\n  private comparison(): Expression {\n    let expr = this.concatenate();\n    while (\n      this.match(\n        TokenType.EQUAL,\n        TokenType.NOT_EQUAL,\n        TokenType.GREATER,\n        TokenType.GREATER_EQUAL,\n        TokenType.LESS,\n        TokenType.LESS_EQUAL,\n      )\n    ) {\n      const operator = this.previous();\n      const right = this.concatenate();\n      expr = new BinaryExpression(expr, operator, right);\n    }\n    return expr;\n  }\n  private concatenate(): Expression {\n    let expr = this.term();\n    while (this.match(TokenType.CONCATENATE)) {\n      const operator = this.previous();\n      const right = this.term();\n      expr = new BinaryExpression(expr, operator, right);\n    }\n    return expr;\n  }\n  private term(): Expression {\n    let expr = this.factor();\n    while (this.match(TokenType.PLUS, TokenType.MINUS)) {\n      const operator = this.previous();\n      const right = this.factor();\n      expr = new BinaryExpression(expr, operator, right);\n    }\n    return expr;\n  }\n  private factor(): Expression {\n    let expr = this.expo();\n    while (this.match(TokenType.SLASH, TokenType.STAR)) {\n      const operator = this.previous();\n      const right = this.expo();\n      expr = new BinaryExpression(expr, operator, right);\n    }\n    return expr;\n  }\n  private expo(): Expression {\n    let expr = this.unary();\n    while (this.match(TokenType.EXPONENT)) {\n      const operator = this.previous();\n      const right = this.unary();\n      expr = new BinaryExpression(expr, operator, right);\n    }\n    return expr;\n  }\n\n  private unary(): Expression {\n    if (this.match(TokenType.PLUS, TokenType.MINUS)) {\n      const operator = this.previous();\n      const right = this.unary();\n      return new UnaryExpression(operator, right);\n    }\n    return this.postUnary();\n  }\n  private postUnary(): Expression {\n    let expr = this.cellRange();\n    if (this.match(TokenType.PERCENT)) {\n      const operator = this.previous();\n      expr = new PostUnaryExpression(operator, expr);\n    }\n    return expr;\n  }\n  private cellRange(): Expression {\n    let expr = this.sheetRange();\n    while (this.match(TokenType.COLON)) {\n      const operator = this.previous();\n      const right = this.sheetRange();\n      const realRight = this.convertToCellExpression(right);\n      const realLeft = this.convertToCellExpression(expr);\n      expr = new CellRangeExpression(realLeft, operator, realRight);\n    }\n    return expr;\n  }\n  private convertToCellExpression(expr: Expression): CellExpression {\n    if (expr instanceof CellExpression) {\n      return expr;\n    }\n    if (\n      expr instanceof LiteralExpression &&\n      expr.value.type === TokenType.NUMBER\n    ) {\n      return new CellExpression(expr.value, undefined);\n    }\n    throw new CustomError('#NAME?');\n  }\n  private sheetRange(): Expression {\n    if (this.match(TokenType.SHEET_NAME)) {\n      const name = this.previous();\n      let expr = this.call();\n      if (expr instanceof CellExpression) {\n        return new CellExpression(expr.value, name);\n      }\n      throw new CustomError('#REF!');\n    }\n    return this.call();\n  }\n  private call(): Expression {\n    while (\n      this.match(\n        TokenType.EXCEL_FUNCTION,\n        TokenType.REF_FUNCTION,\n        TokenType.REF_FUNCTION_COND,\n      )\n    ) {\n      const name = this.previous();\n      const params: Expression[] = [];\n      if (!this.check(TokenType.RIGHT_BRACKET)) {\n        do {\n          // fix SUM(1,)\n          if (this.peek().type == TokenType.RIGHT_BRACKET) {\n            break;\n          }\n          params.push(this.expression());\n        } while (this.match(TokenType.COMMA));\n      }\n      this.expect(TokenType.RIGHT_BRACKET);\n      return new CallExpression(name, params);\n    }\n    return this.primary();\n  }\n  private primary(): Expression {\n    if (this.match(TokenType.lEFT_BRACE)) {\n      const list: Expression[] = [];\n      do {\n        if (this.peek().type == TokenType.RIGHT_BRACE) {\n          break;\n        }\n        list.push(this.expression());\n      } while (this.match(TokenType.COMMA));\n      this.expect(TokenType.RIGHT_BRACE);\n      return new ArrayExpression(list);\n    }\n    if (this.match(TokenType.LEFT_BRACKET)) {\n      const value = this.expression();\n      this.expect(TokenType.RIGHT_BRACKET);\n      return new GroupExpression(value);\n    }\n    if (this.match(TokenType.NUMBER, TokenType.STRING, TokenType.BOOL)) {\n      return new LiteralExpression(this.previous());\n    }\n    if (\n      this.match(\n        TokenType.CELL,\n        TokenType.COLUMN,\n        TokenType.ROW,\n        TokenType.DEFINED_NAME,\n        TokenType.R1C1,\n      )\n    ) {\n      const token = this.previous();\n      return new CellExpression(token, undefined);\n    }\n    if (this.match(TokenType.ERROR, TokenType.ERROR_REF)) {\n      throw new CustomError(this.previous().value as ErrorTypes);\n    }\n\n    throw new CustomError('#VALUE!');\n  }\n  private match(...types: TokenType[]): boolean {\n    const { type } = this.peek();\n    if (types.includes(type)) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n  private previous(): Token {\n    return this.tokens[this.current - 1];\n  }\n  private check(type: TokenType): boolean {\n    return this.peek().type === type;\n  }\n  private expect(type: TokenType): Token {\n    if (this.check(type)) {\n      this.next();\n      return this.previous();\n    } else {\n      throw new CustomError('#VALUE!');\n    }\n  }\n  private next() {\n    this.current++;\n  }\n  private isAtEnd() {\n    return this.peek().type === TokenType.EOF;\n  }\n  private peek(): Token {\n    if (this.current < this.tokens.length) {\n      return this.tokens[this.current];\n    }\n    return new Token(TokenType.EOF, '');\n  }\n}\n","import { SheetRange, iterateRange } from '@/util/range';\nimport { mergeRange, parseReference, parseR1C1 } from '@/util/reference';\nimport { parseNumber } from '@/util/util';\nimport {\n  TokenType,\n  CellDataMap,\n  ResultType,\n  IRange,\n  Coordinate,\n} from '@/types';\nimport type {\n  Visitor,\n  Expression,\n  CellRangeExpression,\n  PostUnaryExpression,\n} from './expression';\nimport {\n  BinaryExpression,\n  UnaryExpression,\n  CellExpression,\n  CallExpression,\n  LiteralExpression,\n  GroupExpression,\n  ArrayExpression,\n} from './expression';\nimport { CustomError } from './formula';\n\nexport class Interpreter implements Visitor {\n  private readonly expressions: Expression[];\n  private readonly cellDataMap: CellDataMap;\n  private currentCoord: Coordinate;\n  constructor(\n    expressions: Expression[],\n    currentCoord: Coordinate,\n    cellDataMap: CellDataMap,\n  ) {\n    this.expressions = expressions;\n    this.cellDataMap = cellDataMap;\n    this.currentCoord = currentCoord;\n  }\n  interpret(): ResultType[] {\n    let result: ResultType[] = [];\n    for (const item of this.expressions) {\n      const temp = this.evaluate(item);\n      const r = this.getRangeCellValue(temp);\n      if (Array.isArray(r)) {\n        result = result.concat(r);\n      } else {\n        result.push(r);\n      }\n    }\n    return result;\n  }\n\n  visitBinaryExpression(data: BinaryExpression): any {\n    let left = this.evaluate(data.left);\n    let right = this.evaluate(data.right);\n    left = this.getOneValue(left);\n    right = this.getOneValue(right);\n    if (\n      [\n        TokenType.MINUS,\n        TokenType.PLUS,\n        TokenType.SLASH,\n        TokenType.STAR,\n        TokenType.EXPONENT,\n      ].includes(data.operator.type)\n    ) {\n      left = this.parseNumber(left);\n      right = this.parseNumber(right);\n    }\n\n    switch (data.operator.type) {\n      case TokenType.MINUS:\n        return left - right;\n      case TokenType.PLUS:\n        return left + right;\n      case TokenType.SLASH: {\n        if (right === 0) {\n          throw new CustomError('#DIV/0!');\n        }\n        return left / right;\n      }\n      case TokenType.STAR:\n        return left * right;\n      case TokenType.EXPONENT:\n        return Math.pow(left, right);\n      case TokenType.EQUAL:\n        return left === right;\n      case TokenType.NOT_EQUAL:\n        return left !== right;\n      case TokenType.GREATER:\n        return left > right;\n      case TokenType.GREATER_EQUAL:\n        return left >= right;\n      case TokenType.LESS:\n        return left < right;\n      case TokenType.LESS_EQUAL:\n        return left <= right;\n      case TokenType.CONCATENATE:\n        return `${left}${right}`;\n      default:\n        throw new CustomError('#TEXT');\n    }\n  }\n  visitCallExpression(expr: CallExpression) {\n    const callee = this.cellDataMap.getFunction(expr.name.value);\n    if (callee && typeof callee === 'function') {\n      let params: ResultType[] = [];\n      for (const item of expr.params) {\n        const t = this.evaluate(item);\n        if (t instanceof SheetRange) {\n          const list = this.getCellValue(t, false);\n          params = params.concat(list);\n        } else {\n          params.push(t);\n        }\n      }\n      return callee(...params);\n    }\n    throw new CustomError('#NAME?');\n  }\n  visitCellExpression(data: CellExpression) {\n    let sheetId = '';\n    if (data.sheetName) {\n      const sheetInfo = this.cellDataMap.getSheetInfo('', data.sheetName.value);\n      if (!sheetInfo?.sheetId) {\n        throw new CustomError('#REF!');\n      }\n      sheetId = sheetInfo.sheetId;\n    }\n    let range: IRange | undefined = undefined;\n    if (\n      [\n        TokenType.DEFINED_NAME,\n        TokenType.CELL,\n        TokenType.COLUMN,\n        TokenType.R1C1,\n      ].includes(data.value.type)\n    ) {\n      range = this.cellDataMap.getDefinedName(data.value.value);\n    }\n    if (!range) {\n      if (data.value.type === TokenType.R1C1) {\n        range = parseR1C1(data.value.value, this.currentCoord);\n      } else {\n        range = parseReference(data.value.value);\n      }\n    }\n    if (!range) {\n      throw new CustomError('#REF!');\n    }\n    if (sheetId) {\n      range.sheetId = sheetId;\n    }\n    return range;\n  }\n  visitLiteralExpression(expr: LiteralExpression) {\n    const { type, value } = expr.value;\n    switch (type) {\n      case TokenType.STRING:\n        return value;\n      case TokenType.NUMBER: {\n        const [check, num] = parseNumber(value);\n        if (check) {\n          return num;\n        }\n        throw new CustomError('#VALUE!');\n      }\n      case TokenType.BOOL:\n        return value === 'TRUE';\n      default:\n        throw new CustomError('#VALUE!');\n    }\n  }\n  visitUnaryExpression(data: UnaryExpression): any {\n    const value = this.evaluate(data.right);\n    const result = this.parseNumber(this.getOneValue(value));\n    switch (data.operator.type) {\n      case TokenType.MINUS:\n        return -result;\n      case TokenType.PLUS:\n        return result;\n      default:\n        throw new CustomError('#VALUE!');\n    }\n  }\n\n  visitCellRangeExpression(expr: CellRangeExpression): any {\n    switch (expr.operator.type) {\n      case TokenType.COLON: {\n        const a = this.visitCellExpression(expr.left);\n        const b = this.visitCellExpression(expr.right);\n        const result = mergeRange(a, b);\n        if (!result) {\n          throw new CustomError('#NAME?');\n        }\n        return result;\n      }\n      default:\n        throw new CustomError('#NAME?');\n    }\n  }\n  visitGroupExpression(expr: GroupExpression): any {\n    return this.evaluate(expr.value);\n  }\n  visitArrayExpression(expr: ArrayExpression) {\n    const result: ResultType[] = [];\n    for (const item of expr.value) {\n      result.push(this.evaluate(item));\n    }\n    return result;\n  }\n  visitPostUnaryExpression(expr: PostUnaryExpression): any {\n    const value = this.evaluate(expr.left);\n    const result = this.parseNumber(this.getOneValue(value));\n    switch (expr.operator.type) {\n      case TokenType.PERCENT:\n        return result * 0.01;\n      default:\n        throw new CustomError('#VALUE!');\n    }\n  }\n  private evaluate(expr: Expression) {\n    return expr.accept(this);\n  }\n  private getRangeCellValue(value: any) {\n    if (value instanceof SheetRange) {\n      if (value.colCount === value.rowCount && value.colCount === 1) {\n        return this.getCellValue(value, true);\n      }\n      throw new CustomError('#REF!');\n    }\n    return value;\n  }\n\n  private getOneValue(value: any) {\n    const result = this.getRangeCellValue(value);\n    if (Array.isArray(result)) {\n      return result[0];\n    } else {\n      return result;\n    }\n  }\n  private parseNumber(value: any) {\n    const [check, result] = parseNumber(value);\n    if (!check) {\n      throw new CustomError('#VALUE!');\n    }\n    return result;\n  }\n\n  private getCellValue(range: IRange, isOneCell: boolean): ResultType[] {\n    let result: ResultType[] = [];\n    if (isOneCell) {\n      const t = this.cellDataMap.getCell(range);\n      const r = this.cellDataMap.handleCell(t, {\n        row: range.row,\n        col: range.col,\n      });\n      result = result.concat(r);\n      return result;\n    }\n    const { row, col, sheetId } = range;\n    const sheetInfo = this.cellDataMap.getSheetInfo(sheetId);\n    if (!sheetInfo || row >= sheetInfo.rowCount || col >= sheetInfo.colCount) {\n      throw new CustomError('#REF!');\n    }\n    iterateRange(range, sheetInfo.rowCount, sheetInfo.colCount, (r, c) => {\n      const t = this.cellDataMap.getCell({\n        row: r,\n        col: c,\n        rowCount: 1,\n        colCount: 1,\n        sheetId,\n      });\n      const a = this.cellDataMap.handleCell(t, { row: r, col: c });\n      result = result.concat(a);\n      return false;\n    });\n    return result;\n  }\n}\n","type Params = any[];\n\nexport function throttle(fn: (...params: Params) => void, wait: number) {\n  let check = false;\n  let lastArgs: Params | undefined = undefined;\n  return function (...args: Params) {\n    if (check) {\n      lastArgs = args;\n    } else {\n      // @ts-ignore\n      fn.apply(this, args);\n      setTimeout(() => {\n        if (lastArgs) {\n          // @ts-ignore\n          fn.apply(this, lastArgs);\n        }\n        check = false;\n      }, wait);\n    }\n  };\n}\n\nexport function get<T>(\n  obj: Record<string, any> | null | undefined,\n  path: string,\n  defaultValue?: T,\n): T {\n  const result =\n    obj == null\n      ? undefined\n      : path\n          .replace(/\\[/g, '.')\n          .replace(/\\]/g, '')\n          .split('.')\n          .reduce((res, key) => {\n            return res == null ? res : res[key];\n          }, obj);\n  return (result === undefined ? defaultValue : result) as T;\n}\n\nexport function isEmpty(value: unknown): boolean {\n  const temp: any = value || {};\n  return (\n    [Object, Array].includes(temp.constructor) && !Object.entries(temp).length\n  );\n}\n\nexport function deepEqual(x: any, y: any) {\n  if (x === y) {\n    return true;\n  }\n  if (x && typeof x === 'object' && y && typeof y === 'object') {\n    if (Object.keys(x).length !== Object.keys(y).length) {\n      return false;\n    }\n    const keys1 = Object.keys(x);\n    const keys2 = Object.keys(y);\n    for (let i = 0; i < keys1.length; i++) {\n      const key1 = keys1[i];\n      const key2 = keys2[i];\n      if (key1 !== key2 || !deepEqual(x[key1], y[key2])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\nexport function noop() {}\n\nexport function camelCase(str: string) {\n  const a = str\n    .toLowerCase()\n    .replace(/[-_\\s.]+(.)?/g, (_, c) => (c ? c.toUpperCase() : ''));\n  return a.substring(0, 1).toLowerCase() + a.substring(1);\n}\n","/**\n * font-style:  none | normal | italic | oblique\n * font-variant none | normal | small-caps // 作用不大\n * font-weight  none | normal | bold | 数字\n * font-size\n * line-height\n * font-family\n * e.g italic bold 14px/16px sans-serif;\n */\n\nimport { EUnderLine, StyleType, ResultType } from '@/types';\nimport { DEFAULT_FONT_SIZE, MUST_FONT_FAMILY } from './constant';\nimport { camelCase } from './lodash';\nimport { parseNumber, isTestEnv } from './util';\n\nexport const FONT_SIZE_LIST = [\n  6,\n  8,\n  9,\n  10,\n  DEFAULT_FONT_SIZE,\n  14,\n  16,\n  18,\n  20,\n  22,\n  24,\n  26,\n  28,\n  36,\n  48,\n  72,\n];\n\nexport function makeFont(\n  fontStyle: 'none' | 'normal' | 'italic' | 'oblique' = 'normal',\n  fontWeight = 'normal',\n  fontSize = DEFAULT_FONT_SIZE,\n  fontFamily = '',\n): string {\n  const temp = `${fontStyle} ${fontWeight} ${fontSize}px `;\n  const fontFamilyList: string[] = [MUST_FONT_FAMILY];\n  // just for test\n  if (isTestEnv() || process.env.IS_E2E) {\n    fontFamilyList.unshift('Source Code Pro');\n  }\n  if (fontFamily) {\n    fontFamilyList.unshift(fontFamily);\n  }\n  return temp + fontFamilyList.join(',');\n}\n\nexport function convertToCssString(style: Partial<StyleType>): string {\n  let result = '';\n  if (style.fontColor) {\n    result += `color:${style.fontColor};`;\n  }\n  if (style.fillColor) {\n    result += `background-color:${style.fillColor};`;\n  }\n  if (style.fontSize) {\n    result += `font-size:${style.fontSize}pt;`;\n  }\n  if (style.fontFamily) {\n    result += `font-family:${style.fontFamily};`;\n  }\n  if (style.isItalic) {\n    result += 'font-style:italic;';\n  }\n  if (style.isBold) {\n    result += 'font-weight:700;';\n  }\n  if (style.isWrapText) {\n    result += 'white-space:normal;';\n  }\n  if (style.underline && style.isStrike) {\n    result += 'text-decoration-line:underline line-through;';\n  } else if (style.underline) {\n    result += 'text-decoration-line:underline;';\n  } else if (style.isStrike) {\n    result += 'text-decoration-line:line-through;';\n  }\n  if (style.underline === EUnderLine.DOUBLE) {\n    result += 'text-decoration-style: double;';\n  }\n\n  return result;\n}\n\nfunction pickCSSStyle(style: Partial<CSSStyleDeclaration>): Partial<StyleType> {\n  const {\n    color,\n    backgroundColor,\n    fontSize,\n    fontFamily,\n    fontStyle,\n    fontWeight,\n    whiteSpace,\n    textDecorationLine,\n    textDecorationStyle,\n  } = style;\n  const result: Partial<StyleType> = {};\n  if (color) {\n    result.fontColor = color;\n  }\n  if (backgroundColor) {\n    result.fillColor = backgroundColor;\n  }\n  if (fontSize) {\n    const size = parseInt(fontSize, 10);\n    if (!isNaN(size)) {\n      result.fontSize = size;\n    }\n  }\n  if (fontFamily) {\n    result.fontFamily = fontFamily;\n  }\n  if (fontStyle === 'italic') {\n    result.isItalic = true;\n  }\n  if (fontWeight && [700, 800, 900, 'bold'].includes(fontWeight)) {\n    result.isBold = true;\n  }\n  if (\n    whiteSpace &&\n    [\n      'normal',\n      'pre-wrap',\n      'pre-line',\n      'break-spaces',\n      'revert',\n      'unset',\n    ].includes(whiteSpace)\n  ) {\n    result.isWrapText = true;\n  }\n  if (textDecorationLine?.includes('underline')) {\n    result.underline = EUnderLine.SINGLE;\n    if (textDecorationStyle === 'double') {\n      result.underline = EUnderLine.DOUBLE;\n    }\n  }\n  if (textDecorationLine?.includes('line-through')) {\n    result.isStrike = true;\n  }\n  return result;\n}\n\nfunction parseStyle(\n  styleMap: Record<string, CSSStyleDeclaration>,\n  style: CSSStyleDeclaration,\n  className: string,\n  tagName: string,\n): Partial<StyleType> {\n  let result: Partial<StyleType> = {};\n  const name = tagName.toLowerCase();\n  const t = styleMap[tagName] || styleMap[name];\n  if (t) {\n    result = pickCSSStyle(t);\n  }\n  if (styleMap[className]) {\n    result = Object.assign(result, pickCSSStyle(styleMap[className]));\n  }\n\n  result = Object.assign(result, pickCSSStyle(style));\n\n  if (name === 's' || name === 'strike') {\n    result.isStrike = true;\n  } else if (name === 'i') {\n    result.isItalic = true;\n  } else if (name === 'b' || name === 'strong') {\n    result.isBold = true;\n  } else if (name === 'u') {\n    result.underline = EUnderLine.SINGLE;\n  }\n  return result;\n}\n\nfunction convertToCssStyleDeclaration(cssStr: string) {\n  const str = cssStr.replace(/\\s+/g, '').replace('<!--', '');\n  const regex = /([^{}]+)\\s*\\{([^}]*)\\}/g;\n  const matches: Record<string, Record<string, string | number>> = {};\n  let match;\n  while ((match = regex.exec(str)) !== null) {\n    const name = (match[1] || '').trim();\n    const cssText = (match[2] || '').trim();\n    if (!name || !cssText) {\n      continue;\n    }\n    matches[name] = {};\n    const list = cssText.split(';');\n    for (const item of list) {\n      const [n, v] = item.split(':').map((v) => v.trim());\n      if (!v || !n) {\n        continue;\n      }\n      const realKey = camelCase(n);\n      const [check, num] = parseNumber(v);\n      const value = check ? num : v;\n      matches[name][realKey] = value;\n    }\n  }\n  return matches;\n}\n\nexport function convertToPx(value: string): number {\n  const num = parseInt(value, 10);\n  if (isNaN(num)) {\n    return -1;\n  }\n  // pt to px\n  if (value.endsWith('pt')) {\n    return Math.ceil((num * 96) / 72);\n  }\n  return num;\n}\nexport function convertPxToPt(px: number, other = 'pt'): string {\n  const pt = Math.floor((px * 72) / 96);\n  return String(pt) + other;\n}\nexport function parseText(text: string, splitter = '\\t') {\n  let list: string[];\n  if (text.indexOf('\\r\\n') >= 0) {\n    list = text.split('\\r\\n');\n  } else {\n    list = text.split('\\n');\n  }\n  const result = list\n    .map((v) => v.trim())\n    .filter((v) => v)\n    .map((v) =>\n      v\n        .split(splitter)\n        .map((v) => v.trim())\n        .filter((v) => v),\n    );\n  const textList: Array<Array<ResultType>> = [];\n  for (const item of result) {\n    if (item.length === 0) {\n      continue;\n    }\n    textList.push(item);\n  }\n  return textList;\n}\n\nexport function parseHTML(html: string) {\n  let template: HTMLTemplateElement | undefined =\n    document.createElement('template');\n  template.innerHTML = html;\n  const doc = template.content;\n  const styleMap: Record<string, CSSStyleDeclaration> = {};\n  for (const item of doc.querySelectorAll('style')) {\n    const temp = convertToCssStyleDeclaration(item.textContent || '');\n    for (const [key, value] of Object.entries(temp)) {\n      styleMap[key] = Object.assign(styleMap[key] || {}, value);\n    }\n  }\n  const textList: Array<Array<ResultType>> = [];\n  const styleList: Array<Array<Partial<StyleType>>> = [];\n  const trList = doc.querySelectorAll('tr');\n  const colMap = new Map<number, number>();\n  const rowMap = new Map<number, number>();\n  let row = 0;\n  for (const tr of trList) {\n    const height = convertToPx(tr.style.height);\n    if (height > 0) {\n      rowMap.set(row++, height);\n    }\n    const texts: ResultType[] = [];\n    const list: Array<Partial<StyleType>> = [];\n    let col = 0;\n    for (const td of tr.children) {\n      if (td.tagName !== 'TD') {\n        continue;\n      }\n\n      let temp = td as HTMLElement;\n      const width = convertToPx(temp.style.width);\n      if (width > 0 && !colMap.has(col)) {\n        colMap.set(col++, width);\n      }\n      let itemStyle: Partial<StyleType> = {};\n      while (temp.nodeType !== Node.TEXT_NODE) {\n        const style = parseStyle(\n          styleMap,\n          temp.style,\n          temp.className ? `.${temp.className}` : '',\n          temp.tagName,\n        );\n        itemStyle = Object.assign(itemStyle, style);\n        if (temp.firstChild) {\n          temp = temp.firstChild as HTMLElement;\n        } else {\n          break;\n        }\n      }\n      list.push(itemStyle);\n      texts.push((temp.textContent ?? '').trim());\n    }\n    textList.push(texts);\n    styleList.push(list);\n  }\n  template = undefined;\n  return {\n    textList,\n    styleList,\n    rowMap,\n    colMap,\n  };\n}\n","let dprData: number | undefined = undefined;\nexport function dpr(\n  data = typeof devicePixelRatio === 'undefined' ? undefined : devicePixelRatio,\n): number {\n  if (typeof dprData === 'number') {\n    return dprData;\n  }\n  return Math.max(Math.floor(data || 1), 1);\n}\n\nexport function npx(px: number): number {\n  return Math.floor(px * dpr());\n}\n\n// for worker\nexport function setDpr(data: number) {\n  dprData = Math.max(Math.floor(data || 1), 1);\n}\n","import { COLOR_PICKER_COLOR_LIST } from './constant';\n\ntype NameSpaceType = 'react' | 'model' | 'test';\n\nexport class Debug {\n  namespace: NameSpaceType;\n\n  static readonly colorMap: Map<NameSpaceType, string> = new Map<\n    NameSpaceType,\n    string\n  >();\n  constructor(namespace: NameSpaceType) {\n    this.namespace = namespace;\n  }\n  init = () => {\n    this.setColor();\n    return this.log;\n  };\n  log = (...rest: unknown[]): void => {\n    if (!this.enable()) {\n      return;\n    }\n    const { namespace } = this;\n    const color = Debug.colorMap.get(namespace);\n    const result = [`%c ${namespace}:`, `color:${color};`, ...rest];\n    console.log(...result);\n  };\n  getRandomColor = (): string => {\n    const index = Math.floor(Math.random() * COLOR_PICKER_COLOR_LIST.length);\n    return COLOR_PICKER_COLOR_LIST[index];\n  };\n  enable() {\n    return window.localStorage.getItem('debug') === '*';\n  }\n  setColor() {\n    if (!Debug.colorMap.has(this.namespace)) {\n      Debug.colorMap.set(this.namespace, this.getRandomColor());\n    }\n  }\n}\n\nexport const modelLog = new Debug('model').init();\nexport const reactLog = new Debug('react').init();\n","const size = {\n  smallFont: '10px',\n  font: '12px',\n  largeFont: '14px',\n  padding: '12px',\n  lineHeight: 1.5,\n  mediumPadding: '8px',\n  largePadding: '20px',\n  borderRadius: '4px',\n  borderLargeRadius: '8px',\n  tinyPadding: '4px',\n  scrollBarContent: '30px',\n  formulaBarHeight: '25px',\n};\nexport default size;\n","const zIndex = {\n  lowZIndex: 2,\n  middleZIndex: 3,\n  highZIndex: 4,\n  highestZIndex: 9,\n};\nexport default zIndex;\n","function hslaToHex(h: number, s: number, l: number, alpha: number) {\n  s = s / 100; // Convert percentage to decimal\n  l = l / 100; // Convert percentage to decimal\n\n  // Convert HSL to RGB\n  const c = (1 - Math.abs(2 * l - 1)) * s;\n  const x = c * (1 - Math.abs(((h / 60) % 2) - 1));\n  const m = l - c / 2;\n\n  let r, g, b;\n\n  if (h >= 0 && h < 60) {\n    r = c;\n    g = x;\n    b = 0;\n  } else if (h >= 60 && h < 120) {\n    r = x;\n    g = c;\n    b = 0;\n  } else if (h >= 120 && h < 180) {\n    r = 0;\n    g = c;\n    b = x;\n  } else if (h >= 180 && h < 240) {\n    r = 0;\n    g = x;\n    b = c;\n  } else if (h >= 240 && h < 300) {\n    r = x;\n    g = 0;\n    b = c;\n  } else {\n    r = c;\n    g = 0;\n    b = x;\n  }\n  if (alpha !== 1) {\n    return `rgba(${r},${g},${b},${alpha})`;\n  }\n\n  // Adjust RGB values and convert to HEX\n  const toHex = (value: number) =>\n    Math.round(value * 255)\n      .toString(16)\n      .padStart(2, '0');\n  const hexR = toHex(r + m);\n  const hexG = toHex(g + m);\n  const hexB = toHex(b + m);\n\n  // Combine the values and return the HEX color\n  return `#${hexR}${hexG}${hexB}`;\n}\n\nconst RGBToHSL = (red: number, green: number, blue: number) => {\n  // Make r, g, and b fractions of 1\n  const r = red / 255;\n  const g = green / 255;\n  const b = blue / 255;\n\n  // Find greatest and smallest channel values\n  const cmin = Math.min(r, g, b);\n  const cmax = Math.max(r, g, b);\n  const delta = cmax - cmin;\n  const hue = getHue(r, g, b);\n  const lightness = getLightness(cmax, cmin);\n  const saturation = getSaturation(delta, lightness);\n\n  return [hue, saturation * 100, lightness * 100];\n};\n\nconst getHue = (r: number, g: number, b: number) => {\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const c = max - min;\n  let hue: number = 0;\n  if (c == 0) {\n    hue = 0;\n  } else {\n    switch (max) {\n      case r: {\n        let segment = (g - b) / c;\n        let shift = 0; // R° / (360° / hex sides)\n        if (segment < 0) {\n          // hue > 180, full rotation\n          shift = 360 / 60; // R° / (360° / hex sides)\n        }\n        hue = segment + shift;\n        break;\n      }\n\n      case g: {\n        let segment = (b - r) / c;\n        let shift = 120 / 60; // G° / (360° / hex sides)\n        hue = segment + shift;\n        break;\n      }\n\n      case b:\n        let segment = (r - g) / c;\n        let shift = 240 / 60; // B° / (360° / hex sides)\n        hue = segment + shift;\n        break;\n    }\n  }\n  return hue * 60; // hue is in [0,6], scale it up\n};\n\nconst getSaturation = (delta: number, lightness: number) =>\n  delta == 0 ? 0 : delta / (1 - Math.abs(2 * lightness - 1));\n\nconst getLightness = (cmax: number, cmin: number) => (cmax + cmin) / 2;\n\nconst fullDarkMode = ([red, green, blue, alpha]: number[]) => {\n  const [hue, saturation, lightness] = RGBToHSL(red, green, blue);\n  return hslaToHex(hue, saturation * 0.9, 100 - lightness, alpha);\n};\n\nfunction hexToRgba(hex: string) {\n  if (hex.startsWith('#')) {\n    hex = hex.slice(1);\n  }\n\n  let r = parseInt(hex.substring(0, 2), 16);\n  let g = parseInt(hex.substring(2, 4), 16);\n  let b = parseInt(hex.substring(4, 6), 16);\n  let a = parseInt(hex.substring(6, 8) || 'ff', 16);\n  return [r, g, b, a / 255];\n}\n\nexport const convertColorToDark = (color: string) => {\n  if (color.startsWith('rgb')) {\n    const t = color\n      .replace('rgb', '')\n      .replace('a', '')\n      .replace('(', '')\n      .replace(')', '');\n    const list = t.split(',').map(Number);\n    if (list.length <= 3) {\n      list.push(1);\n    }\n    return fullDarkMode(list);\n  } else {\n    return fullDarkMode(hexToRgba(color));\n  }\n};\n","import { convertColorToDark } from './convert';\n\nexport const lightColor = Object.freeze({\n  primaryColor: '#217346',\n  buttonActiveColor: '#c6c6c6',\n  selectionColor: 'rgba(198,198,198,0.3)',\n  backgroundColor: '#e6e6e6',\n  hoverColor: 'rgba(0, 0, 0, 0.04)',\n  scrollbarColor: 'rgba(0, 0, 0, 0.1)',\n  scrollbarHoveColor: 'rgba(0, 0, 0, 0.2)',\n  dialogBackground: 'rgba(0, 0, 0, 0.6)',\n  white: '#ffffff',\n  black: '#000000',\n  triangleFillColor: '#dddddd',\n  contentColor: '#333333',\n  borderColor: '#cccccc',\n  activeBorderColor: '#808080',\n  errorFormulaColor: '#ff0000',\n});\n\nexport const darkColor = Object.freeze(\n  Object.fromEntries(\n    Object.entries(lightColor).map(([k, v]) => [k, convertColorToDark(v)]),\n  ),\n);\n","import { ThemeType } from '@/types';\nimport size from './size';\nimport zIndex from './zIndex';\nimport { lightColor, darkColor } from './color';\nimport { convertColorToDark } from './convert';\n\nexport const sizeConfig = {\n  ...size,\n  ...zIndex,\n};\n\nconst themeKey = 'data-theme' as const;\n\nexport function setTheme(value: ThemeType) {\n  sessionStorage.setItem(themeKey, value);\n  document.documentElement.setAttribute(themeKey, value);\n}\nexport function getTheme(): ThemeType {\n  if (typeof sessionStorage !== 'undefined') {\n    const l = sessionStorage.getItem(themeKey);\n    if (l && (l === 'dark' || l === 'light')) {\n      return l as ThemeType;\n    }\n  }\n  if (typeof matchMedia === 'function') {\n    const result = matchMedia('(prefers-color-scheme: dark)').matches\n      ? 'dark'\n      : 'light';\n    return result;\n  }\n  return 'light';\n}\n\nexport function getThemeColor(key: keyof typeof lightColor, type?: ThemeType) {\n  if (type === 'dark' || getTheme() === 'dark') {\n    return darkColor[key];\n  } else {\n    return lightColor[key];\n  }\n}\nexport { darkColor, lightColor, convertColorToDark };\n","import en from './lang/en.json';\nimport zh from './lang/zh.json';\n\nlet languageKey = 'language';\n\nexport const LANGUAGE_LIST = ['en', 'zh'] as const;\n\nexport type LanguageType = (typeof LANGUAGE_LIST)[number];\n\nexport function getLanguage(): LanguageType {\n  const defaultLanguage = 'en';\n\n  if (typeof window === 'undefined') {\n    return defaultLanguage;\n  }\n  let language: LanguageType = defaultLanguage;\n  const l = localStorage.getItem(languageKey);\n  if (l && LANGUAGE_LIST.some((v) => v === l)) {\n    language = l as LanguageType;\n  } else {\n    const lang = navigator?.language || '';\n    const item = LANGUAGE_LIST.find((v) => lang.includes(v));\n    if (item) {\n      language = item;\n    }\n  }\n  document.documentElement.setAttribute('lang', language);\n  return language;\n}\n\nexport function setLanguage(lang: LanguageType) {\n  localStorage.setItem(languageKey, lang);\n}\n\nexport function $(key: keyof typeof en) {\n  if (getLanguage() === 'en') {\n    return en[key];\n  } else {\n    return zh[key];\n  }\n}\n","import type { ChartType } from 'chart.js';\nimport { $ } from '@/i18n';\nimport { DEFAULT_FORMAT_CODE, DEFAULT_TEXT_FORMAT_CODE } from './constant';\n\nexport const CHART_TYPE_LIST: Array<{\n  value: ChartType;\n  label: string;\n}> = [\n  {\n    value: 'line',\n    label: $('line-chart'),\n  },\n  {\n    value: 'bar',\n    label: $('bar-chart'),\n  },\n  {\n    value: 'pie',\n    label: $('pie-chart'),\n  },\n  {\n    value: 'scatter',\n    label: $('scatter-chart'),\n  },\n  {\n    value: 'radar',\n    label: $('radar-chart'),\n  },\n  {\n    value: 'polarArea',\n    label: $('polar-area-chart'),\n  },\n];\n\nexport const NUMBER_FORMAT_LIST: Array<{\n  formatCode: string;\n  id: number;\n}> = [\n  { formatCode: DEFAULT_FORMAT_CODE, id: 0 },\n  { formatCode: '0', id: 1 },\n  { formatCode: '0.00', id: 2 },\n  { formatCode: '#,##0', id: 3 },\n  { formatCode: '#,##0.00', id: 4 },\n  { formatCode: '\"$\"#,##0.00_);[Red](\"$\"#,##0.00)', id: 8 },\n  { formatCode: '0%', id: 9 },\n  { formatCode: '0.00%', id: 10 },\n  { formatCode: '0.00E+00', id: 11 },\n  { formatCode: '# ?/?', id: 12 },\n  { formatCode: '# ??/??', id: 13 },\n  { formatCode: 'mm-dd-yy', id: 14 },\n  { formatCode: 'd-mmm-yy', id: 15 },\n  { formatCode: 'd-mmm', id: 16 },\n  { formatCode: 'mmm-yy', id: 17 },\n  { formatCode: 'h:mm AM/PM', id: 18 },\n  { formatCode: 'h:mm:ss AM/PM', id: 19 },\n  { formatCode: 'h:mm', id: 20 },\n  { formatCode: 'h:mm:ss', id: 21 },\n  { formatCode: 'm/d/yy h:mm', id: 22 },\n  {\n    formatCode: 'yyyy\"年\"m\"月\"',\n    id: 27,\n  },\n  { formatCode: '#,##0 ;(#,##0)', id: 37 },\n  { formatCode: '#,##0 ;[Red](#,##0)', id: 38 },\n  { formatCode: '#,##0.00 ;(#,##0.00)', id: 39 },\n  { formatCode: '#,##0.00 ;[Red](#,##0.00)', id: 40 },\n  {\n    formatCode: '_(\"$\"* #,##0.00_);_(\"$\"* (#,##0.00);_(\"$\"* \"-\"??_);_(@_)',\n    id: 44,\n  },\n  { formatCode: 'mm:ss', id: 45 },\n  { formatCode: '[h]:mm:ss', id: 46 },\n  { formatCode: 'mmss.0', id: 47 },\n  { formatCode: '##0.0E+0', id: 48 },\n  { formatCode: DEFAULT_TEXT_FORMAT_CODE, id: 49 },\n  {\n    formatCode: '上午/下午 h\"时\"mm\"分\"ss\"秒\"',\n    id: 56,\n  },\n];\n\nexport const getFormatCode = (id: number): string =>\n  NUMBER_FORMAT_LIST.find((v) => v.id === id)!.formatCode;\nexport const numberFormatOptionList = [\n  {\n    value: getFormatCode(0),\n    label: $('general'),\n    disabled: false,\n  },\n  {\n    value: getFormatCode(2),\n    label: $('number'),\n    disabled: false,\n  },\n  {\n    value: getFormatCode(8),\n    label: $('currency'),\n    disabled: false,\n  },\n  {\n    value: getFormatCode(44),\n    label: $('accounting'),\n    disabled: false,\n  },\n  {\n    value: $('short-date-format'),\n    label: $('short-date'),\n    disabled: false,\n  },\n  {\n    value: $('long-date-format'),\n    label: $('long-date'),\n    disabled: false,\n  },\n  {\n    value: $('time-format'),\n    label: $('time'),\n    disabled: false,\n  },\n  {\n    value: getFormatCode(10),\n    label: $('percentage'),\n    disabled: false,\n  },\n  {\n    value: getFormatCode(12),\n    label: $('fraction'),\n    disabled: false,\n  },\n  {\n    value: getFormatCode(11),\n    label: $('scientific'),\n    disabled: false,\n  },\n  {\n    value: getFormatCode(49),\n    label: $('text'),\n    disabled: false,\n  },\n  // {\n  //   value: '',\n  //   label: $('more-number-formats'),\n  //   disabled: false,\n  // },\n];\n","import { Scanner } from './scanner';\nimport { Parser } from './parser';\nimport allFormulas, {\n  CustomError,\n  roundNumber,\n  type FormulaKeys,\n} from './formula';\nimport { Interpreter } from './interpreter';\nimport {\n  CellDataMap,\n  InterpreterResult,\n  IRange,\n  ResultType,\n  Coordinate,\n  WorksheetType,\n  ModelCellType,\n  RequestFormulas,\n  ResponseFormulas,\n} from '@/types';\nimport { isFormula, coordinateToString, stringToCoordinate } from '@/util/util';\nimport { SheetRange } from '@/util';\n\nexport function parseFormula(\n  formula: string,\n  currentCoord: Coordinate = { row: 0, col: 0 },\n  cellData: CellDataMap = new CellDataMapImpl(),\n  cache: Map<string, InterpreterResult> = new Map<string, InterpreterResult>(),\n): InterpreterResult {\n  if (cache.has(formula)) {\n    const t = cache.get(formula)!;\n    // fix cycle import\n    if (t.result.length === 0) {\n      return { result: [0] };\n    }\n    return t;\n  }\n  try {\n    cellData.handleCell = (\n      value: ModelCellType | undefined,\n      coord: Coordinate,\n    ): ResultType[] => {\n      if (value) {\n        if (value.formula) {\n          const t = parseFormula(value.formula, coord, cellData, cache);\n          return t.result;\n        } else {\n          return [value.value];\n        }\n      }\n      return [];\n    };\n    const result: InterpreterResult = {\n      result: [],\n      expressionStr: '',\n    };\n    cache.set(formula, result);\n    const list = new Scanner(formula).scan();\n    const expressions = new Parser(list).parse();\n    const resultList = new Interpreter(\n      expressions,\n      currentCoord,\n      cellData,\n    ).interpret();\n\n    const strList: string[] = [];\n    for (const item of expressions) {\n      strList.push(item.toString());\n    }\n    result.expressionStr = strList.join('');\n    for (const item of resultList) {\n      if (typeof item === 'number' && !isNaN(item)) {\n        result.result.push(roundNumber(item));\n      } else {\n        result.result.push(item);\n      }\n    }\n    return result;\n  } catch (error) {\n    if (error instanceof CustomError) {\n      const result: InterpreterResult = {\n        result: [error.value],\n      };\n      cache.set(formula, result);\n      return result;\n    }\n    throw error;\n  }\n}\n\nconst defaultSheetId = '_test_';\nexport class CellDataMapImpl implements CellDataMap {\n  private readonly map = new Map<string, ModelCellType>();\n  private readonly definedNameMap = new Map<string, SheetRange>();\n  private readonly currentSheetId = defaultSheetId;\n  private sheetList: WorksheetType[] = [\n    {\n      sheetId: defaultSheetId,\n      name: '_test_',\n      rowCount: 200,\n      colCount: 30,\n      isHide: false,\n      sort: 1,\n    },\n  ];\n  private getKey(row: number, col: number, sheetId: string) {\n    const key = `${row}_${col}_${sheetId || defaultSheetId}`;\n    return key;\n  }\n  getFunction = (name: string) => {\n    return allFormulas[name as FormulaKeys];\n  };\n  setSheetList(list: WorksheetType[]) {\n    this.sheetList = list;\n  }\n  set(range: IRange, value: ResultType[][]): void {\n    const { row, col, sheetId } = range;\n    for (let i = 0; i < value.length; i++) {\n      for (let j = 0; j < value[i].length; j++) {\n        const key = this.getKey(row + i, col + j, sheetId);\n        const t = value[i][j];\n        if (typeof t === 'string' && isFormula(t)) {\n          this.map.set(key, { formula: t, value: '' });\n        } else {\n          this.map.set(key, { value: t });\n        }\n      }\n    }\n  }\n  getCell(range: IRange) {\n    const { row, col, sheetId } = range;\n    const key = this.getKey(row, col, sheetId);\n    const item = this.map.get(key);\n    return item;\n  }\n  getSheetInfo(sheetId?: string, sheetName?: string) {\n    if (sheetName) {\n      return this.sheetList.find((v) => v.name === sheetName);\n    }\n    const realSheetId = sheetId || this.currentSheetId;\n    return this.sheetList.find((v) => v.sheetId === realSheetId);\n  }\n  handleCell = (value: ModelCellType | undefined, _coord: Coordinate) => {\n    if (value) {\n      return [value.value];\n    }\n    return [];\n  };\n  setDefinedName(name: string, value: IRange) {\n    const r = SheetRange.makeRange(value);\n    this.definedNameMap.set(name, r);\n  }\n  getDefinedName(name: string) {\n    return this.definedNameMap.get(name);\n  }\n}\n\nexport function computeFormulas(\n  eventData: RequestFormulas,\n  cb: (data: ResponseFormulas) => void,\n) {\n  const { currentSheetId, worksheets, workbook, definedNames } = eventData;\n  const formulaCache = new Map<string, InterpreterResult>();\n  const sheetData = worksheets[currentSheetId] || {};\n  const result: ResponseFormulas = {\n    list: [],\n  };\n  const cellDataMap: CellDataMap = {\n    handleCell: () => {\n      return [];\n    },\n    getFunction: (name: string) => {\n      return allFormulas[name as FormulaKeys];\n    },\n    getCell: (range: IRange) => {\n      const { row, col, sheetId } = range;\n      const realSheetId = sheetId || currentSheetId;\n      const sheetData = worksheets[realSheetId] || {};\n      const key = coordinateToString(row, col);\n      return sheetData[key];\n    },\n    set: () => {\n      throw new CustomError('#REF!');\n    },\n    getSheetInfo: (sheetId?: string, sheetName?: string) => {\n      if (sheetName) {\n        return workbook.find((v) => v.name === sheetName);\n      }\n      const realSheetId = sheetId || currentSheetId;\n      return workbook.find((v) => v.sheetId === realSheetId);\n    },\n    setDefinedName: () => {\n      throw new CustomError('#REF!');\n    },\n    getDefinedName: (name: string) => {\n      const r = definedNames[name];\n      if (!r) {\n        return r;\n      }\n      return SheetRange.makeRange(r);\n    },\n  };\n  for (const [k, data] of Object.entries(sheetData)) {\n    if (!data?.formula) {\n      continue;\n    }\n    const temp = parseFormula(\n      data?.formula,\n      stringToCoordinate(k),\n      cellDataMap,\n      formulaCache,\n    );\n    if (!temp) {\n      continue;\n    }\n    const r = temp.result[0];\n    if (r !== data.value) {\n      result.list.push({\n        key: k,\n        newValue: r,\n        sheetId: currentSheetId,\n      });\n    }\n  }\n  cb(result);\n}\n","export function splitToWords(str: string): string[] {\n  if (!str) {\n    return [];\n  }\n  // unicode\n  if (typeof Intl === 'undefined' || typeof Intl.Segmenter !== 'function') {\n    // firefox\n    return [...str];\n  }\n  const list = new Intl.Segmenter([], { granularity: 'word' }).segment(str);\n  const arr = [...list];\n  return arr.map((x) => x.segment);\n}\n","import { splitToWords } from '@/util/split';\nimport { getThemeColor, sizeConfig } from '@/theme';\nimport { npx, dpr } from '@/util/dpr';\nimport { isEmpty } from '@/util/lodash';\nimport { makeFont } from '@/util/style';\nimport {\n  DEFAULT_FONT_SIZE,\n  ERROR_SET,\n  MERGE_CELL_LINE_BREAK,\n  DEFAULT_FORMAT_CODE,\n  DEFAULT_LINE_WIDTH,\n  BORDER_TYPE_MAP,\n  type ErrorTypes,\n} from '@/util/constant';\nimport {\n  CanvasOverlayPosition,\n  Point,\n  EUnderLine,\n  IWindowSize,\n  ResultType,\n  StyleType,\n  EHorizontalAlign,\n  EVerticalAlign,\n  BorderItem,\n  ThemeType,\n  BorderType,\n} from '@/types';\nimport { numberFormat, isDateFormat } from '@/model/numberFormat';\nimport { isMergeContent } from '@/util/util';\n\nconst measureTextMap = new Map<string, IWindowSize>();\n\nexport function measureText(\n  ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D,\n  char: string,\n): IWindowSize {\n  const mapKey = `${char}__${ctx.font}`;\n  if (measureTextMap.has(mapKey)) {\n    return measureTextMap.get(mapKey)!;\n  }\n  const text = ctx.measureText(char);\n  const { actualBoundingBoxAscent, actualBoundingBoxDescent } = text;\n  const h = actualBoundingBoxAscent + actualBoundingBoxDescent;\n  const w = text.width;\n  const width = Math.ceil(w / dpr());\n  const height = Math.ceil(h / dpr());\n  const result = { width, height };\n  measureTextMap.set(mapKey, result);\n  return result;\n}\n\nexport function fillRect(\n  ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n): void {\n  ctx.fillRect(npx(x), npx(y), npx(width), npx(height));\n}\n/* jscpd:ignore-start */\nexport function strokeRect(\n  ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n): void {\n  ctx.strokeRect(npx(x), npx(y), npx(width), npx(height));\n}\n\nexport function clearRect(\n  ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n): void {\n  ctx.clearRect(npx(x), npx(y), npx(width), npx(height));\n}\n/* jscpd:ignore-end */\n\nexport function fillText(\n  ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D,\n  text: string,\n  x: number,\n  y: number,\n) {\n  ctx.fillText(text, npx(x), npx(y));\n}\n\nexport function drawLines(\n  ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D,\n  pointList: Point[],\n): void {\n  if (pointList.length === 0) {\n    return;\n  }\n  ctx.beginPath();\n  for (let i = 0; i < pointList.length; i += 2) {\n    const first = pointList[i];\n    const second = pointList[i + 1];\n    ctx.moveTo(npx(first[0]), npx(first[1]));\n    ctx.lineTo(npx(second[0]), npx(second[1]));\n  }\n  ctx.stroke();\n}\n\nexport function drawTriangle(\n  ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D,\n  point1: Point,\n  point2: Point,\n  point3: Point,\n) {\n  ctx.beginPath();\n  ctx.moveTo(npx(point1[0]), npx(point1[1]));\n  ctx.lineTo(npx(point2[0]), npx(point2[1]));\n  ctx.lineTo(npx(point3[0]), npx(point3[1]));\n  ctx.fill();\n}\n\nexport function getDoubleLine(\n  pointList: Point[],\n  position: 'top' | 'bottom' | 'left' | 'right',\n  isShort: boolean,\n) {\n  const result = pointList.slice();\n  const [start, end] = pointList;\n  const t = DEFAULT_LINE_WIDTH * 2;\n  const other = isShort ? t : 0;\n  if (position === 'bottom') {\n    result.push([start[0] + other, start[1] - t], [end[0] - other, end[1] - t]);\n  } else if (position === 'top') {\n    result.push([start[0] + other, start[1] + t], [end[0] - other, end[1] + t]);\n  } else if (position === 'left') {\n    result.push([start[0] + t, start[1] + other], [end[0] + t, end[1] - other]);\n  } else if (position === 'right') {\n    result.push([start[0] - t, start[1] + other], [end[0] - t, end[1] - other]);\n  }\n  return result;\n}\n\nfunction splitWords(\n  text: string,\n  isWrapText?: boolean,\n  isMergeContent?: boolean,\n): string[] {\n  if (isMergeContent) {\n    if (isWrapText) {\n      return text.split(MERGE_CELL_LINE_BREAK);\n    } else {\n      return splitToWords(text.replaceAll(MERGE_CELL_LINE_BREAK, ''));\n    }\n  } else {\n    return splitToWords(text);\n  }\n}\n\nexport function drawAntLine(\n  ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n) {\n  ctx.setLineDash([npx(8), npx(6)]);\n  const offset = DEFAULT_LINE_WIDTH;\n  strokeRect(\n    ctx,\n    x + offset,\n    y + offset,\n    width - offset * 2,\n    height - offset * 2,\n  );\n  ctx.setLineDash([]);\n}\n\nfunction getLineDash(type?: BorderType) {\n  let dash: number[] = [];\n  if (type === 'hair') {\n    dash = [DEFAULT_LINE_WIDTH, DEFAULT_LINE_WIDTH];\n  } else if (type === 'dotted' || type === 'mediumDashed') {\n    dash = [DEFAULT_LINE_WIDTH * 2, DEFAULT_LINE_WIDTH * 2];\n  } else if (type === 'dashed') {\n    dash = [DEFAULT_LINE_WIDTH * 4, DEFAULT_LINE_WIDTH * 4];\n  } else if (type === 'dashDot' || type === 'mediumDashDot') {\n    dash = [\n      DEFAULT_LINE_WIDTH * 4,\n      DEFAULT_LINE_WIDTH * 4,\n      DEFAULT_LINE_WIDTH * 8,\n      DEFAULT_LINE_WIDTH * 4,\n    ];\n  } else if (type === 'dashDotDot' || type === 'mediumDashDotDot') {\n    dash = [\n      DEFAULT_LINE_WIDTH * 4,\n      DEFAULT_LINE_WIDTH * 4,\n      DEFAULT_LINE_WIDTH * 8,\n      DEFAULT_LINE_WIDTH * 4,\n      DEFAULT_LINE_WIDTH * 4,\n      DEFAULT_LINE_WIDTH * 4,\n    ];\n  }\n  return dash;\n}\n\nexport function renderBorderItem(\n  ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D,\n  cellInfo: CanvasOverlayPosition,\n  borderItem: BorderItem | undefined,\n  position: 'top' | 'bottom' | 'left' | 'right',\n  theme?: ThemeType,\n) {\n  if (!borderItem) {\n    return;\n  }\n  const { top, left, width, height } = cellInfo;\n\n  let list: Point[] = [];\n  if (position === 'top') {\n    list = [\n      [left, top],\n      [left + width, top],\n    ];\n  } else if (position === 'bottom') {\n    list = [\n      [left, top + height],\n      [left + width, top + height],\n    ];\n  } else if (position === 'left') {\n    list = [\n      [left, top],\n      [left, top + height],\n    ];\n  } else if (position === 'right') {\n    list = [\n      [left + width, top],\n      [left + width, top + height],\n    ];\n  }\n  const { type, color } = borderItem;\n  ctx.lineWidth = BORDER_TYPE_MAP[type];\n  ctx.strokeStyle = color || getThemeColor('black', theme);\n  const lineDash = getLineDash(type);\n  if (type === 'double') {\n    list = getDoubleLine(list, position, true);\n  }\n  if (lineDash.length > 0) {\n    ctx.setLineDash(lineDash.map((v) => npx(v)));\n  }\n  drawLines(ctx, list);\n  if (lineDash.length > 0) {\n    ctx.setLineDash([]);\n  }\n}\n\ntype TextItem = { str: string; width: number; height: number };\nexport function renderCell(\n  ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D,\n  cellInfo: CanvasOverlayPosition,\n  value: ResultType,\n  style?: Partial<StyleType>,\n  isMergeCell?: boolean,\n  theme?: ThemeType,\n): IWindowSize {\n  const result: IWindowSize = { height: 0, width: 0 };\n  if (value === '' && isEmpty(style)) {\n    return result;\n  }\n  const format = style?.numberFormat || DEFAULT_FORMAT_CODE;\n  const isRight = format === DEFAULT_FORMAT_CODE && typeof value === 'number';\n  const text = numberFormat(value, format);\n  const fontSize = style?.fontSize ? style.fontSize : DEFAULT_FONT_SIZE;\n  const font = makeFont(\n    style?.isItalic ? 'italic' : 'normal',\n    style?.isBold ? 'bold' : '500',\n    npx(fontSize),\n    style?.fontFamily,\n  );\n\n  // draw background color\n  if (style?.fillColor) {\n    ctx.fillStyle = style?.fillColor;\n    fillRect(ctx, cellInfo.left, cellInfo.top, cellInfo.width, cellInfo.height);\n  }\n  // error text\n  let fillStyle = style?.fontColor || getThemeColor('contentColor', theme);\n  if (ERROR_SET.has(text as ErrorTypes)) {\n    fillStyle = getThemeColor('errorFormulaColor', theme);\n  }\n\n  ctx.font = font;\n  ctx.fillStyle = fillStyle;\n\n  const realStyle = style ? { ...style } : {};\n  let align = realStyle?.horizontalAlign;\n  if (realStyle?.horizontalAlign === undefined && isRight) {\n    align = EHorizontalAlign.RIGHT;\n  }\n  realStyle.horizontalAlign = align;\n\n  // show all date text\n  const isDate = !realStyle?.isWrapText && isDateFormat(format);\n  const texts = isDate\n    ? [text]\n    : splitWords(text, style?.isWrapText, isMergeCell);\n  const textList: TextItem[] = texts.map((item) => {\n    const size = measureText(ctx, item);\n    return {\n      str: item,\n      width: size.width,\n      height: size.height === 0 ? fontSize : size.height,\n    };\n  });\n\n  // fill text\n  const { width, height, resultList } = computeCell(\n    textList,\n    cellInfo,\n    realStyle,\n    isMergeContent(Boolean(isMergeCell), text),\n  );\n  if (width > 0 && height > 0) {\n    const lineGap = Math.ceil((fontSize * (sizeConfig.lineHeight - 1)) / 2);\n    let list: Point[] = [];\n    for (const item of resultList) {\n      fillText(ctx, item.text, item.x, item.y);\n      if (realStyle?.underline) {\n        ctx.strokeStyle = fillStyle;\n        const t = item.y + item.height + lineGap / 2;\n        const point: Point[] = [\n          [item.x, t],\n          [item.x + item.width, t],\n        ];\n        if (realStyle?.underline === EUnderLine.DOUBLE) {\n          list = list.concat(getDoubleLine(point, 'bottom', false));\n        } else {\n          list = list.concat(point);\n        }\n      }\n      if (realStyle?.isStrike) {\n        ctx.strokeStyle = fillStyle;\n        const t = item.y + item.height / 2 + lineGap / 2;\n        list = list.concat([\n          [item.x, t],\n          [item.x + item.width, t],\n        ]);\n      }\n    }\n    // underline strike\n    drawLines(ctx, list);\n  }\n\n  result.height = Math.ceil(height);\n  result.width = Math.ceil(width);\n\n  return result;\n}\nfunction computeCell(\n  texts: TextItem[],\n  cellInfo: CanvasOverlayPosition,\n  style?: Partial<StyleType>,\n  isMergeContent?: boolean,\n) {\n  const fontSize = style?.fontSize ? style.fontSize : DEFAULT_FONT_SIZE;\n  const lineGap = Math.ceil((fontSize * (sizeConfig.lineHeight - 1)) / 2);\n  const verticalAlign = style?.verticalAlign ?? EVerticalAlign.MIDDLE;\n  const { left, top, height } = cellInfo;\n  const width = Math.max(cellInfo.width, ...texts.map((v) => v.width));\n  const textList: Array<{\n    text: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n  }> = [];\n  let textWidth = 0;\n  let textHeight = 0;\n  if (style?.isWrapText && isMergeContent) {\n    let y = 0;\n    for (let i = 0; i < texts.length; i++) {\n      const item = texts[i];\n      textWidth = Math.max(textWidth, item.width);\n      const temp = item.height + lineGap * 2;\n      textHeight += temp;\n      textList.push({\n        text: item.str,\n        x: 0,\n        y,\n        width: item.width,\n        height: item.height,\n      });\n      y += temp;\n    }\n  } else if (style?.isWrapText) {\n    let y = 0;\n    for (let i = 0; i < texts.length; ) {\n      let temp = width;\n      let line = '';\n      let w = 0;\n      let h = 0;\n      while (i < texts.length) {\n        const item = texts[i];\n        if (temp >= item.width) {\n          w += item.width;\n          h = Math.max(h, item.height);\n          temp -= item.width;\n          line += item.str;\n          i++;\n        } else {\n          break;\n        }\n      }\n      if (line) {\n        textWidth = Math.max(textWidth, w);\n        const t = h + lineGap * 2;\n        textHeight += t;\n        textList.push({\n          text: line,\n          x: 0,\n          y,\n          width: w,\n          height: h,\n        });\n        y += t;\n      }\n    }\n  } else {\n    let line = '';\n    let temp = width;\n    for (let i = 0; i < texts.length; i++) {\n      const item = texts[i];\n      if (temp >= item.width) {\n        textWidth += item.width;\n        textHeight = Math.max(textHeight, item.height);\n        line += item.str;\n        temp -= item.width;\n      } else {\n        break;\n      }\n    }\n    textList.push({\n      text: line,\n      x: 0,\n      y: 0,\n      width: textWidth,\n      height: textHeight,\n    });\n  }\n  textHeight = Math.max(textHeight, fontSize * sizeConfig.lineHeight);\n  textWidth += lineGap;\n  textHeight += lineGap;\n  if (textWidth <= width && textHeight <= height) {\n    let x = left + lineGap;\n    let y = top + (height - textHeight) / 2 + lineGap;\n    if (verticalAlign === EVerticalAlign.TOP) {\n      y = top + lineGap;\n    } else if (verticalAlign === EVerticalAlign.BOTTOM) {\n      y = top + (height - textHeight) + lineGap;\n    }\n    if (style?.horizontalAlign === EHorizontalAlign.CENTER) {\n      x = left + (width - textWidth) / 2;\n    } else if (style?.horizontalAlign === EHorizontalAlign.RIGHT) {\n      x = left + (width - textWidth) - lineGap;\n    }\n    for (const item of textList) {\n      item.x = item.x + x;\n      item.y = item.y + y;\n    }\n  }\n  return {\n    width: textWidth,\n    height: textHeight,\n    resultList: textList,\n  };\n}\n","import { getThemeColor } from '@/theme';\nimport { ThemeType } from '@/types';\nimport { DEFAULT_LINE_WIDTH, DEFAULT_FONT_SIZE } from '@/util/constant';\nimport { makeFont } from '@/util/style';\nimport { npx } from '@/util/dpr';\n\nexport function getHeaderStyle(\n  theme?: ThemeType,\n): Pick<\n  CanvasRenderingContext2D,\n  | 'textAlign'\n  | 'textBaseline'\n  | 'font'\n  | 'fillStyle'\n  | 'lineWidth'\n  | 'strokeStyle'\n> {\n  return {\n    textAlign: 'center',\n    textBaseline: 'middle',\n    font: makeFont(undefined, '500', npx(DEFAULT_FONT_SIZE)),\n    fillStyle: getThemeColor('black', theme),\n    lineWidth: DEFAULT_LINE_WIDTH,\n    strokeStyle: getThemeColor('borderColor', theme),\n  };\n}\n","import {\n  RequestRender,\n  Point,\n  IRange,\n  CanvasOverlayPosition,\n  IPosition,\n  IWindowSize,\n  WorkerMainView,\n  ContentParams,\n} from '@/types';\nimport {\n  clearRect,\n  fillRect,\n  strokeRect,\n  fillText,\n  drawLines,\n  drawTriangle,\n  drawAntLine,\n  renderBorderItem,\n  renderCell,\n} from './util';\nimport { getThemeColor } from '@/theme';\nimport {\n  DEFAULT_LINE_WIDTH,\n  CELL_HEIGHT,\n  CELL_WIDTH,\n  HIDE_CELL,\n  BORDER_TYPE_MAP,\n  FILTER_RECT_SIZE,\n} from '@/util/constant';\nimport { getHeaderStyle } from './constant';\nimport { intToColumnName } from '@/util/convert';\nimport { isSheet, isCol, isRow, containRange } from '@/util/range';\nimport { npx, dpr } from '@/util/dpr';\nimport { getCustomWidthOrHeightKey, coordinateToString } from '@/util/util';\n\nconst lineWidth = Math.max(...Object.values(BORDER_TYPE_MAP));\n\n/**\n * run OffScreenWorker in Web Worker env\n */\nexport default class OffScreenWorker implements WorkerMainView {\n  private readonly canvas: OffscreenCanvas;\n  private readonly ctx: OffscreenCanvasRenderingContext2D;\n  private width: number = 0;\n  private height: number = 0;\n  private isRendering = false;\n  private rowMap: Record<string, number> = {};\n  private colMap: Record<string, number> = {};\n  private eventData: Omit<RequestRender, 'status' | 'changeSet'> = {\n    theme: 'light',\n    sheetData: {},\n    canvasSize: {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n    },\n    headerSize: {\n      width: 0,\n      height: 0,\n    },\n    currentSheetInfo: {\n      isHide: false,\n      rowCount: 0,\n      colCount: 0,\n      name: '',\n      sheetId: '',\n      tabColor: '',\n      sort: 1,\n    },\n    scroll: {\n      left: 0,\n      top: 0,\n      row: 0,\n      col: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n    },\n    range: {\n      row: 0,\n      col: 0,\n      rowCount: 1,\n      colCount: 1,\n      sheetId: '',\n    },\n    copyRange: undefined,\n    customHeight: {},\n    customWidth: {},\n    currentMergeCells: [],\n    autoFilter: undefined,\n  };\n  constructor(canvas: OffscreenCanvas) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d')!;\n    const size = dpr();\n    this.ctx.scale(size, size);\n  }\n  render(data: RequestRender) {\n    if (data.changeSet.size === 0 || this.isRendering) {\n      return;\n    }\n    this.isRendering = true;\n    this.eventData = data;\n    this.clear();\n    const { ctx } = this;\n    ctx.strokeStyle = getThemeColor('primaryColor', data.theme);\n    ctx.fillStyle = getThemeColor('white', data.theme);\n    ctx.lineWidth = DEFAULT_LINE_WIDTH * 2;\n\n    const { width, height } = this.eventData.canvasSize;\n    const headerSize = this.eventData.headerSize;\n    const { endRow, contentHeight } = this.renderRowsHeader(height);\n    const { endCol, contentWidth } = this.renderColsHeader(width);\n    this.renderGrid(width - headerSize.width, height - headerSize.height);\n    this.renderTriangle();\n\n    this.renderMergeCell();\n\n    this.ctx.fillStyle = getThemeColor('selectionColor', this.eventData.theme);\n    const result = this.renderSelection({\n      endRow,\n      endCol,\n      contentHeight,\n      contentWidth,\n    });\n    this.renderAntLine(result);\n    this.renderContent({ endRow, endCol, contentHeight, contentWidth });\n    this.ctx.lineWidth = lineWidth;\n    strokeRect(this.ctx, result.left, result.top, result.width, result.height);\n    this.isRendering = false;\n    return { rowMap: { ...this.rowMap }, colMap: { ...this.colMap } };\n  }\n  resize(data: IWindowSize) {\n    this.width = data.width;\n    this.height = data.height;\n    this.canvas.width = npx(data.width);\n    this.canvas.height = npx(data.height);\n  }\n  private clear() {\n    clearRect(this.ctx, 0, 0, this.width, this.height);\n  }\n\n  private renderRowsHeader(height: number) {\n    const { row: rowIndex } = this.eventData.scroll;\n    const headerSize = this.eventData.headerSize;\n    const { rowCount } = this.eventData.currentSheetInfo;\n    this.ctx.save();\n    const range = this.eventData.range;\n    fillRect(this.ctx, 0, headerSize.height, headerSize.width, height);\n    Object.assign(this.ctx, getHeaderStyle(this.eventData.theme));\n    const pointList: Point[] = [];\n    let y = headerSize.height;\n    let i = rowIndex;\n\n    for (; i < rowCount && y < height; i++) {\n      const rowHeight = this.getRowHeight(i);\n      let temp = y;\n      if (i === rowIndex) {\n        temp += DEFAULT_LINE_WIDTH / 2;\n      }\n      pointList.push([0, temp], [headerSize.width, temp]);\n      if (rowHeight > 0) {\n        const check = this.isHighlightRow(range, i);\n        this.ctx.fillStyle = check\n          ? getThemeColor('primaryColor', this.eventData.theme)\n          : getThemeColor('black', this.eventData.theme);\n\n        fillText(\n          this.ctx,\n          String(i + 1),\n          headerSize.width / 2,\n          temp + rowHeight / 2,\n        );\n      }\n      y += rowHeight;\n    }\n    pointList.push([0, y], [headerSize.width, y]);\n    pointList.push([0, 0], [0, y]);\n    drawLines(this.ctx, pointList);\n    this.ctx.restore();\n    const contentHeight = i >= rowCount ? y : height;\n\n    return { endRow: i, contentHeight: Math.floor(contentHeight) };\n  }\n  private renderColsHeader(width: number) {\n    const { col: colIndex, row: startRow } = this.eventData.scroll;\n    const headerSize = this.eventData.headerSize;\n    const { colCount } = this.eventData.currentSheetInfo;\n    const range = this.eventData.range;\n    const pointList: Point[] = [];\n    this.ctx.save();\n    fillRect(this.ctx, headerSize.width, 0, width, headerSize.height);\n    Object.assign(this.ctx, getHeaderStyle());\n\n    let x = headerSize.width;\n    let i = colIndex;\n\n    const autoFilter = this.eventData.autoFilter;\n    let rowHeight = 0;\n    for (let r = startRow; r < this.eventData.currentSheetInfo.rowCount; r++) {\n      rowHeight = this.getRowHeight(startRow);\n      if (rowHeight !== 0) {\n        break;\n      }\n    }\n\n    for (; i < colCount && x <= width; i++) {\n      const colWidth = this.getColWidth(i);\n      let temp = x;\n      if (i === colIndex) {\n        temp += DEFAULT_LINE_WIDTH / 2;\n      }\n      pointList.push([temp, 0], [temp, headerSize.height]);\n      if (colWidth > 0) {\n        const check = this.isHighlightCol(range, i);\n        this.ctx.fillStyle = check\n          ? getThemeColor('primaryColor', this.eventData.theme)\n          : getThemeColor('black', this.eventData.theme);\n        fillText(\n          this.ctx,\n          intToColumnName(i),\n          temp + colWidth / 2,\n          headerSize.height / 2,\n        );\n      }\n      if (\n        autoFilter &&\n        i >= autoFilter.range.col &&\n        i < autoFilter.range.col + autoFilter.range.colCount\n      ) {\n        this.renderFilter(\n          x + colWidth,\n          headerSize.height + rowHeight,\n          autoFilter.col === i,\n        );\n      }\n      x += colWidth;\n    }\n    pointList.push([x, 0], [x, headerSize.height]);\n    pointList.push([0, 0], [x, 0]);\n    drawLines(this.ctx, pointList);\n    this.ctx.restore();\n    const contentWidth = i >= colCount ? x : width;\n    return {\n      endCol: i,\n      contentWidth: Math.floor(contentWidth),\n    };\n  }\n  private renderFilter(endX: number, endY: number, isFilter: boolean) {\n    const width = FILTER_RECT_SIZE;\n    const gap = DEFAULT_LINE_WIDTH * 4;\n    const x = endX - width - gap;\n    const y = endY - width - gap;\n\n    this.ctx.fillStyle = isFilter\n      ? getThemeColor('primaryColor', this.eventData.theme)\n      : getThemeColor('borderColor', this.eventData.theme);\n    this.ctx.strokeStyle = isFilter\n      ? getThemeColor('primaryColor', this.eventData.theme)\n      : getThemeColor('borderColor', this.eventData.theme);\n    strokeRect(this.ctx, x, y, width, width);\n\n    drawTriangle(\n      this.ctx,\n      [x + width / 4, y + (width * 3) / 8],\n      [x + (width * 3) / 4, y + (width * 3) / 8],\n      [x + width / 2, y + (width * 5) / 8],\n    );\n  }\n  private renderGrid(width: number, height: number): void {\n    const headerSize = this.eventData.headerSize;\n    const { row: rowIndex, col: colIndex } = this.eventData.scroll;\n    const { rowCount, colCount } = this.eventData.currentSheetInfo;\n    this.ctx.save();\n    this.ctx.lineWidth = DEFAULT_LINE_WIDTH;\n    this.ctx.strokeStyle = getThemeColor('borderColor', this.eventData.theme);\n    this.ctx.translate(npx(headerSize.width), npx(headerSize.height));\n    const pointList: Point[] = [];\n    let y = 0;\n    let x = 0;\n    for (let i = rowIndex; i < rowCount && y <= height; i++) {\n      while (i < rowCount && this.getRowHeight(i) === 0) {\n        i++;\n      }\n      pointList.push([0, y], [width, y]);\n      const h = this.getRowHeight(i);\n      y += h;\n    }\n    for (let i = colIndex; i < colCount && x <= width; i++) {\n      while (i < colCount && this.getColWidth(i) === 0) {\n        i++;\n      }\n      pointList.push([x, 0], [x, y]);\n      const w = this.getColWidth(i);\n      x += w;\n    }\n    pointList.push([0, y], [x, y]);\n    pointList.push([x, 0], [x, y]);\n    drawLines(this.ctx, pointList);\n    this.ctx.restore();\n  }\n  private renderTriangle(): void {\n    const headerSize = this.eventData.headerSize;\n    this.ctx.save();\n\n    fillRect(this.ctx, 0, 0, headerSize.width, headerSize.height);\n    this.ctx.fillStyle = getThemeColor(\n      'triangleFillColor',\n      this.eventData.theme,\n    );\n\n    const offset = 2;\n    const minY = Math.floor(offset);\n    const maxY = Math.floor(headerSize.height - offset);\n    const minX = Math.floor(headerSize.width * 0.4);\n    const maxX = Math.floor(headerSize.width - offset);\n\n    drawTriangle(this.ctx, [maxX, minY], [minX, maxY], [maxX, maxY]);\n\n    this.ctx.restore();\n  }\n  private getRowHeight(row: number) {\n    const key = getCustomWidthOrHeightKey(\n      this.eventData.currentSheetInfo.sheetId,\n      row,\n    );\n    const data = this.eventData.customHeight[key];\n    if (!data) {\n      return CELL_HEIGHT;\n    }\n    return data.isHide ? HIDE_CELL : data.len;\n  }\n  private getColWidth(col: number) {\n    const key = getCustomWidthOrHeightKey(\n      this.eventData.currentSheetInfo.sheetId,\n      col,\n    );\n    const data = this.eventData.customWidth[key];\n    if (!data) {\n      return CELL_WIDTH;\n    }\n    return data.isHide ? HIDE_CELL : data.len;\n  }\n  private isHighlightRow(range: IRange, row: number): boolean {\n    if (isSheet(range)) {\n      return true;\n    }\n    if (isCol(range)) {\n      return true;\n    }\n    if (row >= range.row && row < range.row + range.rowCount) {\n      return true;\n    }\n    return false;\n  }\n\n  private isHighlightCol(range: IRange, col: number): boolean {\n    if (isSheet(range)) {\n      return true;\n    }\n\n    if (isRow(range)) {\n      return true;\n    }\n    if (col >= range.col && col < range.col + range.colCount) {\n      return true;\n    }\n    return false;\n  }\n\n  private renderAntLine(position: CanvasOverlayPosition) {\n    const range = this.eventData.copyRange;\n    if (!range || range.sheetId !== this.eventData.currentSheetInfo.sheetId) {\n      return;\n    }\n    this.ctx.lineWidth = lineWidth;\n    this.ctx.strokeStyle = getThemeColor('primaryColor', this.eventData.theme);\n    drawAntLine(\n      this.ctx,\n      position.left,\n      position.top,\n      position.width,\n      position.height,\n    );\n  }\n  private renderMergeCell() {\n    const mergeCells = this.eventData.currentMergeCells;\n    if (mergeCells.length === 0) {\n      return;\n    }\n    const activeCell = this.eventData.range;\n    for (const range of mergeCells) {\n      if (activeCell.row === range.row && activeCell.col === range.col) {\n        continue;\n      }\n      this.clearRect(range);\n    }\n  }\n  /* jscpd:ignore-start */\n  private getCellSize(range: IRange): IWindowSize {\n    let { row, col, colCount, rowCount } = range;\n    let r = row;\n    let c = col;\n    let endRow = row + rowCount;\n    let endCol = col + colCount;\n    const sheetInfo = this.eventData.currentSheetInfo;\n    if (isSheet(range)) {\n      c = 0;\n      endCol = sheetInfo.colCount;\n      r = 0;\n      endRow = sheetInfo.rowCount;\n    } else if (isCol(range)) {\n      r = 0;\n      endRow = sheetInfo.rowCount;\n    } else if (isRow(range)) {\n      c = 0;\n      endCol = sheetInfo.colCount;\n    }\n    let width = 0;\n    let height = 0;\n    for (; r < endRow; r++) {\n      height += this.getRowHeight(r);\n    }\n    for (; c < endCol; c++) {\n      width += this.getColWidth(c);\n    }\n    return { width, height };\n  }\n  private computeCellPosition(range: IRange): IPosition {\n    const { row, col } = range;\n    const size = this.eventData.headerSize;\n    const scroll = this.eventData.scroll;\n\n    let resultX = size.width;\n    let resultY = size.height;\n    let r = scroll.row;\n    let c = scroll.col;\n    if (col >= scroll.col) {\n      while (c < col) {\n        resultX += this.getColWidth(c);\n        c++;\n      }\n    } else {\n      resultX = -size.width;\n      while (c > col) {\n        resultX -= this.getColWidth(c);\n        c--;\n      }\n    }\n    if (row >= scroll.row) {\n      while (r < row) {\n        resultY += this.getRowHeight(r);\n        r++;\n      }\n    } else {\n      resultY = -size.height;\n      while (r > row) {\n        resultY -= this.getRowHeight(r);\n        r--;\n      }\n    }\n    return {\n      top: resultY,\n      left: resultX,\n    };\n  }\n  private getActiveRange(r?: IRange) {\n    const range = r || this.eventData.range;\n    const mergeCells = this.eventData.currentMergeCells;\n    for (const item of mergeCells) {\n      if (containRange(range, item)) {\n        const newRange = {\n          ...item,\n          sheetId: item.sheetId,\n        };\n        return {\n          range: newRange,\n          isMerged: true,\n        };\n      }\n    }\n    return {\n      range,\n      isMerged: false,\n    };\n  }\n  /* jscpd:ignore-end */\n  private clearRect(range: IRange) {\n    const cellSize = this.getCellSize(range);\n    if (cellSize.width <= 0 || cellSize.height <= 0) {\n      return;\n    }\n    const activeCell = this.computeCellPosition(range);\n    const lineWidth = DEFAULT_LINE_WIDTH;\n    clearRect(\n      this.ctx,\n      activeCell.left + lineWidth,\n      activeCell.top + lineWidth,\n      cellSize.width - lineWidth * 2,\n      cellSize.height - lineWidth * 2,\n    );\n  }\n  private renderContent(params: ContentParams) {\n    const { endCol, endRow, contentHeight, contentWidth } = params;\n    const { ctx } = this;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'top';\n    ctx.lineWidth = DEFAULT_LINE_WIDTH * 2;\n    const headerSize = this.eventData.headerSize;\n    const { row, col } = this.eventData.scroll;\n\n    const maxWidth = Math.floor(contentWidth - headerSize.width);\n    const maxHeight = Math.floor(contentHeight - headerSize.height);\n    ctx.save();\n\n    this.rowMap = {};\n    this.colMap = {};\n\n    const mergeCells = this.eventData.currentMergeCells;\n    for (let rowIndex = row; rowIndex < endRow; rowIndex++) {\n      for (let colIndex = col; colIndex < endCol; colIndex++) {\n        const mergeCell = mergeCells.find(\n          (v) => v.row === rowIndex && v.col === colIndex,\n        );\n\n        this.renderCell(rowIndex, colIndex, mergeCell, maxWidth, maxHeight);\n      }\n    }\n    ctx.restore();\n  }\n  private renderCell(\n    row: number,\n    col: number,\n    mergeCell: IRange | undefined,\n    maxWidth: number,\n    maxHeight: number,\n  ) {\n    const { ctx } = this;\n    const range: IRange = {\n      row: row,\n      col: col,\n      rowCount: 1,\n      colCount: 1,\n      sheetId: '',\n    };\n    const key = coordinateToString(row, col);\n    const cellInfo = this.eventData.sheetData[key];\n    if (!cellInfo) {\n      return;\n    }\n    const cellSize = this.getCellSize(mergeCell || range);\n    if (cellSize.width <= 0 || cellSize.height <= 0) {\n      return;\n    }\n    const position = this.computeCellPosition(range);\n    ctx.lineWidth = DEFAULT_LINE_WIDTH * 2;\n    const theme = this.eventData.theme;\n    const size = renderCell(\n      ctx,\n      {\n        top: position.top,\n        left: position.left,\n        width: Math.min(cellSize.width, maxWidth),\n        height: Math.min(cellSize.height, maxHeight),\n      },\n      cellInfo.value,\n      cellInfo.style,\n      Boolean(mergeCell),\n      theme,\n    );\n    const height = Math.max(this.rowMap[row] ?? 0, size.height);\n    const width = Math.max(this.colMap[col] ?? 0, size.width);\n    if (height >= CELL_HEIGHT) {\n      this.rowMap[row] = height;\n    }\n    if (width >= CELL_WIDTH) {\n      this.colMap[col] = width;\n    }\n    const cellPosition = {\n      top: position.top,\n      left: position.left,\n      height: Math.max(height, cellSize.height),\n      width: Math.max(width, cellSize.width),\n    };\n\n    renderBorderItem(\n      ctx,\n      cellPosition,\n      cellInfo.style?.borderTop,\n      'top',\n      theme,\n    );\n    renderBorderItem(\n      ctx,\n      cellPosition,\n      cellInfo.style?.borderBottom,\n      'bottom',\n      theme,\n    );\n    renderBorderItem(\n      ctx,\n      cellPosition,\n      cellInfo.style?.borderLeft,\n      'left',\n      theme,\n    );\n    renderBorderItem(\n      ctx,\n      cellPosition,\n      cellInfo.style?.borderRight,\n      'right',\n      theme,\n    );\n  }\n  private renderSelection(params: ContentParams): CanvasOverlayPosition {\n    const range = this.eventData.range;\n    if (isSheet(range)) {\n      const result = this.renderSelectAll(params);\n      return result;\n    }\n    if (isCol(range)) {\n      const result = this.renderSelectCol(params);\n      return result;\n    }\n    if (isRow(range)) {\n      const result = this.renderSelectRow(params);\n      return result;\n    }\n    return this.renderSelectRange();\n  }\n\n  private renderSelectRange() {\n    const headerSize = this.eventData.headerSize;\n    const range = this.eventData.range;\n\n    const activeCell = this.computeCellPosition({\n      row: range.row,\n      col: range.col,\n      rowCount: 1,\n      colCount: 1,\n      sheetId: '',\n    });\n    const endCellRow = range.row + range.rowCount - 1;\n    const endCellCol = range.col + range.colCount - 1;\n\n    const temp = {\n      row: endCellRow,\n      col: endCellCol,\n      rowCount: 1,\n      colCount: 1,\n      sheetId: '',\n    };\n    const endCell = this.computeCellPosition(temp);\n    const endCellSize = this.getCellSize(temp);\n    const width = endCell.left + endCellSize.width - activeCell.left;\n    const height = endCell.top + endCellSize.height - activeCell.top;\n\n    // col header\n    fillRect(this.ctx, activeCell.left, 0, width, headerSize.height);\n    // row header\n    fillRect(this.ctx, 0, activeCell.top, headerSize.width, height);\n    const check = range.rowCount > 1 || range.colCount > 1;\n    if (check) {\n      // main\n      fillRect(this.ctx, activeCell.left, activeCell.top, width, height);\n    }\n\n    const list: Point[] = [\n      [activeCell.left, headerSize.height],\n      [activeCell.left + width, headerSize.height],\n    ];\n    list.push(\n      [headerSize.width, activeCell.top],\n      [headerSize.width, activeCell.top + height],\n    );\n    drawLines(this.ctx, list);\n    if (check) {\n      this.renderActiveCell();\n    }\n    return {\n      left: activeCell.left,\n      top: activeCell.top,\n      width,\n      height,\n    };\n  }\n  private renderSelectAll(params: ContentParams): CanvasOverlayPosition {\n    const { contentHeight, contentWidth } = params;\n    const headerSize = this.eventData.headerSize;\n    // main\n    fillRect(this.ctx, 0, 0, contentWidth, contentHeight);\n    this.renderActiveCell();\n    const width = contentWidth - headerSize.width;\n    const height = contentHeight - headerSize.height;\n    return {\n      left: headerSize.width,\n      top: headerSize.height,\n      width,\n      height,\n    };\n  }\n  private renderSelectCol({ contentHeight }: ContentParams) {\n    const headerSize = this.eventData.headerSize;\n    const range = this.eventData.range;\n    const activeCell = this.computeCellPosition(range);\n\n    let strokeWidth = 0;\n    for (\n      let i = range.col, endCol = range.col + range.colCount;\n      i < endCol;\n      i++\n    ) {\n      strokeWidth += this.getColWidth(i);\n    }\n    const realHeight = contentHeight - headerSize.height;\n\n    // col header\n    fillRect(this.ctx, activeCell.left, 0, strokeWidth, contentHeight);\n\n    // row header\n    fillRect(this.ctx, 0, activeCell.top, headerSize.width, realHeight);\n\n    const list: Point[] = [\n      [headerSize.width, headerSize.height],\n      [headerSize.width, contentHeight],\n    ];\n    // row header highlight line\n    drawLines(this.ctx, list);\n    this.renderActiveCell();\n    return {\n      left: activeCell.left,\n      top: headerSize.height,\n      width: strokeWidth,\n      height: realHeight,\n    };\n  }\n  private renderSelectRow({ contentWidth }: ContentParams) {\n    const headerSize = this.eventData.headerSize;\n    const range = this.eventData.range;\n    const activeCell = this.computeCellPosition(range);\n    let strokeHeight = 0;\n    for (\n      let i = range.row, endRow = range.row + range.rowCount;\n      i < endRow;\n      i++\n    ) {\n      strokeHeight += this.getRowHeight(i);\n    }\n    const realWidth = contentWidth - headerSize.width - DEFAULT_LINE_WIDTH;\n    // col header\n    fillRect(this.ctx, activeCell.left, 0, realWidth, headerSize.height);\n\n    // row header\n    fillRect(this.ctx, 0, activeCell.top, contentWidth, strokeHeight);\n\n    const list: Point[] = [\n      [activeCell.left, headerSize.height],\n      [contentWidth, headerSize.height],\n    ];\n    // col header highlight line\n    drawLines(this.ctx, list);\n    this.renderActiveCell();\n    return {\n      left: headerSize.width,\n      top: activeCell.top,\n      width: realWidth,\n      height: strokeHeight,\n    };\n  }\n\n  private renderActiveCell() {\n    const range = this.eventData.range;\n    const temp = this.getActiveRange({\n      row: range.row,\n      col: range.col,\n      rowCount: 1,\n      colCount: 1,\n      sheetId: range.sheetId,\n    }).range;\n    this.clearRect(temp);\n  }\n}\n","import {\n  RequestInit,\n  IWindowSize,\n  RequestRender,\n  ResponseRender,\n  WorkerMethod,\n} from '@/types';\nimport { computeFormulas } from '@/formula';\nimport OffScreenWorker from './offScreenWorker';\nimport { setDpr } from '@/util/dpr';\n\nlet offScreen: OffScreenWorker | null = null;\n\nconst workerMethod: WorkerMethod = {\n  init(data: RequestInit) {\n    offScreen = new OffScreenWorker(data.canvas);\n    setDpr(data.dpr);\n  },\n  resize(data: IWindowSize) {\n    offScreen?.resize(data);\n  },\n  async render(data: RequestRender, cb: (data: ResponseRender) => void) {\n    const result = offScreen?.render(data);\n    if (result) {\n      await cb(result);\n    }\n  },\n  computeFormulas,\n};\n\nexport default workerMethod;\n","import * as ComLink from 'comlink'\nimport method from './canvas/worker'\n\nComLink.expose(method)\n\n"],"names":["proxyMarker","createEndpoint","releaseProxy","finalizer","throwMarker","isObject","val","proxyTransferHandler","obj","port1","port2","expose","port","wrap","throwTransferHandler","value","serialized","transferHandlers","isAllowedOrigin","allowedOrigins","origin","allowedOrigin","ep","callback","ev","id","type","path","argumentList","fromWireValue","returnValue","parent","prop","rawValue","proxy","transfer","wireValue","transferables","toWireValue","closeEndPoint","error","isMessagePort","endpoint","target","pendingListeners","data","resolver","createProxy","throwIfProxyReleased","isReleased","releaseEndpoint","requestResponseMessage","proxyCounter","proxyFinalizers","newCount","registerProxy","unregisterProxy","isProxyReleased","_target","r","p","_thisArg","rawArgumentList","last","processArguments","myFlat","arr","processed","v","transferCache","transfers","name","handler","serializedValue","msg","resolve","generateUUID","EVerticalAlign","EVerticalAlign2","EHorizontalAlign","EHorizontalAlign2","EUnderLine","EUnderLine2","TokenType","TokenType2","Token","__publicField","DEFAULT_FONT_SIZE","MUST_FONT_FAMILY","CELL_HEIGHT","CELL_WIDTH","HIDE_CELL","MERGE_CELL_LINE_BREAK","XLSX_MAX_COL_COUNT","XLSX_MAX_ROW_COUNT","FILTER_RECT_SIZE","FORMULA_PREFIX","SPLITTER","MAX_PARAMS_COUNT","FORMULA_MAX_PRECISION","DEFAULT_FORMAT_CODE","DEFAULT_TEXT_FORMAT_CODE","ERROR_SET","DEFAULT_LINE_WIDTH","BORDER_TYPE_MAP","COLOR_PICKER_COLOR_LIST","CELL_REG_EXP","COLUMN_REG_EXP","ROW_REG_EXP","DEFINED_NAME_REG_EXP","BUILT_IN_FUNCTION_SET","parseNumber","temp","coordinateToString","row","col","stringToCoordinate","key","c","getCustomWidthOrHeightKey","sheetId","rowOrCol","isFormula","isMergeContent","isMergeCell","text","CustomError","assert","condition","message","mustOne","list","mustOneString","mustOneNumber","check","num","mustEmpty","SSF","make_ssf","_strrev","x","o","i","fill","l","pad0","d","t","pad_","rpad_","pad0r1","pad0r2","p2_32","pad0r","isgeneral","s","days","months","init_table","table_fmt","default_map","defi","default_str","frac","D","mixed","sgn","B","P_2","P_1","P","Q_2","Q_1","Q","A","q","normalize_xl_unsafe","m","n","parse_date_code","opts","b2","date","time","dow","dout","out","fix_hijri","basedate","dnthresh","base1904","datenum_local","date1904","epoch","general_fmt_num","trailing_zeroes_and_decimal","strip_decimal","mantissa_zeroes_and_decimal","exp_with_single_digit","normalize_exp","small_exp","w","large_exp","general_fmt_num_base","V","general_fmt","format","write_date","fmt","ss0","ss","tt","y","outl","outstr","commaify","j","write_num","pct1","write_num_pct","sfmt","mul","write_num_cm","idx","write_num_exp","period","ee","fakee","$$","$1","$2","$3","frac1","write_num_f1","aval","sign","den","rr","base","myn","myd","write_num_f2","dec1","closeparen","phone","hashq","str","cc","rnd","dd","dec","_frac","carry","flr","write_num_flt","ffmt","ri","ff","oa","lres","rres","write_num_cm2","write_num_pct2","write_num_exp2","write_num_int","split_fmt","in_str","abstime","fmt_is_date","eval_fmt","flen","lst","dt","hr","bt","ssm","_dt","nstr","jj","vv","myv","ostr","decpt","lasti","retval","cfregex","cfregex2","chkcond","thresh","choose_fmt","f","lat","m1","m2","load_entry","tbl","module","numberFormat","pattern","options","isDateFormat","T","LOWER","CHAR","CODE","LEN","SPLIT","sep","UPPER","TEXT","TRIM","CONCAT","formulas","parseNumberArray","result","rest","sum","cur","roundNumber","a","allFormulas","textFormulas","mathFormulas","columnNameToInt","columnName","intToColumnName","dividend","rowLabelToInt","label","isSheet","range","isRow","isCol","containRange","sourceRange","targetRange","SheetRange","rowCount","colCount","iterateRange","sheetRowCount","sheetColCount","fn","endRow","endCol","isAlpha","char","isDigit","convertSheetNameToSheetId","parseCell","ref","convertSheetName","realRef","sheetName","other","rowText","colText","parseReference","cell1","cell2","startCell","endCell","mergeRange","start","end","parseR1C1","activeCell","emptyData","Scanner","source","BinaryExpression","left","operator","right","visitor","LiteralExpression","UnaryExpression","PostUnaryExpression","CellExpression","CallExpression","params","item","CellRangeExpression","GroupExpression","ArrayExpression","Parser","tokens","expr","realRight","realLeft","token","types","Interpreter","expressions","currentCoord","cellDataMap","callee","sheetInfo","b","isOneCell","isEmpty","makeFont","fontStyle","fontWeight","fontSize","fontFamily","fontFamilyList","dprData","dpr","npx","px","setDpr","_Debug","namespace","color","index","Debug","size","zIndex","hslaToHex","h","alpha","g","toHex","hexR","hexG","hexB","RGBToHSL","red","green","blue","cmin","cmax","delta","hue","getHue","lightness","getLightness","saturation","getSaturation","max","min","segment","shift","fullDarkMode","hexToRgba","hex","convertColorToDark","lightColor","darkColor","k","sizeConfig","themeKey","getTheme","getThemeColor","languageKey","LANGUAGE_LIST","getLanguage","defaultLanguage","language","lang","$","en","zh","NUMBER_FORMAT_LIST","getFormatCode","parseFormula","formula","cellData","CellDataMapImpl","cache","coord","resultList","strList","defaultSheetId","_coord","realSheetId","computeFormulas","eventData","cb","currentSheetId","worksheets","workbook","definedNames","formulaCache","sheetData","splitToWords","measureTextMap","measureText","ctx","mapKey","actualBoundingBoxAscent","actualBoundingBoxDescent","width","height","fillRect","strokeRect","clearRect","fillText","drawLines","pointList","first","second","drawTriangle","point1","point2","point3","getDoubleLine","position","isShort","splitWords","isWrapText","drawAntLine","offset","getLineDash","dash","renderBorderItem","cellInfo","borderItem","theme","top","lineDash","renderCell","style","isRight","font","fillStyle","realStyle","align","textList","computeCell","lineGap","point","texts","verticalAlign","textWidth","textHeight","line","getHeaderStyle","lineWidth","OffScreenWorker","canvas","headerSize","contentHeight","contentWidth","rowIndex","rowHeight","colIndex","startRow","autoFilter","colWidth","endX","endY","isFilter","gap","minY","maxY","minX","maxX","mergeCells","scroll","resultX","resultY","cellSize","maxWidth","maxHeight","mergeCell","cellPosition","_a","_b","_c","_d","endCellRow","endCellCol","endCellSize","strokeWidth","realHeight","strokeHeight","realWidth","offScreen"],"mappings":"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5D,EACZ,KAAK,MAAQX,CAAA,CAEf,UAAmB,CACjB,OAAO,KAAK,KAAA,CAEhB,CCVO,MAAMwE,GAAoB,GACpBC,GAAmB,aAEnBC,GAAc,GACdC,GAAa,GAGbC,GAAY,EAEZC,GAAwB,QAGxBC,GAAqB,MACrBC,GAAqB,QAKrBC,GAAmB,GAGnBC,GAAiB,IACjBC,GAAW,IAEXC,GAAmB,IACnBC,GAAwB,EAGxBC,GAAsB,UACtBC,GAA2B,IAE3BC,OAAgB,IAAI,CAC/B,gBACA,UACA,SACA,QACA,QACA,UACA,OACA,QACF,CAAU,EAIGC,EAAqB,EAErBC,GAA8C,CACzD,KAAMD,EACN,KAAMA,EACN,OAAQA,EACR,OAAQA,EACR,QAASA,EACT,WAAYA,EACZ,OAAQA,EACR,OAAQA,EAAqB,EAC7B,aAAcA,EAAqB,EACnC,cAAeA,EAAqB,EACpC,iBAAkBA,EAAqB,EACvC,MAAOA,EAAqB,CAC9B,EAEaE,GAA0B,CACrC,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACF,EAIaC,GAAe,qCACfC,GAAiB,sBACjBC,GAAc,kBACdC,GAAuB,6BAEvBC,OAA4B,IAAI,CAC3C,MACA,UACA,WACA,OACA,QACA,OACA,QACA,UACA,YACA,YACA,WACA,MACA,SACA,QACA,cACA,MACA,OACA,QACA,OACA,QACA,QACA,SACA,UACA,WACA,YACA,aACA,WACA,OACA,UACA,UACA,UACA,UACA,YACA,WACA,WACA,UACA,UACA,UACA,UACA,aACA,mBACA,YACA,YACA,SACA,YACA,QACA,YACA,SACA,OACA,UACA,eACA,kBACA,OACA,OACA,UACA,SACA,aACA,gBACA,YACA,eACA,aACA,UACA,QACA,OACA,SACA,UACA,SACA,UACA,UACA,SACA,cACA,aACA,kBACA,eACA,UACA,SACA,MACA,OACA,MACA,OACA,QACA,SACA,aACA,UACA,WACA,YACA,WACA,aACA,UACA,UACA,UACA,QACA,eACA,eACA,YACA,MACA,OACA,gBACA,aACA,qBACA,mBACA,UACA,eACA,YACA,UACA,WACA,OACA,UACA,YACA,WACA,MACA,OACA,UACA,KACA,OACA,SACA,UACA,MACA,UACA,UACA,UACA,UACA,UACA,QACA,QACA,OACA,OACA,OACA,OACA,SACA,WACA,WACA,WACA,SACA,UACA,OACA,WACA,OACA,QACA,QACA,SACA,YACA,UACA,MACA,cACA,OACA,eACA,aACA,cACA,OACA,QACA,MACA,aACA,YACA,SACA,YACA,QACA,WACA,SACA,OACA,aACA,QACA,QACA,SACA,YACA,OACA,QACA,OACA,SACA,YACA,QACA,QACA,aACA,gBACA,WACA,eACA,uBACA,2BACA,oBACA,kBACA,cACA,YACA,QACA,KACA,aACA,QACA,aACA,YACA,YACA,WACA,UACA,kBACA,QACA,MACA,UACA,SACA,eACA,SACA,UACA,UACA,UACA,UACA,UACA,OACA,YACA,eACA,cACA,UACA,OACA,MACA,QACA,YACA,aACA,cACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,OACA,UACA,SACA,UACA,YACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,OACA,MACA,YACA,UACA,OACA,MACA,UACA,QACA,UACA,SACA,YACA,YACA,OACA,YACA,WACA,cACA,QACA,aACA,QACA,QACA,SACA,MACA,OACA,QACA,MACA,OACA,QACA,MACA,OACA,MACA,SACA,KACA,MACA,QACA,SACA,SACA,eACA,cACA,cACA,SACA,QACA,QACA,MACA,OACA,SACA,UACA,YACA,SACA,MACA,OACA,MACA,OACA,SACA,SACA,WACA,OACA,QACA,MACA,OACA,YACA,YACA,QACA,SACA,cACA,QACA,IACA,KACA,gBACA,eACA,cACA,mBACA,UACA,YACA,WACA,cACA,aACA,WACA,UACA,YACA,WACA,MACA,MACA,OACA,MACA,cACA,UACA,UACA,UACA,MACA,YACA,YACA,YACA,YACA,KACA,YACA,UACA,aACA,iBACA,iBACA,cACA,kBACA,kBACA,SACA,eACA,MACA,WACA,KACA,MACA,UACA,eACA,QACA,OACA,QACA,YACA,WACA,OACA,UACA,SACA,KACA,WACA,eACA,eACA,WACA,UACA,OACA,YACA,cACA,OACA,WACA,UACA,OACA,WACA,cACA,UACA,WACA,OACA,QACA,SACA,QACA,QACA,YACA,UACA,MACA,OACA,MACA,MACA,MACA,SACA,UACA,MACA,OACA,SACA,WACA,YACA,QACA,SACA,OACA,MACA,OACA,OACA,SACA,MACA,QACA,QACA,OACA,SACA,OACA,SACA,cACA,QACA,UACA,UACA,SACA,SACA,UACA,QACA,aACA,WACA,MACA,QACA,SACA,aACA,QACA,WACA,WACA,UACA,SACA,MACA,IACA,SACA,YACA,YACA,QACA,WACA,SACA,MACA,OACA,UACA,aACA,aACA,QACA,OACA,WACA,OACA,YACA,OACA,QACA,YACA,QACA,OACA,WACA,OACA,QACA,QACA,OACA,UACA,UACA,SACA,QACA,QACA,cACA,MACA,QACA,QACA,OACA,OACA,QACA,MACA,UACA,aACA,UACA,UACA,UACA,eACA,UACA,eACA,OACA,UACA,SACA,OACA,MACA,OACA,WACA,QACA,YACA,WACA,SACA,OACF,CAAU,ECznBH,SAASC,GAAYhG,EAA+B,CACrD,GAAA,OAAOA,GAAU,UACnB,MAAO,CAAC,GAAM,OAAOA,CAAK,CAAC,EAE7B,GAA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","x_google_ignoreList":[0,7]}