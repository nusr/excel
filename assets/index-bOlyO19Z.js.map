{"version":3,"file":"index-bOlyO19Z.js","sources":["../../src/util/event.ts","../../src/containers/store/scroll.ts","../../src/containers/store/floatElement.ts","../../src/canvas/MainCanvas.ts","../../src/canvas/event.ts","../../src/canvas/index.ts","../../src/containers/canvas/ScrollBar.tsx","../../src/containers/canvas/ContextMenu.tsx","../../src/containers/canvas/util.ts","../../src/containers/canvas/BottomBar.tsx","../../src/containers/FloatElement/ContextMenu.tsx","../../src/containers/FloatElement/util.ts","../../node_modules/.pnpm/@kurkle+color@0.3.2/node_modules/@kurkle/color/dist/color.esm.js","../../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/dist/chunks/helpers.segment.js","../../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/dist/chart.js","../../src/containers/FloatElement/Chart.tsx","../../src/containers/FloatElement/FloatElement.tsx","../../src/containers/FloatElement/index.tsx","../../src/containers/canvas/event/main.ts","../../src/containers/canvas/event/filter.ts","../../src/containers/canvas/event/index.ts","../../src/containers/canvas/modal/Filter.tsx","../../src/containers/canvas/modal/index.tsx","../../src/containers/canvas/index.tsx"],"sourcesContent":["import type { IController, HitInfoResult } from '@/types';\nimport { headerSizeSet } from './set';\n\nexport function getHitInfo(\n  controller: IController,\n  x: number,\n  y: number,\n): HitInfoResult | undefined {\n  if (x < 0 || y < 0) {\n    return undefined;\n  }\n  const sheetInfo = controller.getSheetInfo(controller.getCurrentSheetId());\n  if (!sheetInfo) {\n    return undefined;\n  }\n  const scroll = controller.getScroll();\n  const headerSize = headerSizeSet.get();\n  let resultX = headerSize.width;\n  let resultY = headerSize.height;\n  let marginX = x - headerSize.width;\n  let marginY = y - headerSize.height;\n  let { row, col } = scroll;\n  while (resultX + controller.getColWidth(col).len <= x) {\n    const t = controller.getColWidth(col).len;\n    resultX += t;\n    marginX -= t;\n    col++;\n  }\n  while (resultY + controller.getRowHeight(row).len <= y) {\n    const t = controller.getRowHeight(row).len;\n    resultY += t;\n    marginY -= t;\n    row++;\n  }\n  if (row >= sheetInfo.rowCount || col >= sheetInfo.colCount) {\n    return undefined;\n  }\n  return { row, col, marginX, marginY };\n}\n","import { BaseStore } from './base';\n\nexport interface ScrollStore {\n  scrollTop: number;\n  scrollLeft: number;\n  showBottomBar: boolean;\n}\n\nexport const scrollStore = new BaseStore<ScrollStore>({\n  scrollTop: 0,\n  scrollLeft: 0,\n  showBottomBar: false,\n});\n","import type { DrawingElement } from '@/types';\nimport { BaseStore } from './base';\nexport type FloatElementItem = DrawingElement & {\n  labels: string[];\n  datasets: Array<{ label: string; data: number[] }>;\n  top: number;\n  left: number;\n};\n\nexport const floatElementStore = new BaseStore<FloatElementItem[]>([]);\n","import { EventType, MainView, IController, RequestInit, ResponseRender, RequestRender, IWindowSize } from '@/types';\nimport { canvasSizeSet, dpr, getTheme, headerSizeSet } from '@/util';\nimport * as ComLink from 'comlink'\n\n\nexport class MainCanvas implements MainView {\n  private controller: IController;\n  private canvas: HTMLCanvasElement;\n  constructor(controller: IController, canvas: HTMLCanvasElement) {\n    this.controller = controller;\n    this.canvas = canvas;\n    const offscreen = canvas?.transferControlToOffscreen?.();\n    const worker = this.controller.getHooks().worker;\n    if (offscreen) {\n      const data: RequestInit = {\n        canvas: offscreen,\n        dpr: dpr(),\n      };\n      worker.init(ComLink.transfer(data, [data.canvas]));\n    }\n  }\n  private renderCallback = (result: ResponseRender) => {\n    const { rowMap, colMap } = result\n    const rowKeys = Object.keys(rowMap);\n    const colKeys = Object.keys(colMap);\n    if (colKeys.length === 0 && rowKeys.length === 0) {\n      return;\n    }\n    this.controller.batchUpdate(() => {\n      for (const [row, h] of Object.entries(rowMap)) {\n        const r = parseInt(row, 10);\n        if (h !== this.controller.getRowHeight(r).len) {\n          this.controller.setRowHeight(r, h);\n        }\n      }\n      for (const [col, w] of Object.entries(colMap)) {\n        const c = parseInt(col, 10);\n        if (w !== this.controller.getColWidth(c).len) {\n          this.controller.setColWidth(c, w);\n        }\n      }\n      return true\n    }, true)\n  }\n  async render(data: EventType) {\n    const { controller } = this;\n    const currentId = controller.getCurrentSheetId();\n    const sheetInfo = controller.getSheetInfo(currentId);\n    if (!sheetInfo) {\n      return;\n    }\n    const copyRange = controller.getCopyRange();\n    const jsonData = controller.toJSON();\n    const eventData: RequestRender = {\n      changeSet: data.changeSet,\n      theme: getTheme(),\n      canvasSize: canvasSizeSet.get(),\n      headerSize: headerSizeSet.get(),\n      currentSheetInfo: sheetInfo,\n      scroll: controller.getScroll(currentId),\n      range: controller.getActiveRange().range,\n      copyRange,\n      currentMergeCells: controller.getMergeCellList(currentId),\n      customHeight: jsonData.customHeight,\n      customWidth: jsonData.customWidth,\n      sheetData: jsonData.worksheets[currentId] || {},\n      autoFilter: jsonData.autoFilter[currentId]\n    };\n\n    this.controller.getHooks().worker.render(eventData, ComLink.proxy(this.renderCallback));\n  }\n  resize() {\n    const { canvas } = this;\n    const { width, height } = canvasSizeSet.get();\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n    const eventData: IWindowSize = {\n      width,\n      height,\n    };\n    this.controller.getHooks().worker.resize(eventData);\n  }\n}\n","import {\n  IController,\n  KeyboardEventItem,\n  EditorStatus,\n  IRange,\n} from '@/types';\nimport {\n  isTestEnv,\n  throttle,\n  CUSTOM_FORMAT,\n  eventEmitter,\n  deepEqual,\n  paste,\n} from '@/util';\nimport { keyboardEventList, scrollBar } from './shortcut';\nimport { coreStore } from '@/containers/store';\n\ntype EventType = {\n  target?: {\n    tagName?: string;\n  }\n}\n\n\nfunction isInputEvent(event: Event): boolean {\n  const name = (event as EventType)?.target?.tagName?.toLowerCase();\n  return name === 'input' || name === 'textarea';\n}\n\nexport function registerGlobalEvent(\n  controller: IController,\n  resizeWindow: () => void,\n) {\n  function handleKeydown(event: KeyboardEvent) {\n    if (isInputEvent(event)) {\n      return;\n    }\n    const list = keyboardEventList.filter((v) => v.key === event.key);\n    list.sort((a, b) => b.modifierKey.length - a.modifierKey.length);\n    let temp: KeyboardEventItem | undefined = undefined;\n    for (const item of list) {\n      if (item.modifierKey.length > 0) {\n        if (item.modifierKey.some((v) => event[`${v}Key`])) {\n          temp = item;\n          break;\n        }\n      } else {\n        temp = item;\n        break;\n      }\n    }\n    if (temp) {\n      event.preventDefault();\n      temp.handler(controller);\n      return;\n    }\n    if (event.metaKey || event.ctrlKey) {\n      return;\n    }\n    coreStore.setState({\n      editorStatus: EditorStatus.EDIT_CELL,\n    });\n  }\n\n  const handleWheel = throttle((event: WheelEvent) => {\n    const tagName = (event as EventType)?.target?.tagName?.toLowerCase();\n    if (tagName === 'canvas' || isTestEnv()) {\n      scrollBar(controller, event.deltaX, event.deltaY);\n    }\n  }, 1000 / 60);\n\n  function handlePaste(event: ClipboardEvent) {\n    if (isInputEvent(event)) {\n      return;\n    }\n    event.preventDefault();\n    controller.paste(event);\n  }\n\n  function handleCopy(event: ClipboardEvent) {\n    if (isInputEvent(event)) {\n      return;\n    }\n\n    event.preventDefault();\n    controller.copy(event);\n  }\n\n  function handleCut(event: ClipboardEvent) {\n    if (isInputEvent(event)) {\n      return;\n    }\n    event.preventDefault();\n    controller.cut(event);\n  }\n\n  function handleFocus(event: FocusEvent) {\n    if (isInputEvent(event)) {\n      return;\n    }\n    paste().then((result) => {\n      const oldRange = controller.getCopyRange();\n      let newRange: IRange | undefined = undefined;\n      if (result[CUSTOM_FORMAT]) {\n        const data = result[CUSTOM_FORMAT];\n        newRange =\n          !data.floatElementUuid && data.range ? data.range : undefined;\n        controller.setFloatElementUuid(data.floatElementUuid);\n      } else {\n        controller.setFloatElementUuid('');\n      }\n      if (!deepEqual(newRange, oldRange)) {\n        controller.setCopyRange(newRange);\n        eventEmitter.emit('modelChange', {\n          changeSet: new Set(['cellStyle']),\n        });\n      }\n    });\n  }\n\n  window.addEventListener('resize', resizeWindow);\n  document.body.addEventListener('keydown', handleKeydown);\n  document.body.addEventListener('wheel', handleWheel);\n  document.body.addEventListener('paste', handlePaste);\n  document.body.addEventListener('copy', handleCopy);\n  document.body.addEventListener('cut', handleCut);\n  window.addEventListener('focus', handleFocus);\n\n  return () => {\n    window.removeEventListener('resize', resizeWindow);\n    document.body.removeEventListener('keydown', handleKeydown);\n    document.body.removeEventListener('wheel', handleWheel);\n    document.body.removeEventListener('paste', handlePaste);\n    document.body.removeEventListener('copy', handleCopy);\n    document.body.removeEventListener('cut', handleCut);\n    window.removeEventListener('focus', handleFocus);\n  };\n}\n","import { MainView, IController } from '@/types';\nimport { MainCanvas } from './MainCanvas';\n\nexport { registerGlobalEvent } from './event';\nexport {\n  computeScrollRowAndCol,\n  computeScrollPosition,\n  checkFocus,\n  setActiveCellValue,\n  scrollBar,\n  scrollToView,\n  scrollSheetToView,\n} from './shortcut';\n\nlet instance: MainCanvas;\n\nexport function initRenderCanvas(\n  controller: IController,\n  canvas: HTMLCanvasElement,\n): MainView {\n  if (instance) {\n    return instance;\n  }\n  instance = new MainCanvas(controller, canvas);\n  return instance;\n}\n","import React, {\n  useRef,\n  Fragment,\n  useSyncExternalStore,\n  memo,\n  useEffect,\n  useCallback,\n  useMemo,\n} from 'react';\nimport { IController, ScrollStatus, ScrollValue } from '@/types';\nimport { computeScrollRowAndCol, computeScrollPosition } from '@/canvas';\nimport styles from './index.module.css';\nimport { scrollStore } from '../store';\n\ninterface Props {\n  controller: IController;\n}\n\ninterface State {\n  prevPageY: number;\n  prevPageX: number;\n  scrollStatus: ScrollStatus;\n}\n\nfunction scrollBar(controller: IController, scrollX: number, scrollY: number) {\n  const oldScroll = controller.getScroll();\n  const { maxHeight, maxScrollHeight, maxScrollWidth, maxWidth } =\n    computeScrollPosition(oldScroll.left, oldScroll.top);\n\n  let scrollTop = oldScroll.scrollTop + Math.ceil(scrollY);\n  let scrollLeft = oldScroll.scrollLeft + Math.ceil(scrollX);\n  if (scrollTop < 0) {\n    scrollTop = 0;\n  } else if (scrollTop > maxScrollHeight) {\n    scrollTop = maxScrollHeight;\n  }\n  if (scrollLeft < 0) {\n    scrollLeft = 0;\n  } else if (scrollLeft > maxScrollWidth) {\n    scrollLeft = maxScrollWidth;\n  }\n  const top = Math.floor((maxHeight * scrollTop) / maxScrollHeight);\n  const left = Math.floor((maxWidth * scrollLeft) / maxScrollWidth);\n  const { row, col } = computeScrollRowAndCol(controller, left, top);\n  const data: ScrollValue = {\n    top,\n    left,\n    row,\n    col,\n    scrollLeft,\n    scrollTop,\n  };\n  const activeCell = controller.getActiveRange().range;\n  if (data.row != oldScroll.row) {\n    activeCell.row = data.row;\n  }\n  if (data.col !== oldScroll.col) {\n    activeCell.col = data.col;\n  }\n  controller.setScroll(data);\n  return data;\n}\nconst initState: State = {\n  prevPageX: 0,\n  prevPageY: 0,\n  scrollStatus: ScrollStatus.NONE,\n};\nexport const ScrollBar: React.FunctionComponent<Props> = memo(\n  ({ controller }) => {\n    const state = useRef<State>({ ...initState });\n    const { scrollLeft, scrollTop } = useSyncExternalStore(\n      scrollStore.subscribe,\n      scrollStore.getSnapshot,\n    );\n    const [toggleEvents] = useMemo(() => {\n      function handlePointerUp() {\n        state.current = { ...initState };\n        toggleEvents(false);\n      }\n      function handlePointerMove(event: PointerEvent) {\n        if (event.buttons <= 0) {\n          toggleEvents(false);\n          return;\n        }\n        if (state.current.scrollStatus === ScrollStatus.NONE) {\n          return;\n        }\n        if (state.current.scrollStatus === ScrollStatus.VERTICAL) {\n          scrollBar(controller, 0, event.clientY - state.current.prevPageY);\n          state.current.prevPageY = event.clientY;\n        } else if (state.current.scrollStatus === ScrollStatus.HORIZONTAL) {\n          scrollBar(controller, event.clientX - state.current.prevPageX, 0);\n          state.current.prevPageX = event.clientX;\n        }\n      }\n      function toggleEvents(state?: boolean) {\n        const toggleEvent = state\n          ? document.addEventListener\n          : document.removeEventListener;\n        toggleEvent('pointermove', handlePointerMove);\n        toggleEvent('pointerup', handlePointerUp);\n      }\n      return [toggleEvents];\n    }, []);\n    useEffect(() => toggleEvents, [toggleEvents]);\n\n    const addEvents = useCallback(\n      (event: React.PointerEvent<HTMLDivElement>, status: ScrollStatus) => {\n        if (event.buttons <= 0) {\n          return;\n        }\n        toggleEvents(true);\n        state.current.prevPageX = event.clientX;\n        state.current.prevPageY = event.clientY;\n        state.current.scrollStatus = status;\n      },\n      [toggleEvents],\n    );\n\n    const handleVerticalBarDown = useCallback(\n      (event: React.PointerEvent<HTMLDivElement>) => {\n        addEvents(event, ScrollStatus.VERTICAL);\n      },\n      [addEvents],\n    );\n    const handleHorizontalBarDown = useCallback(\n      (event: React.PointerEvent<HTMLDivElement>) => {\n        addEvents(event, ScrollStatus.HORIZONTAL);\n      },\n      [toggleEvents],\n    );\n    return (\n      <Fragment>\n        <div\n          className={styles['vertical-scroll-bar']}\n          data-testid=\"vertical-scroll-bar\"\n          onPointerDown={handleVerticalBarDown}\n        >\n          <div\n            className={styles['vertical-scroll-bar-content']}\n            style={{\n              transform: `translateY(${scrollTop}px)`,\n            }}\n            data-testid=\"vertical-scroll-bar-content\"\n          />\n        </div>\n        <div\n          className={styles['horizontal-scroll-bar']}\n          data-testid=\"horizontal-scroll-bar\"\n          onPointerDown={handleHorizontalBarDown}\n        >\n          <div\n            className={styles['horizontal-scroll-bar-content']}\n            style={{\n              transform: `translateX(${scrollLeft}px)`,\n            }}\n            data-testid=\"horizontal-scroll-bar-content\"\n          />\n        </div>\n      </Fragment>\n    );\n  },\n);\nScrollBar.displayName = 'ScrollBar';\n","import React, { Fragment, memo, useMemo, useSyncExternalStore } from 'react';\nimport { Button, info, toast } from '../../components';\nimport { IController } from '@/types';\nimport styles from './index.module.css';\nimport { useClickOutside } from '../hooks';\nimport { activeCellStore } from '@/containers/store';\nimport { $ } from '@/i18n';\nimport { headerSizeSet, canvasSizeSet } from '@/util';\n\ninterface Props {\n  controller: IController;\n  top: number;\n  left: number;\n  hideContextMenu: () => void;\n}\n\nenum ClickPosition {\n  COLUMN_HEADER,\n  ROW_HEADER,\n  TRIANGLE,\n  CONTENT,\n}\n\nconst MENU_WIDTH = 110;\nconst ITEM_HEIGHT = 20;\n\nfunction computeMenuStyle(top: number, left: number) {\n  const headerSize = headerSizeSet.get();\n  const rect = canvasSizeSet.get();\n  let clickPosition = ClickPosition.CONTENT;\n  let menuHeight = ITEM_HEIGHT * 3;\n  const y = top - rect.top;\n  const x = left - rect.left;\n  if (y < headerSize.height && x < headerSize.width) {\n    clickPosition = ClickPosition.TRIANGLE;\n  } else if (y < headerSize.height) {\n    clickPosition = ClickPosition.COLUMN_HEADER;\n    menuHeight = ITEM_HEIGHT * 6;\n  } else if (x < headerSize.width) {\n    clickPosition = ClickPosition.ROW_HEADER;\n    menuHeight = ITEM_HEIGHT * 6;\n  }\n\n  // recompute menu position\n  let realTop = top;\n  let realLeft = left;\n  const gap = 18;\n  const height = rect.height + rect.top;\n  if (realTop + menuHeight > height) {\n    realTop = height - menuHeight - gap;\n  }\n  if (realLeft + MENU_WIDTH > rect.width) {\n    realLeft = rect.width - MENU_WIDTH - gap;\n  }\n\n  return {\n    style: {\n      top: realTop,\n      left: realLeft,\n    },\n    position: clickPosition,\n  };\n}\n\nconst threshold = 10000;\n\nexport const ContextMenu: React.FunctionComponent<Props> = memo((props) => {\n  const { controller, top, left, hideContextMenu } = props;\n  const { row, col, colCount, rowCount } = useSyncExternalStore(\n    activeCellStore.subscribe,\n    activeCellStore.getSnapshot,\n  );\n  const ref = useClickOutside(hideContextMenu);\n  const { style, position } = useMemo(() => {\n    const temp = computeMenuStyle(top, left);\n    return temp;\n  }, [top, left]);\n  const handleDialog = (isRow: boolean) => {\n    let value = isRow\n      ? controller.getRowHeight(row).len\n      : controller.getColWidth(col).len;\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      const t = parseInt(event.target.value, 10);\n      if (!isNaN(t)) {\n        if (t < 0) {\n          value = 0;\n        } else if (value > threshold) {\n          value = threshold;\n        } else {\n          value = t;\n        }\n      }\n      event.stopPropagation();\n    };\n    info({\n      visible: true,\n      title: isRow ? $('row-height') : $('column-width'),\n      testId: 'context-menu-width-height-dialog',\n      children: (\n        <input\n          type=\"number\"\n          min={0}\n          max={threshold}\n          style={{ width: '200px' }}\n          defaultValue={value}\n          onChange={handleChange}\n          data-testid=\"context-menu-width-height-dialog-input\"\n        />\n      ),\n      onOk: () => {\n        if (value < 0) {\n          return toast.error($('greater-than-zero'));\n        }\n        if (isRow) {\n          controller.batchUpdate(() => {\n            for (let i = 0; i < rowCount; i++) {\n              controller.setRowHeight(row + i, value);\n            }\n            return true;\n          });\n        } else {\n          controller.batchUpdate(() => {\n            for (let i = 0; i < colCount; i++) {\n              controller.setColWidth(col + i, value);\n            }\n            return true;\n          });\n        }\n        hideContextMenu();\n      },\n      onCancel: () => {\n        hideContextMenu();\n      },\n    });\n  };\n  return (\n    <div\n      className={styles['context-menu']}\n      data-testid=\"context-menu\"\n      style={style}\n      ref={ref}\n    >\n      <Button\n        onClick={() => {\n          hideContextMenu();\n          controller.setFloatElementUuid('');\n          controller.copy();\n        }}\n        testId=\"context-menu-copy\"\n      >\n        {$('copy')}\n      </Button>\n      <Button\n        onClick={() => {\n          hideContextMenu();\n          controller.setFloatElementUuid('');\n          controller.cut();\n        }}\n        testId=\"context-menu-cut\"\n      >\n        {$('cut')}\n      </Button>\n      <Button\n        testId=\"context-menu-paste\"\n        onClick={() => {\n          hideContextMenu();\n          controller.paste();\n        }}\n      >\n        {$('paste')}\n      </Button>\n      {(position === ClickPosition.ROW_HEADER ||\n        position === ClickPosition.CONTENT) && (\n        <Fragment>\n          <Button\n            testId=\"context-menu-insert-row-above\"\n            onClick={() => {\n              hideContextMenu();\n              controller.addRow(row, rowCount, true);\n            }}\n          >\n            {$('insert-row-above')}\n          </Button>\n          <Button\n            testId=\"context-menu-insert-row-below\"\n            onClick={() => {\n              hideContextMenu();\n              controller.addRow(row, rowCount);\n            }}\n          >\n            {$('insert-row-below')}\n          </Button>\n        </Fragment>\n      )}\n      {(position === ClickPosition.COLUMN_HEADER ||\n        position === ClickPosition.CONTENT) && (\n        <Fragment>\n          <Button\n            testId=\"context-menu-insert-column-left\"\n            onClick={() => {\n              hideContextMenu();\n              controller.addCol(col, colCount);\n            }}\n          >\n            {$('insert-column-left')}\n          </Button>\n          <Button\n            testId=\"context-menu-insert-column-right\"\n            onClick={() => {\n              hideContextMenu();\n              controller.addCol(col, colCount, true);\n            }}\n          >\n            {$('insert-column-right')}\n          </Button>\n        </Fragment>\n      )}\n      {position === ClickPosition.TRIANGLE && (\n        <Button\n          testId=\"context-menu-delete\"\n          onClick={() => {\n            hideContextMenu();\n            controller.deleteAll(controller.getCurrentSheetId());\n          }}\n        >\n          {$('delete')}\n        </Button>\n      )}\n      {position === ClickPosition.COLUMN_HEADER && (\n        <Fragment>\n          <Button\n            testId=\"context-menu-delete-column\"\n            onClick={() => {\n              hideContextMenu();\n              controller.deleteCol(col, colCount);\n            }}\n          >\n            {$('delete-columns')}\n          </Button>\n          <Button\n            testId=\"context-menu-hide-column\"\n            onClick={() => {\n              hideContextMenu();\n              controller.hideCol(col, colCount);\n            }}\n          >\n            {$('hide-columns')}\n          </Button>\n          <Button\n            testId=\"context-menu-unhide-column\"\n            onClick={() => {\n              hideContextMenu();\n              controller.unhideCol(col, colCount);\n            }}\n          >\n            {$('unhide-columns')}\n          </Button>\n          <Button\n            testId=\"context-menu-column-width\"\n            onClick={() => {\n              handleDialog(false);\n            }}\n          >\n            {$('column-width')}\n          </Button>\n        </Fragment>\n      )}\n      {position === ClickPosition.ROW_HEADER && (\n        <Fragment>\n          <Button\n            testId=\"context-menu-delete-row\"\n            onClick={() => {\n              hideContextMenu();\n              controller.deleteRow(row, rowCount);\n            }}\n          >\n            {$('delete-rows')}\n          </Button>\n          <Button\n            testId=\"context-menu-hide-row\"\n            onClick={() => {\n              hideContextMenu();\n              controller.hideRow(row, rowCount);\n            }}\n          >\n            {$('hide-rows')}\n          </Button>\n          <Button\n            testId=\"context-menu-unhide-row\"\n            onClick={() => {\n              hideContextMenu();\n              controller.unhideRow(row, rowCount);\n            }}\n          >\n            {$('unhide-rows')}\n          </Button>\n          <Button\n            testId=\"context-menu-row-height\"\n            onClick={() => {\n              handleDialog(true);\n            }}\n          >\n            {$('row-height')}\n          </Button>\n        </Fragment>\n      )}\n    </div>\n  );\n});\nContextMenu.displayName = 'CanvasContextMenu';\n","import {\n  IController,\n  ChangeEventType,\n  EUnderLine,\n  IRange,\n  EMergeCellType,\n  EHorizontalAlign,\n} from '@/types';\nimport {\n  DEFAULT_FONT_SIZE,\n  HIDE_CELL,\n  getThemeColor,\n  eventEmitter,\n  sizeConfig,\n  canvasSizeSet,\n  MERGE_CELL_LINE_BREAK,\n  LINE_BREAK,\n  DEFAULT_FORMAT_CODE,\n  getFormatCode,\n  parseNumber,\n} from '@/util';\nimport {\n  coreStore,\n  CoreStore,\n  activeCellStore,\n  sheetListStore,\n  fontFamilyStore,\n  scrollStore,\n  floatElementStore,\n  FloatElementItem,\n  defineNameStore,\n  styleStore,\n} from '@/containers/store';\nimport {\n  initRenderCanvas,\n  registerGlobalEvent,\n  scrollSheetToView,\n} from '@/canvas';\nimport { numberFormat as numberFormatUtil, isDateFormat } from '@/model';\nimport { initFontFamilyList } from './isSupportFontFamily';\n\nfunction getChartData(\n  range: IRange,\n  controller: IController,\n): Pick<FloatElementItem, 'labels' | 'datasets'> {\n  const { row, col, rowCount, colCount, sheetId } = range;\n  const result: Pick<FloatElementItem, 'labels' | 'datasets'> = {\n    labels: [],\n    datasets: [],\n  };\n  for (\n    let r = row, index = 1, endRow = row + rowCount;\n    r < endRow;\n    r++, index++\n  ) {\n    const rowHeight = controller.getRowHeight(r).len;\n    if (rowHeight === HIDE_CELL) {\n      continue;\n    }\n    const list = [];\n    for (let c = col, endCol = col + colCount; c < endCol; c++) {\n      const t = controller.getCell({\n        row: r,\n        col: c,\n        rowCount: 1,\n        colCount: 1,\n        sheetId,\n      });\n      if (!t) {\n        continue;\n      }\n      list.push(parseNumber(t.value)[1]);\n    }\n    if (list.length > 0) {\n      result.datasets.push({ label: `Series${index}`, data: list });\n    }\n  }\n  if (result.datasets[0] && result.datasets[0].data.length > 0) {\n    result.labels = Array.from({ length: result.datasets[0].data.length })\n      .fill('')\n      .map((_value, i) => String(i + 1));\n  }\n  return result;\n}\n\nfunction updateActiveCell(controller: IController) {\n  const { top } = canvasSizeSet.get();\n  const { range: activeCell, isMerged } = controller.getActiveRange();\n  const sheetId = activeCell.sheetId || controller.getCurrentSheetId();\n  const cell = controller.getCell(activeCell);\n  const defineName = controller.getDefineName({\n    row: activeCell.row,\n    col: activeCell.col,\n    rowCount: 1,\n    colCount: 1,\n    sheetId,\n  });\n  const cellSize = controller.getCellSize(activeCell);\n  const cellPosition = controller.computeCellPosition(activeCell);\n  cellPosition.top = top + cellPosition.top;\n  let fontFamily = cell?.style?.fontFamily ?? '';\n  if (!fontFamily) {\n    let defaultFontFamily = '';\n    const list = fontFamilyStore.getSnapshot();\n    for (const item of list) {\n      if (!item.disabled) {\n        defaultFontFamily = String(item.value);\n        break;\n      }\n    }\n    fontFamily = defaultFontFamily;\n  }\n  const {\n    isBold = false,\n    isItalic = false,\n    isStrike = false,\n    fontSize = DEFAULT_FONT_SIZE,\n    fontColor = getThemeColor('contentColor'),\n    fillColor = '',\n    isWrapText = false,\n    underline = EUnderLine.NONE,\n    horizontalAlign,\n    verticalAlign,\n  } = cell?.style || {};\n\n  const numberFormat = cell?.style?.numberFormat || DEFAULT_FORMAT_CODE;\n  const isRight =\n    numberFormat === DEFAULT_FORMAT_CODE && typeof cell?.value === 'number';\n  let horAlign = horizontalAlign;\n  if (horizontalAlign === undefined && isRight) {\n    horAlign = EHorizontalAlign.RIGHT;\n  }\n  let displayValue = numberFormatUtil(cell?.value, numberFormat);\n  let realValue = '';\n  if (isDateFormat(numberFormat) || numberFormat === getFormatCode(10)) {\n    realValue = displayValue;\n  } else {\n    const t = cell?.value ?? '';\n    realValue = typeof t === 'boolean' ? t.toString().toUpperCase() : String(t);\n    displayValue = realValue;\n  }\n\n  let mergeType = '';\n  if (isMerged) {\n    if (displayValue.includes(MERGE_CELL_LINE_BREAK)) {\n      mergeType = String(EMergeCellType.MERGE_CONTENT);\n      displayValue = displayValue.replaceAll(MERGE_CELL_LINE_BREAK, LINE_BREAK);\n    } else {\n      mergeType = String(EMergeCellType.MERGE_CENTER);\n    }\n  }\n\n  activeCellStore.setState({\n    top: cellPosition.top,\n    left: cellPosition.left,\n    width: cellSize.width,\n    height: cellSize.height,\n    row: activeCell.row,\n    col: activeCell.col,\n    rowCount: activeCell.rowCount,\n    colCount: activeCell.colCount,\n    value: cell?.formula || realValue,\n    defineName,\n    displayValue: cell?.formula || displayValue,\n  });\n\n  styleStore.setState({\n    isBold,\n    isItalic,\n    isStrike,\n    fontColor,\n    fontSize,\n    fontFamily,\n    fillColor,\n    isWrapText,\n    underline,\n    numberFormat,\n    isMergeCell: isMerged,\n    mergeType,\n    horizontalAlign: horAlign,\n    verticalAlign,\n  });\n}\n\nconst handleStateChange = (\n  changeSet: Set<ChangeEventType>,\n  controller: IController,\n) => {\n  if (\n    changeSet.has('rangeMap') ||\n    changeSet.has('cellStyle') ||\n    changeSet.has('cellValue') ||\n    changeSet.has('currentSheetId') ||\n    changeSet.has('mergeCells')\n  ) {\n    updateActiveCell(controller);\n  }\n  if (changeSet.has('workbook')) {\n    const sheetList = controller.getSheetList().map((v) => ({\n      sheetId: v.sheetId,\n      name: v.name,\n      isHide: v.isHide,\n      tabColor: v.tabColor || '',\n    }));\n    sheetListStore.setState(sheetList);\n  }\n\n  const core: Partial<CoreStore> = {\n    canRedo: controller.canRedo(),\n    canUndo: controller.canUndo(),\n  };\n\n  if (changeSet.has('currentSheetId')) {\n    core.activeUuid = '';\n    core.currentSheetId = controller.getCurrentSheetId();\n    core.isFilter = !!controller.getFilter()\n  }\n\n  if (changeSet.has('autoFilter')) {\n    core.isFilter = !!controller.getFilter()\n  }\n  coreStore.setState(core);\n\n  if (changeSet.has('scroll')) {\n    const scroll = controller.getScroll();\n    const canvasSize = canvasSizeSet.get();\n    const showBottomBar = scroll.scrollTop / canvasSize.height >= 0.91;\n    scrollStore.setState({\n      scrollLeft: scroll.scrollLeft,\n      scrollTop: scroll.scrollTop,\n      showBottomBar,\n    });\n  }\n  if (changeSet.has('definedNames')) {\n    const list = controller.getDefineNameList().map((v) => v.name);\n    defineNameStore.setState(list);\n  }\n\n  if (\n    changeSet.has('drawings') ||\n    changeSet.has('cellValue') ||\n    changeSet.has('row') ||\n    changeSet.has('col') ||\n    changeSet.has('currentSheetId') ||\n    changeSet.has('scroll')\n  ) {\n    const scroll = controller.getScroll();\n    const canvasSize = canvasSizeSet.get();\n    const minX = scroll.left;\n    const minY = scroll.top;\n    const maxX = canvasSize.width + minX;\n    const maxY = canvasSize.height + minY;\n    const list = controller.getDrawingList(controller.getCurrentSheetId());\n    const result: FloatElementItem[] = [];\n    for (const v of list) {\n      const p = controller.computeCellPosition({\n        row: v.fromRow,\n        col: v.fromCol,\n        colCount: 1,\n        rowCount: 1,\n        sheetId: '',\n      });\n      const top = p.top + v.marginY;\n      const left = p.left + v.marginX;\n      // the start point in the box or the end point in the box\n      const check =\n        (top > minY && top < maxY) ||\n        (left > minX && left < maxX) ||\n        (top + v.height > minY && top + v.height < maxY) ||\n        (left + v.width > minX && left + v.width < maxX);\n      if (check) {\n        const t: FloatElementItem = {\n          ...v,\n          top,\n          left,\n          labels: [],\n          datasets: [],\n        };\n        if (v.type === 'chart') {\n          const c = getChartData(v.chartRange!, controller);\n          t.labels = c.labels;\n          t.datasets = c.datasets;\n        }\n        result.push(t);\n      }\n    }\n    floatElementStore.setState(result);\n  }\n\n  if (changeSet.has('currentSheetId')) {\n    // async update\n    setTimeout(() => {\n      scrollSheetToView(controller.getCurrentSheetId());\n    }, 0);\n  }\n};\n\nfunction computeCanvasSize(canvas: HTMLCanvasElement) {\n  const scrollbarSize = parseInt(sizeConfig.largePadding, 10);\n  const dom = canvas.parentElement;\n  if (!dom) {\n    return null;\n  }\n  const size = dom.getBoundingClientRect();\n  const result = {\n    top: size.top,\n    left: size.left,\n    width: dom.clientWidth - scrollbarSize,\n    height: dom.clientHeight - scrollbarSize,\n  };\n  canvasSizeSet.set(result);\n}\n\nexport function initCanvas(\n  controller: IController,\n  canvas: HTMLCanvasElement,\n): () => void {\n  const familyList = initFontFamilyList();\n  fontFamilyStore.setState(familyList);\n  const mainCanvas = initRenderCanvas(controller, canvas);\n  const resize = () => {\n    renderCanvas(new Set<ChangeEventType>(['row']));\n  };\n  const renderCanvas = (changeSet: Set<ChangeEventType>) => {\n    computeCanvasSize(canvas);\n    mainCanvas.resize();\n    mainCanvas.render({ changeSet });\n  };\n  const offEvent = eventEmitter.on('modelChange', ({ changeSet }) => {\n    handleStateChange(changeSet, controller);\n    mainCanvas.render({ changeSet });\n  });\n\n  const removeEvent = registerGlobalEvent(controller, resize);\n\n  const changeSet = new Set<ChangeEventType>([\n    'currentSheetId',\n    'rangeMap',\n    'workbook',\n    'worksheets',\n    'drawings',\n    'definedNames',\n    'mergeCells',\n    'scroll',\n    'cellValue',\n    'row',\n    'col',\n    'cellStyle',\n    'undo',\n    'redo',\n    'antLine',\n    'autoFilter'\n  ]);\n  handleStateChange(changeSet, controller);\n  renderCanvas(changeSet);\n  queueMicrotask(() => {\n    renderCanvas(changeSet);\n  });\n\n  return () => {\n    removeEvent();\n    offEvent();\n  };\n}\n","import React, { useState, memo, useSyncExternalStore } from 'react';\nimport { Button } from '../../components';\nimport { IController } from '@/types';\nimport styles from './index.module.css';\nimport { scrollBar } from '@/canvas';\nimport { $ } from '@/i18n';\nimport { classnames, sheetViewSizeSet, MAX_ADD_ROW_THRESHOLD } from '@/util';\nimport { scrollStore } from '../store';\n\ninterface Props {\n  controller: IController;\n}\n\nconst defaultData = 10;\n\nexport const BottomBar: React.FunctionComponent<Props> = memo(\n  ({ controller }) => {\n    const [value, setValue] = useState(defaultData);\n    const { showBottomBar } = useSyncExternalStore(\n      scrollStore.subscribe,\n      scrollStore.getSnapshot,\n    );\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      event.stopPropagation();\n      const val = parseInt(event.target.value, 10);\n      if (!isNaN(val)) {\n        if (val < 1) {\n          setValue(1);\n        } else if (val > MAX_ADD_ROW_THRESHOLD) {\n          setValue(MAX_ADD_ROW_THRESHOLD);\n        } else {\n          setValue(val);\n        }\n      }\n    };\n    const handleClick = () => {\n      const sheetInfo = controller.getSheetInfo(\n        controller.getCurrentSheetId(),\n      )!;\n      controller.addRow(sheetInfo.rowCount - 1, value);\n      const viewSize = sheetViewSizeSet.get();\n      scrollBar(controller, 0, viewSize.height);\n    };\n    return (\n      <div\n        className={classnames(styles['bottom-bar'], {\n          [styles.active]: showBottomBar,\n        })}\n        data-testid=\"canvas-bottom-bar\"\n      >\n        <div className={styles['bottom-bar-text']}>\n          {$('add-at-the-bottom')}\n        </div>\n        <input\n          value={value}\n          onChange={handleChange}\n          type=\"number\"\n          min={1}\n          max={MAX_ADD_ROW_THRESHOLD}\n          data-testid=\"canvas-bottom-bar-input\"\n          className={styles['bottom-bar-input']}\n        />\n        <div className={styles['bottom-bar-text']}>{$('rows')}</div>\n        <Button\n          testId=\"canvas-bottom-bar-add\"\n          className={styles['add-button']}\n          onClick={handleClick}\n        >\n          {$('add')}\n        </Button>\n      </div>\n    );\n  },\n);\n\nBottomBar.displayName = 'BottomBar';\n","import React, { memo } from 'react';\nimport { Button, info, Select, toast } from '../../components';\nimport { IController } from '@/types';\nimport styles from './FloatElement.module.css';\nimport { useClickOutside } from '../hooks';\nimport type { ChartType } from 'chart.js';\nimport {\n  saveAs,\n  convertToReference,\n  parseReference,\n  isSameRange,\n  MAX_NAME_LENGTH,\n  extractImageType,\n  CHART_TYPE_LIST,\n} from '@/util';\nimport type { FloatElementItem } from '@/containers/store';\nimport { IWindowSize } from '@/types';\nimport { $ } from '@/i18n';\n\ntype Props = FloatElementItem & {\n  controller: IController;\n  menuLeft: number;\n  menuTop: number;\n  resetResize: (size: IWindowSize) => void;\n  hideContextMenu: () => void;\n};\n\nexport const FloatElementContextMenu: React.FunctionComponent<Props> = memo(\n  (props) => {\n    const {\n      controller,\n      menuLeft,\n      menuTop,\n      uuid,\n      type,\n      chartType,\n      title,\n      resetResize,\n      hideContextMenu,\n      originHeight,\n      originWidth,\n      width,\n      height,\n    } = props;\n    const ref = useClickOutside(hideContextMenu);\n    const selectData = () => {\n      let value = convertToReference(\n        props.chartRange!,\n        'absolute',\n        (sheetId: string) => {\n          return controller.getSheetInfo(sheetId)?.name || '';\n        },\n      );\n      info({\n        visible: true,\n        title: $('edit-data-source'),\n        testId: 'dialog-select-data',\n        children: (\n          <input\n            type=\"text\"\n            spellCheck\n            style={{ width: '400px' }}\n            defaultValue={value}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              value = event.target.value.trim();\n              event.stopPropagation();\n            }}\n            maxLength={MAX_NAME_LENGTH * 2}\n            data-testid=\"dialog-select-data-input\"\n          />\n        ),\n        onOk: () => {\n          if (!value) {\n            return toast.error(\n              $('reference-is-empty'),\n              'select-data-empty-toast',\n            );\n          }\n          const sheetList = controller.getSheetList();\n          const range = parseReference(value, (sheetName: string) => {\n            return sheetList.find((v) => v.name === sheetName)?.sheetId || '';\n          });\n          if (\n            !range ||\n            !controller.validateRange(range) ||\n            (props.chartRange && isSameRange(range, props.chartRange))\n          ) {\n            return toast.error(\n              $('reference-is-not-valid'),\n              'select-data-invalid-toast',\n            );\n          }\n          range.sheetId = range.sheetId || controller.getCurrentSheetId();\n          controller.updateDrawing(uuid, { chartRange: range });\n          hideContextMenu();\n        },\n        onCancel: () => {\n          hideContextMenu();\n        },\n      });\n    };\n    const changeChartTitle = () => {\n      let value = title.trim();\n      info({\n        visible: true,\n        title: $('change-chart-title'),\n        testId: 'dialog-change-chart-title',\n        children: (\n          <input\n            type=\"text\"\n            spellCheck\n            style={{ width: '200px' }}\n            defaultValue={value}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              value = event.target.value.trim();\n              event.stopPropagation();\n            }}\n            maxLength={MAX_NAME_LENGTH}\n            data-testid=\"dialog-change-chart-title-input\"\n          />\n        ),\n        onOk: () => {\n          if (!value) {\n            return toast.error(\n              $('the-value-cannot-be-empty'),\n              'change-chart-title-toast',\n            );\n          }\n          controller.updateDrawing(uuid, { title: value });\n          hideContextMenu();\n        },\n        onCancel: () => {\n          hideContextMenu();\n        },\n      });\n    };\n    const changeChartType = () => {\n      let newChartType: ChartType = chartType!;\n      info({\n        title: $('change-chart-type'),\n        testId: 'dialog-change-chart-type',\n        visible: true,\n        children: (\n          <Select\n            className={styles['chart-type-select']}\n            defaultValue={newChartType}\n            data={CHART_TYPE_LIST.map((v) => ({ ...v, disabled: false }))}\n            onChange={(v) => (newChartType = String(v) as ChartType)}\n            testId=\"dialog-change-chart-type-select\"\n          />\n        ),\n        onCancel() {\n          hideContextMenu();\n        },\n        onOk() {\n          controller.updateDrawing(uuid, { chartType: newChartType });\n          hideContextMenu();\n        },\n      });\n    };\n    const saveAsPicture = () => {\n      hideContextMenu();\n      const list = controller.getDrawingList(controller.getCurrentSheetId());\n      const item = list.find((v) => v.uuid === uuid);\n      if (!item) {\n        return;\n      }\n      if (type === 'floating-picture' && item.imageSrc) {\n        const result = extractImageType(item.imageSrc);\n        saveAs(item.imageSrc, item.title + result.ext);\n      }\n      if (type === 'chart') {\n        const dom = document.querySelector<HTMLCanvasElement>(\n          `canvas[data-uuid=\"${uuid}\"]`,\n        );\n        if (!dom) {\n          return;\n        }\n        const chartData = dom.toDataURL();\n        saveAs(chartData, item.title + '.png');\n      }\n    };\n    return (\n      <div\n        className={styles['context-menu']}\n        data-testid=\"float-element-context-menu\"\n        ref={ref}\n        style={{ top: menuTop, left: menuLeft }}\n      >\n        <Button\n          testId=\"float-element-context-menu-copy\"\n          onClick={() => {\n            hideContextMenu();\n            controller.setFloatElementUuid(uuid);\n            controller.copy();\n          }}\n        >\n          {$('copy')}\n        </Button>\n\n        <Button\n          testId=\"float-element-context-menu-cut\"\n          onClick={() => {\n            hideContextMenu();\n            controller.setFloatElementUuid(uuid);\n            controller.cut();\n          }}\n        >\n          {$('cut')}\n        </Button>\n        <Button\n          testId=\"float-element-context-menu-paste\"\n          onClick={() => {\n            hideContextMenu();\n            controller.paste();\n          }}\n        >\n          {$('paste')}\n        </Button>\n        <Button\n          testId=\"float-element-context-menu-duplicate\"\n          onClick={() => {\n            hideContextMenu();\n            controller.setFloatElementUuid(uuid);\n            controller.copy();\n            controller.paste();\n            controller.setFloatElementUuid('');\n          }}\n        >\n          {$('duplicate')}\n        </Button>\n        {type === 'chart' && (\n          <React.Fragment>\n            <Button\n              onClick={selectData}\n              testId=\"float-element-context-menu-select-data\"\n            >\n              {$('select-data')}\n            </Button>\n            <Button\n              onClick={changeChartTitle}\n              testId=\"float-element-context-menu-change-chart-title\"\n            >\n              {$('change-chart-title')}\n            </Button>\n            <Button\n              onClick={changeChartType}\n              testId=\"float-element-context-menu-change-chart-type\"\n            >\n              {$('change-chart-type')}\n            </Button>\n          </React.Fragment>\n        )}\n        <Button\n          testId=\"float-element-context-menu-save-as-picture\"\n          onClick={saveAsPicture}\n        >\n          {$('save-as-picture')}\n        </Button>\n        <Button\n          disabled={width === originWidth && height === originHeight}\n          testId=\"float-element-context-reset-size\"\n          onClick={() => {\n            hideContextMenu();\n            controller.updateDrawing(uuid, {\n              height: originHeight,\n              width: originWidth,\n            });\n            resetResize({ width: originWidth, height: originHeight });\n          }}\n        >\n          {$('reset-size')}\n        </Button>\n        <Button\n          testId=\"float-element-context-menu-delete\"\n          onClick={() => {\n            hideContextMenu();\n            controller.deleteDrawing(uuid);\n          }}\n        >\n          {$('delete')}\n        </Button>\n      </div>\n    );\n  },\n);\nFloatElementContextMenu.displayName = 'FloatElementContextMenu';\n","import { headerSizeSet, canvasSizeSet } from '@/util';\n\nexport enum ResizePosition {\n  top = 'top',\n  topRight = 'top-right',\n  topLeft = 'top-left',\n  bottom = 'bottom',\n  bottomLeft = 'bottom-left',\n  bottomRight = 'bottom-right',\n  left = 'left',\n  right = 'right',\n  rotate = 'rotate',\n  active = 'active',\n}\nexport type FloatElementPosition = {\n  width: number;\n  top: number;\n  left: number;\n  height: number;\n  imageAngle: number;\n};\nexport type State = {\n  moveStartX: number;\n  moveStartY: number;\n  resizePosition: string;\n  activeUuid: string;\n  position: FloatElementPosition;\n};\n\nexport const INITIAL_STATE: State = {\n  resizePosition: '',\n  moveStartX: 0,\n  moveStartY: 0,\n  activeUuid: '',\n  position: {\n    width: -1,\n    height: -1,\n    imageAngle: 0,\n    top: -1,\n    left: -1,\n  },\n};\n\nexport function roundPosition(top: number, left: number) {\n  const size = headerSizeSet.get();\n  const canvasSize = canvasSizeSet.get();\n  const minTop = size.height;\n  const minLeft = size.width;\n  if (top < minTop) {\n    top = minTop;\n  }\n  if (top > canvasSize.height) {\n    top = canvasSize.height;\n  }\n  if (left < minLeft) {\n    left = minLeft;\n  }\n  if (left > canvasSize.width) {\n    left = canvasSize.width;\n  }\n  return {\n    top,\n    left,\n  };\n}\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.6\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.6\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.6\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import React, { useRef, useEffect, memo } from 'react';\nimport {\n  Chart as ChartJS,\n  BarController,\n  LineController,\n  PieController,\n  Filler,\n  ScatterController,\n  RadarController,\n  PolarAreaController,\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport type { ChartType, DefaultDataPoint, ChartComponentLike } from 'chart.js';\nimport {\n  COLOR_PICKER_COLOR_LIST,\n  parseNumber,\n  deepEqual,\n  getThemeColor,\n} from '@/util';\nimport type { FloatElementItem } from '@/containers/store';\nimport { ChartProps } from '@/types';\nimport styles from './chart.module.css';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend,\n);\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(props: ChartProps<TType, TData, TLabel>) {\n  const {\n    height = 400,\n    width = 200,\n    type,\n    options,\n    plugins,\n    data,\n    redraw,\n    updateMode,\n    uuid,\n  } = props as ChartProps;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS | null>();\n\n  useEffect(() => {\n    if (!chartRef.current) {\n      return;\n    }\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      if (!deepEqual(chartRef.current.data, data)) {\n        chartRef.current.data = data;\n      }\n      if (options && !deepEqual(chartRef.current.options, options)) {\n        chartRef.current.options = options;\n      }\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, updateMode, data, options]);\n\n  useEffect(() => {\n    renderChart();\n    return () => destroyChart();\n  }, []);\n\n  const renderChart = () => {\n    if (!canvasRef.current) {\n      return;\n    }\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data,\n      options,\n      plugins,\n    });\n  };\n  const destroyChart = () => {\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n  return (\n    <canvas\n      ref={canvasRef}\n      role=\"img\"\n      height={height}\n      width={width}\n      data-uuid={uuid}\n      className={styles['chart']}\n      data-testid=\"float-element-chart\"\n    />\n  );\n}\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  controller: ChartComponentLike,\n) {\n  ChartJS.register(controller);\n\n  return memo((props: Omit<ChartProps<T>, 'type'>) => (\n    <ChartComponent {...props} type={type} />\n  ));\n}\n\nconst Line = createTypedChart('line', LineController);\nconst Bar = createTypedChart('bar', BarController);\nconst Pie = createTypedChart('pie', PieController);\nconst Scatter = createTypedChart('scatter', ScatterController);\nconst Radar = createTypedChart('radar', RadarController);\nconst PolarArea = createTypedChart('polarArea', PolarAreaController);\n\nconst radarOptions = {\n  elements: {\n    line: {\n      borderWidth: 3,\n    },\n  },\n};\nconst radarPlugins = [Filler];\n\nconst colorOffset = 5;\n\nfunction getColor(i: number): string {\n  const index = Math.floor(i) % COLOR_PICKER_COLOR_LIST.length;\n  return COLOR_PICKER_COLOR_LIST[index];\n}\n\nconst Chart: React.FunctionComponent<FloatElementItem> = memo((props) => {\n  const { chartType, width, height, labels, datasets, uuid, title } = props;\n  const commonData = {\n    labels,\n    datasets: datasets.map((v, i) => ({\n      ...v,\n      backgroundColor: getColor(i * colorOffset),\n    })),\n  };\n  const extra = {\n    width,\n    height,\n    redraw: false,\n    uuid,\n    options: {\n      plugins: {\n        title: {\n          display: true,\n          text: title,\n          padding: {\n            top: 16,\n            bottom: 16,\n          },\n          font: {\n            size: 14,\n            weight: 'normal' as const,\n          },\n        },\n        legend: {\n          display: true,\n          position: 'bottom' as const,\n        },\n      },\n    },\n  };\n  let node: React.ReactNode = undefined;\n  if (chartType === 'line') {\n    node = <Line {...extra} data={commonData} />;\n  } else if (chartType === 'bar') {\n    node = <Bar {...extra} data={commonData} />;\n  } else if (chartType === 'pie') {\n    node = <Pie {...extra} data={commonData} />;\n  } else if (chartType === 'radar') {\n    const data = {\n      labels,\n      datasets: datasets.map((v, i) => {\n        const c = getColor(i * colorOffset + 4);\n        return {\n          ...v,\n          fill: true,\n          borderColor: c,\n          pointBackgroundColor: c,\n          pointBorderColor: getThemeColor('white'),\n          pointHoverBackgroundColor: getThemeColor('white'),\n          pointHoverBorderColor: c,\n          backgroundColor: getColor(i * colorOffset),\n        };\n      }),\n    };\n    node = (\n      <Radar\n        {...extra}\n        options={radarOptions}\n        plugins={radarPlugins}\n        data={data}\n      />\n    );\n  } else if (chartType === 'scatter') {\n    const data = {\n      datasets: datasets.map((v, i) => {\n        return {\n          label: v.label,\n          data: v.data.map((t, i) => ({ y: t, x: parseNumber(labels[i])[1] })),\n          backgroundColor: getColor(i * colorOffset),\n        };\n      }),\n    };\n    node = <Scatter {...extra} data={data} />;\n  } else if (chartType === 'polarArea') {\n    const data = {\n      labels,\n      datasets: datasets.map((v) => {\n        const list = Array.from({ length: v.data.length })\n          .fill('')\n          .map((_, i) => getColor(i * colorOffset));\n        return {\n          ...v,\n          backgroundColor: list,\n        };\n      }),\n    };\n    node = <PolarArea {...extra} data={data} />;\n  } else {\n    console.error('not support chart type', chartType);\n  }\n  return node;\n});\n\nChart.displayName = 'Chart';\n\nexport default Chart;\n","import React, { useState, memo, useCallback } from 'react';\nimport styles from './FloatElement.module.css';\nimport type { FloatElementItem } from '@/containers/store';\nimport { FloatElementContextMenu } from './ContextMenu';\nimport { DEFAULT_POSITION, classnames } from '@/util';\nimport { ResizePosition } from './util';\nimport { Icon } from '../../components';\nimport { IController, IWindowSize } from '@/types';\nimport Chart from './Chart';\n\ntype FloatElementProps = FloatElementItem & {\n  controller: IController;\n  active: boolean;\n  resetResize: (size: IWindowSize) => void;\n  pointerDown: (event: React.PointerEvent<HTMLDivElement>) => void;\n  resizeDown: (event: React.PointerEvent<HTMLDivElement>) => void;\n};\n\nexport const FloatElement: React.FunctionComponent<FloatElementProps> = memo(\n  (props) => {\n    const {\n      top,\n      left,\n      active,\n      width,\n      height,\n      type,\n      imageAngle = 0,\n      resetResize,\n      pointerDown,\n      resizeDown,\n    } = props;\n    const [contextMenuPosition, setContextMenuPosition] = useState({\n      top: DEFAULT_POSITION,\n      left: DEFAULT_POSITION,\n    });\n\n    const handleContextMenu = useCallback(\n      (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        event.stopPropagation();\n        setContextMenuPosition({ top: event.clientY, left: event.clientX });\n      },\n      [],\n    );\n    const hideContextMenu = useCallback(() => {\n      setContextMenuPosition({\n        top: DEFAULT_POSITION,\n        left: DEFAULT_POSITION,\n      });\n    }, []);\n\n    let children: React.ReactNode = undefined;\n    if (type === 'floating-picture') {\n      children = (\n        <img\n          title={props.title}\n          alt={props.title}\n          src={props.imageSrc!}\n          className={styles['image']}\n          data-uuid={props.uuid}\n          data-testid=\"float-element-image\"\n        />\n      );\n    } else if (type === 'chart') {\n      children = <Chart {...props} />;\n    }\n    if (!children) {\n      return children;\n    }\n    return (\n      <React.Fragment>\n        <div\n          onPointerDown={pointerDown}\n          onContextMenu={handleContextMenu}\n          className={classnames(styles['float-element'], {\n            [styles['active']]: active,\n          })}\n          style={{\n            transform: `translateX(${left}px) translateY(${top}px) ${\n              type === 'floating-picture' ? `rotate(${imageAngle}deg)` : ''\n            } `,\n            width,\n            height,\n          }}\n          data-testid=\"float-element\"\n        >\n          {children}\n          {active && (\n            <React.Fragment>\n              <div\n                className={classnames(styles['resize-handler'], styles['top'])}\n                data-position={ResizePosition.top}\n                onPointerDown={resizeDown}\n                data-testid=\"float-element-resize-top\"\n              >\n                <div className={styles['scale-dot']}></div>\n              </div>\n              <div\n                className={classnames(\n                  styles['resize-handler'],\n                  styles['top-right'],\n                )}\n                data-position={ResizePosition.topRight}\n                onPointerDown={resizeDown}\n                data-testid=\"float-element-resize-top-right\"\n              >\n                <div className={styles['scale-dot']}></div>\n              </div>\n              <div\n                className={classnames(\n                  styles['resize-handler'],\n                  styles['top-left'],\n                )}\n                data-position={ResizePosition.topLeft}\n                onPointerDown={resizeDown}\n                data-testid=\"float-element-resize-top-left\"\n              >\n                <div className={styles['scale-dot']}></div>\n              </div>\n              <div\n                className={classnames(styles['resize-handler'], styles['left'])}\n                data-position={ResizePosition.left}\n                onPointerDown={resizeDown}\n                data-testid=\"float-element-resize-left\"\n              >\n                <div className={styles['scale-dot']}></div>\n              </div>\n              <div\n                className={classnames(\n                  styles['resize-handler'],\n                  styles['right'],\n                )}\n                data-position={ResizePosition.right}\n                onPointerDown={resizeDown}\n                data-testid=\"float-element-resize-right\"\n              >\n                <div className={styles['scale-dot']}></div>\n              </div>\n              <div\n                className={classnames(\n                  styles['resize-handler'],\n                  styles['bottom-right'],\n                )}\n                data-position={ResizePosition.bottomRight}\n                onPointerDown={resizeDown}\n                data-testid=\"float-element-resize-bottom-right\"\n              >\n                <div className={styles['scale-dot']}></div>\n              </div>\n              <div\n                className={classnames(\n                  styles['resize-handler'],\n                  styles['bottom-left'],\n                )}\n                data-position={ResizePosition.bottomLeft}\n                onPointerDown={resizeDown}\n                data-testid=\"float-element-resize-bottom-left\"\n              >\n                <div className={styles['scale-dot']}></div>\n              </div>\n              <div\n                className={classnames(\n                  styles['resize-handler'],\n                  styles['bottom'],\n                )}\n                data-position={ResizePosition.bottom}\n                onPointerDown={resizeDown}\n                data-testid=\"float-element-resize-bottom\"\n              >\n                <div className={styles['scale-dot']}></div>\n              </div>\n              {type === 'floating-picture' && (\n                <div\n                  className={classnames(\n                    styles['resize-handler'],\n                    styles['rotate'],\n                  )}\n                  data-position={ResizePosition.rotate}\n                  onPointerDown={resizeDown}\n                  data-testid=\"float-element-rotate\"\n                >\n                  <div className={styles['rotate-icon']}>\n                    <Icon name=\"rotate\" />\n                  </div>\n                </div>\n              )}\n            </React.Fragment>\n          )}\n        </div>\n        {contextMenuPosition.top >= 0 && contextMenuPosition.left >= 0 && (\n          <FloatElementContextMenu\n            {...props}\n            resetResize={resetResize}\n            menuLeft={contextMenuPosition.left}\n            menuTop={contextMenuPosition.top}\n            hideContextMenu={hideContextMenu}\n          />\n        )}\n      </React.Fragment>\n    );\n  },\n);\n","import React, {\n  Fragment,\n  memo,\n  useState,\n  useEffect,\n  useRef,\n  useMemo,\n  useCallback,\n} from 'react';\nimport { IController, IWindowSize } from '@/types';\nimport { coreStore, FloatElementItem } from '@/containers/store';\nimport { FloatElement } from './FloatElement';\nimport styles from './FloatElement.module.css';\nimport { getHitInfo, classnames, canvasSizeSet } from '@/util';\nimport {\n  State,\n  ResizePosition,\n  FloatElementPosition,\n  INITIAL_STATE,\n  roundPosition,\n} from './util';\n\ninterface Props {\n  controller: IController;\n  floatElementList: FloatElementItem[];\n  activeUuid: string;\n}\nconst FloatElementContainer: React.FunctionComponent<Props> = memo(\n  ({ controller, floatElementList, activeUuid }) => {\n    const state = useRef<State>({\n      ...INITIAL_STATE,\n      position: { ...INITIAL_STATE.position },\n    });\n\n    const [position, setPosition] = useState<FloatElementPosition>({\n      width: -1,\n      height: -1,\n      imageAngle: 0,\n      top: -1,\n      left: -1,\n    });\n    state.current.activeUuid = activeUuid;\n    state.current.position = { ...position };\n\n    const [toggleEvents] = useMemo(() => {\n      const updateSize = (e: PointerEvent) => {\n        const deltaX = Math.round(e.clientX - state.current.moveStartX);\n        const deltaY = Math.round(e.clientY - state.current.moveStartY);\n        setPosition((old) => {\n          const p = state.current.resizePosition as ResizePosition;\n          let { top, left, width, height } = old;\n          if (\n            [\n              ResizePosition.topRight,\n              ResizePosition.topLeft,\n              ResizePosition.top,\n            ].includes(p)\n          ) {\n            height -= deltaY;\n            top += deltaY;\n          } else if (\n            [\n              ResizePosition.bottomRight,\n              ResizePosition.bottom,\n              ResizePosition.bottomLeft,\n            ].includes(p)\n          ) {\n            height += deltaY;\n          }\n\n          if (\n            [\n              ResizePosition.topLeft,\n              ResizePosition.bottomLeft,\n              ResizePosition.left,\n            ].includes(p)\n          ) {\n            width -= deltaX;\n            left += deltaX;\n          } else if (\n            [\n              ResizePosition.topRight,\n              ResizePosition.bottomRight,\n              ResizePosition.right,\n            ].includes(p)\n          ) {\n            width += deltaX;\n          }\n\n          const newData = {\n            ...roundPosition(top, left),\n            imageAngle: old.imageAngle,\n            width,\n            height,\n          };\n          return newData;\n        });\n      };\n      const handlePointerUp = (event: PointerEvent) => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const uuid = state.current.activeUuid;\n        if (!uuid || !state.current.resizePosition) {\n          state.current = {\n            ...INITIAL_STATE,\n            position: { ...INITIAL_STATE.position },\n          };\n          return;\n        }\n        const pos = state.current.position;\n        if (state.current.resizePosition === ResizePosition.rotate) {\n          controller.updateDrawing(uuid, {\n            imageAngle: pos.imageAngle,\n          });\n        } else if (state.current.resizePosition === ResizePosition.active) {\n          const rect = canvasSizeSet.get();\n          const { left, top } = pos;\n          if (left >= 0 && top >= 0 && left < rect.width && top < rect.height) {\n            const newRange = getHitInfo(controller, left, top);\n            if (newRange) {\n              controller.updateDrawing(uuid, {\n                fromCol: newRange.col,\n                fromRow: newRange.row,\n                marginX: newRange.marginX,\n                marginY: newRange.marginY,\n              });\n            }\n          }\n        } else {\n          if (pos.height > 0 && pos.width > 0) {\n            controller.updateDrawing(uuid, {\n              height: pos.height,\n              width: pos.width,\n            });\n          }\n        }\n        state.current = {\n          ...INITIAL_STATE,\n          position: { ...INITIAL_STATE.position },\n        };\n      };\n      const handlePointerMove = (event: PointerEvent) => {\n        if (!state.current.resizePosition || event.buttons <= 0) {\n          return;\n        }\n        event.stopPropagation();\n        event.preventDefault();\n        if (state.current.resizePosition === ResizePosition.rotate) {\n          const deltaX = event.clientX - state.current.moveStartX;\n          const deltaY = event.clientY - state.current.moveStartY;\n          const imageAngle = (Math.atan2(deltaY, deltaX) * 180) / Math.PI;\n          setPosition((old) => {\n            const newData = {\n              ...old,\n              imageAngle,\n            };\n            return newData;\n          });\n          return;\n        } else if (state.current.resizePosition === ResizePosition.active) {\n          const deltaX = Math.round(event.clientX - state.current.moveStartX);\n          const deltaY = Math.round(event.clientY - state.current.moveStartY);\n          setPosition((old) => {\n            const newTop = old.top + deltaY;\n            const newLeft = old.left + deltaX;\n            const newData = {\n              ...roundPosition(newTop, newLeft),\n              imageAngle: old.imageAngle,\n              width: old.width,\n              height: old.height,\n            };\n            return newData;\n          });\n          state.current.moveStartX = event.clientX;\n          state.current.moveStartY = event.clientY;\n        } else {\n          updateSize(event);\n          state.current.moveStartX = event.clientX;\n          state.current.moveStartY = event.clientY;\n          return;\n        }\n      };\n      function toggleEvents(state?: boolean) {\n        const toggleEvent = state\n          ? document.addEventListener\n          : document.removeEventListener;\n        toggleEvent('pointerup', handlePointerUp);\n        toggleEvent('pointermove', handlePointerMove);\n      }\n      return [toggleEvents];\n    }, []);\n\n    useEffect(() => toggleEvents, [toggleEvents]);\n\n    const handleResizePointerDown = useCallback(\n      (event: React.PointerEvent<HTMLDivElement>) => {\n        event.stopPropagation();\n        event.preventDefault();\n        if (event.buttons <= 0) {\n          return;\n        }\n\n        const p = event.currentTarget.dataset.position || '';\n        if (!p) {\n          return;\n        }\n        state.current.resizePosition = p;\n        state.current.moveStartX = event.clientX;\n        state.current.moveStartY = event.clientY;\n      },\n      [],\n    );\n    const resetResize = useCallback((size: IWindowSize) => {\n      setPosition((old) => ({ ...old, ...size }));\n    }, []);\n    const handleMaskPointerDown = useCallback(() => {\n      state.current = {\n        ...INITIAL_STATE,\n        position: { ...INITIAL_STATE.position },\n      };\n      coreStore.setState({ activeUuid: '' });\n      controller.setFloatElementUuid('');\n      toggleEvents(false);\n    }, [toggleEvents]);\n    return (\n      <Fragment>\n        <div\n          className={classnames(styles['float-element-mask'], {\n            [styles['active']]: !!activeUuid,\n          })}\n          data-testid=\"float-element-mask\"\n          onPointerDown={handleMaskPointerDown}\n        />\n        {floatElementList.map((v) => {\n          const isActive = v.uuid === activeUuid;\n          const props = {\n            ...v,\n            ...(isActive ? position : {}),\n          };\n          return (\n            <FloatElement\n              key={v.uuid}\n              {...props}\n              active={isActive}\n              controller={controller}\n              resetResize={resetResize}\n              pointerDown={(event) => {\n                event.stopPropagation();\n                event.preventDefault();\n                if (event.buttons <= 0) {\n                  return;\n                }\n                state.current.resizePosition = ResizePosition.active;\n                state.current.moveStartX = event.clientX;\n                state.current.moveStartY = event.clientY;\n                state.current.activeUuid = v.uuid;\n                controller.setFloatElementUuid(v.uuid);\n                coreStore.setState({ activeUuid: v.uuid });\n                setPosition({\n                  top: v.top,\n                  left: v.left,\n                  width: v.width,\n                  height: v.height,\n                  imageAngle: v.imageAngle || 0,\n                });\n                toggleEvents(true);\n              }}\n              resizeDown={handleResizePointerDown}\n            />\n          );\n        })}\n      </Fragment>\n    );\n  },\n);\nFloatElementContainer.displayName = 'FloatElementContainer';\n\nexport default FloatElementContainer;\n","import { type EventHandler, type EventData, EditorStatus } from '@/types';\nimport { PointerEvent } from 'react';\nimport {\n  headerSizeSet,\n  isSameRange,\n} from '@/util';\nimport { coreStore } from '@/containers/store';\nimport { checkFocus, setActiveCellValue } from '@/canvas';\n\nconst DOUBLE_CLICK_TIME = 300;\n\nexport class MainHandler implements EventHandler {\n  private lastTimeStamp = 0;\n  pointerMove(data: EventData) {\n    const { controller, x, y, position } = data;\n    const headerSize = headerSizeSet.get();\n    if (!position) {\n      return false\n    }\n    const { range, isMerged } = controller.getActiveRange({\n      row: position.row,\n      col: position.col,\n      colCount: 1,\n      rowCount: 1,\n      sheetId: '',\n    });\n    const activeCell = controller.getActiveRange().range;\n    if (activeCell.row === range.row && activeCell.col === range.col) {\n      return false\n    }\n    let rowCount = 0;\n    let colCount = 0;\n    if (x > headerSize.width && y > headerSize.height) {\n      if (isMerged) {\n        controller.setActiveRange(range);\n        return false\n      }\n      colCount = Math.abs(position.col - activeCell.col) + 1;\n      rowCount = Math.abs(position.row - activeCell.row) + 1;\n    }\n    // select row\n    if (headerSize.width > x && headerSize.height <= y) {\n      rowCount = Math.abs(position.row - activeCell.row) + 1;\n    }\n    // select col\n    if (headerSize.width <= x && headerSize.height > y) {\n      colCount = Math.abs(position.col - activeCell.col) + 1;\n    }\n    controller.setActiveRange({\n      row: Math.min(position.row, activeCell.row),\n      col: Math.min(position.col, activeCell.col),\n      rowCount,\n      colCount,\n      sheetId: '',\n    });\n    return false;\n  }\n  pointerDown(data: EventData, event: PointerEvent<HTMLCanvasElement>) {\n    const { controller, x, y, position } = data;\n    const headerSize = headerSizeSet.get();\n    const { timeStamp } = event;\n    if (!position) {\n      return false\n    }\n    // select all\n    if (headerSize.width > x && headerSize.height > y) {\n      controller.setActiveRange({\n        row: 0,\n        col: 0,\n        colCount: 0,\n        rowCount: 0,\n        sheetId: '',\n      });\n      return false\n    }\n    // select row\n    if (headerSize.width > x && headerSize.height <= y) {\n      controller.setActiveRange({\n        row: position.row,\n        col: position.col,\n        rowCount: 1,\n        colCount: 0,\n        sheetId: '',\n      });\n      return false\n    }\n    // select col\n    if (headerSize.width <= x && headerSize.height > y) {\n      controller.setActiveRange({\n        row: position.row,\n        col: position.col,\n        rowCount: 0,\n        colCount: 1,\n        sheetId: '',\n      });\n      return false\n    }\n    const { range } = controller.getActiveRange({\n      row: position.row,\n      col: position.col,\n      colCount: 1,\n      rowCount: 1,\n      sheetId: controller.getCurrentSheetId(),\n    });\n    const activeCell = controller.getActiveRange().range;\n    if (isSameRange(activeCell, range)) {\n      const delay = timeStamp - this.lastTimeStamp;\n      if (delay < DOUBLE_CLICK_TIME) {\n        coreStore.setState({ editorStatus: EditorStatus.EDIT_CELL });\n      }\n    } else {\n      if (checkFocus()) {\n        setActiveCellValue(controller);\n      }\n      controller.setActiveRange({\n        row: position.row,\n        col: position.col,\n        rowCount: 1,\n        colCount: 1,\n        sheetId: '',\n      });\n    }\n    this.lastTimeStamp = timeStamp;\n    return false;\n  }\n}\n","import { type EventHandler, type EventData, type ModalValue } from '@/types';\nimport { PointerEvent } from 'react';\nimport { FILTER_RECT_SIZE } from '@/util';\n\nexport class FilterHandler implements EventHandler {\n  pointerDown(data: EventData, event: PointerEvent<HTMLCanvasElement>) {\n    if (!data.position) {\n      return false;\n    }\n    const { controller, position } = data;\n    const { row, col, marginX, marginY } = position;\n    const filter = controller.getFilter();\n    if (!filter) {\n      return false;\n    }\n    const { range } = filter;\n    if (col >= range.col && col < range.col + range.colCount) {\n      const height = controller.getRowHeight(row).len;\n      const width = controller.getColWidth(col).len;\n      if (\n        marginX > width - FILTER_RECT_SIZE &&\n        marginY > height - FILTER_RECT_SIZE\n      ) {\n        event.stopPropagation();\n        const result: ModalValue = {\n          type: 'filter',\n          row,\n          col,\n          x: event.clientX,\n          y: event.clientY,\n        };\n        return result;\n      }\n    }\n\n    return false;\n  }\n  pointerMove() {\n    return false;\n  }\n}\n","import { EventHandler } from '@/types';\nimport { MainHandler } from './main';\nimport { FilterHandler } from './filter';\n\nconst handlerList: EventHandler[] = [new FilterHandler(), new MainHandler()];\n\nexport default handlerList;\n","import { useState, useEffect } from 'react';\nimport type { IController, ModalProps, ResultType } from '@/types';\nimport { MERGE_CELL_LINE_BREAK } from '@/util';\nimport { $ } from '@/i18n';\nimport styles from './index.module.css';\nimport { Button } from '@/components';\n\ntype FilterItem = {\n  label: string;\n  value: ResultType;\n  checked: boolean;\n  count: number;\n};\n\nfunction getData(\n  controller: IController,\n  col: number,\n): { dataList: FilterItem[] } | undefined {\n  const sheetId = controller.getCurrentSheetId();\n  const sheetInfo = controller.getSheetInfo(sheetId);\n  if (!sheetInfo) {\n    return;\n  }\n  const filter = controller.getFilter(sheetId);\n  if (!filter) {\n    return;\n  }\n  const { range } = filter;\n  let set = new Set<ResultType>();\n  if (filter.value) {\n    if (filter.value.type === 'normal') {\n      set = new Set(filter.value.value);\n    }\n  }\n  const map = new Map<ResultType, number>();\n  const result: FilterItem[] = [];\n  const end =\n    range.rowCount === 0 ? sheetInfo.rowCount : range.row + range.rowCount;\n  for (let r = range.row + 1; r < end; r++) {\n    const cellInfo = controller.getCell(\n      {\n        row: r,\n        col,\n        rowCount: 1,\n        colCount: 1,\n        sheetId,\n      },\n      true,\n    );\n    const cellValue = cellInfo ? cellInfo?.value : MERGE_CELL_LINE_BREAK;\n    const isUndefined = cellInfo?.value === undefined;\n\n    if (!map.has(cellValue)) {\n      result.push({\n        checked: true,\n        label: isUndefined ? $('filter-empty') : String(cellValue),\n        value: cellValue,\n        count: 1,\n      });\n    }\n    map.set(cellValue, (map.get(cellValue) || 0) + 1);\n  }\n\n  const index = result.findIndex((v) => v.value === MERGE_CELL_LINE_BREAK);\n  if (index >= 0) {\n    result.unshift(...result.splice(index, 1));\n  }\n  return {\n    dataList: result.map((v) => {\n      const checked = set.size === 0 ? true : set.has(v.value);\n      return { ...v, count: map.get(v.value) || 0, checked };\n    }),\n  };\n}\n\nexport const FilterModal = ({ controller, col, hide }: ModalProps) => {\n  const [dataList, setDataList] = useState<FilterItem[]>([]);\n  useEffect(() => {\n    const result = getData(controller, col);\n    if (result) {\n      setDataList(result.dataList);\n    }\n  }, [controller, col]);\n  return (\n    <div>\n      <div className={styles['dialog-title']}>{$('filter')}</div>\n      <div>\n        <div>\n          <input\n            type=\"checkbox\"\n            id=\"modal_all\"\n            name=\"all\"\n            value=\"all\"\n            checked={dataList.every((v) => v.checked)}\n            onChange={(e) => {\n              setDataList((oldList) =>\n                oldList.map((v) => ({ ...v, checked: e.target.checked })),\n              );\n            }}\n          />\n          <label htmlFor=\"modal_all\">{$('filter-all')} </label>\n          <span>({dataList.length})</span>\n        </div>\n        {dataList.map((v, index) => (\n          <div key={v.label} className={styles.listItem}>\n            <input\n              type=\"checkbox\"\n              id={`modal_${v.label}`}\n              name={v.label}\n              value={v.label}\n              checked={v.checked}\n              onChange={(e) =>\n                setDataList((oldList) => {\n                  oldList[index].checked = e.target.checked;\n                  return [...oldList];\n                })\n              }\n            />\n            <label htmlFor={`modal_${v.label}`}>{v.label}</label>\n            <span>({v.count})</span>\n          </div>\n        ))}\n      </div>\n\n      <div className={styles['dialog-button']}>\n        <Button onClick={hide}>{$('cancel')}</Button>\n        <Button\n          className={styles['dialog-cancel']}\n          type=\"primary\"\n          onClick={() => {\n            const data = dataList.filter((v) => v.checked).map((v) => v.value);\n            if (data.length === dataList.length) {\n              const filter = controller.getFilter();\n              if (typeof filter?.col === 'number' && filter?.value) {\n                controller.updateFilter('', {\n                  col: undefined,\n                  value: undefined,\n                });\n              }\n              hide();\n              return;\n            }\n            controller.updateFilter('', {\n              col,\n              value: { type: 'normal', value: data },\n            });\n            hide();\n          }}\n        >\n          {$('confirm')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import styles from './index.module.css';\nimport type { ModalProps } from '@/types';\nimport { FilterModal } from './Filter';\n\nconst Modal = (props: ModalProps) => {\n  let children = null;\n  if (props.type === 'filter') {\n    children = <FilterModal {...props} />;\n  } else {\n    throw new Error(`can't handle the modal type: ${props.type}`);\n  }\n\n  return (\n    <div\n      style={{ top: props.y, left: props.x }}\n      className={styles['modalContainer']}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, {\n  useRef,\n  useEffect,\n  Fragment,\n  useState,\n  memo,\n  useSyncExternalStore,\n} from 'react';\nimport type { IController, EventData, ModalValue } from '@/types';\nimport { getHitInfo, DEFAULT_POSITION, canvasSizeSet } from '@/util';\nimport styles from './index.module.css';\nimport { coreStore, floatElementStore } from '@/containers/store';\nimport { ScrollBar } from './ScrollBar';\nimport { ContextMenu } from './ContextMenu';\nimport { initCanvas } from './util';\nimport { BottomBar } from './BottomBar';\nimport FloatElementContainer from '../FloatElement';\nimport handlerList from './event';\nimport Modal from './modal';\n\ninterface Props {\n  controller: IController;\n}\n\nfunction getEventData(\n  event: React.PointerEvent<HTMLCanvasElement>,\n  controller: IController,\n): EventData {\n  const rect = canvasSizeSet.get();\n  const { clientX = 0, clientY = 0 } = event;\n  const x = clientX - rect.left;\n  const y = clientY - rect.top;\n\n  const position = getHitInfo(controller, x, y);\n  const result: EventData = {\n    position,\n    x,\n    y,\n    controller,\n  };\n\n  return result;\n}\n\nexport const CanvasContainer: React.FunctionComponent<Props> = memo((props) => {\n  const { controller } = props;\n  const [modalState, setModalState] = useState<ModalValue | null>(null);\n  const floatElementList = useSyncExternalStore(\n    floatElementStore.subscribe,\n    floatElementStore.getSnapshot,\n  );\n  const { activeUuid } = useSyncExternalStore(\n    coreStore.subscribe,\n    coreStore.getSnapshot,\n  );\n  const [menuPosition, setMenuPosition] = useState({\n    top: DEFAULT_POSITION,\n    left: DEFAULT_POSITION,\n  });\n\n  const ref = useRef<HTMLCanvasElement>(null);\n  useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n    return initCanvas(controller, ref.current);\n  }, []);\n  const handleContextMenu = (event: React.MouseEvent<HTMLCanvasElement>) => {\n    event.preventDefault();\n    setMenuPosition({\n      top: event.clientY,\n      left: event.clientX,\n    });\n  };\n  const hideContextMenu = () => {\n    setMenuPosition({\n      top: DEFAULT_POSITION,\n      left: DEFAULT_POSITION,\n    });\n  };\n  const handlePointerMove = (event: React.PointerEvent<HTMLCanvasElement>) => {\n    /* jscpd:ignore-start */\n    if (event.buttons <= 0) {\n      return;\n    }\n    const data = getEventData(event, controller);\n    for (const handler of handlerList) {\n      const r = handler.pointerMove(data, event);\n      if (r) {\n        if (typeof r !== 'boolean') {\n          setModalState(r);\n        }\n        break;\n      }\n    }\n    /* jscpd:ignore-end */\n  };\n  const handlePointerDown = async (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    if (event.buttons <= 0) {\n      return;\n    }\n    setModalState(null);\n    const data = getEventData(event, controller);\n    for (const handler of handlerList) {\n      const r = handler.pointerDown(data, event);\n      if (r) {\n        if (typeof r !== 'boolean') {\n          setModalState(r);\n        }\n        break;\n      }\n    }\n  };\n  return (\n    <Fragment>\n      <div\n        className={styles['canvas-container']}\n        data-testid=\"canvas-container\"\n      >\n        <canvas\n          className={styles['canvas-content']}\n          onContextMenu={handleContextMenu}\n          onPointerMove={handlePointerMove}\n          onPointerDown={handlePointerDown}\n          ref={ref}\n          data-testid=\"canvas-main\"\n        />\n        <ScrollBar controller={controller} />\n        <BottomBar controller={controller} />\n        {floatElementList.length > 0 && (\n          <FloatElementContainer\n            controller={controller}\n            floatElementList={floatElementList}\n            activeUuid={activeUuid}\n          />\n        )}\n      </div>\n      {menuPosition.top >= 0 && menuPosition.left >= 0 && (\n        <ContextMenu\n          {...menuPosition}\n          controller={controller}\n          hideContextMenu={hideContextMenu}\n        />\n      )}\n      {modalState && (\n        <Modal\n          {...modalState}\n          controller={controller}\n          hide={() => setModalState(null)}\n        />\n      )}\n    </Fragment>\n  );\n});\nCanvasContainer.displayName = 'CanvasContainer';\n\nexport default CanvasContainer;\n"],"names":["getHitInfo","controller","x","y","sheetInfo","scroll","headerSize","headerSizeSet","resultX","resultY","marginX","marginY","row","col","t","scrollStore","BaseStore","floatElementStore","MainCanvas","canvas","__publicField","result","rowMap","colMap","rowKeys","h","r","w","c","offscreen","_a","worker","data","dpr","ComLink.transfer","currentId","copyRange","jsonData","eventData","getTheme","canvasSizeSet","ComLink.proxy","width","height","isInputEvent","event","name","_b","registerGlobalEvent","resizeWindow","handleKeydown","list","keyboardEventList","v","a","b","temp","item","coreStore","EditorStatus","handleWheel","throttle","isTestEnv","scrollBar","handlePaste","handleCopy","handleCut","handleFocus","paste","oldRange","newRange","CUSTOM_FORMAT","deepEqual","eventEmitter","instance","initRenderCanvas","scrollX","scrollY","oldScroll","maxHeight","maxScrollHeight","maxScrollWidth","maxWidth","computeScrollPosition","scrollTop","scrollLeft","top","left","computeScrollRowAndCol","activeCell","initState","ScrollStatus","ScrollBar","memo","state","useRef","useSyncExternalStore","toggleEvents","useMemo","handlePointerUp","handlePointerMove","toggleEvent","useEffect","addEvents","useCallback","status","handleVerticalBarDown","handleHorizontalBarDown","Fragment","jsx","styles","MENU_WIDTH","ITEM_HEIGHT","computeMenuStyle","rect","clickPosition","menuHeight","realTop","realLeft","gap","threshold","ContextMenu","props","hideContextMenu","colCount","rowCount","activeCellStore","ref","useClickOutside","style","position","handleDialog","isRow","value","handleChange","info","$","toast","i","jsxs","Button","getChartData","range","sheetId","index","endRow","HIDE_CELL","endCol","parseNumber","_value","updateActiveCell","isMerged","cell","defineName","cellSize","cellPosition","fontFamily","defaultFontFamily","fontFamilyStore","isBold","isItalic","isStrike","fontSize","DEFAULT_FONT_SIZE","fontColor","getThemeColor","fillColor","isWrapText","underline","EUnderLine","horizontalAlign","verticalAlign","numberFormat","DEFAULT_FORMAT_CODE","isRight","horAlign","EHorizontalAlign","displayValue","numberFormatUtil","realValue","isDateFormat","getFormatCode","mergeType","MERGE_CELL_LINE_BREAK","EMergeCellType","LINE_BREAK","styleStore","handleStateChange","changeSet","sheetList","sheetListStore","core","canvasSize","showBottomBar","defineNameStore","minX","minY","maxX","maxY","p","scrollSheetToView","computeCanvasSize","scrollbarSize","sizeConfig","dom","size","initCanvas","familyList","initFontFamilyList","mainCanvas","resize","renderCanvas","offEvent","removeEvent","defaultData","BottomBar","setValue","useState","val","MAX_ADD_ROW_THRESHOLD","handleClick","viewSize","sheetViewSizeSet","classnames","FloatElementContextMenu","menuLeft","menuTop","uuid","type","chartType","title","resetResize","originHeight","originWidth","selectData","convertToReference","MAX_NAME_LENGTH","parseReference","sheetName","isSameRange","changeChartTitle","changeChartType","newChartType","Select","CHART_TYPE_LIST","saveAsPicture","extractImageType","saveAs","chartData","React","ResizePosition","INITIAL_STATE","roundPosition","minTop","minLeft","round","lim","l","p2b","n2b","b2n","n2p","map$1","hex","h1","h2","eq","isShort","hexParse","str","len","ret","alpha","f","hexString","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","rgb","hueValue","g","d","max","rgb2hsl","min","calln","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","p1","p2","rotate","deg","hslString","map","names$1","unpack","unpacked","keys","tkeys","j","ok","nk","names","nameParse","RGB_RE","rgbParse","rgbString","to","from","interpolate","rgb1","rgb2","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","Color","obj","color","weight","c1","c2","w2","w1","noop","uid","id","isNullOrUndef","isArray","isObject","isNumberFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","toDimension","callback","fn","args","thisArg","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","source","target","klen","isValidKey","key","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","keyResolvers","o","_splitKey","parts","part","_getKeyResolver","resolveObjectKey","_capitalize","defined","isFunction","setsEqual","_isClickEvent","e","PI","TAU","PITAU","INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","niceNum","roundedRange","niceRange","fraction","_factorize","sqrt","isNumber","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","hi","lo","mid","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","method","base","res","object","unlistenArrayEvents","stub","listeners","_arrayUnique","items","set","requestAnimFrame","throttled","argsToUse","ticking","debounce","delay","timeout","_toLeftRightCenter","align","_alignStartEnd","_textX","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","iScale","_parsed","axis","minDefined","maxDefined","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","changed","atEdge","elasticIn","elasticOut","effects","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","applyLayoutsDefaults","intlCache","getNumberFormat","locale","cacheKey","formatter","formatNumber","num","formatters","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","Ticks","applyScaleDefaults","_ctx","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","context","ctx","targetScope","targetName","scopeObject","targetScopeObject","privateName","local","appliers","apply","toFontString","font","_measureText","gc","longest","string","textWidth","_longestText","arrayOfThings","cache","jlen","thing","nestedThing","gcLen","_alignPixel","chart","pixel","devicePixelRatio","halfWidth","clearCanvas","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","rotation","radius","rad","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","mode","midpoint","_bezierCurveTo","setRenderOpts","opts","decorateText","line","metrics","bottom","yDecoration","drawBackdrop","oldColor","renderText","text","lines","stroke","addRoundedRectPath","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","numberOrZero","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","_addGrace","minmax","grace","beginAtZero","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","_cached","_resolveWithPrefixes","getKeysFromAllScopes","storage","_attachContext","proxy","subProxy","descriptorDefaults","receiver","_resolveWithContext","_scriptable","_indexable","_allKeys","readKey","prefix","needsSubResolver","_proxy","_context","_subProxy","_resolveScriptable","_resolveArray","getValue","_stack","createSubResolver","isIndexable","arr","resolver","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","parsed","EPSILON","getPoint","getValueAxis","indexAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","prev","_isDomSupported","_getParentNode","domNode","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","positions","getPositionedStyle","suffix","pos","useOffsetPos","getCanvasPosition","touches","offsetX","offsetY","box","getRelativePosition","currentDevicePixelRatio","borderBox","paddings","borders","getContainerSize","container","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","supportsEventListenerOptions","passiveSupported","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","restoreTextDirection","propertyFn","normalizeSegment","getSegment","segment","bounds","startBound","endBound","between","normalize","_boundSegment","compare","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","spanGaps","solidSegments","cur","_computeSegments","segmentOptions","splitByStyles","completeLoop","doSplitByStyles","chartContext","baseStyle","readStyle","datasetIndex","prevStyle","addStyle","st","dir","styleChanged","replacer","Animator","anims","date","callbacks","numSteps","remaining","draw","charts","cb","acc","animator","transparent","interpolators","factor","c0","Animation","cfg","currentValue","elapsed","remain","duration","promises","rej","resolved","Animations","config","animationOptions","animatedProps","option","newOptions","resolveTargetOptions","animations","awaitAll","running","animation","properties","anim","scaleClip","scale","allowedOverflow","defaultClip","toClip","getSortedDatasetIndices","filterVisible","metasets","applyStack","stack","dsIndex","singleMode","otherValue","found","convertObjectDataToArray","vScale","iAxisKey","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","updateStacks","iAxis","vAxis","itemStacks","visualValues","getFirstScaleId","scales","createDatasetContext","createDataContext","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","DatasetController","dataset","chooseId","xid","yid","rid","iid","vid","scaleID","_data","resetNewElements","stackChanged","oldStacked","scopeKeys","_stacked","sorted","isNotInOrderComparedToPrev","labels","singleScale","xAxisKey","yAxisKey","parsedValue","otherScale","otherMin","otherMax","_skip","elements","active","drawActiveElementsOnTop","elementType","sharing","transition","sharedOptions","firstOpts","previouslySharedOptions","includeOptions","arg1","arg2","numMeta","numData","move","removed","newCount","getAllScaleValues","visibleMetas","computeMinSampleSize","curr","updateMinAndPrev","computeFitCategoryTraits","ruler","stackCount","thickness","computeFlexCategoryTraits","pixels","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","borderProps","setBorderSkipped","edge","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","bars","reset","horizontal","vpixels","ipixels","dataIndex","currentParsed","iScaleValue","skipNull","barThickness","baseValue","minBarLength","floating","length","head","startPixel","endPixel","halfGrid","maxBarThickness","center","stackIndex","rects","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","DoughnutController","getter","chartArea","arcs","spacing","maxSize","chartWeight","maxRadius","outerRadius","innerRadius","radiusLength","animationOpts","centerX","centerY","animateScale","arc","metaData","total","ringWeightOffset","pointStyle","label","legendItem","legend","LineController","_dataset","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","border","lastPoint","PolarAreaController","minSize","datasetStartAngle","defaultAngle","PieController","RadarController","pointPosition","ScatterController","showLine","abstract","DateAdapterBase","members","adapters","binarySearch","metaset","intersect","_sorted","lookupMethod","evaluateInteractionItems","handler","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","includeInvisible","getNearestRadialItems","evaluationFunc","getNearestCartesianItems","distanceMetric","minDistance","inRange","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","buildLayoutBoxes","centerHorizontal","centerVertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","newHeight","widthChanged","heightChanged","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","same","other","setBoxDims","placeBoxes","userPadding","layoutItem","minPadding","padding","availableWidth","availableHeight","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","BasePlatform","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","isNullOrEmpty","renderHeight","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","nodeListContains","nodeList","createAttachObserver","observer","entries","trigger","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","releaseObserver","createProxyAndListen","DomPlatform","initial","proxies","_detectPlatform","Element","final","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","majorIndices","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","skip","offset","tickLength","maxScale","maxChart","evenMajorSpacing","getEvenSpacing","factors","majorStart","majorEnd","diff","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","tick","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","raw","_userMin","_userMax","_suggestedMin","_suggestedMax","metas","sampleSize","samplingEnabled","reversePixels","numTicks","minRotation","maxRotation","labelRotation","tickWidth","maxLabelDiagonal","labelSizes","maxLabelWidth","maxLabelHeight","titleOpts","gridOpts","display","isHorizontal","titleHeight","widest","highest","tickPadding","angleRadians","cos","sin","labelHeight","labelWidth","isRotated","labelsBelowTicks","offsetLeft","offsetRight","paddingLeft","paddingRight","paddingTop","paddingBottom","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","lineHeight","nestedLabel","valueAt","idx","decimal","optionTicks","rot","grid","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineWidth","lineColor","borderDash","borderDashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","mirror","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","backgroundColor","drawLine","lastLineWidth","renderTextOptions","tz","gz","bz","axisID","TypedRegistry","override","parentScope","isIChartComponent","registerDefaults","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","typedRegistry","arg","reg","itemReg","registry","component","camelMethod","PluginService","hook","filter","descriptor","plugin","all","plugins","allPlugins","createDescriptors","previousDescriptors","localIds","getOpts","pluginOpts","getIndexAxis","datasetDefaults","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","datasetType","mainScope","resetCache","_scopeCache","keyLists","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","isScriptable","scriptable","indexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onAnimationProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart$1","invalidatePlugins","userConfig","initialCanvas","existingChart","maintainAspectRatio","_aspectRatio","newSize","newRatio","scalesOptions","axisOptions","scaleOpts","updated","isRadial","scaleType","scaleClass","hasUpdated","datasets","newControllers","ControllerClass","datasetElementType","dataElementType","animsDisabled","_active","_lastEvent","existingEvents","newEvents","_hiddenIndices","changes","_dataChanges","datasetCount","makeSet","noArea","layers","clip","useClip","visible","platform","_add","_remove","detached","attached","enabled","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","Chart","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","rThetaToXY","theta","pathArc","circular","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStart","outerEnd","innerStart","innerEnd","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","drawBorder","borderWidth","borderJoinStyle","inner","ArcElement","chartX","chartY","rAdjust","_circumference","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineTo","getLineMethod","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","_getInterpolationMethod","strokePathWithCache","path","strokePathDirect","segmentMethod","usePath2D","LineElement","_interpolate","interpolated","inRange$1","PointElement","mouseX","mouseY","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","enableBorderRadius","maxR","enableBorder","boundingRects","skipX","skipY","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","borderColor","outer","addRectPath","_segments","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_loop","_shouldApplyFill","_resolveTarget","propagate","fill","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","_args","getBoxSize","labelOpts","boxHeight","boxWidth","itemsEqual","Legend","legendItems","labelFont","itemHeight","hitboxes","lineWidths","totalHeight","_itemHeight","columnSizes","heightLimit","totalWidth","currentColWidth","currentColHeight","calculateItemSize","rtlHelper","hitbox","defaultColor","halfFontSize","cursor","drawLegendBox","drawOptions","yBoxTop","xBoxLeft","borderRadius","fillText","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","sameItem","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","ci","usePointStyle","useBorderRadius","Title","textSize","fontOpts","createTitle","plugin_title","titleBlock","positioners","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","bodyLineHeight","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","caretSize","caretPadding","topLeft","topRight","bottomLeft","bottomRight","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","labelCount","tooltipItem","invokeCallbackWithFallback","Tooltip","beforeTitle","afterTitle","bodyItems","scoped","beforeFooter","afterFooter","labelColors","labelPointStyles","labelTextColors","positionAndSize","backgroundPoint","tooltipPoint","caretPosition","ptX","ptY","x3","y3","titleSpacing","labelColor","labelPointStyle","colorX","rtlColorX","yOffSet","colorY","outerX","innerX","bodySpacing","bodyAlign","displayColors","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","tooltipSize","animX","animY","opacity","hasTooltipContent","positionChanged","caretX","caretY","plugin_tooltip","addIfString","addedLabels","findOrAddLabel","_getLabelForValue","CategoryScale","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","setMin","setMax","minSign","maxSign","stepSize","numericGeneratorOptions","LinearScale","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","pointLabelOpts","additionalAngle","plFont","hLimits","vLimits","updateLimits","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","centerPointLabels","drawPointLabelBox","backdropColor","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","scaledDistance","pointLabel","distanceFromCenter","angleLines","INTERVALS","UNITS","sorter","parse","adapter","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","major","ticksFromTimestamps","TimeScale","_applyBounds","timeOpts","minor","weekday","hasWeekday","format","formats","fmt","minorFormat","majorFormat","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","displayFormats","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","ChartJS","ChartComponent","redraw","updateMode","canvasRef","chartRef","destroyChart","renderChart","createTypedChart","Line","Bar","Pie","Scatter","Radar","PolarArea","radarOptions","radarPlugins","Filler","colorOffset","getColor","COLOR_PICKER_COLOR_LIST","commonData","_","FloatElement","imageAngle","pointerDown","resizeDown","contextMenuPosition","setContextMenuPosition","DEFAULT_POSITION","handleContextMenu","children","Icon","FloatElementContainer","floatElementList","activeUuid","setPosition","updateSize","old","newTop","newLeft","handleResizePointerDown","handleMaskPointerDown","isActive","DOUBLE_CLICK_TIME","MainHandler","timeStamp","checkFocus","setActiveCellValue","FilterHandler","FILTER_RECT_SIZE","handlerList","getData","cellInfo","cellValue","isUndefined","checked","FilterModal","hide","dataList","setDataList","oldList","Modal","getEventData","clientX","clientY","CanvasContainer","modalState","setModalState","menuPosition","setMenuPosition","handlePointerDown"],"mappings":"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","x_google_ignoreList":[12,13,14]}