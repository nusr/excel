{"version":3,"file":"Chart-DF_r5jSw.js","sources":["../../node_modules/.pnpm/@kurkle+color@0.3.4/node_modules/@kurkle/color/dist/color.esm.js","../../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/dist/chunks/helpers.segment.js","../../node_modules/.pnpm/chart.js@4.4.6/node_modules/chart.js/dist/chart.js","../../src/containers/FloatElement/Chart.tsx"],"sourcesContent":["/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.6\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.6\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.6\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import React, { useRef, useEffect, memo } from 'react';\nimport {\n  Chart as ChartJS,\n  BarController,\n  LineController,\n  PieController,\n  Filler,\n  ScatterController,\n  RadarController,\n  PolarAreaController,\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport type { ChartType, DefaultDataPoint, ChartComponentLike } from 'chart.js';\nimport {\n  COLOR_PICKER_COLOR_LIST,\n  parseNumber,\n  deepEqual,\n  getThemeColor,\n} from '@/util';\nimport type { FloatElementItem } from '@/containers/store';\nimport { ChartProps } from '@/types';\nimport styles from './chart.module.css';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend,\n);\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(props: ChartProps<TType, TData, TLabel>) {\n  const {\n    height = 400,\n    width = 200,\n    type,\n    options,\n    plugins,\n    data,\n    redraw,\n    updateMode,\n    uuid,\n  } = props as ChartProps;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS | null>();\n\n  useEffect(() => {\n    if (!chartRef.current) {\n      return;\n    }\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      if (!deepEqual(chartRef.current.data, data)) {\n        chartRef.current.data = data;\n      }\n      if (options && !deepEqual(chartRef.current.options, options)) {\n        chartRef.current.options = options;\n      }\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, updateMode, data, options]);\n\n  useEffect(() => {\n    renderChart();\n    return () => destroyChart();\n  }, []);\n\n  const renderChart = () => {\n    if (!canvasRef.current) {\n      return;\n    }\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data,\n      options,\n      plugins,\n    });\n  };\n  const destroyChart = () => {\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n  return (\n    <canvas\n      ref={canvasRef}\n      role=\"img\"\n      height={height}\n      width={width}\n      data-uuid={uuid}\n      className={styles['chart']}\n      data-testid=\"float-element-chart\"\n    />\n  );\n}\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  controller: ChartComponentLike,\n) {\n  ChartJS.register(controller);\n\n  return memo((props: Omit<ChartProps<T>, 'type'>) => (\n    <ChartComponent {...props} type={type} />\n  ));\n}\n\nconst Line = createTypedChart('line', LineController);\nconst Bar = createTypedChart('bar', BarController);\nconst Pie = createTypedChart('pie', PieController);\nconst Scatter = createTypedChart('scatter', ScatterController);\nconst Radar = createTypedChart('radar', RadarController);\nconst PolarArea = createTypedChart('polarArea', PolarAreaController);\n\nconst radarOptions = {\n  elements: {\n    line: {\n      borderWidth: 3,\n    },\n  },\n};\nconst radarPlugins = [Filler];\n\nconst colorOffset = 5;\n\nfunction getColor(i: number): string {\n  const index = Math.floor(i) % COLOR_PICKER_COLOR_LIST.length;\n  return COLOR_PICKER_COLOR_LIST[index];\n}\n\nconst Chart: React.FunctionComponent<FloatElementItem> = memo((props) => {\n  const { chartType, width, height, labels, datasets, uuid, title } = props;\n  const commonData = {\n    labels,\n    datasets: datasets.map((v, i) => ({\n      ...v,\n      backgroundColor: getColor(i * colorOffset),\n    })),\n  };\n  const extra = {\n    width,\n    height,\n    redraw: false,\n    uuid,\n    options: {\n      plugins: {\n        title: {\n          display: true,\n          text: title,\n          padding: {\n            top: 16,\n            bottom: 16,\n          },\n          font: {\n            size: 14,\n            weight: 'normal' as const,\n          },\n        },\n        legend: {\n          display: true,\n          position: 'bottom' as const,\n        },\n      },\n    },\n  };\n  let node: React.ReactNode = undefined;\n  if (chartType === 'line') {\n    node = <Line {...extra} data={commonData} />;\n  } else if (chartType === 'bar') {\n    node = <Bar {...extra} data={commonData} />;\n  } else if (chartType === 'pie') {\n    node = <Pie {...extra} data={commonData} />;\n  } else if (chartType === 'radar') {\n    const data = {\n      labels,\n      datasets: datasets.map((v, i) => {\n        const c = getColor(i * colorOffset + 4);\n        return {\n          ...v,\n          fill: true,\n          borderColor: c,\n          pointBackgroundColor: c,\n          pointBorderColor: getThemeColor('white'),\n          pointHoverBackgroundColor: getThemeColor('white'),\n          pointHoverBorderColor: c,\n          backgroundColor: getColor(i * colorOffset),\n        };\n      }),\n    };\n    node = (\n      <Radar\n        {...extra}\n        options={radarOptions}\n        plugins={radarPlugins}\n        data={data}\n      />\n    );\n  } else if (chartType === 'scatter') {\n    const data = {\n      datasets: datasets.map((v, i) => {\n        return {\n          label: v.label,\n          data: v.data.map((t, i) => ({ y: t, x: parseNumber(labels[i])[1] })),\n          backgroundColor: getColor(i * colorOffset),\n        };\n      }),\n    };\n    node = <Scatter {...extra} data={data} />;\n  } else if (chartType === 'polarArea') {\n    const data = {\n      labels,\n      datasets: datasets.map((v) => {\n        const list = Array.from({ length: v.data.length })\n          .fill('')\n          .map((_, i) => getColor(i * colorOffset));\n        return {\n          ...v,\n          backgroundColor: list,\n        };\n      }),\n    };\n    node = <PolarArea {...extra} data={data} />;\n  } else {\n    console.error('not support chart type', chartType);\n  }\n  return node;\n});\n\nChart.displayName = 'Chart';\n\nexport default Chart;\n"],"names":["round","v","lim","l","h","p2b","n2b","b2n","n2p","map$1","hex","h1","b","h2","eq","isShort","hexParse","str","len","ret","alpha","a","f","hexString","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","r","g","d","max","rgb2hsl","min","calln","c","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","p1","p2","rotate","deg","hslString","map","names$1","unpack","unpacked","keys","tkeys","j","ok","nk","names","nameParse","RGB_RE","rgbParse","rgbString","to","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","Color","type","obj","color","weight","c1","c2","w2","p","w1","val","noop","uid","id","isNullOrUndef","value","isArray","isObject","isNumberFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","toDimension","callback","fn","args","thisArg","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","source","target","klen","isValidKey","key","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","keyResolvers","o","_splitKey","parts","part","_getKeyResolver","resolveObjectKey","_capitalize","defined","isFunction","setsEqual","item","_isClickEvent","e","PI","TAU","PITAU","INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","x","y","epsilon","niceNum","range","roundedRange","niceRange","fraction","_factorize","result","sqrt","isNumber","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","index","hi","lo","mid","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","method","base","res","object","unlistenArrayEvents","stub","listeners","_arrayUnique","items","set","requestAnimFrame","throttled","argsToUse","ticking","debounce","delay","timeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","iScale","_parsed","axis","minDefined","maxDefined","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","changed","atEdge","elasticIn","elasticOut","effects","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","name","applyLayoutsDefaults","intlCache","getNumberFormat","locale","cacheKey","formatter","formatNumber","num","formatters","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","remain","Ticks","applyScaleDefaults","_ctx","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","context","ctx","targetScope","targetName","scopeObject","targetScopeObject","privateName","local","appliers","apply","toFontString","font","_measureText","data","gc","longest","string","textWidth","_longestText","arrayOfThings","cache","jlen","thing","nestedThing","gcLen","_alignPixel","chart","pixel","width","devicePixelRatio","halfWidth","clearCanvas","canvas","drawPoint","drawPointLegend","xOffset","yOffset","size","cornerRadius","xOffsetW","yOffsetW","style","rotation","radius","rad","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","mode","midpoint","_bezierCurveTo","setRenderOpts","opts","decorateText","line","metrics","top","bottom","yDecoration","drawBackdrop","oldColor","renderText","text","lines","stroke","addRoundedRectPath","rect","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","_addGrace","minmax","grace","beginAtZero","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","_cached","_resolveWithPrefixes","getKeysFromAllScopes","storage","_attachContext","proxy","subProxy","descriptorDefaults","receiver","_resolveWithContext","_scriptable","_indexable","_allKeys","readKey","prefix","needsSubResolver","_proxy","_context","_subProxy","_resolveScriptable","_resolveArray","getValue","_stack","createSubResolver","isIndexable","arr","resolver","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","parsed","EPSILON","getPoint","getValueAxis","indexAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","prev","_isDomSupported","_getParentNode","domNode","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","getCanvasPosition","touches","offsetX","offsetY","box","getRelativePosition","event","currentDevicePixelRatio","borderBox","paddings","borders","height","getContainerSize","maxWidth","maxHeight","container","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","supportsEventListenerOptions","passiveSupported","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","restoreTextDirection","propertyFn","normalizeSegment","getSegment","segment","bounds","startBound","endBound","between","normalize","_boundSegment","compare","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","spanGaps","solidSegments","cur","_computeSegments","segmentOptions","splitByStyles","completeLoop","doSplitByStyles","chartContext","baseStyle","readStyle","datasetIndex","prevStyle","addStyle","st","dir","styleChanged","replacer","Animator","anims","date","callbacks","numSteps","remaining","draw","charts","cb","acc","animator","transparent","interpolators","factor","c0","Animation","cfg","currentValue","elapsed","duration","promises","rej","resolved","Animations","config","animationOptions","animatedProps","option","newOptions","resolveTargetOptions","animations","awaitAll","running","animation","properties","anim","scaleClip","scale","allowedOverflow","defaultClip","toClip","getSortedDatasetIndices","filterVisible","metasets","applyStack","stack","dsIndex","singleMode","otherValue","found","convertObjectDataToArray","vScale","iAxisKey","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","updateStacks","controller","iAxis","vAxis","itemStacks","visualValues","getFirstScaleId","scales","createDatasetContext","createDataContext","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","DatasetController","dataset","chooseId","xid","yid","rid","iid","vid","scaleID","_data","resetNewElements","stackChanged","oldStacked","scopeKeys","_stacked","sorted","isNotInOrderComparedToPrev","labels","singleScale","xAxisKey","yAxisKey","parsedValue","otherScale","otherMin","otherMax","_skip","elements","active","drawActiveElementsOnTop","elementType","sharing","transition","sharedOptions","firstOpts","previouslySharedOptions","includeOptions","arg1","arg2","numMeta","numData","move","removed","newCount","__publicField","getAllScaleValues","visibleMetas","computeMinSampleSize","curr","updateMinAndPrev","computeFitCategoryTraits","ruler","stackCount","thickness","computeFlexCategoryTraits","pixels","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","borderProps","setBorderSkipped","edge","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","bars","reset","horizontal","vpixels","ipixels","dataIndex","currentParsed","iScaleValue","skipNull","barThickness","baseValue","minBarLength","floating","length","head","startPixel","endPixel","halfGrid","maxBarThickness","center","stackIndex","rects","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","getter","chartArea","arcs","spacing","maxSize","chartWeight","maxRadius","outerRadius","innerRadius","radiusLength","animationOpts","centerX","centerY","animateScale","arc","metaData","total","ringWeightOffset","pointStyle","label","legendItem","legend","LineController","_dataset","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","border","lastPoint","PolarAreaController","minSize","datasetStartAngle","defaultAngle","PieController","RadarController","pointPosition","ScatterController","showLine","abstract","DateAdapterBase","members","adapters","binarySearch","metaset","intersect","_sorted","lookupMethod","evaluateInteractionItems","position","handler","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","includeInvisible","getNearestRadialItems","evaluationFunc","getNearestCartesianItems","distanceMetric","minDistance","inRange","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","buildLayoutBoxes","centerHorizontal","centerVertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","newHeight","widthChanged","heightChanged","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","same","other","setBoxDims","placeBoxes","userPadding","layoutItem","minPadding","padding","availableWidth","availableHeight","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","BasePlatform","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","isNullOrEmpty","initCanvas","renderHeight","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","nodeListContains","nodeList","createAttachObserver","observer","entries","trigger","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","releaseObserver","createProxyAndListen","DomPlatform","initial","proxies","_detectPlatform","Element","final","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","majorIndices","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","skip","offset","tickLength","maxScale","maxChart","evenMajorSpacing","getEvenSpacing","factors","majorStart","majorEnd","diff","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","tick","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","raw","_userMin","_userMax","_suggestedMin","_suggestedMax","metas","sampleSize","samplingEnabled","reversePixels","numTicks","minRotation","maxRotation","labelRotation","tickWidth","maxLabelDiagonal","labelSizes","maxLabelWidth","maxLabelHeight","titleOpts","gridOpts","display","isHorizontal","titleHeight","widest","highest","tickPadding","angleRadians","cos","sin","labelHeight","labelWidth","isRotated","labelsBelowTicks","offsetLeft","offsetRight","paddingLeft","paddingRight","paddingTop","paddingBottom","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","lineHeight","nestedLabel","valueAt","idx","decimal","optionTicks","rot","grid","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineWidth","lineColor","borderDash","borderDashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","mirror","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","backgroundColor","drawLine","lastLineWidth","renderTextOptions","title","tz","gz","bz","axisID","fontSize","TypedRegistry","override","parentScope","isIChartComponent","registerDefaults","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","typedRegistry","arg","reg","itemReg","registry","component","camelMethod","PluginService","hook","filter","descriptor","plugin","all","plugins","allPlugins","createDescriptors","previousDescriptors","localIds","getOpts","pluginOpts","getIndexAxis","datasetDefaults","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","datasetType","mainScope","resetCache","_scopeCache","keyLists","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","isScriptable","scriptable","indexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onAnimationProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart$1","_a","invalidatePlugins","userConfig","initialCanvas","existingChart","maintainAspectRatio","_aspectRatio","newSize","newRatio","scalesOptions","axisOptions","scaleOpts","updated","isRadial","scaleType","scaleClass","hasUpdated","datasets","newControllers","ControllerClass","datasetElementType","dataElementType","animsDisabled","_active","_lastEvent","existingEvents","newEvents","_hiddenIndices","changes","_dataChanges","datasetCount","makeSet","changeSet","noArea","layers","clip","useClip","visible","platform","_add","_remove","detached","attached","enabled","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","Chart","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","rThetaToXY","theta","pathArc","circular","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStart","outerEnd","innerStart","innerEnd","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","drawBorder","borderWidth","borderJoinStyle","inner","ArcElement","chartX","chartY","rAdjust","_circumference","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineTo","getLineMethod","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","_getInterpolationMethod","strokePathWithCache","path","strokePathDirect","segmentMethod","usePath2D","LineElement","_interpolate","interpolated","inRange$1","PointElement","mouseX","mouseY","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","enableBorderRadius","maxR","enableBorder","boundingRects","skipX","skipY","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","borderColor","outer","addRectPath","_segments","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_loop","_shouldApplyFill","_resolveTarget","propagate","fill","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","_args","getBoxSize","labelOpts","boxHeight","boxWidth","itemsEqual","Legend","legendItems","labelFont","itemHeight","hitboxes","lineWidths","totalHeight","row","_itemHeight","columnSizes","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","rtlHelper","hitbox","defaultColor","halfFontSize","cursor","drawLegendBox","drawOptions","yBoxTop","xBoxLeft","borderRadius","fillText","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","sameItem","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","ci","usePointStyle","useBorderRadius","Title","textSize","fontOpts","createTitle","plugin_title","titleBlock","positioners","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","bodyLineHeight","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","caretSize","caretPadding","topLeft","topRight","bottomLeft","bottomRight","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","labelCount","tooltipItem","invokeCallbackWithFallback","Tooltip","beforeTitle","afterTitle","bodyItems","scoped","beforeFooter","afterFooter","labelColors","labelPointStyles","labelTextColors","positionAndSize","backgroundPoint","tooltipPoint","caretPosition","ptX","ptY","x3","y3","titleSpacing","labelColor","labelPointStyle","colorX","rtlColorX","yOffSet","colorY","outerX","innerX","bodySpacing","bodyAlign","displayColors","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","tooltipSize","animX","animY","opacity","hasTooltipContent","positionChanged","caretX","caretY","plugin_tooltip","addIfString","addedLabels","findOrAddLabel","_getLabelForValue","CategoryScale","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","setMin","setMax","minSign","maxSign","stepSize","numericGeneratorOptions","LinearScale","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","pointLabelOpts","additionalAngle","plFont","hLimits","vLimits","updateLimits","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","centerPointLabels","drawPointLabelBox","backdropColor","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","scaledDistance","pointLabel","distanceFromCenter","angleLines","INTERVALS","UNITS","sorter","parse","adapter","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","major","ticksFromTimestamps","TimeScale","_applyBounds","timeOpts","minor","weekday","hasWeekday","format","formats","fmt","minorFormat","majorFormat","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","displayFormats","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","ChartJS","ChartComponent","redraw","updateMode","uuid","canvasRef","useRef","chartRef","useEffect","destroyChart","renderChart","deepEqual","jsx","createTypedChart","memo","Line","Bar","Pie","Scatter","Radar","PolarArea","radarOptions","radarPlugins","Filler","colorOffset","getColor","COLOR_PICKER_COLOR_LIST","chartType","commonData","getThemeColor","parseNumber","list","_"],"mappings":"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","x_google_ignoreList":[0,1,2]}