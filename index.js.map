{
  "version": 3,
  "sources": ["../src/index.ts", "../src/util/dpr.ts", "../src/util/style.ts", "../src/util/assert.ts", "../src/util/constant.ts", "../src/util/util.ts", "../src/util/convert.ts", "../src/util/classnames.ts", "../src/util/range.ts", "../src/util/reference.ts", "../src/util/debug.ts", "../src/util/isSupportFontFamily.ts", "../src/util/copy.ts", "../src/util/lodash.ts", "../src/util/theme/size.ts", "../src/util/theme/color.ts", "../src/util/theme/index.ts", "../src/util/font.ts", "../src/util/event.ts", "../src/react/dom.ts", "../src/react/h.ts", "../src/react/init.ts", "../src/react/modules/attributes.ts", "../src/react/modules/class.ts", "../src/react/modules/dataset.ts", "../src/react/modules/event.ts", "../src/react/modules/props.ts", "../src/react/modules/style.ts", "../src/react/index.ts", "../src/canvas/util.ts", "../src/canvas/Main.ts", "../src/canvas/shortcut.ts", "../src/canvas/event.ts", "../src/canvas/constant.ts", "../src/canvas/Content.ts", "../src/containers/canvas/index.ts", "../src/containers/components/Button/index.ts", "../src/containers/components/Github/index.ts", "../src/containers/components/BaseIcon/icon.ts", "../src/containers/components/BaseIcon/BaseIcon.ts", "../src/containers/components/BaseIcon/FillColorIcon.ts", "../src/containers/components/BaseIcon/index.ts", "../src/containers/components/Select/index.ts", "../src/containers/components/ColorPicker/index.ts", "../src/containers/components/Dialog/index.ts", "../src/containers/ContextMenu/index.ts", "../src/containers/FormulaBar/FormulaEditor.ts", "../src/containers/FormulaBar/index.ts", "../src/containers/ToolBar/index.ts", "../src/containers/SheetBar/SheetBarContextMenu.ts", "../src/containers/SheetBar/index.ts", "../src/containers/index.ts", "../src/controller/Controller.ts", "../src/formula/token.ts", "../src/formula/formula/error.ts", "../src/formula/formula/text.ts", "../src/formula/formula/math.ts", "../src/formula/formula/index.ts", "../src/formula/scanner.ts", "../src/formula/expression.ts", "../src/formula/parser.ts", "../src/formula/interpreter.ts", "../src/formula/eval.ts", "../src/model/Model.ts", "../src/model/mockModel.ts", "../src/model/History.ts", "../src/init.ts"],
  "sourcesContent": ["import { render } from './react';\nimport { App } from './containers';\nimport { DEFAULT_STORE_VALUE } from './util';\nimport {\n  initCanvas,\n  initController,\n  initTheme,\n  initFontFamilyList,\n} from './init';\nimport './global.css';\nimport './containers/components/index.css';\nimport './containers/index.css';\n\nexport const initExcel = (containerDom: HTMLDivElement) => {\n  const fontFamilyList = initFontFamilyList();\n\n  initTheme(document.documentElement);\n  const controller = initController();\n  const stateValue = new Proxy(DEFAULT_STORE_VALUE, {\n    set(obj, prop, value) {\n      const res = Reflect.set(obj, prop, value);\n      setState();\n      return res;\n    },\n  });\n\n  const setState = () => {\n    render(containerDom, App(stateValue, controller));\n  };\n  stateValue.fontFamilyList = fontFamilyList;\n  setState();\n  return initCanvas(stateValue, controller);\n};\n", "export function dpr(data = window.devicePixelRatio): number {\n  return Math.max(Math.floor(data || 1), 1);\n}\n\nexport function npx(px: number): number {\n  return Math.floor(px * dpr());\n}\n\nexport function thinLineWidth(): number {\n  return 1;\n}\n\nexport function isMac() {\n  return navigator.userAgent.indexOf('Mac OS X') > -1;\n}\n", "/**\n * font-style:  none | normal | italic | oblique\n * font-variant none | normal | small-caps // \u4F5C\u7528\u4E0D\u5927\n * font-weight  none | normal | bold | \u6570\u5B57\n * font-size\n * line-height\n * font-family\n * e.g italic bold 14px/16px sans-serif;\n */\nimport { npx } from './dpr';\nimport { EUnderLine, StyleType } from '@/types';\n\nexport const DEFAULT_FONT_SIZE = 11;\nexport const DEFAULT_FONT_COLOR = '#333333';\nexport const ERROR_FORMULA_COLOR = '#ff0000';\nexport const DEFAULT_FILL_COLOR = 'transparent';\nexport const MUST_FONT_FAMILY = 'sans-serif';\n\nexport const FONT_SIZE_LIST = [\n  6,\n  8,\n  9,\n  10,\n  DEFAULT_FONT_SIZE,\n  12,\n  14,\n  16,\n  18,\n  20,\n  22,\n  24,\n  26,\n  28,\n  36,\n  48,\n  72,\n];\n\nexport function makeFont(\n  fontStyle: 'none' | 'normal' | 'italic' | 'oblique' = 'normal',\n  fontWeight = 'normal',\n  fontSize = 12,\n  fontFamily: string = '',\n): string {\n  const temp = `${fontStyle} ${fontWeight} ${fontSize}px `;\n  if (!fontFamily) {\n    return temp + MUST_FONT_FAMILY;\n  }\n  return `${temp}${fontFamily},${MUST_FONT_FAMILY}`;\n}\n\nexport const DEFAULT_FONT_CONFIG = makeFont(\n  undefined,\n  '500',\n  npx(DEFAULT_FONT_SIZE),\n);\n\nexport function convertCanvasStyleToString(style: Partial<StyleType>): string {\n  let result = '';\n  if (style.fontColor) {\n    result += `color:${style.fontColor};`;\n  }\n  if (style.fillColor) {\n    result += `background-color:${style.fillColor};`;\n  }\n  if (style.fontSize) {\n    result += `font-size:${style.fontSize}pt;`;\n  }\n  if (style.fontFamily) {\n    result += `font-family:${style.fontFamily};`;\n  }\n  if (style.isItalic) {\n    result += `font-style:italic;`;\n  }\n  if (style.isBold) {\n    result += `font-weight:700;`;\n  }\n  if (style.isWrapText) {\n    result += `white-space:normal;`;\n  }\n  if (style.underline) {\n    result += 'text-decoration:underline;';\n    if (style.underline === EUnderLine.DOUBLE) {\n      result += 'text-decoration-style: double;';\n    } else {\n      result += 'text-decoration-style: single;';\n    }\n  }\n\n  return result;\n}\n\nfunction convertCSSStyleToCanvasStyle(\n  style: Partial<CSSStyleDeclaration>,\n  selectorCSSText: string,\n): Partial<StyleType> {\n  const {\n    color,\n    backgroundColor,\n    fontSize,\n    fontFamily,\n    fontStyle,\n    fontWeight,\n    whiteSpace,\n    textDecoration,\n  } = style;\n  const result: Partial<StyleType> = {};\n  if (color) {\n    result.fontColor = color;\n  }\n  if (backgroundColor) {\n    result.fillColor = backgroundColor;\n  }\n  if (fontSize) {\n    const size = parseInt(fontSize, 10);\n    if (!isNaN(size)) {\n      result.fontSize = size;\n    }\n  }\n  if (fontFamily) {\n    result.fontFamily = fontFamily;\n  }\n  if (fontStyle === 'italic') {\n    result.isItalic = true;\n  }\n  if (fontWeight && ['700', '800', '900', 'bold'].includes(fontWeight)) {\n    result.isBold = true;\n  }\n  if (\n    whiteSpace &&\n    [\n      'normal',\n      'pre-wrap',\n      'pre-line',\n      'break-spaces',\n      'revert',\n      'unset',\n    ].includes(whiteSpace)\n  ) {\n    result.isWrapText = true;\n  }\n  if (textDecoration === 'underline') {\n    result.underline = EUnderLine.SINGLE;\n    if (selectorCSSText.includes('text-underline-style:double')) {\n      result.underline = EUnderLine.DOUBLE;\n    }\n  }\n  return result;\n}\n\nexport function parseStyle(\n  styleList: NodeListOf<HTMLStyleElement>,\n  selector: string,\n): Partial<StyleType> {\n  for (const item of styleList) {\n    if (!item.sheet?.cssRules) {\n      continue;\n    }\n    const cssText = item.textContent || '';\n    for (const rule of item.sheet?.cssRules) {\n      if (rule instanceof CSSStyleRule && rule.selectorText === selector) {\n        const startIndex = cssText.indexOf(selector);\n        let endIndex = startIndex;\n        while (cssText[endIndex] !== '}' && endIndex < cssText.length) {\n          endIndex++;\n        }\n        let plainText = '';\n        if (startIndex >= 0) {\n          plainText = cssText\n            .slice(startIndex + selector.length, endIndex)\n            .replace(/\\s/g, '');\n        }\n        return convertCSSStyleToCanvasStyle(rule.style, plainText);\n      }\n    }\n  }\n  return {};\n}\n", "export function assert(\n  condition: boolean,\n  message = 'assert error',\n  env = process.env.NODE_ENV,\n): asserts condition {\n  if (!condition) {\n    if (env !== 'test') {\n      window.alert(message);\n    }\n    if (env === 'production') {\n      console.error(message);\n      return;\n    }\n    throw new Error(message);\n  }\n}\n", "import { ErrorTypes, StoreValue } from '@/types';\nexport const SHEET_NAME_PREFIX = 'Sheet';\nexport const DEFAULT_ROW_COUNT = 200;\nexport const DEFAULT_COL_COUNT = 30;\nexport const TEST_ID_KEY = 'data-test-id';\nexport const SCROLL_SIZE = 30;\nexport const BOTTOM_BUFF = 200;\nexport const DEBUG_COLOR_LIST = [\n  '#0000CC',\n  '#0000FF',\n  '#0033CC',\n  '#0033FF',\n  '#0066CC',\n  '#0066FF',\n  '#0099CC',\n  '#0099FF',\n  '#00CC00',\n  '#00CC33',\n  '#00CC66',\n  '#00CC99',\n  '#00CCCC',\n  '#00CCFF',\n  '#3300CC',\n  '#3300FF',\n  '#3333CC',\n  '#3333FF',\n  '#3366CC',\n  '#3366FF',\n  '#3399CC',\n  '#3399FF',\n  '#33CC00',\n  '#33CC33',\n  '#33CC66',\n  '#33CC99',\n  '#33CCCC',\n  '#33CCFF',\n  '#6600CC',\n  '#6600FF',\n  '#6633CC',\n  '#6633FF',\n  '#66CC00',\n  '#66CC33',\n  '#9900CC',\n  '#9900FF',\n  '#9933CC',\n  '#9933FF',\n  '#99CC00',\n  '#99CC33',\n  '#CC0000',\n  '#CC0033',\n  '#CC0066',\n  '#CC0099',\n  '#CC00CC',\n  '#CC00FF',\n  '#CC3300',\n  '#CC3333',\n  '#CC3366',\n  '#CC3399',\n  '#CC33CC',\n  '#CC33FF',\n  '#CC6600',\n  '#CC6633',\n  '#CC9900',\n  '#CC9933',\n  '#CCCC00',\n  '#CCCC33',\n  '#FF0000',\n  '#FF0033',\n  '#FF0066',\n  '#FF0099',\n  '#FF00CC',\n  '#FF00FF',\n  '#FF3300',\n  '#FF3333',\n  '#FF3366',\n  '#FF3399',\n  '#FF33CC',\n  '#FF33FF',\n  '#FF6600',\n  '#FF6633',\n  '#FF9900',\n  '#FF9933',\n  '#FFCC00',\n  '#FFCC33',\n];\nexport const MAX_PARAMS_COUNT = 256;\n\nexport const ERROR_SET = new Set<ErrorTypes>([\n  '#ERROR!',\n  '#DIV/0!',\n  '#NULL!',\n  '#NUM!',\n  '#REF!',\n  '#VALUE!',\n  '#N/A',\n  '#NAME?',\n]);\n\nexport const DEFAULT_STORE_VALUE: StoreValue = {\n  sheetList: [],\n  currentSheetId: '',\n  isCellEditing: false,\n  activeCell: {\n    value: '',\n    style: {},\n    row: 0,\n    col: 0,\n    left: -999,\n    top: -999,\n    width: 0,\n    height: 0,\n  },\n  fontFamilyList: [],\n  contextMenuPosition: undefined,\n  sheetBarContextMenuLeft: undefined,\n  isSheetNameEditing: false,\n};\n", "import { SHEET_NAME_PREFIX } from './constant';\nimport type { WorksheetType } from '@/types';\nexport const isString = (value: any): boolean => {\n  return typeof value === 'string';\n};\nexport function isNumber(value: any): boolean {\n  if (typeof value === 'number' && !window.isNaN(value)) {\n    return true;\n  }\n  if (typeof value !== 'string') {\n    return false;\n  }\n  const temp = parseFloat(value);\n  return !window.isNaN(temp);\n}\n\nexport function parseNumber(value: any): number {\n  if (isNumber(value)) {\n    return Number(value);\n  }\n  return 0;\n}\n\nexport function parseNumberArray(list: any[]): number[] {\n  const result: number[] = [];\n  for (let i = 0; i < list.length; i++) {\n    const temp = parseNumber(list[i]);\n    if (!window.isNaN(temp)) {\n      result.push(temp);\n    }\n  }\n  return result;\n}\n\nexport function getListMaxNum(list: string[] = []): number {\n  const idList: number[] = list\n    .map((item) => {\n      if (isNumber(item)) {\n        return parseInt(item, 10);\n      }\n      return 0;\n    })\n    .filter((v) => !isNaN(v));\n  return Math.max(Math.max(...idList), 0);\n}\n\nexport function getDefaultSheetInfo(\n  list: WorksheetType[] = [],\n): Pick<WorksheetType, 'name' | 'sheetId'> {\n  const sheetId = getListMaxNum(list.map((item) => item.sheetId)) + 1;\n  return {\n    name: `${SHEET_NAME_PREFIX}${sheetId}`,\n    sheetId: String(sheetId),\n  };\n}\n\nexport function isTestEnv(): boolean {\n  return process.env.NODE_ENV === 'test';\n}\n\nexport function isDevEnv(): boolean {\n  return process.env.NODE_ENV === 'development';\n}\n", "/**\n * convert column name to number. e.g A -> 0, a -> 0\n * @param { string } columnName\n */\nexport function columnNameToInt(columnName = \"\"): number {\n  const temp = columnName.toUpperCase();\n  let num = 0;\n  for (let i = 0; i < temp.length; i++) {\n    num = temp.charCodeAt(i) - 64 + num * 26;\n  }\n  return num - 1;\n}\n/**\n * convert number to column name 0 -> A\n * @param { string } number\n */\nexport function intToColumnName(temp: number): string {\n  const num = temp + 1;\n  let columnName = \"\";\n  let dividend = Math.floor(Math.abs(num));\n  let rest;\n\n  while (dividend > 0) {\n    rest = (dividend - 1) % 26;\n    columnName = String.fromCharCode(65 + rest) + columnName;\n    dividend = Math.floor((dividend - rest) / 26);\n  }\n  return columnName.toUpperCase();\n}\n\nexport function rowLabelToInt(label: string): number {\n  let result = parseInt(label, 10);\n  if (window.isNaN(result)) {\n    result = -1;\n  } else {\n    result = Math.max(result - 1, -1);\n  }\n  return result;\n}\n\nexport function intToRowLabel(row: number): string {\n  if (row >= 0) {\n    return `${row + 1}`;\n  }\n  return \"\";\n}\n", "export function classnames(\n  ...rest: Array<string | Record<string, unknown>>\n): string {\n  let result = \"\";\n  for (const temp of rest) {\n    if (typeof temp === \"string\" && temp) {\n      result += `${temp} `;\n    }\n    if (typeof temp === \"object\") {\n      for (const key of Object.keys(temp)) {\n        if (temp[key]) {\n          result += `${key} `;\n        }\n      }\n    }\n  }\n  return result.trim();\n}\n", "import { IRange } from '@/types';\nexport function isSheet(range: IRange): boolean {\n  return isRow(range) && isCol(range);\n}\nexport function isRow(range: IRange): boolean {\n  return range.col === range.rowCount && range.rowCount === 0;\n}\nexport function isCol(range: IRange): boolean {\n  return range.row === range.colCount && range.colCount === 0;\n}\n\nexport function isSameRange(oldRange?: IRange, newRange?: IRange): boolean {\n  if (!oldRange || !newRange) {\n    return false;\n  }\n  return (\n    oldRange.col === newRange.col &&\n    oldRange.row === newRange.row &&\n    oldRange.colCount === newRange.colCount &&\n    oldRange.rowCount === newRange.rowCount &&\n    oldRange.sheetId === newRange.sheetId\n  );\n}\n\nexport class Range implements IRange {\n  row = 0;\n  col = 0;\n  colCount = 0;\n  rowCount = 0;\n  sheetId = '';\n  constructor(\n    row: number,\n    col: number,\n    rowCount: number,\n    colCount: number,\n    sheetId: string,\n  ) {\n    this.row = row;\n    this.col = col;\n    this.colCount = colCount;\n    this.rowCount = rowCount;\n    this.sheetId = sheetId;\n  }\n\n  isValid(): boolean {\n    return (\n      this.row >= 0 && this.col >= 0 && this.colCount >= 0 && this.rowCount >= 0\n    );\n  }\n  static makeRange(range: IRange): Range {\n    return new Range(\n      range.row,\n      range.col,\n      range.rowCount,\n      range.colCount,\n      range.sheetId,\n    );\n  }\n}\n", "import { columnNameToInt, rowLabelToInt } from './convert';\nimport { Range } from './range';\nimport { DEFAULT_ROW_COUNT, DEFAULT_COL_COUNT } from './constant';\n\nconst isCharacter = (char: string) =>\n  (char >= 'a' && char <= 'z') || (char >= 'A' && char <= 'Z');\nconst isNum = (char: string) => char >= '0' && char <= '9';\n\nfunction convertSheetNameToSheetId(value: string) {\n  return value;\n}\n\nexport function parseCell(\n  ref: string,\n  convertSheetName = convertSheetNameToSheetId,\n): Range | null {\n  if (typeof ref !== 'string' || !ref) {\n    return null;\n  }\n  const realRef = ref.trim();\n  let [sheetName, other = ''] = realRef.split('!');\n  if (!realRef.includes('!')) {\n    sheetName = '';\n    other = realRef;\n  }\n  let i = 0;\n  let rowText = '';\n  let colText = '';\n  if (other[i] === '$') {\n    i++;\n  }\n  while (isCharacter(other[i])) {\n    colText += other[i++];\n  }\n  if (other[i] === '$') {\n    i++;\n  }\n  while (isNum(other[i])) {\n    rowText += other[i++];\n  }\n  if (i !== other.length) {\n    return null;\n  }\n  if (!rowText && !colText) {\n    return null;\n  }\n\n  let rowCount = 1;\n  let colCount = 1;\n  let row = 0;\n  let col = 0;\n  if (rowText === '') {\n    colCount = 0;\n    rowCount = DEFAULT_ROW_COUNT;\n  } else {\n    row = rowLabelToInt(rowText);\n  }\n  if (colText === '') {\n    colCount = DEFAULT_COL_COUNT;\n    rowCount = 0;\n  } else {\n    col = columnNameToInt(colText);\n  }\n  if (row === -1 || col === -1) {\n    return null;\n  }\n  const range = new Range(\n    row,\n    col,\n    rowCount,\n    colCount,\n    convertSheetName(sheetName),\n  );\n  return range;\n}\n\nexport function parseReference(\n  text: string,\n  convertSheetName = convertSheetNameToSheetId,\n): Range | null {\n  const [cell1, cell2] = text.split(':');\n  const startCell = parseCell(cell1, convertSheetName);\n  if (!startCell) {\n    return null;\n  }\n  const endCell = parseCell(cell2, convertSheetName);\n  if (!endCell) {\n    return startCell;\n  }\n  const rowCount = endCell.row - startCell.row + 1;\n  const colCount = endCell.col - startCell.col + 1;\n  return new Range(\n    startCell.row,\n    startCell.col,\n    rowCount,\n    colCount,\n    endCell.sheetId,\n  );\n}\n\nexport function mergeRange(start: Range, end: Range): Range | null {\n  if (start.sheetId !== end.sheetId) {\n    return null;\n  }\n  const rowCount = Math.abs(start.row - end.row) + 1;\n  const colCount = Math.abs(start.col - end.col) + 1;\n  const row = start.row < end.row ? start.row : end.row;\n  const col = start.col < end.col ? start.col : end.col;\n\n  return new Range(row, col, rowCount, colCount, start.sheetId);\n}\n", "import { assert } from './assert';\nimport { DEBUG_COLOR_LIST } from './constant';\ntype NameSpaceType = 'react' | 'controller' | 'canvas' | 'model';\n\nclass Debug {\n  namespace: NameSpaceType;\n\n  static readonly colorMap: Map<NameSpaceType, string> = new Map<\n    NameSpaceType,\n    string\n  >();\n  static readonly enableMap: Map<NameSpaceType, boolean> = new Map<\n    NameSpaceType,\n    boolean\n  >([]);\n  constructor(namespace: NameSpaceType) {\n    this.namespace = namespace;\n  }\n  init = () => {\n    this.setColor();\n    return this.log;\n  };\n  log = (...rest: Array<unknown>): void => {\n    if (!this.enable()) {\n      return;\n    }\n    const { namespace } = this;\n    const color = Debug.colorMap.get(namespace);\n    const result = [`%c ${namespace}:`, `color:${color};`, ...rest];\n    console.log(...result);\n  };\n  getRandomColor = (): string => {\n    const index = Math.floor(Math.random() * DEBUG_COLOR_LIST.length);\n    assert(index >= 0 && index < DEBUG_COLOR_LIST.length, String(index));\n    return DEBUG_COLOR_LIST[index];\n  };\n  enable() {\n    return this.checkEnable() && Debug.enableMap.get(this.namespace) !== false;\n  }\n  checkEnable(storage = window.localStorage) {\n    return storage.getItem('debug') === '*';\n  }\n  setColor() {\n    if (!Debug.colorMap.has(this.namespace)) {\n      Debug.colorMap.set(this.namespace, this.getRandomColor());\n    }\n  }\n}\n\nexport const reactLog = new Debug('react').init();\nexport const controllerLog = new Debug('controller').init();\nexport const canvasLog = new Debug('canvas').init();\nexport const modelLog = new Debug('model').init();\n", "import { MUST_FONT_FAMILY } from './style';\n\nfunction SupportFontFamilyFactory(body = document.body) {\n  const monoFont = 'monospace';\n  const serifFont = 'serif';\n  const container = document.createElement('span');\n  container.innerHTML = '\u6D4B\u8BD5a11';\n  container.style.cssText = [\n    'position:absolute',\n    'width:auto',\n    'font-size:128px',\n    'left:-99999px',\n  ].join(' !important;');\n\n  const getWidth = function (fontFamily: string) {\n    container.style.fontFamily = fontFamily;\n    body.appendChild(container);\n    const width = container.clientWidth;\n    body.removeChild(container);\n    return width;\n  };\n\n  const monoWidth = getWidth(monoFont);\n  const serifWidth = getWidth(serifFont);\n  const sansWidth = getWidth(MUST_FONT_FAMILY);\n\n  const isSupportFontFamily = function (fontFamily: string) {\n    return (\n      monoWidth !== getWidth(`${fontFamily},${monoFont}`) ||\n      sansWidth !== getWidth(`${fontFamily},${MUST_FONT_FAMILY}`) ||\n      serifWidth !== getWidth(`${fontFamily},${serifFont}`)\n    );\n  };\n  return isSupportFontFamily;\n}\nconst isSupportFontFamily = SupportFontFamilyFactory();\nexport { isSupportFontFamily };\n", "import type { ClipboardType, ClipboardData } from '@/types';\n\nexport const PLAIN_FORMAT = 'text/plain';\nexport const HTML_FORMAT = 'text/html';\n\nfunction select(element: HTMLTextAreaElement) {\n  const isReadOnly = element.hasAttribute('readonly');\n  if (!isReadOnly) {\n    element.setAttribute('readonly', '');\n  }\n  element.select();\n  element.setSelectionRange(0, element.value.length);\n\n  if (!isReadOnly) {\n    element.removeAttribute('readonly');\n  }\n  return element.value;\n}\n\nexport function isSupported(action = ['copy', 'cut']) {\n  const actions = typeof action === 'string' ? [action] : action;\n  let support = !!document.queryCommandSupported;\n\n  actions.forEach((action) => {\n    support = support && !!document.queryCommandSupported(action);\n  });\n\n  return support;\n}\n\nfunction createFakeElement(value: string) {\n  const isRTL = document.documentElement.getAttribute('dir') === 'rtl';\n  const fakeElement = document.createElement('textarea');\n  // Prevent zooming on iOS\n  fakeElement.style.fontSize = '12pt';\n  // Reset box model\n  fakeElement.style.border = '0';\n  fakeElement.style.padding = '0';\n  fakeElement.style.margin = '0';\n  // Move element out of screen horizontally\n  fakeElement.style.position = 'absolute';\n  fakeElement.style[isRTL ? 'right' : 'left'] = '-9999px';\n  // Move element to the same position vertically\n  let yPosition = window.pageYOffset || document.documentElement.scrollTop;\n  fakeElement.style.top = `${yPosition}px`;\n\n  fakeElement.setAttribute('readonly', '');\n  fakeElement.value = value;\n\n  return fakeElement;\n}\n\nfunction writeDataToClipboard(textData: ClipboardData) {\n  const result: Record<string, Blob> = {};\n  const keyList = Object.keys(textData) as ClipboardType[];\n  for (const key of keyList) {\n    result[key] = new Blob([textData[key]], { type: key });\n  }\n  const data = [new ClipboardItem(result)];\n  return navigator.clipboard.write(data);\n}\n\nasync function readDataFromClipboard(): Promise<ClipboardData> {\n  const result: ClipboardData = {\n    [HTML_FORMAT]: '',\n    [PLAIN_FORMAT]: '',\n  };\n  const list = await navigator.clipboard.read();\n  for (const item of list) {\n    if (item.types.includes(PLAIN_FORMAT)) {\n      const buf = await item.getType(PLAIN_FORMAT);\n      result[PLAIN_FORMAT] = await buf.text();\n    }\n    if (item.types.includes(HTML_FORMAT)) {\n      const buf = await item.getType(HTML_FORMAT);\n      result[HTML_FORMAT] = await buf.text();\n    }\n  }\n  return result;\n}\n\nconst fakeCopyAction = (\n  value: string,\n  container: HTMLElement,\n  type: 'copy' | 'cut',\n) => {\n  const fakeElement = createFakeElement(value);\n  container.appendChild(fakeElement);\n  const selectedText = select(fakeElement);\n  document.execCommand(type);\n  fakeElement.remove();\n\n  return selectedText;\n};\n\nexport async function copy(textData: ClipboardData): Promise<string> {\n  try {\n    await writeDataToClipboard(textData);\n    return textData[PLAIN_FORMAT];\n  } catch (error) {\n    console.error(error);\n    return fakeCopyAction(textData[PLAIN_FORMAT], document.body, 'copy');\n  }\n}\n\nexport async function cut(textData: ClipboardData): Promise<string> {\n  try {\n    await writeDataToClipboard(textData);\n    return textData[PLAIN_FORMAT];\n  } catch (error) {\n    console.error(error);\n    return fakeCopyAction(textData[PLAIN_FORMAT], document.body, 'cut');\n  }\n}\nexport async function paste(): Promise<ClipboardData> {\n  try {\n    return readDataFromClipboard();\n  } catch (error) {\n    console.error(error);\n    const result = await navigator.clipboard.readText();\n    return {\n      [HTML_FORMAT]: '',\n      [PLAIN_FORMAT]: result,\n    };\n  }\n}\n\n\nexport function generateHTML(style: string, content: string) {\n  return `<html\n  xmlns:v=\"urn:schemas-microsoft-com:vml\"\n  xmlns:o=\"urn:schemas-microsoft-com:office:office\"\n  xmlns:x=\"urn:schemas-microsoft-com:office:excel\"\n  xmlns=\"http://www.w3.org/TR/REC-html40\"\n>\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n    <meta name=\"ProgId\" content=\"Excel.Sheet\" />\n    <meta name=\"Generator\" content=\"Microsoft Excel 15\" />\n    <style>\n       {\n        mso-displayed-decimal-separator: '\\.';\n        mso-displayed-thousand-separator: '\\,';\n      }\n      @page {\n        margin: 0.75in 0.7in 0.75in 0.7in;\n        mso-header-margin: 0.3in;\n        mso-footer-margin: 0.3in;\n      }\n      .font5 {\n        color: windowtext;\n        font-size: 9pt;\n        font-weight: 400;\n        font-style: normal;\n        text-decoration: none;\n        font-family: \u7B49\u7EBF;\n        mso-generic-font-family: auto;\n        mso-font-charset: 134;\n      }\n      tr {\n        mso-height-source: auto;\n        mso-ruby-visibility: none;\n      }\n      col {\n        mso-width-source: auto;\n        mso-ruby-visibility: none;\n      }\n      br {\n        mso-data-placement: same-cell;\n      }\n      td {\n        padding-top: 1px;\n        padding-right: 1px;\n        padding-left: 1px;\n        mso-ignore: padding;\n        color: black;\n        font-size: 11pt;\n        font-weight: 400;\n        font-style: normal;\n        text-decoration: none;\n        font-family: \u7B49\u7EBF;\n        mso-generic-font-family: auto;\n        mso-font-charset: 134;\n        mso-number-format: General;\n        text-align: general;\n        vertical-align: middle;\n        border: none;\n        mso-background-source: auto;\n        mso-pattern: auto;\n        mso-protection: locked visible;\n        white-space: nowrap;\n        mso-rotate: 0;\n      }\n      ${style}\n      ruby {\n        ruby-align: left;\n      }\n      rt {\n        color: windowtext;\n        font-size: 9pt;\n        font-weight: 400;\n        font-style: normal;\n        text-decoration: none;\n        font-family: \u7B49\u7EBF;\n        mso-generic-font-family: auto;\n        mso-font-charset: 134;\n        mso-char-type: none;\n        display: none;\n      }\n    </style>\n  </head>\n\n  <body link=\"#0563C1\" vlink=\"#954F72\">\n    <table\n      border=\"0\"\n      cellpadding=\"0\"\n      cellspacing=\"0\"\n      width=\"103\"\n      style=\"border-collapse: collapse; width: 77pt\"\n    >\n      <col\n        width=\"103\"\n        style=\"mso-width-source: userset; mso-width-alt: 3515; width: 77pt\"\n      />\n      ${content}\n    </table>\n  </body>\n</html>`\n}", "export const debounce = (fn: (...params: any[]) => void) => {\n  let timer: ReturnType<typeof requestAnimationFrame>;\n  return (...rest: any[]) => {\n    cancelAnimationFrame(timer);\n    timer = requestAnimationFrame(() => {\n      fn(...rest);\n    });\n  };\n};\n\nexport function get<T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  obj: Record<string, any> | null | undefined,\n  path: string,\n  defaultValue?: T,\n): T {\n  const result =\n    obj == null\n      ? undefined\n      : path\n          .replace(/\\[/g, '.')\n          .replace(/\\]/g, '')\n          .split('.')\n          .reduce((res, key) => {\n            return res == null ? res : res[key];\n          }, obj);\n  return (result === undefined ? defaultValue : result) as T;\n}\n\nexport function isEmpty(value: unknown): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const temp: any = value || {};\n  return (\n    [Object, Array].includes(temp.constructor) && !Object.entries(temp).length\n  );\n}\n\nexport function setWith<ValueType>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  obj: Record<string, any> | null | undefined,\n  path: string,\n  value: ValueType,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): Record<string, any> | null | undefined {\n  if (obj == null || typeof obj !== 'object') {\n    return obj;\n  }\n  path\n    .replace(/\\[/g, '.')\n    .replace(/\\]/g, '')\n    .split('.')\n    .reduce((res, key, index, arr) => {\n      if (index === arr.length - 1) {\n        res[key] = value;\n      } else {\n        if (res[key] == null) {\n          res[key] = {};\n        }\n      }\n      return res[key];\n    }, obj);\n  return obj;\n}\n\nexport function isObjectEqual(a: any, b: any): boolean {\n  if (a === b && a === null) {\n    return true;\n  }\n  if (typeof a === 'object' && typeof b === 'object') {\n    const list1 = Object.keys(a);\n    const list2 = Object.keys(b);\n    if (list1.length === list2.length) {\n      for (const key of list1) {\n        if (a[key] !== b[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n  return a === b;\n}\n\nexport function isArrayEqual(a: any[], b: any[]): boolean {\n  if (\n    a.length === b.length &&\n    a.every((item, index) => isObjectEqual(item, b[index]))\n  ) {\n    return true;\n  }\n  return false;\n}\n", "const size = {\n  smallFont: '10px',\n  font: '12px',\n  largeFont: '14px',\n  padding: '12px',\n  lineHeight: '1.5',\n  mediumPadding: '8px',\n  borderRadius: '4px',\n  tinyPadding: '4px',\n};\nexport default size;\n", "import { DEFAULT_FONT_COLOR } from \"@/util/\";\nconst color = {\n  primaryColor: \"#217346\",\n  buttonActiveColor: \"rgb(198,198,198)\",\n  selectionColor: \"rgba(198,198,198,0.3)\",\n  backgroundColor: \"#e6e6e6\",\n  white: \"#ffffff\",\n  black: \"#000000\",\n  gridStrokeColor: \"#d4d4d4\",\n  triangleFillColor: \"#b4b4b4\",\n  contentColor: DEFAULT_FONT_COLOR,\n  borderColor: \"#cccccc\",\n  activeBorderColor: \"#808080\",\n  disabledColor: \"#ccc\",\n};\nexport default color;\n", "import size from './size';\nimport color from './color';\nexport const theme = {\n  ...size,\n  ...color,\n};\n", "/**\n * query all installed fonts\n * window.queryLocalFonts().then(console.log)\n */\nexport const QUERY_ALL_LOCAL_FONT = 'QUERY_ALL_LOCAL_FONT';\nexport const LOCAL_FONT_KEY = 'LOCAL_FONT_KEY';\nexport const FONT_FAMILY_LIST = [\n  '\u7B49\u7EBF',\n  '\u7B49\u7EBF Light',\n  '\u65B9\u6B63\u8212\u4F53',\n  '\u65B9\u6B63\u59DA\u4F53',\n  '\u4EFF\u5B8B',\n  '\u9ED1\u4F53',\n  '\u534E\u6587\u5F69\u4E91',\n  '\u534E\u6587\u4EFF\u5B8B',\n  '\u534E\u6587\u7425\u73C0',\n  '\u534E\u6587\u6977\u4F53',\n  '\u534E\u6587\u96B6\u4E66',\n  '\u534E\u6587\u5B8B\u4F53',\n  '\u534E\u6587\u7EC6\u9ED1',\n  '\u534E\u6587\u65B0\u9B4F',\n  '\u534E\u6587\u884C\u6977',\n  '\u534E\u6587\u4E2D\u5B8B',\n  '\u6977\u4F53',\n  '\u96B6\u4E66',\n  '\u5B8B\u4F53',\n  '\u5FAE\u8F6F\u96C5\u9ED1',\n  '\u5FAE\u8F6F\u96C5\u9ED1 Light',\n  '\u65B0\u5B8B\u4F53',\n  '\u5E7C\u5706',\n  'Arial',\n  'Arial Narrow',\n  'Cascadia Code',\n  'Cascadia Code ExtraLight',\n  'Cascadia Code Light',\n  'Cascadia Code PL',\n  'Cascadia Code PL ExtraLight',\n  'Cascadia Code PL Light',\n  'Cascadia Code PL SemiBold',\n  'Cascadia Code SemiBold',\n  'Cascadia Mono',\n  'Cascadia Mono ExtraLight',\n  'Cascadia Mono Light',\n  'Cascadia Mono PL',\n  'Cascadia Mono PL ExtraLight',\n  'Cascadia Mono PL Light',\n  'Cascadia Mono PL SemiBold',\n  'Cascadia Mono SemiBold',\n  'Microsoft JhengHei',\n  'Microsoft JhengHei Light',\n  'Microsoft JhengHei UI',\n  'Microsoft JhengHei UI Light',\n  'Microsoft New Tai Lue',\n  'Microsoft PhagsPa',\n  'Microsoft Sans Serif',\n  'Microsoft Tai Le',\n  'Microsoft Yahei UI',\n  'Microsoft YaHei UI Light',\n  'Microsoft Yi Baiti',\n  'SimSun-ExtB',\n  'Times New Roman',\n  'Yu Gothic Light',\n  'Yu Gothic Medium',\n  'Yu Gothic Regular',\n  'Yu Gothic UI Light',\n  'Yu Gothic UI Regular',\n  'Yu Gothic UI Semibold',\n];\n", "import type { IHitInfo, IController } from '@/types';\nexport function getHitInfo(\n  event: MouseEvent,\n  controller: IController,\n): IHitInfo | null {\n  const canvasSize = controller.getDomRect();\n  const scroll = controller.getScroll();\n  const sheetInfo = controller.getSheetInfo(controller.getCurrentSheetId());\n  const headerSize = controller.getHeaderSize();\n  const { pageX, pageY } = event;\n  const x = pageX - canvasSize.left;\n  const y = pageY - canvasSize.top;\n  let resultX = headerSize.width;\n  let resultY = headerSize.height;\n  let row = scroll.row;\n  let col = scroll.col;\n  while (resultX + controller.getColWidth(col) <= x) {\n    resultX += controller.getColWidth(col);\n    col++;\n  }\n  while (resultY + controller.getRowHeight(row) <= y) {\n    resultY += controller.getRowHeight(row);\n    row++;\n  }\n  if (row >= sheetInfo.rowCount || col >= sheetInfo.colCount) {\n    return null;\n  }\n  const cellSize = controller.getCellSize(row, col);\n  return { ...cellSize, row, col, pageY, pageX, x, y };\n}\n", "import { reactLog } from '@/util';\n\nexport interface DOMOperation {\n  createElement: (\n    tagName: any,\n    options?: ElementCreationOptions,\n  ) => HTMLElement;\n  createElementNS: (\n    namespaceURI: string,\n    qualifiedName: string,\n    options?: ElementCreationOptions,\n  ) => Element;\n  createTextNode: (text: string) => Text;\n  insertBefore: (\n    parentNode: Node,\n    newNode: Node,\n    referenceNode: Node | null,\n  ) => void;\n  removeChild: (node: Node, child: Node) => void;\n  appendChild: (node: Node, child: Node) => void;\n  parentNode: (node: Node) => Node | null;\n  nextSibling: (node: Node) => Node | null;\n  setTextContent: (node: Node, text: string | null) => void;\n  isElement: (node: Node) => node is Element;\n}\n\nfunction createElement(\n  tagName: any,\n  options?: ElementCreationOptions,\n): HTMLElement {\n  reactLog('createElement');\n  return document.createElement(tagName, options);\n}\n\nfunction createElementNS(\n  namespaceURI: string,\n  qualifiedName: string,\n  options?: ElementCreationOptions,\n): Element {\n  reactLog('createElementNS');\n  return document.createElementNS(namespaceURI, qualifiedName, options);\n}\n\nfunction createTextNode(text: string): Text {\n  reactLog('createTextNode');\n  return document.createTextNode(text);\n}\n\nfunction insertBefore(\n  parentNode: Node,\n  newNode: Node,\n  referenceNode: Node | null,\n): void {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild(node: Node, child: Node): void {\n  node.removeChild(child);\n}\n\nfunction appendChild(node: Node, child: Node): void {\n  node.appendChild(child);\n}\n\nfunction parentNode(node: Node): Node | null {\n  return node.parentNode;\n}\n\nfunction nextSibling(node: Node): Node | null {\n  return node.nextSibling;\n}\n\nfunction setTextContent(node: Node, text: string | null): void {\n  node.textContent = text;\n}\n\nfunction isElement(node: Node): node is Element {\n  return node.nodeType === 1;\n}\n\nexport const htmlDomApi: DOMOperation = {\n  createElement,\n  createElementNS,\n  createTextNode,\n  insertBefore,\n  removeChild,\n  appendChild,\n  parentNode,\n  nextSibling,\n  setTextContent,\n  isElement,\n};\n", "import { VNode, VNodeData, Key, Listener } from './vNode';\nimport { CSSProperties } from './modules/style';\nimport { Hooks } from './hooks';\n\nconst SVG_NS = 'http://www.w3.org/2000/svg';\n\ntype EventListener = {\n  [N in keyof HTMLElementEventMap as N extends string\n    ? `on${N}`\n    : never]?: Listener<HTMLElementEventMap[N]>;\n};\n\nexport interface VNodePropsData extends EventListener {\n  className?: string;\n  style?: CSSProperties;\n  key?: Key;\n  id?: string;\n  value?: string | number;\n  href?: string;\n  fill?: string;\n  ns?: string; // for SVGs\n  viewBox?: string;\n  name?: string;\n  'aria-hidden'?: boolean;\n  'aria-label'?: string;\n  target?: string;\n  rel?: string;\n  d?: string;\n  'fill-opacity'?: string;\n  hook?: Hooks;\n  'data-testId'?: string;\n  'data-type'?: string;\n  disabled?: boolean;\n  title?: string;\n  type?: string;\n  hidden?: boolean;\n  method?: string;\n}\n\nfunction addNs(node: VNode) {\n  node.data!.ns = SVG_NS;\n  if (node.data?.props) {\n    node.data!.attrs = Object.assign(\n      node.data!.props || {},\n      node.data?.attrs || {},\n    );\n    node.data!.props = undefined;\n  } else {\n    node.data!.attrs = {};\n  }\n  node.data!.attrs.class = node.data!.className || '';\n  node.data!.className = undefined;\n  if (node.children) {\n    for (const item of node.children) {\n      if (item) {\n        addNs(item);\n      }\n    }\n  }\n}\n\nexport function h(\n  sel: string,\n  data: VNodePropsData,\n  ...children: Array<VNode | string | null | undefined | number>\n): VNode {\n  const key = data.key === undefined ? undefined : data.key;\n  const nodeData: VNodeData = {\n    hook: data.hook,\n    style: data.style,\n    key: data.key,\n    className: data.className,\n  };\n\n  const nodeList: VNode[] = [];\n  const textList: string[] = [];\n  const list = children || [];\n  for (const item of list) {\n    if (typeof item === 'string' || typeof item === 'number') {\n      const t = String(item);\n      if (t) {\n        textList.push(t);\n      }\n    } else if (item && typeof item === 'object') {\n      nodeList.push(item);\n    }\n  }\n  const keyList = Object.keys(data) as Array<keyof VNodePropsData>;\n  for (const key of keyList) {\n    if (['className', 'style', 'key', 'ns', 'is'].includes(key)) {\n      continue;\n    }\n    const item: any = data[key];\n    if (key.startsWith('data-')) {\n      if (!nodeData.dataset) {\n        nodeData.dataset = {};\n      }\n      nodeData.dataset[key.slice(5)] = item;\n    } else if (key.startsWith('on')) {\n      if (!nodeData.on) {\n        nodeData.on = {};\n      }\n      nodeData.on[key.slice(2)] = item;\n    } else {\n      if (!nodeData.props) {\n        nodeData.props = {};\n      }\n      nodeData.props[key] = item;\n    }\n  }\n  const result: VNode = {\n    sel: sel,\n    data: nodeData,\n    key,\n    elm: undefined,\n    children: [],\n    text: undefined,\n  };\n\n  if (textList.length > 0 && nodeList.length > 0) {\n    throw new Error('error node');\n  }\n  if (textList.length > 0) {\n    result.text = textList.join(' ');\n  }\n  if (nodeList.length > 0) {\n    result.children = nodeList;\n  }\n  if (result.sel === 'svg') {\n    addNs(result);\n  }\n\n  return result;\n}\n", "import { Module } from './modules/module';\nimport { VNode } from './vNode';\nimport { htmlDomApi, DOMOperation } from './dom';\nimport { h } from './h';\n\ntype NonUndefined<T> = T extends undefined ? never : T;\n\nfunction isUndef(s: any): boolean {\n  return s === undefined;\n}\nfunction isDef<A>(s: A): s is NonUndefined<A> {\n  return s !== undefined;\n}\n\ntype VNodeQueue = VNode[];\n\nconst emptyNode = h('', {});\n\nfunction sameVNode(vNode1: VNode, vNode2: VNode): boolean {\n  const isSameKey = vNode1.key === vNode2.key;\n  const isSameIs = vNode1.data?.is === vNode2.data?.is;\n  const isSameSel = vNode1.sel === vNode2.sel;\n  const isSameTextOrFragment =\n    !vNode1.sel && vNode1.sel === vNode2.sel\n      ? typeof vNode1.text === typeof vNode2.text\n      : true;\n\n  return isSameSel && isSameKey && isSameIs && isSameTextOrFragment;\n}\n\nfunction isElement(\n  api: DOMOperation,\n  vNode: Element | VNode,\n): vNode is Element {\n  return api.isElement(vNode as any);\n}\n\ntype KeyToIndexMap = { [key: string]: number };\n\ntype ArraysOf<T> = {\n  [K in keyof T]: Array<T[K]>;\n};\n\ntype ModuleHooks = ArraysOf<Required<Module>>;\n\nfunction createKeyToOldIdx(\n  children: VNode[],\n  beginIdx: number,\n  endIdx: number,\n): KeyToIndexMap {\n  const map: KeyToIndexMap = {};\n  for (let i = beginIdx; i <= endIdx; ++i) {\n    const key = children[i]?.key;\n    if (key !== undefined) {\n      map[key as string] = i;\n    }\n  }\n  return map;\n}\n\nconst hooks: Array<keyof Module> = [\n  'create',\n  'update',\n  'remove',\n  'destroy',\n  'pre',\n  'post',\n];\n\nexport function init(modules: Array<Partial<Module>>, domApi?: DOMOperation) {\n  const cbs: ModuleHooks = {\n    create: [],\n    update: [],\n    remove: [],\n    destroy: [],\n    pre: [],\n    post: [],\n  };\n\n  const api: DOMOperation = domApi !== undefined ? domApi : htmlDomApi;\n\n  for (const hook of hooks) {\n    for (const module of modules) {\n      const currentHook = module[hook];\n      if (currentHook !== undefined) {\n        (cbs[hook] as any[]).push(currentHook);\n      }\n    }\n  }\n\n  function createRmCb(childElm: Node, listeners: number) {\n    return function rmCb() {\n      if (--listeners === 0) {\n        const parent = api.parentNode(childElm) as Node;\n        api.removeChild(parent, childElm);\n      }\n    };\n  }\n\n  function createElm(vNode: VNode, insertedVNodeQueue: VNodeQueue): Node {\n    let i: any;\n    let data = vNode.data;\n    if (data !== undefined) {\n      const init = data.hook?.init;\n      if (init) {\n        init(vNode);\n        data = vNode.data;\n      }\n    }\n    const children = vNode.children;\n    const sel = vNode.sel;\n    if (sel !== undefined) {\n      const elm = (vNode.elm =\n        isDef(data) && isDef((i = data.ns))\n          ? api.createElementNS(i, sel, data)\n          : api.createElement(sel, data));\n      for (i = 0; i < cbs.create.length; ++i) cbs.create[i](emptyNode, vNode);\n      if (Array.isArray(children) && children.length > 0) {\n        for (i = 0; i < children.length; ++i) {\n          const ch = children[i];\n          if (ch != null) {\n            api.appendChild(elm, createElm(ch as VNode, insertedVNodeQueue));\n          }\n        }\n      } else if (\n        typeof vNode.text === 'string' ||\n        typeof vNode.text === 'number'\n      ) {\n        api.appendChild(elm, api.createTextNode(vNode.text));\n      }\n      const hook = vNode.data!.hook;\n      if (isDef(hook)) {\n        hook.create?.(emptyNode, vNode);\n        if (hook.insert) {\n          insertedVNodeQueue.push(vNode);\n        }\n      }\n    } else {\n      vNode.elm = api.createTextNode(vNode.text!);\n    }\n    return vNode.elm;\n  }\n\n  function addVNodes(\n    parentElm: Node,\n    before: Node | null,\n    vNodes: VNode[],\n    startIdx: number,\n    endIdx: number,\n    insertedVNodeQueue: VNodeQueue,\n  ) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      const ch = vNodes[startIdx];\n      if (ch != null) {\n        api.insertBefore(parentElm, createElm(ch, insertedVNodeQueue), before);\n      }\n    }\n  }\n\n  function invokeDestroyHook(vNode: VNode) {\n    const data = vNode.data;\n    if (data !== undefined) {\n      data?.hook?.destroy?.(vNode);\n      for (let i = 0; i < cbs.destroy.length; ++i) cbs.destroy[i](vNode);\n      if (vNode.children !== undefined) {\n        for (let j = 0; j < vNode.children.length; ++j) {\n          const child = vNode.children[j];\n          if (child != null && typeof child !== 'string') {\n            invokeDestroyHook(child);\n          }\n        }\n      }\n    }\n  }\n\n  function removeVNodes(\n    parentElm: Node,\n    vNodes: VNode[],\n    startIdx: number,\n    endIdx: number,\n  ): void {\n    for (; startIdx <= endIdx; ++startIdx) {\n      let listeners: number;\n      let rm: () => void;\n      const ch = vNodes[startIdx];\n      if (ch != null) {\n        if (isDef(ch.sel)) {\n          invokeDestroyHook(ch);\n          listeners = cbs.remove.length + 1;\n          rm = createRmCb(ch.elm!, listeners);\n          for (let i = 0; i < cbs.remove.length; ++i) cbs.remove[i](ch, rm);\n          const removeHook = ch?.data?.hook?.remove;\n          if (isDef(removeHook)) {\n            removeHook(ch, rm);\n          } else {\n            rm();\n          }\n        } else if (ch.children) {\n          // Fragment node\n          invokeDestroyHook(ch);\n          removeVNodes(\n            parentElm,\n            ch.children as VNode[],\n            0,\n            ch.children.length - 1,\n          );\n        } else {\n          // Text node\n          api.removeChild(parentElm, ch.elm!);\n        }\n      }\n    }\n  }\n\n  function updateChildren(\n    parentElm: Node,\n    oldCh: VNode[],\n    newCh: VNode[],\n    insertedVNodeQueue: VNodeQueue,\n  ) {\n    let oldStartIdx = 0;\n    let newStartIdx = 0;\n    let oldEndIdx = oldCh.length - 1;\n    let oldStartVNode = oldCh[0];\n    let oldEndVNode = oldCh[oldEndIdx];\n    let newEndIdx = newCh.length - 1;\n    let newStartVNode = newCh[0];\n    let newEndVNode = newCh[newEndIdx];\n    let oldKeyToIdx: KeyToIndexMap | undefined;\n    let idxInOld: number;\n    let elmToMove: VNode;\n    let before: any;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (oldStartVNode == null) {\n        oldStartVNode = oldCh[++oldStartIdx]; // VNode might have been moved left\n      } else if (oldEndVNode == null) {\n        oldEndVNode = oldCh[--oldEndIdx];\n      } else if (newStartVNode == null) {\n        newStartVNode = newCh[++newStartIdx];\n      } else if (newEndVNode == null) {\n        newEndVNode = newCh[--newEndIdx];\n      } else if (sameVNode(oldStartVNode, newStartVNode)) {\n        patchVNode(oldStartVNode, newStartVNode, insertedVNodeQueue);\n        oldStartVNode = oldCh[++oldStartIdx];\n        newStartVNode = newCh[++newStartIdx];\n      } else if (sameVNode(oldEndVNode, newEndVNode)) {\n        patchVNode(oldEndVNode, newEndVNode, insertedVNodeQueue);\n        oldEndVNode = oldCh[--oldEndIdx];\n        newEndVNode = newCh[--newEndIdx];\n      } else if (sameVNode(oldStartVNode, newEndVNode)) {\n        // vNode moved right\n        patchVNode(oldStartVNode, newEndVNode, insertedVNodeQueue);\n        api.insertBefore(\n          parentElm,\n          oldStartVNode.elm!,\n          api.nextSibling(oldEndVNode.elm!),\n        );\n        oldStartVNode = oldCh[++oldStartIdx];\n        newEndVNode = newCh[--newEndIdx];\n      } else if (sameVNode(oldEndVNode, newStartVNode)) {\n        // vNode moved left\n        patchVNode(oldEndVNode, newStartVNode, insertedVNodeQueue);\n        api.insertBefore(parentElm, oldEndVNode.elm!, oldStartVNode.elm!);\n        oldEndVNode = oldCh[--oldEndIdx];\n        newStartVNode = newCh[++newStartIdx];\n      } else {\n        if (oldKeyToIdx === undefined) {\n          oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n        }\n        idxInOld = oldKeyToIdx[newStartVNode.key as string];\n        if (isUndef(idxInOld)) {\n          // New element\n          api.insertBefore(\n            parentElm,\n            createElm(newStartVNode, insertedVNodeQueue),\n            oldStartVNode.elm!,\n          );\n        } else {\n          elmToMove = oldCh[idxInOld];\n          if (elmToMove.sel !== newStartVNode.sel) {\n            api.insertBefore(\n              parentElm,\n              createElm(newStartVNode, insertedVNodeQueue),\n              oldStartVNode.elm!,\n            );\n          } else {\n            patchVNode(elmToMove, newStartVNode, insertedVNodeQueue);\n            oldCh[idxInOld] = undefined as any;\n            api.insertBefore(parentElm, elmToMove.elm!, oldStartVNode.elm!);\n          }\n        }\n        newStartVNode = newCh[++newStartIdx];\n      }\n    }\n\n    if (newStartIdx <= newEndIdx) {\n      before = newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].elm;\n      addVNodes(\n        parentElm,\n        before,\n        newCh,\n        newStartIdx,\n        newEndIdx,\n        insertedVNodeQueue,\n      );\n    }\n    if (oldStartIdx <= oldEndIdx) {\n      removeVNodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVNode(\n    oldVNode: VNode,\n    vNode: VNode,\n    insertedVNodeQueue: VNodeQueue,\n  ) {\n    const hook = vNode.data?.hook;\n    hook?.prePatch?.(oldVNode, vNode);\n    const elm = (vNode.elm = oldVNode.elm)!;\n    if (oldVNode === vNode) return;\n    if (\n      vNode.data !== undefined ||\n      (isDef(vNode.text) && vNode.text !== oldVNode.text)\n    ) {\n      vNode.data ??= {};\n      oldVNode.data ??= {};\n      for (let i = 0; i < cbs.update.length; ++i)\n        cbs.update[i](oldVNode, vNode);\n      vNode.data?.hook?.update?.(oldVNode, vNode);\n    }\n    const oldCh = oldVNode.children as VNode[];\n    const ch = vNode.children as VNode[];\n    if (isUndef(vNode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) updateChildren(elm, oldCh, ch, insertedVNodeQueue);\n      } else if (isDef(ch)) {\n        if (isDef(oldVNode.text)) api.setTextContent(elm, '');\n        addVNodes(elm, null, ch, 0, ch.length - 1, insertedVNodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVNodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVNode.text)) {\n        api.setTextContent(elm, '');\n      }\n    } else if (oldVNode.text !== vNode.text) {\n      if (isDef(oldCh)) {\n        removeVNodes(elm, oldCh, 0, oldCh.length - 1);\n      }\n      api.setTextContent(elm, vNode.text!);\n    }\n    hook?.postPatch?.(oldVNode, vNode);\n    if (hook?.ref) {\n      hook?.ref(vNode.elm! as Element);\n    }\n  }\n\n  function patch(oldVNode: VNode | Element, vNode: VNode): VNode {\n    let i: number, elm: Node, parent: Node;\n    const insertedVNodeQueue: VNodeQueue = [];\n    for (i = 0; i < cbs.pre.length; ++i) cbs.pre[i]();\n\n    if (isElement(api, oldVNode)) {\n      createElm(vNode, insertedVNodeQueue);\n      api.appendChild(oldVNode, vNode.elm!);\n      return vNode;\n    }\n\n    if (sameVNode(oldVNode, vNode)) {\n      patchVNode(oldVNode, vNode, insertedVNodeQueue);\n    } else {\n      elm = oldVNode.elm!;\n      parent = api.parentNode(elm) as Node;\n\n      createElm(vNode, insertedVNodeQueue);\n\n      if (parent !== null) {\n        api.insertBefore(parent, vNode.elm!, api.nextSibling(elm));\n        removeVNodes(parent, [oldVNode], 0, 0);\n      }\n    }\n\n    for (i = 0; i < insertedVNodeQueue.length; ++i) {\n      insertedVNodeQueue[i].data!.hook!.insert!(insertedVNodeQueue[i]);\n    }\n    for (i = 0; i < cbs.post.length; ++i) cbs.post[i]();\n    return vNode;\n  }\n  return patch;\n}\n", "import { VNode, VNodeData } from \"../vNode\";\nimport { Module } from \"./module\";\n\nexport type Attrs = Record<string, string | number | boolean>;\n\nconst xLinkNS = \"http://www.w3.org/1999/xlink\";\nconst xmlNS = \"http://www.w3.org/XML/1998/namespace\";\nconst colonChar = 58;\nconst xChar = 120;\n\nfunction updateAttrs(oldVNode: VNode, vNode: VNode): void {\n  let key: string;\n  const elm: Element = vNode.elm as Element;\n  let oldAttrs = (oldVNode.data as VNodeData).attrs;\n  let attrs = (vNode.data as VNodeData).attrs;\n\n  if (!oldAttrs && !attrs) return;\n  if (oldAttrs === attrs) return;\n  oldAttrs = oldAttrs || {};\n  attrs = attrs || {};\n\n  // update modified attributes, add new attributes\n  for (key in attrs) {\n    const cur = attrs[key];\n    const old = oldAttrs[key];\n    if (old !== cur) {\n      if (cur === true) {\n        elm.setAttribute(key, \"\");\n      } else if (cur === false) {\n        elm.removeAttribute(key);\n      } else {\n        if (key.charCodeAt(0) !== xChar) {\n          elm.setAttribute(key, cur as any);\n        } else if (key.charCodeAt(3) === colonChar) {\n          // Assume xml namespace\n          elm.setAttributeNS(xmlNS, key, cur as any);\n        } else if (key.charCodeAt(5) === colonChar) {\n          // Assume xLink namespace\n          elm.setAttributeNS(xLinkNS, key, cur as any);\n        } else {\n          elm.setAttribute(key, cur as any);\n        }\n      }\n    }\n  }\n  // remove removed attributes\n  // use `in` operator since the previous `for` iteration uses it (.i.e. add even attributes with undefined value)\n  // the other option is to remove all attributes with value == undefined\n  for (key in oldAttrs) {\n    if (!(key in attrs)) {\n      elm.removeAttribute(key);\n    }\n  }\n}\n\nexport const attributesModule: Module = {\n  create: updateAttrs,\n  update: updateAttrs,\n};\n", "import { VNode, VNodeData } from '../vNode';\nimport { Module } from './module';\n\nfunction updateClass(oldVNode: VNode, vNode: VNode): void {\n  const elm: Element = vNode.elm as Element;\n  const oldClass = (oldVNode.data as VNodeData).className;\n  const newClass = (vNode.data as VNodeData).className;\n\n  if (oldClass === newClass) return;\n  elm.className = newClass || '';\n}\n\nexport const classModule: Module = { create: updateClass, update: updateClass };\n", "import { VNode, VNodeData } from '../vNode';\nimport { Module } from './module';\n\nexport type Dataset = Record<string, string>;\n\nexport const CAPS_REGEX = /[A-Z]/g;\n\nfunction updateDataset(oldVNode: VNode, vNode: VNode): void {\n  const elm: HTMLElement = vNode.elm as HTMLElement;\n  let oldDataset = (oldVNode.data as VNodeData).dataset;\n  let dataset = (vNode.data as VNodeData).dataset;\n  let key: string;\n\n  if (!oldDataset && !dataset) return;\n  if (oldDataset === dataset) return;\n  oldDataset = oldDataset || {};\n  dataset = dataset || {};\n  const d = elm.dataset;\n\n  for (key in oldDataset) {\n    if (!dataset[key]) {\n      if (d) {\n        if (key in d) {\n          delete d[key];\n        }\n      } else {\n        elm.removeAttribute(\n          'data-' + key.replace(CAPS_REGEX, '-$&').toLowerCase(),\n        );\n      }\n    }\n  }\n  for (key in dataset) {\n    if (oldDataset[key] !== dataset[key]) {\n      if (d) {\n        d[key] = dataset[key];\n      } else {\n        elm.setAttribute(\n          'data-' + key.replace(CAPS_REGEX, '-$&').toLowerCase(),\n          dataset[key],\n        );\n      }\n    }\n  }\n}\n\nexport const datasetModule: Module = {\n  create: updateDataset,\n  update: updateDataset,\n};\n", "import { VNode, Listener } from '../vNode';\nimport { Module } from './module';\n\nexport type On = {\n  [N in keyof HTMLElementEventMap]?: Listener<HTMLElementEventMap[N]>;\n} & {\n  [event: string]: Listener<any>;\n};\n\ntype SomeListener<N extends keyof HTMLElementEventMap> =\n  | Listener<HTMLElementEventMap[N]>\n  | Listener<any>;\n\nfunction invokeHandler<N extends keyof HTMLElementEventMap>(\n  handler: SomeListener<N> | Array<SomeListener<N>>,\n  vNode: VNode,\n  event?: Event,\n): void {\n  if (typeof handler === 'function') {\n    const temp: any = event || {};\n    // call function handler\n    handler.call(vNode, temp, vNode);\n  } else if (typeof handler === 'object') {\n    // call multiple handlers\n    for (let i = 0; i < handler.length; i++) {\n      invokeHandler(handler[i], vNode, event);\n    }\n  }\n}\n\nfunction handleEvent(event: Event, vNode: VNode) {\n  const name = event.type;\n  const on: any = vNode.data?.on;\n\n  // call event handler(s) if exists\n  if (on && on[name]) {\n    invokeHandler(on[name], vNode, event);\n  }\n}\n\nfunction createListener() {\n  return function handler(event: Event) {\n    handleEvent(event, (handler as any).vNode);\n  };\n}\n\nfunction updateEventListeners(oldVNode: VNode, vNode?: VNode): void {\n  const oldOn: any = oldVNode.data?.on;\n  const oldListener = (oldVNode as any).listener;\n  const oldElm: Element = oldVNode.elm as Element;\n  const on: any = vNode?.data?.on;\n  const elm: Element = (vNode && vNode.elm) as Element;\n  let name: string;\n\n  // optimization for reused immutable handlers\n  if (oldOn === on) {\n    return;\n  }\n\n  // remove existing listeners which no longer used\n  if (oldOn && oldListener) {\n    // if element changed or deleted we remove all existing listeners unconditionally\n    if (!on) {\n      for (name in oldOn) {\n        // remove listener if element was changed or existing listeners removed\n        oldElm.removeEventListener(name, oldListener, false);\n      }\n    } else {\n      for (name in oldOn) {\n        // remove listener if existing listener removed\n        if (!on[name]) {\n          oldElm.removeEventListener(name, oldListener, false);\n        }\n      }\n    }\n  }\n\n  // add new listeners which has not already attached\n  if (on) {\n    // reuse existing listener or create new\n    const listener = ((vNode as any).listener =\n      (oldVNode as any).listener || createListener());\n    // update vNode for listener\n    listener.vNode = vNode;\n\n    // if element changed or added we add all needed listeners unconditionally\n    if (!oldOn) {\n      for (name in on) {\n        // add listener if element was changed or new listeners added\n        elm.addEventListener(name, listener, false);\n      }\n    } else {\n      for (name in on) {\n        // add listener if new listener added\n        if (!oldOn[name]) {\n          elm.addEventListener(name, listener, false);\n        }\n      }\n    }\n  }\n}\n\nexport const eventListenersModule: Module = {\n  create: updateEventListeners,\n  update: updateEventListeners,\n  destroy: updateEventListeners,\n};\n", "import { VNode, VNodeData } from '../vNode';\nimport { Module } from './module';\n\nexport type Props = Record<string, any>;\n\nfunction updateProps(oldVNode: VNode, vNode: VNode): void {\n  let key: string;\n  let cur: any;\n  let old: any;\n  const elm: any = vNode.elm;\n  let oldProps = (oldVNode.data as VNodeData).props;\n  let props = (vNode.data as VNodeData).props;\n\n  if (!oldProps && !props) return;\n  if (oldProps === props) return;\n  oldProps = oldProps || {};\n  props = props || {};\n\n  for (key in props) {\n    cur = props[key];\n    old = oldProps[key];\n    if (old !== cur && (key !== 'value' || elm[key] !== cur)) {\n      elm[key] = cur;\n    }\n  }\n}\n\nexport const propsModule: Module = { create: updateProps, update: updateProps };\n", "import { VNode, VNodeData } from '../vNode';\nimport { Module } from './module';\nimport { CAPS_REGEX } from './dataset';\n\nexport type CSSProperties = {\n  [K in keyof CSSStyleDeclaration]?: CSSStyleDeclaration[K] | number;\n} & {\n  [event: string]: string | number;\n};\n\nconst convertKey = (key: string) =>\n  key.replace(CAPS_REGEX, '-$&').toLowerCase();\n\nfunction updateStyle(oldVNode: VNode, vNode: VNode): void {\n  let name: string;\n  const elm: any = vNode.elm;\n  let oldStyle = (oldVNode.data as VNodeData).style;\n  let style = (vNode.data as VNodeData).style;\n\n  if (!oldStyle && !style) return;\n  if (oldStyle === style) return;\n  oldStyle = oldStyle || {};\n  style = style || {};\n\n  for (name in oldStyle) {\n    if (!style[name]) {\n      if (name.slice(0, 2) === '--') {\n        elm.style.removeProperty(name);\n      } else {\n        elm.style[convertKey(name)] = '';\n      }\n    }\n  }\n  for (name in style) {\n    if (style[name] !== oldStyle[name]) {\n      if (name.slice(0, 2) === '--') {\n        elm.style.setProperty(name, style[name]);\n      } else {\n        const key = convertKey(name);\n        const t = style[name];\n        if (typeof t === 'number') {\n          elm.style[key] = t + 'px';\n        } else {\n          elm.style[key] = t;\n        }\n      }\n    }\n  }\n}\n\nexport const styleModule: Module = {\n  create: updateStyle,\n  update: updateStyle,\n};\n", "import type { StoreValue, IController } from '@/types';\nimport { VNode } from './vNode';\nimport { init } from './init';\nimport { attributesModule } from './modules/attributes';\nimport { classModule } from './modules/class';\nimport { datasetModule } from './modules/dataset';\nimport { eventListenersModule } from './modules/event';\nimport { propsModule } from './modules/props';\nimport { styleModule } from './modules/style';\nimport { htmlDomApi } from './dom';\n\ninterface DomType extends Element {\n  vDom?: VNode;\n}\n\nconst patch = init(\n  [\n    attributesModule,\n    classModule,\n    datasetModule,\n    eventListenersModule,\n    propsModule,\n    styleModule,\n  ],\n  htmlDomApi,\n);\nexport function render(container: Element, vNode: VNode): VNode {\n  const dom = container as DomType;\n  let temp: VNode;\n  if (dom.vDom) {\n    temp = patch(dom.vDom as VNode, vNode);\n  } else {\n    temp = patch(dom, vNode);\n  }\n  dom.vDom = temp;\n  return temp;\n}\n\nexport type { VNode, FunctionComponent, Children } from './vNode';\nexport { h } from './h';\nexport type { VNodePropsData } from './h';\nexport type { CSSProperties } from './modules/style';\n\nexport interface SmartComponent {\n  (props: StoreValue, controller: IController): VNode;\n  displayName: string;\n}\n", "import {\n  npx,\n  DEFAULT_FONT_CONFIG,\n  isNumber,\n  DEFAULT_FONT_SIZE,\n  DEFAULT_FONT_COLOR,\n  makeFont,\n  assert,\n  ERROR_SET,\n  ERROR_FORMULA_COLOR,\n  dpr,\n  isEmpty,\n} from '@/util';\nimport {\n  ModelCellType,\n  ErrorTypes,\n  Point,\n  EUnderLine,\n  IWindowSize,\n  ResultType,\n} from '@/types';\n\nconst measureTextMap = new Map<string, IWindowSize>();\n\nexport function measureText(\n  ctx: CanvasRenderingContext2D,\n  char: string,\n): IWindowSize {\n  const mapKey = `${char}__${ctx.font}`;\n  let temp = measureTextMap.get(mapKey);\n  if (!temp) {\n    const { actualBoundingBoxDescent, actualBoundingBoxAscent, width } =\n      ctx.measureText(char);\n    const result: IWindowSize = {\n      width: Math.ceil(width / dpr()),\n      height: Math.ceil(\n        (actualBoundingBoxDescent + actualBoundingBoxAscent) / dpr(),\n      ),\n    };\n    measureTextMap.set(mapKey, result);\n    temp = result;\n  }\n  return temp;\n}\n\nexport function fillRect(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n): void {\n  ctx.fillRect(npx(x), npx(y), npx(width), npx(height));\n}\nexport function strokeRect(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n): void {\n  ctx.strokeRect(npx(x), npx(y), npx(width), npx(height));\n}\n\nexport function clearRect(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n): void {\n  ctx.clearRect(npx(x), npx(y), npx(width), npx(height));\n}\n\nexport function fillText(\n  ctx: CanvasRenderingContext2D,\n  text: string,\n  x: number,\n  y: number,\n) {\n  ctx.fillText(text, npx(x), npx(y));\n}\n\ninterface IRenderCellResult {\n  wrapHeight?: number;\n  fontSizeHeight?: number;\n}\n\nfunction convertValueToString(value: ResultType): string {\n  let text = String(value);\n  if (\n    typeof value === 'boolean' ||\n    ['TRUE', 'FALSE'].includes(text.toUpperCase())\n  ) {\n    text = text.toUpperCase();\n  } else if (value === undefined || value === null) {\n    text = '';\n  }\n  return text;\n}\n\nexport function renderCell(\n  ctx: CanvasRenderingContext2D,\n  cellInfo: ModelCellType & {\n    left: number;\n    top: number;\n    width: number;\n    height: number;\n  },\n): IRenderCellResult {\n  const { style, value, left, top, width, height } = cellInfo;\n  const isNum = isNumber(value);\n  let font = DEFAULT_FONT_CONFIG;\n  let fillStyle = DEFAULT_FONT_COLOR;\n  if (!isEmpty(style)) {\n    const fontSize = style?.fontSize ? style.fontSize : DEFAULT_FONT_SIZE;\n    font = makeFont(\n      style?.isItalic ? 'italic' : 'normal',\n      style?.isBold ? 'bold' : '500',\n      npx(fontSize),\n      style?.fontFamily,\n    );\n    fillStyle = style?.fontColor || DEFAULT_FONT_COLOR;\n    if (style?.fillColor) {\n      ctx.fillStyle = style?.fillColor;\n      fillRect(ctx, left, top, width, height);\n    }\n  }\n  const text = convertValueToString(value);\n  if (ERROR_SET.has(text as ErrorTypes)) {\n    fillStyle = ERROR_FORMULA_COLOR;\n  }\n  const result: IRenderCellResult = {};\n  // unicode\n  const texts = [...text];\n  if (texts.length === 0) {\n    return result;\n  }\n  ctx.textAlign = isNum ? 'right' : 'left';\n  ctx.font = font;\n  ctx.fillStyle = fillStyle;\n  ctx.textBaseline = 'middle';\n  const textItemList: Array<IWindowSize & { char: string }> = [];\n  for (const char of texts) {\n    if (char) {\n      const t = measureText(ctx, char);\n      textItemList.push({\n        ...t,\n        char,\n      });\n    }\n  }\n  if (textItemList.length === 0) {\n    return result;\n  }\n  const x = left + (isNum ? width : 0);\n  if (style?.underline) {\n    ctx.strokeStyle = fillStyle;\n  }\n\n  if (style?.isWrapText) {\n    let y = top;\n    const offset = 4;\n    for (let i = 0; i < textItemList.length; ) {\n      let t = width;\n      const lastIndex = i;\n      while (i < textItemList.length && textItemList[i].width < t) {\n        t -= textItemList[i].width;\n        i++;\n      }\n      if (lastIndex !== i) {\n        let textHeight = 0;\n        const textData: string[] = [];\n        for (let k = lastIndex; k < i; k++) {\n          if (textItemList[k].height > textHeight) {\n            textHeight = textItemList[k].height;\n          }\n          textData.push(textItemList[k].char);\n        }\n        result.fontSizeHeight = Math.max(\n          result.fontSizeHeight || 0,\n          textHeight,\n        );\n\n        y = y + Math.floor(textHeight / 2) + offset;\n        const b = textData.join('');\n        fillText(ctx, b, x, y);\n\n        if (style?.underline) {\n          const t = Math.floor(y + textHeight / 2);\n          let pointList: Array<Point> = [];\n          if (!isNum) {\n            pointList = [\n              [x, t],\n              [x + width, t],\n            ];\n          } else {\n            pointList = [\n              [left, t],\n              [left + width, t],\n            ];\n          }\n          drawUnderline(ctx, pointList, style?.underline);\n        }\n        y = y + Math.floor(textHeight / 2);\n      }\n    }\n    y += offset;\n    result.wrapHeight = y - top;\n  } else {\n    const textHeight = Math.max(...textItemList.map((v) => v.height), 0);\n    result.fontSizeHeight = textHeight;\n    const offset = Math.max(0, Math.floor(height - textHeight) / 2);\n    const y = Math.floor(top + textHeight / 2 + offset);\n    let textWidth = 0;\n    const textData: string[] = [];\n    let t = width;\n    for (let i = 0; i < textItemList.length; i++) {\n      if (textItemList[i].width < t) {\n        t -= textItemList[i].width;\n        textData.push(textItemList[i].char);\n        textWidth += textItemList[i].width;\n      }\n    }\n    fillText(ctx, textData.join(''), x, y);\n    if (style?.underline) {\n      const t = Math.floor(y + textHeight / 2);\n      let pointList: Array<Point> = [];\n      if (!isNum) {\n        pointList = [\n          [x, t],\n          [x + textWidth, t],\n        ];\n      } else {\n        pointList = [\n          [left, t],\n          [left + textWidth, t],\n        ];\n      }\n      drawUnderline(ctx, pointList, style?.underline);\n    }\n  }\n  return result;\n}\n\nexport function drawLines(\n  ctx: CanvasRenderingContext2D,\n  pointList: Array<Point>,\n): void {\n  assert(pointList.length > 0);\n  ctx.beginPath();\n  for (let i = 0; i < pointList.length; i += 2) {\n    const first = pointList[i];\n    const second = pointList[i + 1];\n    ctx.moveTo(npx(first[0]), npx(first[1]));\n    ctx.lineTo(npx(second[0]), npx(second[1]));\n  }\n  ctx.stroke();\n}\n\nexport function drawTriangle(\n  ctx: CanvasRenderingContext2D,\n  point1: Point,\n  point2: Point,\n  point3: Point,\n) {\n  ctx.beginPath();\n  ctx.moveTo(npx(point1[0]), npx(point1[1]));\n  ctx.lineTo(npx(point2[0]), npx(point2[1]));\n  ctx.lineTo(npx(point3[0]), npx(point3[1]));\n  ctx.fill();\n}\n\nexport function drawAntLine(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n) {\n  const oldDash = ctx.getLineDash();\n  ctx.setLineDash([npx(8), npx(6)]);\n  const offset = dpr() / 2;\n  strokeRect(\n    ctx,\n    x + offset,\n    y + offset,\n    width - offset * 2,\n    height - offset * 2,\n  );\n  ctx.setLineDash(oldDash);\n}\n\nexport function drawUnderline(\n  ctx: CanvasRenderingContext2D,\n  pointList: Array<Point>,\n  underline: EUnderLine,\n) {\n  const [start, end] = pointList;\n  const offset = dpr();\n  const list: Array<Point> = [\n    [start[0], start[1] - offset],\n    [end[0], end[1] - offset],\n  ];\n  if (underline === EUnderLine.DOUBLE) {\n    const t = offset * 2;\n    list.push([start[0], start[1] - t], [end[0], end[1] - t]);\n  }\n  drawLines(ctx, list);\n}\n\nexport function resizeCanvas(\n  canvas: HTMLCanvasElement,\n  width: number,\n  height: number,\n): void {\n  canvas.style.width = width + 'px';\n  canvas.style.height = height + 'px';\n  const realWidth = npx(width);\n  const realHeight = npx(height);\n  canvas.width = realWidth;\n  canvas.height = realHeight;\n}\n", "import { dpr, npx, isCol, isRow, isSheet, theme } from '@/util';\nimport {\n  EventType,\n  ContentView,\n  CanvasOverlayPosition,\n  IController,\n  Point,\n} from '@/types';\nimport {\n  fillRect,\n  renderCell,\n  strokeRect,\n  drawLines,\n  clearRect,\n  drawAntLine,\n  resizeCanvas,\n} from './util';\n\nexport class MainCanvas {\n  private ctx: CanvasRenderingContext2D;\n  private content: ContentView;\n  private canvas: HTMLCanvasElement;\n  private controller: IController;\n  constructor(controller: IController, content: ContentView) {\n    const canvas = controller.getMainDom().canvas!;\n    this.canvas = canvas;\n    this.controller = controller;\n    this.ctx = canvas.getContext('2d')!;\n    this.content = content;\n    const size = dpr();\n    this.ctx.scale(size, size);\n  }\n  resize() {\n    const { width, height } = this.controller.getDomRect();\n    resizeCanvas(this.canvas, width, height);\n    this.content.resize();\n  }\n  private clear() {\n    const { width, height } = this.controller.getDomRect();\n    this.ctx.clearRect(0, 0, npx(width), npx(height));\n  }\n  render = (params: EventType) => {\n    if (params.changeSet.size === 0) {\n      return;\n    }\n    this.content.render(params);\n    this.clear();\n    this.ctx.drawImage(this.content.getCanvas(), 0, 0);\n    const result = this.renderSelection();\n    this.renderAntLine(result);\n  };\n\n  private renderAntLine(position: CanvasOverlayPosition) {\n    const { controller } = this;\n    const ranges = controller.getCopyRanges();\n    if (ranges.length === 0) {\n      return;\n    }\n    const [range] = ranges;\n    if (range.sheetId !== controller.getCurrentSheetId()) {\n      return;\n    }\n    this.ctx.strokeStyle = theme.primaryColor;\n    this.ctx.lineWidth = dpr();\n    drawAntLine(\n      this.ctx,\n      position.left,\n      position.top,\n      position.width,\n      position.height,\n    );\n  }\n\n  private renderSelection(): CanvasOverlayPosition {\n    const { controller } = this;\n    const range = controller.getActiveCell();\n    if (isSheet(range)) {\n      return this.renderSelectAll();\n    }\n    if (isCol(range)) {\n      return this.renderSelectCol();\n    }\n    if (isRow(range)) {\n      return this.renderSelectRow();\n    }\n    return this.renderSelectRange();\n  }\n\n  private renderActiveCell() {\n    const { controller } = this;\n    const cellData = controller.getCell(controller.getActiveCell());\n    const activeCell = controller.computeCellPosition(\n      cellData.row,\n      cellData.col,\n    );\n    clearRect(\n      this.ctx,\n      activeCell.left,\n      activeCell.top,\n      activeCell.width,\n      activeCell.height,\n    );\n    renderCell(\n      this.ctx,\n      { ...cellData, ...activeCell },\n    );\n  }\n  private renderSelectRange() {\n    const { controller } = this;\n    const headerSize = controller.getHeaderSize();\n    const range = controller.getActiveCell();\n    const activeCell = controller.computeCellPosition(range.row, range.col);\n    const endCellRow = range.row + range.rowCount - 1;\n    const endCellCol = range.col + range.colCount - 1;\n\n    const endCell = controller.computeCellPosition(endCellRow, endCellCol);\n    const width = endCell.left + endCell.width - activeCell.left;\n    const height = endCell.top + endCell.height - activeCell.top;\n\n    this.ctx.fillStyle = theme.selectionColor;\n\n    fillRect(this.ctx, activeCell.left, 0, width, headerSize.height);\n    fillRect(this.ctx, 0, activeCell.top, headerSize.width, height);\n    const check = range.rowCount > 1 || range.colCount > 1;\n    if (check) {\n      fillRect(this.ctx, activeCell.left, activeCell.top, width, height);\n    }\n\n    this.ctx.strokeStyle = theme.primaryColor;\n    this.ctx.lineWidth = dpr();\n\n    const list: Point[] = [\n      [activeCell.left, headerSize.height],\n      [activeCell.left + width, headerSize.height],\n    ];\n    list.push(\n      [headerSize.width, activeCell.top],\n      [headerSize.width, activeCell.top + height],\n    );\n    drawLines(this.ctx, list);\n    if (check) {\n      this.renderActiveCell();\n    }\n\n    strokeRect(this.ctx, activeCell.left, activeCell.top, width, height);\n    return {\n      left: activeCell.left,\n      top: activeCell.top,\n      width: width,\n      height: height,\n    };\n  }\n  private renderSelectAll(): CanvasOverlayPosition {\n    const { controller } = this;\n    const { width, height } = this.controller.getDomRect();\n    this.ctx.fillStyle = theme.selectionColor;\n    fillRect(this.ctx, 0, 0, width, height);\n\n    const headerSize = controller.getHeaderSize();\n    this.ctx.strokeStyle = theme.primaryColor;\n    this.ctx.lineWidth = dpr();\n    this.renderActiveCell();\n    strokeRect(\n      this.ctx,\n      headerSize.width,\n      headerSize.height,\n      width - headerSize.width,\n      height - headerSize.height,\n    );\n    return {\n      left: headerSize.width,\n      top: headerSize.height,\n      width: width - headerSize.width,\n      height: height - headerSize.height,\n    };\n  }\n  private renderSelectCol() {\n    const { controller } = this;\n    const headerSize = controller.getHeaderSize();\n    const range = controller.getActiveCell();\n    const { height } = controller.getDomRect();\n    this.ctx.fillStyle = theme.selectionColor;\n    const activeCell = controller.computeCellPosition(range.row, range.col);\n    fillRect(this.ctx, activeCell.left, 0, activeCell.width, headerSize.height);\n    fillRect(this.ctx, 0, activeCell.top, headerSize.width, height);\n    fillRect(\n      this.ctx,\n      activeCell.left,\n      activeCell.top + activeCell.height,\n      activeCell.width,\n      height - activeCell.height,\n    );\n\n    this.ctx.strokeStyle = theme.primaryColor;\n    this.ctx.lineWidth = dpr();\n    const list: Point[] = [\n      [headerSize.width, headerSize.height],\n      [headerSize.width, height - headerSize.height],\n    ];\n    drawLines(this.ctx, list);\n    strokeRect(\n      this.ctx,\n      activeCell.left,\n      activeCell.top,\n      activeCell.width,\n      height,\n    );\n    return {\n      left: activeCell.left,\n      top: activeCell.top,\n      width: activeCell.width,\n      height: height,\n    };\n  }\n  private renderSelectRow() {\n    const { controller } = this;\n    const headerSize = controller.getHeaderSize();\n    const range = controller.getActiveCell();\n    const { width } = controller.getDomRect();\n    this.ctx.fillStyle = theme.selectionColor;\n    const activeCell = controller.computeCellPosition(range.row, range.col);\n    fillRect(this.ctx, activeCell.left, 0, width, headerSize.height);\n    fillRect(this.ctx, 0, activeCell.top, headerSize.width, activeCell.height);\n\n    fillRect(\n      this.ctx,\n      activeCell.left + activeCell.width,\n      activeCell.top,\n      width - activeCell.width,\n      activeCell.height,\n    );\n\n    this.ctx.strokeStyle = theme.primaryColor;\n    this.ctx.lineWidth = dpr();\n    const list: Point[] = [\n      [activeCell.left, headerSize.height],\n      [width - headerSize.width, headerSize.height],\n    ];\n    drawLines(this.ctx, list);\n    strokeRect(\n      this.ctx,\n      activeCell.left,\n      activeCell.top,\n      width,\n      activeCell.height,\n    );\n    return {\n      left: activeCell.left,\n      top: activeCell.top,\n      width: width,\n      height: activeCell.height,\n    };\n  }\n}\n", "import { KeyboardEventItem, IController, EUnderLine } from '@/types';\nimport { BOTTOM_BUFF, SCROLL_SIZE, isMac } from '@/util';\n\nexport function computeScrollRowAndCol(\n  controller: IController,\n  left: number,\n  top: number,\n) {\n  const oldScroll = controller.getScroll();\n  let { row, col } = oldScroll;\n  if (oldScroll.top !== top) {\n    row = 0;\n    let t = top;\n    while (t > 0) {\n      const a = controller.getRowHeight(row);\n      if (a > t) {\n        break;\n      }\n      t -= a;\n      row++;\n    }\n  }\n  if (oldScroll.left !== left) {\n    col = 0;\n    let t = left;\n    while (t > 0) {\n      const a = controller.getColWidth(col);\n      if (a > t) {\n        break;\n      }\n      t -= a;\n      col++;\n    }\n  }\n\n  return {\n    row,\n    col,\n  };\n}\n\nexport function computeScrollPosition(\n  controller: IController,\n  left: number,\n  top: number,\n) {\n  const headerSize = controller.getHeaderSize();\n  const canvasRect = controller.getDomRect();\n  const viewSize = controller.getViewSize();\n  const maxHeight = viewSize.height - canvasRect.height + BOTTOM_BUFF;\n  const maxWidth = viewSize.width - canvasRect.width + BOTTOM_BUFF;\n  const maxScrollHeight =\n    canvasRect.height - headerSize.height - SCROLL_SIZE * 1.5;\n  const maxScrollWidth =\n    canvasRect.width - headerSize.width - SCROLL_SIZE * 1.5;\n\n  const scrollTop = Math.floor((top * maxScrollHeight) / maxHeight);\n  const scrollLeft = Math.floor((left * maxScrollWidth) / maxWidth);\n  return {\n    maxHeight,\n    maxWidth,\n    maxScrollHeight,\n    maxScrollWidth,\n    scrollTop,\n    scrollLeft,\n  };\n}\n\nexport function scrollBar(\n  controller: IController,\n  scrollX: number,\n  scrollY: number,\n) {\n  const oldScroll = controller.getScroll();\n  const { maxHeight, maxWidth, maxScrollHeight, maxScrollWidth } =\n    computeScrollPosition(controller, oldScroll.left, oldScroll.top);\n  let top = oldScroll.top + Math.ceil(scrollY);\n  if (top < 0) {\n    top = 0;\n  } else if (top > maxHeight) {\n    top = maxHeight;\n  }\n\n  let left = oldScroll.left + Math.ceil(scrollX);\n  if (left < 0) {\n    left = 0;\n  } else if (left > maxWidth) {\n    left = maxWidth;\n  }\n  const { row, col } = computeScrollRowAndCol(controller, left, top);\n  const scrollTop = Math.floor((top * maxScrollHeight) / maxHeight);\n  const scrollLeft = Math.floor((left * maxScrollWidth) / maxWidth);\n  controller.setScroll({\n    row,\n    col,\n    top,\n    left,\n    scrollTop,\n    scrollLeft,\n  });\n}\n\nfunction recalculateScroll(controller: IController) {\n  const activeCell = controller.getActiveCell();\n  const position = controller.computeCellPosition(\n    activeCell.row,\n    activeCell.col,\n  );\n  const domRect = controller.getDomRect();\n  const oldScroll = controller.getScroll();\n  const sheetInfo = controller.getSheetInfo(controller.getCurrentSheetId());\n  const headerSize = controller.getHeaderSize();\n  const buff = 5;\n  const { maxHeight, maxWidth, maxScrollHeight, maxScrollWidth } =\n    computeScrollPosition(controller, oldScroll.left, oldScroll.top);\n  if (position.left + position.width + buff > domRect.width) {\n    if (oldScroll.col <= sheetInfo.colCount - 2) {\n      const col = oldScroll.col + 1;\n      const left = oldScroll.left + controller.getColWidth(oldScroll.col);\n      const scrollLeft = Math.floor((left * maxScrollWidth) / maxWidth);\n      controller.setScroll({\n        ...oldScroll,\n        col,\n        left,\n        scrollLeft,\n      });\n    }\n  }\n\n  if (position.left - headerSize.width < domRect.left + buff) {\n    if (oldScroll.col >= 1) {\n      const col = oldScroll.col - 1;\n      const left = oldScroll.left - controller.getColWidth(oldScroll.col);\n      const scrollLeft = Math.floor((left * maxScrollWidth) / maxWidth);\n      controller.setScroll({\n        ...oldScroll,\n        col,\n        left,\n        scrollLeft,\n      });\n    }\n  }\n  if (position.top + position.height + buff > domRect.height) {\n    if (oldScroll.row <= sheetInfo.rowCount - 2) {\n      const row = oldScroll.row + 1;\n      const top = oldScroll.top + controller.getRowHeight(oldScroll.row);\n      const scrollTop = Math.floor((top * maxScrollHeight) / maxHeight);\n      controller.setScroll({\n        ...oldScroll,\n        row,\n        top,\n        scrollTop,\n      });\n    }\n  }\n\n  if (position.top - headerSize.height < domRect.top + buff) {\n    if (oldScroll.row >= 1) {\n      const row = oldScroll.row - 1;\n      const top = oldScroll.top - controller.getRowHeight(oldScroll.row);\n      const scrollTop = Math.floor((top * maxScrollHeight) / maxHeight);\n      controller.setScroll({\n        ...oldScroll,\n        row,\n        top,\n        scrollTop,\n      });\n    }\n  }\n}\n\nfunction checkActiveElement(controller: IController) {\n  const inputDom = controller.getMainDom().input!;\n  const isInputFocus = document.activeElement === inputDom;\n  if (isInputFocus) {\n    controller.setCellValues(\n      [[inputDom.value]],\n      [],\n      [controller.getActiveCell()],\n    );\n    inputDom.value = '';\n    inputDom.blur();\n  }\n}\n\nexport const keyboardEventList: KeyboardEventItem[] = [\n  {\n    key: 'Enter',\n    modifierKey: [],\n    handler: (controller) => {\n      checkActiveElement(controller);\n      const activeCell = controller.getActiveCell();\n      controller.setActiveCell({\n        row: activeCell.row + 1,\n        col: activeCell.col,\n        rowCount: 1,\n        colCount: 1,\n        sheetId: '',\n      });\n    },\n  },\n  {\n    key: 'Tab',\n    modifierKey: [],\n    handler: (controller) => {\n      checkActiveElement(controller);\n      const activeCell = controller.getActiveCell();\n      controller.setActiveCell({\n        row: activeCell.row,\n        col: activeCell.col + 1,\n        rowCount: 1,\n        colCount: 1,\n        sheetId: '',\n      });\n    },\n  },\n  {\n    key: 'ArrowDown',\n    modifierKey: [isMac() ? 'meta' : 'ctrl'],\n    handler: (controller) => {\n      checkActiveElement(controller);\n      const viewSize = controller.getViewSize();\n      scrollBar(controller, 0, viewSize.height);\n    },\n  },\n  {\n    key: 'ArrowUp',\n    modifierKey: [isMac() ? 'meta' : 'ctrl'],\n    handler: (controller) => {\n      checkActiveElement(controller);\n      const viewSize = controller.getViewSize();\n      scrollBar(controller, 0, -viewSize.height);\n    },\n  },\n  {\n    key: 'ArrowRight',\n    modifierKey: [isMac() ? 'meta' : 'ctrl'],\n    handler: (controller) => {\n      checkActiveElement(controller);\n      const viewSize = controller.getViewSize();\n      scrollBar(controller, viewSize.width, 0);\n    },\n  },\n  {\n    key: 'ArrowLeft',\n    modifierKey: [isMac() ? 'meta' : 'ctrl'],\n    handler: (controller) => {\n      checkActiveElement(controller);\n      const viewSize = controller.getViewSize();\n      scrollBar(controller, -viewSize.width, 0);\n    },\n  },\n  {\n    key: 'ArrowDown',\n    modifierKey: [],\n    handler: (controller) => {\n      checkActiveElement(controller);\n      const activeCell = controller.getActiveCell();\n      controller.setActiveCell({\n        row: activeCell.row + 1,\n        col: activeCell.col,\n        rowCount: 1,\n        colCount: 1,\n        sheetId: '',\n      });\n      recalculateScroll(controller);\n    },\n  },\n  {\n    key: 'ArrowUp',\n    modifierKey: [],\n    handler: (controller) => {\n      checkActiveElement(controller);\n      const activeCell = controller.getActiveCell();\n      controller.setActiveCell({\n        row: activeCell.row - 1,\n        col: activeCell.col,\n        rowCount: 1,\n        colCount: 1,\n        sheetId: '',\n      });\n      recalculateScroll(controller);\n    },\n  },\n  {\n    key: 'ArrowRight',\n    modifierKey: [],\n    handler: (controller) => {\n      checkActiveElement(controller);\n      const activeCell = controller.getActiveCell();\n      controller.setActiveCell({\n        row: activeCell.row,\n        col: activeCell.col + 1,\n        rowCount: 1,\n        colCount: 1,\n        sheetId: '',\n      });\n      recalculateScroll(controller);\n    },\n  },\n  {\n    key: 'ArrowLeft',\n    modifierKey: [],\n    handler: (controller) => {\n      checkActiveElement(controller);\n      const activeCell = controller.getActiveCell();\n      controller.setActiveCell({\n        row: activeCell.row,\n        col: activeCell.col - 1,\n        rowCount: 1,\n        colCount: 1,\n        sheetId: '',\n      });\n      recalculateScroll(controller);\n    },\n  },\n  {\n    key: 'b',\n    modifierKey: [isMac() ? 'meta' : 'ctrl'],\n    handler: (controller) => {\n      const cellData = controller.getCell(controller.getActiveCell());\n      const style = cellData.style || {};\n      style.isBold = !style.isBold;\n      controller.setCellStyle(style, [controller.getActiveCell()]);\n    },\n  },\n  {\n    key: 'i',\n    modifierKey: [isMac() ? 'meta' : 'ctrl'],\n    handler: (controller) => {\n      const cellData = controller.getCell(controller.getActiveCell());\n      const style = cellData.style || {};\n      style.isItalic = !style.isItalic;\n      controller.setCellStyle(style, [controller.getActiveCell()]);\n    },\n  },\n  {\n    key: 'u',\n    modifierKey: [isMac() ? 'meta' : 'ctrl'],\n    handler: (controller) => {\n      const cellData = controller.getCell(controller.getActiveCell());\n      const style = cellData.style || {};\n      if (\n        style.underline === undefined ||\n        style.underline === EUnderLine.NONE\n      ) {\n        style.underline = EUnderLine.SINGLE;\n      } else {\n        style.underline = EUnderLine.NONE;\n      }\n      controller.setCellStyle(style, [controller.getActiveCell()]);\n    },\n  },\n];\n", "import { StoreValue, IController, KeyboardEventItem } from '@/types';\nimport { debounce } from '@/util';\nimport { keyboardEventList, scrollBar } from './shortcut';\n\nfunction isInputEvent(event: any): boolean {\n  const name = (event?.target?.tagName || '').toLowerCase();\n  return name === 'input' || name === 'textarea';\n}\n\ntype OutSideItem = {\n  dom: Element;\n  callback: (state: StoreValue) => void;\n}\n\ntype OutSideKey = 'canvas-context-menu' | 'sheet-bar-context-menu'\n\nconst clickOutSideMap: Partial<Record<OutSideKey, OutSideItem>> = {}\n\nexport const setOutSideMap = (key: OutSideKey, item: OutSideItem) => {\n  clickOutSideMap[key] = item;\n}\n\nexport function registerGlobalEvent(\n  stateValue: StoreValue,\n  controller: IController,\n  resizeWindow: () => void,\n) {\n  function handleKeydown(event: KeyboardEvent) {\n    const list = keyboardEventList.filter((v) => v.key === event.key);\n    list.sort((a, b) => b.modifierKey.length - a.modifierKey.length);\n    let temp: KeyboardEventItem | null = null;\n    for (const item of list) {\n      if (item.modifierKey.length > 0) {\n        if (item.modifierKey.some((v) => event[`${v}Key`])) {\n          temp = item;\n          break;\n        }\n      } else {\n        temp = item;\n        break;\n      }\n    }\n    if (temp) {\n      event.preventDefault();\n      temp.handler(controller);\n      return;\n    }\n    if (event.metaKey || event.ctrlKey) {\n      console.log(event.key);\n      return;\n    }\n    if (isInputEvent(event)) {\n      return;\n    }\n\n    stateValue.isCellEditing = true;\n    controller.getMainDom().input!.focus();\n  }\n\n  const handleWheel = debounce(function (event: WheelEvent) {\n    if (event.target !== controller.getMainDom().canvas!) {\n      return;\n    }\n    scrollBar(controller, event.deltaX, event.deltaY);\n  });\n\n  function handlePaste(event: ClipboardEvent) {\n    if (isInputEvent(event)) {\n      return;\n    }\n    event.preventDefault();\n    controller.paste(event);\n  }\n\n  function handleCopy(event: ClipboardEvent) {\n    if (isInputEvent(event)) {\n      return;\n    }\n    event.preventDefault();\n    controller.copy(event);\n  }\n\n  function handleCut(event: ClipboardEvent) {\n    if (isInputEvent(event)) {\n      return;\n    }\n    event.preventDefault();\n    controller.cut(event);\n  }\n\n  function handleMouseDown(event: MouseEvent) {\n    if (!event.target) {\n      return\n    }\n    const list = Object.values(clickOutSideMap);\n    for (const item of list) {\n      if (!item.dom.contains(event.target as Node)) {\n        item.callback(stateValue);\n      }\n    }\n  }\n\n  window.addEventListener('resize', resizeWindow);\n  window.addEventListener('keydown', handleKeydown);\n  window.addEventListener('wheel', handleWheel);\n  window.addEventListener('mousedown', handleMouseDown)\n  document.body.addEventListener('paste', handlePaste);\n  document.body.addEventListener('copy', handleCopy);\n  document.body.addEventListener('cut', handleCut);\n\n  return () => {\n    window.removeEventListener('resize', resizeWindow);\n    window.removeEventListener('keydown', handleKeydown);\n    window.removeEventListener('wheel', handleWheel);\n    window.removeEventListener('mousedown', handleMouseDown)\n    document.body.removeEventListener('paste', handlePaste);\n    document.body.removeEventListener('copy', handleCopy);\n    document.body.removeEventListener('cut', handleCut);\n  };\n}\n", "import { thinLineWidth, DEFAULT_FONT_CONFIG } from '@/util';\nimport { theme } from '@/util';\n\nexport const HEADER_STYLE: Pick<\n  CanvasRenderingContext2D,\n  | 'textAlign'\n  | 'textBaseline'\n  | 'font'\n  | 'fillStyle'\n  | 'lineWidth'\n  | 'strokeStyle'\n> = {\n  textAlign: 'center',\n  textBaseline: 'middle',\n  font: DEFAULT_FONT_CONFIG,\n  fillStyle: theme.black,\n  lineWidth: thinLineWidth(),\n  strokeStyle: theme.gridStrokeColor,\n};\n", "import {\n  isEmpty,\n  thinLineWidth,\n  npx,\n  dpr,\n  intToColumnName,\n  isTestEnv,\n  Range,\n  theme,\n} from '@/util';\nimport {\n  fillRect,\n  fillText,\n  drawLines,\n  renderCell,\n  drawTriangle,\n  resizeCanvas,\n} from './util';\nimport { HEADER_STYLE } from './constant';\nimport { Point, ContentView, IController, EventType } from '@/types';\n\nexport class Content implements ContentView {\n  private canvas: HTMLCanvasElement;\n  private ctx: CanvasRenderingContext2D;\n  private controller: IController;\n  constructor(controller: IController, canvas: HTMLCanvasElement) {\n    this.controller = controller;\n    this.canvas = canvas;\n    const ctx = this.canvas.getContext('2d')!;\n    this.ctx = ctx;\n    const size = dpr();\n    this.ctx.scale(size, size);\n  }\n  getCanvas() {\n    return this.canvas;\n  }\n  resize() {\n    const { width, height } = this.controller.getDomRect();\n    resizeCanvas(this.canvas, width, height);\n  }\n\n  private clear() {\n    const { width, height } = this.controller.getDomRect();\n    this.ctx.clearRect(0, 0, npx(width), npx(height));\n  }\n\n  render({ changeSet }: EventType) {\n    if (changeSet.size === 0 || !changeSet.has('content')) {\n      return;\n    }\n    const { width, height } = this.controller.getDomRect();\n    const headerSize = this.controller.getHeaderSize();\n    this.clear();\n    const contentWidth = width - headerSize.width;\n    const contentHeight = height - headerSize.height;\n    this.renderGrid(contentWidth, contentHeight);\n    this.renderRowsHeader(contentHeight);\n    this.renderColsHeader(contentWidth);\n    this.renderTriangle();\n    this.renderContent();\n  }\n  private renderContent(): void {\n    const { controller, ctx } = this;\n    const { width, height } = controller.getDomRect();\n    const headerSize = controller.getHeaderSize();\n    const currentSheetId = controller.getCurrentSheetId();\n    const { row, col } = controller.getScroll();\n\n    let x = headerSize.width;\n    let c = col;\n    let y = headerSize.height;\n    let r = row;\n\n    while (1) {\n      const t = controller.getColWidth(c);\n      if (x + t < width) {\n        x += t;\n        c++;\n      } else {\n        break;\n      }\n    }\n\n    while (1) {\n      const t = controller.getRowHeight(r);\n      if (y + t < height) {\n        y += t;\n        r++;\n      } else {\n        break;\n      }\n    }\n    const endRow = r;\n    const endCol = c;\n    ctx.save();\n    y = headerSize.height;\n    for (let r = row; r < endRow; r++) {\n      x = headerSize.width;\n      for (let c = col; c < endCol; c++) {\n        const cellInfo = controller.getCell(\n          new Range(r, c, 1, 1, currentSheetId),\n        );\n        if (isEmpty(cellInfo.value) && isEmpty(cellInfo.style)) {\n          x += controller.getColWidth(c);\n          continue;\n        }\n        const cellSize = controller.getCellSize(r, c);\n        const { wrapHeight = 0, fontSizeHeight = 0 } = renderCell(ctx, {\n          ...cellInfo,\n          ...cellSize,\n          top: y,\n          left: x,\n        });\n        const t = Math.max(wrapHeight, fontSizeHeight);\n        if (t > cellSize.height) {\n          controller.setRowHeight(r, t);\n        }\n        x += controller.getColWidth(c);\n      }\n      y += controller.getRowHeight(r);\n    }\n    ctx.restore();\n  }\n  private renderTriangle(): void {\n    if (isTestEnv()) {\n      return;\n    }\n    const headerSize = this.controller.getHeaderSize();\n    this.ctx.save();\n    this.ctx.fillStyle = theme.backgroundColor;\n\n    fillRect(this.ctx, 0, 0, headerSize.width, headerSize.height);\n    this.ctx.fillStyle = theme.triangleFillColor;\n    const offset = 2;\n    drawTriangle(\n      this.ctx,\n      [headerSize.width / 2 - offset, headerSize.height - offset],\n      [headerSize.width - offset, headerSize.height - offset],\n      [headerSize.width - offset, offset],\n    );\n\n    this.ctx.restore();\n  }\n\n  private renderGrid(width: number, height: number): void {\n    const { controller } = this;\n    const headerSize = controller.getHeaderSize();\n    const { row: rowIndex, col: colIndex } = controller.getScroll();\n    const { rowCount, colCount } = this.controller.getSheetInfo(\n      this.controller.getCurrentSheetId(),\n    );\n    const lineWidth = thinLineWidth();\n    this.ctx.save();\n    this.ctx.fillStyle = theme.white;\n    this.ctx.lineWidth = lineWidth;\n    this.ctx.strokeStyle = theme.gridStrokeColor;\n    this.ctx.translate(npx(headerSize.width), npx(headerSize.height));\n    const pointList: Array<Point> = [];\n    let y = 0;\n    let x = 0;\n    let maxX = 0;\n    for (let i = colIndex; i < colCount; i++) {\n      maxX += controller.getColWidth(i);\n      if (maxX > width) {\n        break;\n      }\n    }\n    const realWidth = Math.min(maxX, width);\n    for (let i = rowIndex; i < rowCount; i++) {\n      pointList.push([0, y], [realWidth, y]);\n      y += controller.getRowHeight(i);\n      if (y > height) {\n        break;\n      }\n    }\n    for (let i = colIndex; i < colCount; i++) {\n      pointList.push([x, 0], [x, y]);\n      x += controller.getColWidth(i);\n      if (x > realWidth) {\n        break;\n      }\n    }\n    pointList.push([0, y], [x, y]);\n    pointList.push([x, 0], [x, y]);\n    drawLines(this.ctx, pointList);\n    this.ctx.restore();\n  }\n  private fillRowText(row: number, rowWidth: number, y: number): void {\n    this.ctx.fillStyle = theme.black;\n    fillText(this.ctx, String(row), rowWidth / 2, y);\n  }\n\n  private fillColText(colText: string, x: number, colHeight: number): void {\n    this.ctx.fillStyle = theme.black;\n    fillText(this.ctx, colText, x, colHeight / 2 + dpr());\n  }\n  private renderRowsHeader(height: number): void {\n    const { controller } = this;\n    const { row: rowIndex } = controller.getScroll();\n    const headerSize = controller.getHeaderSize();\n    const { rowCount } = controller.getSheetInfo(\n      controller.getCurrentSheetId(),\n    );\n    this.ctx.save();\n    this.ctx.fillStyle = theme.backgroundColor;\n    fillRect(this.ctx, 0, headerSize.height, headerSize.width, height);\n    Object.assign(this.ctx, HEADER_STYLE);\n    const pointList: Array<Point> = [];\n    let y = headerSize.height;\n    let i = rowIndex;\n\n    for (; i < rowCount; i++) {\n      const rowHeight = controller.getRowHeight(i);\n      let temp = y;\n      if (i === rowIndex) {\n        temp += thinLineWidth() / 2;\n      }\n      pointList.push([0, temp], [headerSize.width, temp]);\n      this.fillRowText(i + 1, headerSize.width, temp + rowHeight / 2);\n      y += rowHeight;\n      if (y > height) {\n        break;\n      }\n    }\n    pointList.push([0, y], [headerSize.width, y]);\n    pointList.push([0, 0], [0, y]);\n    drawLines(this.ctx, pointList);\n    this.ctx.restore();\n  }\n  private renderColsHeader(width: number): void {\n    const { controller } = this;\n\n    const { col: colIndex } = controller.getScroll();\n    const headerSize = controller.getHeaderSize();\n    const { colCount } = controller.getSheetInfo(\n      controller.getCurrentSheetId(),\n    );\n    const pointList: Array<Point> = [];\n    this.ctx.save();\n    this.ctx.fillStyle = theme.backgroundColor;\n    fillRect(this.ctx, headerSize.width, 0, width, headerSize.height);\n    Object.assign(this.ctx, HEADER_STYLE);\n\n    let x = headerSize.width;\n    let i = colIndex;\n    for (; i < colCount; i++) {\n      const colWidth = controller.getColWidth(i);\n      let temp = x;\n      if (i === colIndex) {\n        temp += thinLineWidth() / 2;\n      }\n      pointList.push([temp, 0], [temp, headerSize.height]);\n      this.fillColText(\n        intToColumnName(i),\n        temp + colWidth / 2,\n        headerSize.height,\n      );\n      x += colWidth;\n      if (x > width) {\n        break;\n      }\n    }\n    pointList.push([x, 0], [x, headerSize.height]);\n    pointList.push([0, 0], [x, 0]);\n    drawLines(this.ctx, pointList);\n    this.ctx.restore();\n  }\n}\n", "import { h, SmartComponent } from '@/react';\nimport { IController, ScrollStatus } from '@/types';\nimport { SCROLL_SIZE, getHitInfo } from '@/util';\nimport { computeScrollRowAndCol, computeScrollPosition } from '@/canvas';\nconst DOUBLE_CLICK_TIME = 300;\nfunction scrollBar(controller: IController, scrollX: number, scrollY: number) {\n  const oldScroll = controller.getScroll();\n  const { maxHeight, maxScrollHeight, maxScrollWidth, maxWidth } =\n    computeScrollPosition(controller, oldScroll.left, oldScroll.top);\n\n  let scrollTop = oldScroll.scrollTop + Math.ceil(scrollY);\n  let scrollLeft = oldScroll.scrollLeft + Math.ceil(scrollX);\n  if (scrollTop < 0) {\n    scrollTop = 0;\n  } else if (scrollTop > maxScrollHeight) {\n    scrollTop = maxScrollHeight;\n  }\n  if (scrollLeft < 0) {\n    scrollLeft = 0;\n  } else if (scrollLeft > maxScrollWidth) {\n    scrollLeft = maxScrollWidth;\n  }\n  const top = Math.floor((maxHeight * scrollTop) / maxScrollHeight);\n  const left = Math.floor((maxWidth * scrollLeft) / maxScrollWidth);\n  const { row, col } = computeScrollRowAndCol(controller, left, top);\n  controller.setScroll({\n    top,\n    left,\n    row,\n    col,\n    scrollLeft,\n    scrollTop,\n  });\n}\n\nlet prevPageY = 0;\nlet prevPageX = 0;\nlet scrollStatus = ScrollStatus.NONE;\nlet lastTimeStamp = 0;\n\nexport const CanvasContainer: SmartComponent = (state, controller) => {\n  const headerSize = controller.getHeaderSize();\n  const scrollData = controller.getScroll();\n  function handleDrag(event: MouseEvent) {\n    event.stopPropagation();\n    if (scrollStatus === ScrollStatus.VERTICAL) {\n      if (prevPageY) {\n        scrollBar(controller, 0, event.pageY - prevPageY);\n      }\n      prevPageY = event.pageY;\n    } else if (scrollStatus === ScrollStatus.HORIZONTAL) {\n      if (prevPageX) {\n        scrollBar(controller, event.pageX - prevPageX, 0);\n      }\n      prevPageX = event.pageX;\n    }\n  }\n  function handleDragEnd() {\n    scrollStatus = ScrollStatus.NONE;\n    prevPageY = 0;\n    prevPageX = 0;\n    tearDown();\n  }\n  function tearDown() {\n    document.removeEventListener('mousemove', handleDrag);\n    document.removeEventListener('mouseup', handleDragEnd);\n  }\n  function register() {\n    document.addEventListener('mousemove', handleDrag);\n    document.addEventListener('mouseup', handleDragEnd);\n  }\n  return h(\n    'div',\n    {\n      className: 'relative canvas-container',\n    },\n    h('canvas', {\n      className: 'full canvas-content',\n      hook: {\n        ref(dom) {\n          const canvas = dom as HTMLCanvasElement;\n          controller.setMainDom({ canvas });\n        },\n      },\n      oncontextmenu(event) {\n        event.preventDefault();\n        state.contextMenuPosition = {\n          top: event.clientY,\n          left: event.clientX,\n          width: 100,\n          height: 100,\n        };\n        return false;\n      },\n      onmousemove(event) {\n        const headerSize = controller.getHeaderSize();\n        const rect = controller.getDomRect();\n        const { clientX, clientY } = event;\n        const x = clientX - rect.left;\n        const y = clientY - rect.top;\n        if (event.buttons === 1) {\n          if (x > headerSize.width && y > headerSize.height) {\n            const position = getHitInfo(event, controller);\n            if (!position) {\n              return;\n            }\n            const activeCell = controller.getActiveCell();\n            if (\n              activeCell.row === position.row &&\n              activeCell.col === position.col\n            ) {\n              return;\n            }\n            const colCount = Math.abs(position.col - activeCell.col) + 1;\n            const rowCount = Math.abs(position.row - activeCell.row) + 1;\n            controller.setActiveCell({\n              row: Math.min(position.row, activeCell.row),\n              col: Math.min(position.col, activeCell.col),\n              rowCount,\n              colCount,\n              sheetId: '',\n            });\n          }\n        }\n      },\n      onmousedown(event) {\n        const headerSize = controller.getHeaderSize();\n        const canvasRect = controller.getDomRect();\n        const { timeStamp, clientX, clientY } = event;\n        const x = clientX - canvasRect.left;\n        const y = clientY - canvasRect.top;\n        const position = getHitInfo(event, controller);\n        if (!position) {\n          return;\n        }\n        if (headerSize.width > x && headerSize.height > y) {\n          controller.setActiveCell({\n            row: 0,\n            col: 0,\n            colCount: 0,\n            rowCount: 0,\n            sheetId: '',\n          });\n          return;\n        }\n        if (headerSize.width > x && headerSize.height <= y) {\n          const sheetInfo = controller.getSheetInfo(\n            controller.getCurrentSheetId(),\n          );\n          controller.setActiveCell({\n            row: position.row,\n            col: position.col,\n            rowCount: 0,\n            colCount: sheetInfo.colCount,\n            sheetId: '',\n          });\n          return;\n        }\n        if (headerSize.width <= x && headerSize.height > y) {\n          const sheetInfo = controller.getSheetInfo(\n            controller.getCurrentSheetId(),\n          );\n          controller.setActiveCell({\n            row: position.row,\n            col: position.col,\n            rowCount: sheetInfo.rowCount,\n            colCount: 0,\n            sheetId: '',\n          });\n          return;\n        }\n        const activeCell = controller.getActiveCell();\n        const check =\n          activeCell.row >= 0 &&\n          activeCell.row === position.row &&\n          activeCell.col === position.col;\n        if (!check) {\n          const inputDom = controller.getMainDom().input!;\n          const isInputFocus = document.activeElement === inputDom;\n          if (isInputFocus) {\n            const value = inputDom.value;\n            controller.setCellValues(\n              [[value]],\n              [],\n              [controller.getActiveCell()],\n            );\n            state.isCellEditing = false;\n            inputDom.value = '';\n          }\n          controller.setActiveCell({\n            row: position.row,\n            col: position.col,\n            rowCount: 1,\n            colCount: 1,\n            sheetId: '',\n          });\n        } else {\n          const delay = timeStamp - lastTimeStamp;\n          if (delay < DOUBLE_CLICK_TIME) {\n            state.isCellEditing = true;\n          }\n        }\n\n        lastTimeStamp = timeStamp;\n      },\n    }),\n    h(\n      'div',\n      {\n        className: 'vertical-scroll-bar',\n        style: {\n          top: headerSize.height,\n        },\n        onmouseleave() {\n          handleDragEnd();\n        },\n        onmousedown() {\n          if (scrollStatus) {\n            return;\n          }\n          scrollStatus = ScrollStatus.VERTICAL;\n          register();\n        },\n      },\n      h('div', {\n        className: 'vertical-scroll-bar-content',\n        style: {\n          height: SCROLL_SIZE,\n          transform: `translateY(${scrollData.scrollTop}px)`,\n        },\n      }),\n    ),\n    h(\n      'div',\n      {\n        className: 'horizontal-scroll-bar',\n        style: {\n          left: headerSize.width,\n        },\n        onmouseleave() {\n          handleDragEnd();\n        },\n        onmousedown() {\n          if (scrollStatus) {\n            return;\n          }\n          scrollStatus = ScrollStatus.HORIZONTAL;\n          register();\n        },\n      },\n      h('div', {\n        className: 'horizontal-scroll-bar-content',\n        style: {\n          width: SCROLL_SIZE,\n          transform: `translateX(${scrollData.scrollLeft}px)`,\n        },\n      }),\n    ),\n  );\n};\nCanvasContainer.displayName = 'CanvasContainer';\n", "import { h, FunctionComponent, CSSProperties, VNodePropsData } from '@/react';\nimport { classnames } from '@/util';\n\nexport interface ButtonProps {\n  type?: 'normal' | 'circle';\n  style?: CSSProperties;\n  active?: boolean;\n  disabled?: boolean;\n  onClick?: (event: MouseEvent) => void;\n  className?: string;\n  title?: string;\n  testId?: string;\n  dataType?: string;\n  buttonType?: string;\n}\n\nexport const Button: FunctionComponent<ButtonProps> = (props, ...children) => {\n  const {\n    className = '',\n    onClick,\n    disabled = false,\n    active = false,\n    type = 'normal',\n    style = {},\n    testId = undefined,\n    title,\n    dataType,\n    buttonType,\n  } = props;\n  const realProps: VNodePropsData = {\n    className: classnames('button-wrapper', className, {\n      disabled,\n      active,\n      circle: type === 'circle',\n    }),\n    style,\n    title,\n    'data-testId': testId,\n    'data-type': dataType,\n    type: buttonType,\n  };\n  if (onClick) {\n    realProps.onclick = onClick;\n  }\n  return h('button', realProps, ...children);\n};\nButton.displayName = 'Button';\n", "import { h, FunctionComponent } from '@/react';\n\nconst pathStyle = {\n  'transform-origin': '130px 106px',\n};\n\nexport const Github: FunctionComponent = () => {\n  return h(\n    'a',\n    {\n      href: 'https://github.com/nusr/excel',\n      'aria-label': 'View source on Github',\n      target: '_blank',\n      rel: 'noreferrer',\n      title: 'github link'\n    },\n    h(\n      'svg',\n      {\n        className: 'github-wrapper',\n        viewBox: '0 0 250 250',\n        'aria-hidden': true,\n      },\n      h('path', {\n        d: 'M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z',\n      }),\n      h('path', {\n        d: 'M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2',\n        fill: 'currentColor',\n        style: pathStyle,\n      }),\n      h('path', {\n        style: pathStyle,\n        fill: 'currentColor',\n        d: 'M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z',\n      }),\n    ),\n  );\n};\nGithub.displayName = 'Github';\n", "export type BaseIconName =\n  | 'alignCenter'\n  | 'alignLeft'\n  | 'alignRight'\n  | 'bold'\n  | 'fontColor'\n  | 'italic'\n  | 'middleAlign'\n  | 'plus'\n  | 'redo'\n  | 'underline'\n  | 'undo';\n\nconst icon: Record<BaseIconName, string[]> = {\n  alignCenter: [\n    'M142.2 227.6h739.6v56.9H142.2zM142.2 568.9h739.6v56.9H142.2zM256 398.2h512v56.9H256zM256 739.6h512v56.9H256z',\n  ],\n  alignLeft: [\n    'M627.712 788.48c11.305 0 20.48-9.155 20.48-20.48s-9.175-20.48-20.48-20.48H218.46c-11.305 0-20.48 9.155-20.48 20.48s9.175 20.48 20.48 20.48h409.252zM832.86 583.68h-614.4c-11.305 0-20.48 9.155-20.48 20.48s9.175 20.48 20.48 20.48h614.4c11.305 0 20.48-9.155 20.48-20.48s-9.175-20.48-20.48-20.48zM832.86 256h-614.4c-11.305 0-20.48 9.155-20.48 20.48s9.175 20.48 20.48 20.48h614.4c11.305 0 20.48-9.155 20.48-20.48S844.165 256 832.86 256zM218.46 460.8h409.252c11.305 0 20.48-9.155 20.48-20.48s-9.175-20.48-20.48-20.48H218.46c-11.305 0-20.48 9.155-20.48 20.48s9.155 20.48 20.48 20.48z',\n  ],\n  alignRight: [\n    'M832.86 747.52H423.588a20.48 20.48 0 1 0 0 40.96H832.84a20.48 20.48 0 0 0 0.02-40.96z m20.48-143.36a20.48 20.48 0 0 0-20.48-20.48h-614.4a20.48 20.48 0 1 0 0 40.96h614.4a20.48 20.48 0 0 0 20.48-20.48zM832.86 256h-614.4a20.48 20.48 0 1 0 0 40.96h614.4a20.48 20.48 0 1 0 0-40.96z m0 163.84H423.588a20.48 20.48 0 1 0 0 40.96H832.84a20.48 20.48 0 0 0 0.02-40.96z',\n  ],\n  bold: [\n    'M724.342857 477.028571c38.4-40 61.942857-94.057143 61.942857-153.485714v-11.657143C786.285714 188.914286 685.6 89.142857 561.485714 89.142857H223.314286c-17.257143 0-31.314286 14.057143-31.314286 31.314286v776.114286c0 18.628571 15.085714 33.714286 33.714286 33.714285h364.228571c133.714286 0 242.057143-107.657143 242.057143-240.571428v-12.571429c0-83.428571-42.742857-156.914286-107.657143-200.114286zM301.714286 198.857143h256.8c65.257143 0 118.057143 50.742857 118.057143 113.485714v10.857143c0 62.628571-52.914286 113.485714-118.057143 113.485714H301.714286V198.857143z m418.971428 490.742857c0 71.885714-59.085714 130.171429-132 130.171429H301.714286V547.085714h286.971428c72.914286 0 132 58.285714 132 130.171429v12.342857z',\n  ],\n  fontColor: [\n    'M650.496 597.333333H373.504l-68.266667 170.666667H213.333333l256-640h85.333334l256 640h-91.904l-68.266667-170.666667z m-34.133333-85.333333L512 251.093333 407.637333 512h208.725334zM128 853.333333h768v85.333334H128v-85.333334z',\n  ],\n  italic: [\n    'M219.428571 949.714286l9.714286-48.571429q3.428571-1.142857 46.571429-12.285714t63.714286-21.428571q16-20 23.428571-57.714286 0.571429-4 35.428571-165.142857t65.142857-310.571429 29.714286-169.428571l0-14.285714q-13.714286-7.428571-31.142857-10.571429t-39.714286-4.571429-33.142857-3.142857l10.857143-58.857143q18.857143 1.142857 68.571429 3.714286t85.428571 4 68.857143 1.428571q27.428571 0 56.285714-1.428571t69.142857-4 56.285714-3.714286q-2.857143 22.285714-10.857143 50.857143-17.142857 5.714286-58 16.285714t-62 19.142857q-4.571429 10.857143-8 24.285714t-5.142857 22.857143-4.285714 26-3.714286 24q-15.428571 84.571429-50 239.714286t-44.285714 203.142857q-1.142857 5.142857-7.428571 33.142857t-11.428571 51.428571-9.142857 47.714286-3.428571 32.857143l0.571429 10.285714q9.714286 2.285714 105.714286 17.714286-1.714286 25.142857-9.142857 56.571429-6.285714 0-18.571429 0.857143t-18.571429 0.857143q-16.571429 0-49.714286-5.714286t-49.142857-5.714286q-78.857143-1.142857-117.714286-1.142857-29.142857 0-81.714286 5.142857t-69.142857 6.285714z',\n  ],\n  middleAlign: [\n    'M740.43392 788.48c11.30496 0 20.48-9.15456 20.48-20.48s-9.17504-20.48-20.48-20.48L331.18208 747.52c-11.30496 0-20.48 9.15456-20.48 20.48s9.17504 20.48 20.48 20.48L740.43392 788.48zM863.49824 604.16c0-11.32544-9.17504-20.48-20.48-20.48l-614.4 0c-11.30496 0-20.48 9.15456-20.48 20.48s9.17504 20.48 20.48 20.48l614.4 0C854.3232 624.64 863.49824 615.48544 863.49824 604.16zM208.13824 276.48c0 11.32544 9.17504 20.48 20.48 20.48l614.4 0c11.30496 0 20.48-9.15456 20.48-20.48s-9.17504-20.48-20.48-20.48l-614.4 0C217.2928 256 208.13824 265.15456 208.13824 276.48zM740.43392 460.8c11.30496 0 20.48-9.15456 20.48-20.48s-9.17504-20.48-20.48-20.48L331.18208 419.84c-11.30496 0-20.48 9.15456-20.48 20.48s9.17504 20.48 20.48 20.48L740.43392 460.8z',\n  ],\n  plus: [\n    'M896 468.571429H555.428571V100.571429h-86.857142v368H128c-5.028571 0-9.142857 4.114286-9.142857 9.142857v68.571428c0 5.028571 4.114286 9.142857 9.142857 9.142857h340.571429v368h86.857142V555.428571h340.571429c5.028571 0 9.142857-4.114286 9.142857-9.142857v-68.571428c0-5.028571-4.114286-9.142857-9.142857-9.142857z',\n  ],\n  redo: [\n    'M611.783111 569.344L549.622519 644.740741h284.444444l-65.498074-265.481482-59.922963 72.666074c-35.422815-28.48237-108.278519-68.342519-238.667852-68.342518-202.827852 0-280.651852 206.01363-280.651852 206.013629s116.318815-132.778667 246.215111-132.778666c97.204148-0.037926 153.865481 74.827852 176.241778 112.526222z',\n  ],\n  underline: [\n    'M512 725.333333c166.4 0 298.666667-132.266667 298.666667-298.666666V128c0-25.6-17.066667-42.666667-42.666667-42.666667s-42.666667 17.066667-42.666667 42.666667v298.666667c0 119.466667-93.866667 213.333333-213.333333 213.333333s-213.333333-93.866667-213.333333-213.333333V128c0-25.6-17.066667-42.666667-42.666667-42.666667s-42.666667 17.066667-42.666667 42.666667v298.666667c0 166.4 132.266667 298.666667 298.666667 298.666666zM853.333333 853.333333H170.666667c-25.6 0-42.666667 17.066667-42.666667 42.666667s17.066667 42.666667 42.666667 42.666667h682.666666c25.6 0 42.666667-17.066667 42.666667-42.666667s-17.066667-42.666667-42.666667-42.666667z',\n  ],\n  undo: [\n    'M489.244444 568.888889l60.681482 75.851852H265.481481l64.474075-265.481482 60.681481 72.05926c34.133333-30.340741 109.985185-68.266667 238.933333-68.266667 201.007407 0 280.651852 204.8 280.651852 204.8S792.651852 455.111111 663.703704 455.111111c-98.607407 0-155.496296 75.851852-174.45926 113.777778z',\n  ],\n};\n\nexport default icon;\n", "import { h, FunctionComponent } from '@/react';\nimport { classnames } from '@/util';\n\ntype PathItem = {\n  d: string;\n  'fill-opacity'?: string;\n};\n\nexport interface BaseIconProps {\n  className?: string;\n  paths: PathItem[];\n}\n\nexport const BaseIcon: FunctionComponent<BaseIconProps> = ({\n  className = '',\n  paths = [],\n}) => {\n  return h(\n    'svg',\n    {\n      className: classnames('base-icon', className),\n      viewBox: '0 0 1137 1024',\n      'aria-hidden': true,\n    },\n    ...paths.map((item) => h('path', item)),\n  );\n};\nBaseIcon.displayName = 'BaseIcon';\n", "import type { FunctionComponent } from '@/react'\nimport { BaseIcon } from './BaseIcon';\n\nexport const FillColorIcon: FunctionComponent = () => {\n  return BaseIcon({\n    paths: [\n      {\n        d: 'M0 0h1024v1024H0z',\n        'fill-opacity': '.01',\n      },\n      {\n        d: 'M496.512 32a128 128 0 0 1 127.84 121.6l0.16 6.4-0.032 113.504 264.256 264.256a32 32 0 0 1-8.16 51.2l-144.064 72.96-269.12 269.12a64 64 0 0 1-90.496 0l-294.144-294.176a64 64 0 0 1 0-90.496l286.016-286.08-0.192-2.048-0.064-2.08V160a128 128 0 0 1 128-128z m-6.464 197.568L128 591.616l294.144 294.144 276.32-276.32 113.792-57.632-187.776-187.776V416a32 32 0 0 1-28.256 31.776l-3.712 0.224a32 32 0 0 1-31.808-28.256L560.512 416l-0.032-115.968-70.432-70.464z m402.016 395.936l1.792 2.24 5.472 8.416c30.112 46.752 45.184 80.032 45.184 99.84a64 64 0 1 1-128 0c0-20.96 16.864-57.024 50.624-108.224a16 16 0 0 1 24.928-2.24zM496.512 96a64 64 0 0 0-63.84 59.2l-0.16 4.8-0.032 36.576 34.944-34.88a32 32 0 0 1 45.248 0l47.808 47.808V160a64 64 0 0 0-59.2-63.84L496.48 96z',\n      },\n    ],\n  });\n};\nFillColorIcon.displayName = 'FillColorIcon';\n", "import type { FunctionComponent } from '@/react'\nimport iconConfig from './icon';\nimport type { BaseIconName } from './icon';\nimport { BaseIcon, BaseIconProps } from './BaseIcon';\n\nexport interface IconProps {\n  name: BaseIconName;\n  className?: string;\n}\n\nexport const Icon: FunctionComponent<IconProps> = ({ name, className = '' }) => {\n  const paths = iconConfig[name].map((item) => ({ d: item }));\n  return BaseIcon({ className, paths });\n};\nIcon.displayName = 'Icon';\n\nexport { BaseIcon, BaseIconProps };\n\nexport { FillColorIcon } from './FillColorIcon';\n", "import { h, CSSProperties, FunctionComponent } from '@/react';\nimport { classnames } from '@/util';\nimport { OptionItem } from '@/types';\n\nexport type SelectProps = {\n  value?: string | number;\n  style?: CSSProperties;\n  data: Array<string | number | OptionItem>;\n  getItemStyle?: (value: string | number) => CSSProperties;\n  onChange: (value: string | number) => void;\n  title?: string;\n};\n\nexport const Select: FunctionComponent<SelectProps> = (props) => {\n  const {\n    data,\n    value: activeValue,\n    style = {},\n    onChange,\n    getItemStyle = () => ({}),\n    title,\n  } = props;\n  const handleChange = (event: any) => {\n    const { value } = event.target;\n    onChange(value);\n  };\n  return h(\n    'select',\n    {\n      onchange: handleChange,\n      value: activeValue,\n      style,\n      name: 'select',\n      className: 'select-list',\n      title,\n    },\n    ...data.map((item) => {\n      const value = typeof item === 'object' ? item.value : item;\n      const label = typeof item === 'object' ? item.label : item;\n      const disabled = typeof item === 'object' ? item.disabled : false;\n      const itemStyle = getItemStyle(value);\n      return h(\n        'option',\n        {\n          key: value,\n          value,\n          style: itemStyle,\n          disabled: !!disabled,\n          className: classnames('select-item', { disabled }),\n        },\n        label,\n      );\n    }),\n  );\n};\nSelect.displayName = 'Select';\n", "import { h, FunctionComponent, CSSProperties } from '@/react';\nimport { classnames } from '@/util';\nexport type ColorPickerProps = {\n  color: string;\n  style?: CSSProperties;\n  key: string;\n  onChange: (value: string) => void;\n};\nconst NO_FILL = 'No Fill';\nconst COLOR_LIST = [\n  '#4D4D4D',\n  '#999999',\n  '#FFFFFF',\n  '#F44E3B',\n  '#FE9200',\n  '#FCDC00',\n  '#DBDF00',\n  '#A4DD00',\n  '#68CCCA',\n  '#73D8FF',\n  '#AEA1FF',\n  '#FDA1FF',\n  '#333333',\n  '#808080',\n  '#cccccc',\n  '#D33115',\n  '#E27300',\n  '#FCC400',\n  '#B0BC00',\n  '#68BC00',\n  '#16A5A5',\n  '#009CE0',\n  '#7B64FF',\n  '#FA28FF',\n  '#000000',\n  '#666666',\n  '#B3B3B3',\n  '#9F0500',\n  '#C45100',\n  '#FB9E00',\n  '#808900',\n  '#194D33',\n  '#0C797D',\n  '#0062B1',\n  '#653294',\n  '#AB149E',\n  NO_FILL,\n];\n\nconst baseClassName = 'color-picker-wrapper';\n\nexport const ColorPicker: FunctionComponent<ColorPickerProps> = (\n  props,\n  ...children\n) => {\n  const { color, style = {}, onChange, key } = props;\n  let ref: Element;\n  const toggleVisible = (value: boolean) => {\n    let className = baseClassName;\n    if (value) {\n      className = className + ' ' + 'show';\n    }\n    ref.className = className;\n  };\n  return h(\n    'div',\n    {\n      className: 'relative color-picker',\n      key,\n      style: style,\n    },\n    h(\n      'div',\n      {\n        className: 'color-picker-trigger',\n        style: {\n          color,\n        },\n        onclick: () => {\n          toggleVisible(true);\n        },\n      },\n      ...children,\n    ),\n\n    h(\n      'div',\n      {\n        className: baseClassName,\n        hook: {\n          ref: (dom) => {\n            ref = dom;\n          },\n        },\n        onmouseleave() {\n          toggleVisible(false);\n        },\n      },\n      h(\n        'div',\n        {\n          className: 'color-picker-list',\n        },\n        ...COLOR_LIST.map((item) =>\n          h(\n            'div',\n            {\n              key: item,\n              className: classnames('color-picker-item', {\n                'no-fill': item === NO_FILL,\n              }),\n              style: {\n                backgroundColor: item,\n              },\n              onclick: () => {\n                toggleVisible(false);\n                onChange(item === NO_FILL ? '' : item);\n              },\n            },\n            item === NO_FILL ? NO_FILL : '',\n          ),\n        ),\n      ),\n    ),\n  );\n};\nColorPicker.displayName = 'ColorPicker';\n", "import { h, FunctionComponent, Children, CSSProperties } from '@/react';\nimport { assert } from '@/util';\nimport { Button } from '../Button';\n\nexport interface DialogProps {\n  dialogContent: Children;\n  testId?: string;\n  title: string;\n  dialogStyle?: CSSProperties;\n  onOk?: () => void;\n  onCancel?: () => void;\n}\n\nexport const Dialog: FunctionComponent<DialogProps> = (props, ...children) => {\n  const { dialogContent, title, dialogStyle, onCancel, onOk } = props;\n  let ref: HTMLDialogElement;\n  return h(\n    'div',\n    { className: 'dialog-container' },\n    h(\n      'dialog',\n      {\n        className: 'dialog-element',\n        style: dialogStyle,\n        hook: {\n          ref(dom) {\n            ref = dom as HTMLDialogElement;\n          },\n        },\n      },\n      h(\n        'form',\n        {\n          method: 'dialog',\n        },\n        h(\n          'div',\n          {\n            className: 'dialog-title',\n          },\n          title,\n        ),\n        h(\n          'div',\n          {\n            className: 'dialog-content',\n          },\n          dialogContent,\n        ),\n        h(\n          'div',\n          {\n            className: 'dialog-button',\n          },\n          Button(\n            {\n              onClick() {\n                onCancel && onCancel();\n              },\n              buttonType: 'submit',\n            },\n            'Cancel',\n          ),\n          Button(\n            {\n              onClick() {\n                onOk && onOk();\n              },\n              buttonType: 'submit',\n              className: 'ml16',\n            },\n            'Confirm',\n          ),\n        ),\n      ),\n    ),\n    h(\n      'div',\n      {\n        onclick() {\n          assert(\n            typeof ref.showModal === 'function',\n            'Sorry, the <dialog> API is not supported by this browser.',\n          );\n          ref.showModal();\n        },\n      },\n      ...children,\n    ),\n  );\n};\nDialog.displayName = 'Dialog';\n", "import { h, SmartComponent, CSSProperties } from '@/react';\nimport { Button } from '../components';\nimport { setOutSideMap } from '@/canvas';\nimport { IController } from '@/types';\n\nconst defaultStyle: CSSProperties = {\n  display: 'none',\n};\n\nfunction handleClick(dataType: string, controller: IController): void {\n  switch (dataType) {\n    case 'addCol':\n      controller.addCol(controller.getActiveCell().col, 1);\n      break;\n    case 'deleteCol':\n      controller.deleteCol(controller.getActiveCell().col, 1);\n      break;\n    case 'addRow':\n      controller.addRow(controller.getActiveCell().row, 1);\n      break;\n    case 'deleteRow':\n      controller.deleteRow(controller.getActiveCell().row, 1);\n      break;\n    case 'copy':\n    case 'cut':\n    case 'paste':\n      controller[dataType]();\n      break;\n    default:\n      throw new Error(`context menu unknown data type: ${dataType}`);\n  }\n}\n\nexport const ContextMenuContainer: SmartComponent = (state, controller) => {\n  const { contextMenuPosition } = state;\n  const style =\n    contextMenuPosition === undefined\n      ? defaultStyle\n      : {\n          top: contextMenuPosition.top,\n          left: contextMenuPosition.left,\n        };\n  const hideContextMenu = () => {\n    state.contextMenuPosition = undefined;\n  };\n  return h(\n    'div',\n    {\n      className: 'context-menu',\n      style,\n      hook: {\n        ref(dom) {\n          setOutSideMap('canvas-context-menu', {\n            dom,\n            callback(stateValue) {\n              if (stateValue.contextMenuPosition !== undefined) {\n                stateValue.contextMenuPosition = undefined;\n              }\n            },\n          });\n        },\n      },\n      onclick(event) {\n        if (!event.target) {\n          return;\n        }\n        const node = event.target as HTMLElement;\n        const dataType = node.dataset['type'];\n        if (!dataType) {\n          return;\n        }\n        hideContextMenu();\n        handleClick(dataType, controller);\n      },\n    },\n    Button(\n      {\n        dataType: 'addCol',\n      },\n      'add a column',\n    ),\n    Button(\n      {\n        dataType: 'deleteCol',\n      },\n      'delete a column',\n    ),\n    Button(\n      {\n        dataType: 'addRow',\n      },\n      'add a row',\n    ),\n    Button(\n      {\n        dataType: 'deleteRow',\n      },\n      'delete a row',\n    ),\n    Button(\n      {\n        dataType: 'copy',\n      },\n      'copy',\n    ),\n    Button(\n      {\n        dataType: 'cut',\n      },\n      'cut',\n    ),\n    Button(\n      {\n        dataType: 'paste',\n      },\n      'paste',\n    ),\n  );\n};\nContextMenuContainer.displayName = 'ContextMenuContainer';\n", "import { h, SmartComponent, CSSProperties } from '@/react';\nimport { CanvasOverlayPosition, ActiveCellType } from '@/types';\nimport {\n  DEFAULT_FONT_COLOR,\n  makeFont,\n  DEFAULT_FONT_SIZE,\n  isEmpty,\n} from '@/util';\n\nfunction getEditorStyle(data: ActiveCellType): CSSProperties | undefined {\n  const { style } = data;\n  const cellPosition: CanvasOverlayPosition = {\n    top: data.top,\n    left: data.left,\n    width: data.width,\n    height: data.height,\n  };\n  if (isEmpty(style)) {\n    return cellPosition;\n  }\n  const font = makeFont(\n    style?.isItalic ? 'italic' : 'normal',\n    style?.isBold ? 'bold' : '500',\n    style?.fontSize || DEFAULT_FONT_SIZE,\n    style?.fontFamily,\n  );\n  return {\n    ...cellPosition,\n    backgroundColor: style?.fillColor || 'inherit',\n    color: style?.fontColor || DEFAULT_FONT_COLOR,\n    font,\n  };\n}\n\nexport const FormulaEditor: SmartComponent = (state, controller) => {\n  const { activeCell, isCellEditing } = state;\n  const initValue = activeCell.formula || String(activeCell.value || '');\n  let inputDom: HTMLInputElement;\n  const ref = (element: Element) => {\n    inputDom = element as HTMLInputElement;\n    controller.setMainDom({ input: inputDom });\n  };\n  return h('input', {\n    className: 'base-editor',\n    value: initValue,\n    type: 'text',\n    style: isCellEditing ? getEditorStyle(activeCell) : undefined,\n    hook: {\n      ref,\n    },\n    onfocus: () => {\n      if (!isCellEditing) {\n        return;\n      }\n      state.isCellEditing = true;\n    },\n    onkeydown: (event: any) => {\n      if (isCellEditing) {\n        inputDom.nextSibling!.textContent = event.currentTarget.value;\n      }\n    },\n  });\n};\n\nFormulaEditor.displayName = 'FormulaEditor';\n", "import { h, SmartComponent } from '@/react';\nimport { FormulaEditor } from './FormulaEditor';\nimport { intToColumnName, classnames } from '@/util';\n\nexport const FormulaBarContainer: SmartComponent = (\n  state,\n  controller,\n) => {\n  const { activeCell } = state;\n  return h(\n    'div',\n    {\n      className: 'formula-bar-wrapper',\n    },\n    h(\n      'div',\n      { className: 'formula-bar-name' },\n      `${intToColumnName(activeCell.col)}${activeCell.row + 1}`,\n    ),\n    h(\n      'div',\n      { className: 'formula-bar-editor-wrapper' },\n      FormulaEditor(state, controller),\n      h('div', {\n        className: classnames('formula-bar-value', {\n          show: state.isCellEditing,\n        })\n      }, activeCell.formula || String(activeCell.value || ''))\n    ),\n  );\n};\nFormulaBarContainer.displayName = 'FormulaBarContainer';\n", "import { h, SmartComponent } from '@/react';\nimport {\n  Icon,\n  Button,\n  ColorPicker,\n  Github,\n  Select,\n  FillColorIcon,\n} from '../components';\nimport {\n  FONT_SIZE_LIST,\n  DEFAULT_FONT_SIZE,\n  DEFAULT_FONT_COLOR,\n  QUERY_ALL_LOCAL_FONT,\n  LOCAL_FONT_KEY,\n  isSupportFontFamily,\n} from '@/util';\nimport { StyleType, EUnderLine, OptionItem } from '@/types';\n\nconst underlineList: OptionItem[] = [\n  {\n    value: EUnderLine.NONE,\n    label: 'none',\n  },\n  {\n    value: EUnderLine.SINGLE,\n    label: 'single underline',\n  },\n  {\n    value: EUnderLine.DOUBLE,\n    label: 'double underline',\n  },\n];\n\nexport const ToolbarContainer: SmartComponent = (state, controller) => {\n  const getItemStyle = (value: string | number) => {\n    return {\n      'font-family': String(value),\n      'font-size': '16px',\n    };\n  };\n  const setCellStyle = (value: Partial<StyleType>) => {\n    const cellData = controller.getCell(controller.getActiveCell());\n    const styleData = cellData.style || {};\n    controller.setCellStyle(Object.assign(styleData, value), [\n      controller.getActiveCell(),\n    ]);\n  };\n  const { activeCell, fontFamilyList } = state;\n  const { style = {} } = activeCell;\n  const {\n    isBold = false,\n    isItalic = false,\n    fontSize = DEFAULT_FONT_SIZE,\n    fontColor = DEFAULT_FONT_COLOR,\n    fillColor = '',\n    isWrapText = false,\n    underline = EUnderLine.NONE,\n    fontFamily = '',\n  } = style;\n  return h(\n    'div',\n    {\n      className: 'toolbar-wrapper',\n    },\n    Button(\n      {\n        disabled: !controller.canUndo(),\n        onClick() {\n          controller.undo();\n        },\n        testId: 'toolbar-undo',\n      },\n      Icon({ name: 'undo' }),\n    ),\n    Button(\n      {\n        disabled: !controller.canRedo(),\n        onClick() {\n          controller.redo();\n        },\n        testId: 'toolbar-redo',\n      },\n      Icon({ name: 'redo' }),\n    ),\n    Select({\n      data: fontFamilyList,\n      value: fontFamily,\n      style: {\n        width: '140px',\n      },\n      getItemStyle: getItemStyle,\n      onChange: (value) => {\n        const t = String(value);\n        if (t === QUERY_ALL_LOCAL_FONT) {\n          (window as any).queryLocalFonts().then((list: any[]) => {\n            let fontList = list.map((v) => v.fullName);\n            fontList = Array.from(new Set(fontList)).filter((v) =>\n              isSupportFontFamily(v),\n            );\n            fontList.sort((a, b) => a.localeCompare(b));\n            localStorage.setItem(LOCAL_FONT_KEY, JSON.stringify(fontList));\n            state.fontFamilyList = fontList.map((v) => ({\n              label: v,\n              value: v,\n              disabled: false,\n            }));\n          });\n        } else {\n          setCellStyle({ fontFamily: String(value) });\n        }\n      },\n    }),\n    Select({\n      data: FONT_SIZE_LIST,\n      value: fontSize,\n      onChange: (value) => {\n        setCellStyle({ fontSize: Number(value) });\n      },\n    }),\n\n    Button(\n      {\n        active: isBold,\n        onClick: () => {\n          setCellStyle({\n            isBold: !isBold,\n          });\n        },\n        testId: 'toolbar-bold',\n        title: 'Bold',\n      },\n      Icon({ name: 'bold' }),\n    ),\n    Button(\n      {\n        active: isItalic,\n        onClick: () => {\n          setCellStyle({\n            isItalic: !isItalic,\n          });\n        },\n        testId: 'toolbar-italic',\n        title: 'Italic',\n      },\n      Icon({ name: 'italic' }),\n    ),\n    Select({\n      data: underlineList,\n      value: underline,\n      style: {\n        width: '130px',\n      },\n      title: 'Underline',\n      onChange: (value) => {\n        setCellStyle({ underline: Number(value) });\n      },\n    }),\n    ColorPicker(\n      {\n        key: 'fill-color',\n        color: fillColor,\n        onChange: (value) => {\n          setCellStyle({ fillColor: value });\n        },\n      },\n      FillColorIcon({}),\n    ),\n    ColorPicker(\n      {\n        color: fontColor,\n        onChange: (value) => {\n          setCellStyle({ fontColor: value });\n        },\n        key: 'font-color',\n      },\n      Icon({ name: 'fontColor' }),\n    ),\n    Button(\n      {\n        onClick: () => {\n          setCellStyle({ isWrapText: !isWrapText });\n        },\n        active: isWrapText,\n        testId: 'toolbar-wrap-text',\n      },\n      'Wrap Text',\n    ),\n    Github({}),\n  );\n};\n\nToolbarContainer.displayName = 'ToolbarContainer';\n", "import { h, SmartComponent, CSSProperties } from '@/react';\nimport { Button, Dialog, Select } from '../components';\nimport { setOutSideMap } from '@/canvas';\nimport { IController, OptionItem, StoreValue } from '@/types';\n\nconst defaultStyle: CSSProperties = {\n  display: 'none',\n};\nfunction handleClick(\n  dataType: string,\n  controller: IController,\n  state: StoreValue,\n): void {\n  switch (dataType) {\n    case 'addSheet':\n    case 'deleteSheet':\n    case 'hideSheet':\n      controller[dataType]();\n      break;\n    case 'unhideSheet':\n      break;\n    case 'renameSheet':\n      state.isSheetNameEditing = true;\n      break;\n    default:\n      throw new Error(`sheet bar context menu unknown data type: ${dataType}`);\n  }\n}\n\nexport const SheetBarContextMenu: SmartComponent = (state, controller) => {\n  const style =\n    state.sheetBarContextMenuLeft === undefined\n      ? defaultStyle\n      : {\n          left: `${state.sheetBarContextMenuLeft}px`,\n        };\n  const hideSheetList = controller.getSheetList().filter((v) => v.isHide);\n  const optionList: OptionItem[] = hideSheetList.map((item) => ({\n    value: item.sheetId,\n    label: item.name,\n    disabled: false,\n  }));\n  let selectValue = String(optionList?.[0]?.value || '');\n  const hideContextMenu = () => {\n    state.sheetBarContextMenuLeft = undefined;\n  };\n\n  return h(\n    'div',\n    {\n      className: 'sheet-bar-context-menu',\n      style,\n      hook: {\n        ref(dom) {\n          setOutSideMap('sheet-bar-context-menu', {\n            dom,\n            callback(stateValue) {\n              if (stateValue.sheetBarContextMenuLeft !== undefined) {\n                stateValue.sheetBarContextMenuLeft = undefined;\n              }\n            },\n          });\n        },\n      },\n      onclick(event) {\n        if (!event.target) {\n          return;\n        }\n        const node = event.target as HTMLElement;\n        const dataType = node.dataset['type'];\n        if (!dataType) {\n          return;\n        }\n        if (dataType === 'unhideSheet') {\n          return;\n        }\n        hideContextMenu();\n        handleClick(dataType, controller, state);\n      },\n    },\n    Button(\n      {\n        dataType: 'addSheet',\n      },\n      'Insert',\n    ),\n    Button(\n      {\n        dataType: 'deleteSheet',\n      },\n      'Delete',\n    ),\n    Button(\n      {\n        dataType: 'renameSheet',\n      },\n      'Rename',\n    ),\n    Button(\n      {\n        dataType: 'hideSheet',\n      },\n      'Hide',\n    ),\n    Dialog(\n      {\n        dialogContent: Select({\n          data: optionList,\n          onChange(value) {\n            selectValue = String(value);\n          },\n          style: {\n            width: '300px',\n          },\n          value: undefined,\n        }),\n        title: 'Unhide sheet:',\n        onOk() {\n          controller.unhideSheet(selectValue);\n          hideContextMenu();\n          selectValue = '';\n        },\n        onCancel: hideContextMenu,\n      },\n      Button(\n        {\n          dataType: 'unhideSheet',\n          className: 'width100 bgWhite',\n          disabled: optionList.length === 0,\n        },\n        'Unhide',\n      ),\n    ),\n  );\n};\nSheetBarContextMenu.displayName = 'SheetBarContextMenu';\n", "import { h, SmartComponent } from '@/react';\nimport { classnames } from '@/util';\nimport { theme } from '@/util';\nimport { Button, Icon } from '../components';\nimport { SheetBarContextMenu } from './SheetBarContextMenu';\n\nexport const SheetBarContainer: SmartComponent = (state, controller) => {\n  const setSheetName = (sheetName: string) => {\n    controller.renameSheet(sheetName);\n    state.isSheetNameEditing = false;\n  };\n  return h(\n    'div',\n    {\n      className: 'sheet-bar-wrapper',\n    },\n    h(\n      'div',\n      {\n        className: 'sheet-bar-list',\n      },\n      ...state.sheetList.map((item) => {\n        const isActive = state.currentSheetId === item.value;\n        const showInput = isActive && state.isSheetNameEditing;\n        return h(\n          'div',\n          {\n            key: item.value,\n            className: classnames('sheet-bar-item', {\n              active: isActive,\n            }),\n            onclick: () => {\n              controller.setCurrentSheetId(String(item.value));\n            },\n            oncontextmenu(event) {\n              event.preventDefault();\n              state.sheetBarContextMenuLeft = (event.clientX || 0) - 30;\n              return false;\n            },\n          },\n          h('input', {\n            value: item.label,\n            className: classnames('sheet-bar-input', {\n              show: showInput,\n            }),\n            onblur(event) {\n              if (!event.currentTarget) {\n                return;\n              }\n              // setSheetName((event.currentTarget as HTMLInputElement).value);\n            },\n            onkeydown(event) {\n              if (event.key === 'Enter') {\n                event.stopPropagation();\n                if (!event.currentTarget) {\n                  return;\n                }\n                setSheetName((event.currentTarget as HTMLInputElement).value);\n              }\n            },\n          }),\n          h(\n            'span',\n            {\n              className: classnames('sheet-bar-item-text', {\n                show: !showInput,\n              }),\n            },\n            item.label,\n          ),\n        );\n      }),\n    ),\n    h(\n      'div',\n      {\n        className: 'sheet-bar-add',\n      },\n      Button(\n        {\n          onClick: controller.addSheet,\n          type: 'circle',\n          style: {\n            backgroundColor: theme.buttonActiveColor,\n          },\n        },\n        Icon({\n          name: 'plus',\n        }),\n      ),\n    ),\n    SheetBarContextMenu(state, controller),\n  );\n};\nSheetBarContainer.displayName = 'SheetBarContainer';\n", "import { h, SmartComponent } from '@/react';\nimport { CanvasContainer } from './canvas';\nimport { ContextMenuContainer } from './ContextMenu';\nimport { FormulaBarContainer } from './FormulaBar';\nimport { ToolbarContainer } from './ToolBar';\nimport { SheetBarContainer } from './SheetBar';\n\nexport const App: SmartComponent = (state, controller) => {\n  return h(\n    'div',\n    {\n      className: 'app-container',\n    },\n    ToolbarContainer(state, controller),\n    FormulaBarContainer(state, controller),\n    CanvasContainer(state, controller),\n    SheetBarContainer(state, controller),\n    ContextMenuContainer(state, controller),\n  );\n};\nApp.displayName = 'App';\n", "import {\n  WorkBookJSON,\n  StyleType,\n  ChangeEventType,\n  IController,\n  IHooks,\n  IModel,\n  WorksheetType,\n  IWindowSize,\n  CanvasOverlayPosition,\n  ScrollValue,\n  IRange,\n  ResultType,\n  ClipboardData,\n  ClipboardType,\n  MainDom,\n} from '@/types';\nimport {\n  controllerLog,\n  Range,\n  isEmpty,\n  PLAIN_FORMAT,\n  HTML_FORMAT,\n  generateHTML,\n  convertCanvasStyleToString,\n  parseStyle,\n} from '@/util';\n\nconst ROW_TITLE_HEIGHT = 19;\nconst COL_TITLE_WIDTH = 34;\n\nconst defaultScrollValue: ScrollValue = {\n  top: 0,\n  left: 0,\n  row: 0,\n  col: 0,\n  scrollLeft: 0,\n  scrollTop: 0,\n};\n\nexport class Controller implements IController {\n  private scrollValue: Record<string, ScrollValue> = {};\n  private model: IModel;\n  private changeSet = new Set<ChangeEventType>();\n  private copyRanges: Array<IRange> = [];\n  private cutRanges: Array<IRange> = [];\n  private hooks: IHooks = {\n    modelChange() {},\n    async cut() {\n      return '';\n    },\n    async copy() {\n      return '';\n    },\n    async paste() {\n      return {\n        [HTML_FORMAT]: '',\n        [PLAIN_FORMAT]: '',\n      };\n    },\n  };\n  // sheet size\n  private viewSize = {\n    width: 0,\n    height: 0,\n  };\n  private headerSize = {\n    width: COL_TITLE_WIDTH,\n    height: ROW_TITLE_HEIGHT,\n  };\n  private mainDom: MainDom = {};\n  constructor(model: IModel) {\n    this.model = model;\n  }\n  getCurrentSheetId(): string {\n    return this.model.getCurrentSheetId();\n  }\n  getSheetList(): WorkBookJSON['workbook'] {\n    return this.model.getSheetList();\n  }\n  getSheetInfo(sheetId: string): WorksheetType {\n    return this.model.getSheetInfo(sheetId);\n  }\n  setHooks(hooks: IHooks): void {\n    this.hooks = hooks;\n  }\n  private emitChange(): void {\n    controllerLog('emitChange', this.changeSet);\n    this.hooks.modelChange(this.changeSet);\n    this.changeSet = new Set<ChangeEventType>();\n    this.model.record();\n  }\n  getActiveCell(): IRange {\n    const currentSheetId = this.model.getCurrentSheetId();\n    const { activeCell } = this.getSheetInfo(currentSheetId);\n    return {\n      ...activeCell,\n      sheetId: activeCell.sheetId || currentSheetId,\n    };\n  }\n  private setSheetCell(range: IRange) {\n    const id = range.sheetId || this.model.getCurrentSheetId();\n    range.sheetId = id;\n    this.model.setActiveCell(range);\n  }\n  setActiveCell(range: IRange): void {\n    this.setSheetCell(range);\n    this.changeSet.add('selection');\n    this.emitChange();\n  }\n  setCurrentSheetId(id: string): void {\n    if (id === this.getCurrentSheetId()) {\n      return;\n    }\n    this.model.setCurrentSheetId(id);\n    const pos = this.getActiveCell();\n    this.setSheetCell(pos);\n    this.computeViewSize();\n    this.setScroll(this.getScroll());\n  }\n  addSheet = (): void => {\n    this.model.addSheet();\n    this.setSheetCell({\n      row: 0,\n      col: 0,\n      rowCount: 1,\n      colCount: 1,\n      sheetId: '',\n    });\n    this.computeViewSize();\n    this.setScroll({\n      top: 0,\n      left: 0,\n      row: 0,\n      col: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n    });\n  };\n  deleteSheet = (sheetId?: string): void => {\n    this.model.deleteSheet(sheetId);\n    this.changeSet.add('content');\n    this.emitChange();\n  };\n  hideSheet(sheetId?: string | undefined): void {\n    this.model.hideSheet(sheetId);\n    this.changeSet.add('content');\n    this.emitChange();\n  }\n  unhideSheet(sheetId?: string | undefined): void {\n    this.model.unhideSheet(sheetId);\n    this.changeSet.add('content');\n    this.emitChange();\n  }\n  renameSheet(sheetName: string, sheetId?: string | undefined): void {\n    this.model.renameSheet(sheetName, sheetId);\n    this.changeSet.add('content');\n    this.emitChange();\n  }\n  fromJSON(json: WorkBookJSON): void {\n    controllerLog('loadJSON', json);\n    this.model.fromJSON(json);\n    const activeCell = this.getActiveCell();\n    this.setSheetCell(activeCell);\n    this.computeViewSize();\n    this.changeSet.add('content');\n    this.emitChange();\n  }\n  toJSON(): WorkBookJSON {\n    return this.model.toJSON();\n  }\n\n  setCellValues(\n    value: string[][],\n    style: Partial<StyleType>[][],\n    ranges: IRange[],\n  ): void {\n    controllerLog('setCellValue', value);\n    this.model.setCellValues(value, style, ranges);\n    this.changeSet.add('content');\n    this.emitChange();\n  }\n  setCellStyle(style: Partial<StyleType>, ranges: IRange[]): void {\n    if (isEmpty(style)) {\n      return;\n    }\n    this.model.setCellStyle(style, ranges);\n    this.changeSet.add('content');\n    this.emitChange();\n  }\n  getCell = (range: IRange) => {\n    const result = this.model.getCell(range);\n    return result;\n  };\n  canRedo(): boolean {\n    return this.model.canRedo();\n  }\n  canUndo(): boolean {\n    return this.model.canUndo();\n  }\n  undo() {\n    this.model.undo();\n    this.changeSet.add('content');\n    this.emitChange();\n  }\n  redo() {\n    this.model.redo();\n    this.changeSet.add('content');\n    this.emitChange();\n  }\n  getColWidth(col: number): number {\n    return this.model.getColWidth(col);\n  }\n  setColWidth(col: number, width: number): void {\n    this.model.setColWidth(col, width);\n    this.computeViewSize();\n    this.changeSet.add('content');\n  }\n  getRowHeight(row: number): number {\n    return this.model.getRowHeight(row);\n  }\n  setRowHeight(row: number, height: number) {\n    this.model.setRowHeight(row, height);\n    this.computeViewSize();\n    this.changeSet.add('content');\n  }\n  private computeViewSize() {\n    const headerSize = this.getHeaderSize();\n    const sheetInfo = this.model.getSheetInfo(this.model.getCurrentSheetId());\n    let width = headerSize.width;\n    let height = headerSize.height;\n    for (let i = 0; i < sheetInfo.colCount; i++) {\n      width += this.getColWidth(i);\n    }\n    for (let i = 0; i < sheetInfo.rowCount; i++) {\n      height += this.getRowHeight(i);\n    }\n    this.viewSize = {\n      width,\n      height,\n    };\n  }\n  getViewSize() {\n    return {\n      ...this.viewSize,\n    };\n  }\n  getCellSize(row: number, col: number): IWindowSize {\n    return { width: this.getColWidth(col), height: this.getRowHeight(row) };\n  }\n  getHeaderSize() {\n    return {\n      ...this.headerSize,\n    };\n  }\n  computeCellPosition(row: number, col: number): CanvasOverlayPosition {\n    const size = this.getHeaderSize();\n    const scroll = this.getScroll();\n    let resultX = size.width;\n    let resultY = size.height;\n    let r = scroll.row;\n    let c = scroll.col;\n    while (c < col) {\n      resultX += this.getColWidth(c);\n      c++;\n    }\n    while (r < row) {\n      resultY += this.getRowHeight(r);\n      r++;\n    }\n    const cellSize = this.getCellSize(row, col);\n    return { ...cellSize, top: resultY, left: resultX };\n  }\n\n  addRow(rowIndex: number, count: number): void {\n    this.model.addRow(rowIndex, count);\n    this.changeSet.add('content');\n    this.emitChange();\n  }\n  addCol(colIndex: number, count: number): void {\n    this.model.addCol(colIndex, count);\n    this.changeSet.add('content');\n    this.emitChange();\n  }\n  deleteCol(colIndex: number, count: number): void {\n    this.model.deleteCol(colIndex, count);\n    this.changeSet.add('content');\n    this.emitChange();\n  }\n  deleteRow(rowIndex: number, count: number): void {\n    this.model.deleteRow(rowIndex, count);\n    this.changeSet.add('content');\n    this.emitChange();\n  }\n  getChangeSet(): Set<ChangeEventType> {\n    const result = this.changeSet;\n    this.changeSet = new Set<ChangeEventType>();\n    return result;\n  }\n\n  getScroll(): ScrollValue {\n    const sheetId = this.model.getCurrentSheetId();\n    const result = this.scrollValue[sheetId] || defaultScrollValue;\n    return result;\n  }\n  setScroll(data: ScrollValue): void {\n    const sheetId = this.model.getCurrentSheetId();\n    this.scrollValue[sheetId] = {\n      ...data,\n    };\n    if (data.row > 9999) {\n      this.headerSize = {\n        width: Math.floor(COL_TITLE_WIDTH * 2),\n        height: ROW_TITLE_HEIGHT,\n      };\n    } else {\n      this.headerSize = {\n        width: COL_TITLE_WIDTH,\n        height: ROW_TITLE_HEIGHT,\n      };\n    }\n    this.changeSet.add('content');\n    this.emitChange();\n  }\n  private parseText(text: string) {\n    let list: string[][];\n    if (text.indexOf('\\r\\n') > -1) {\n      list = text\n        .split('\\r\\n')\n        .map((item) => item)\n        .map((item) => item.split('\\t'));\n    } else {\n      list = text\n        .split('\\n')\n        .map((item) => item)\n        .map((item) => item.split('\\t'));\n    }\n    if (list[0].length !== list[list.length - 1].length) {\n      // delete last empty cell\n      const last = list[list.length - 1];\n      if (last.length === 1 && !last[0]) {\n        list.pop();\n      }\n    }\n    const rowCount = list.length;\n    let colCount = 0;\n    for (let item of list) {\n      if (item.length > colCount) {\n        colCount = item.length;\n      }\n    }\n    if (list.length === 0) {\n      return;\n    }\n    const activeCell = this.getActiveCell();\n    const range: IRange = {\n      ...activeCell,\n      rowCount,\n      colCount,\n    };\n    this.model.setCellValues(list, [], [range]);\n    this.changeSet.add('content');\n    this.setActiveCell(range);\n  }\n  private parseHTML(htmlString: string) {\n    const parser = new DOMParser();\n    const text = htmlString\n      .replace('<style>\\r\\n<!--table', '<style>')\n      .replace('-->\\r\\n</style>', '</style>');\n    const doc = parser.parseFromString(text, 'text/html');\n    const trList = doc.querySelectorAll('tr');\n    const styleList = doc.querySelectorAll('style');\n    const result: string[][] = [];\n    const resultStyle: Partial<StyleType>[][] = [];\n    const rowCount = trList.length;\n    let colCount = 0;\n\n    for (const item of trList) {\n      const tdList = item.querySelectorAll('td');\n      const temp: string[] = [];\n      const list: Partial<StyleType>[] = [];\n      for (const td of tdList) {\n        let itemStyle: Partial<StyleType> = {};\n        if (td.className) {\n          itemStyle = parseStyle(styleList, '.' + td.className);\n        } else {\n          itemStyle = parseStyle(styleList, td.tagName.toLowerCase());\n        }\n        list.push(itemStyle);\n        temp.push(td.textContent || '');\n      }\n      result.push(temp);\n      resultStyle.push(list);\n      if (temp.length > colCount) {\n        colCount = temp.length;\n      }\n    }\n    if (result.length === 0) {\n      return;\n    }\n    const activeCell = this.getActiveCell();\n    const range: IRange = {\n      ...activeCell,\n      rowCount,\n      colCount,\n    };\n    this.model.setCellValues(result, resultStyle, [range]);\n    this.changeSet.add('content');\n    this.setActiveCell(range);\n  }\n  async paste(event?: ClipboardEvent) {\n    this.copyRanges = [];\n    if (this.cutRanges.length > 0) {\n      const [range] = this.cutRanges;\n      const result: string[][] = [];\n      for (let i = 0; i < range.rowCount; i++) {\n        result.push(new Array(range.colCount).fill(''));\n      }\n      // clear cut data\n      this.model.setCellValues(result, [], this.cutRanges);\n    }\n    let html: string = '';\n    let text: string = '';\n    if (!event) {\n      const data = await this.hooks.paste();\n      html = data[HTML_FORMAT];\n      text = data[PLAIN_FORMAT];\n    } else {\n      html = event.clipboardData?.getData(HTML_FORMAT) || '';\n      text = event.clipboardData?.getData(PLAIN_FORMAT) || '';\n    }\n    if (html) {\n      this.parseHTML(html);\n    } else {\n      this.parseText(text);\n    }\n    if (this.cutRanges.length) {\n      this.cutRanges = [];\n      this.hooks.copy({\n        [PLAIN_FORMAT]: '',\n        [HTML_FORMAT]: '',\n      });\n    }\n  }\n  private getCopyData(): ClipboardData {\n    const { row, col, rowCount, colCount } = this.getActiveCell();\n    const result: ResultType[][] = [];\n    const html: string[][] = [];\n    let index = 1;\n    const classList: string[] = [];\n    const currentSheetId = this.model.getCurrentSheetId();\n    for (let r = row, endRow = row + rowCount; r < endRow; r++) {\n      const temp: ResultType[] = [];\n      const t: string[] = [];\n      for (let c = col, endCol = col + colCount; c < endCol; c++) {\n        const a = this.model.getCell(new Range(r, c, 1, 1, currentSheetId));\n        const str = String(a.value || '');\n        temp.push(str);\n        if (a.style) {\n          let text = convertCanvasStyleToString(a.style);\n          if (!str) {\n            // copy background-color\n            text += 'mso-pattern:black none;';\n          }\n          const className = `xl${index++}`;\n          classList.push(`.${className}{${text}}`);\n          t.push(`<td class=\"${className}\"> ${str} </td>`);\n        } else {\n          t.push(`<td> ${str} </td>`);\n        }\n      }\n      result.push(temp);\n      html.push(t);\n    }\n    const htmlData = generateHTML(\n      classList.join('\\n'),\n      html.map((item) => `<tr>${item.join('\\n')}</tr>`).join('\\n'),\n    );\n    const text = result.map((item) => item.join('\\t')).join('\\r\\n') + '\\r\\n';\n    return {\n      [PLAIN_FORMAT]: text,\n      [HTML_FORMAT]: htmlData,\n    };\n  }\n  copy(event?: ClipboardEvent): void {\n    this.copyRanges = [this.getActiveCell()];\n    const data = this.getCopyData();\n    if (event) {\n      const keyList = Object.keys(data) as ClipboardType[];\n      for (const key of keyList) {\n        event.clipboardData?.setData(key, data[key]);\n      }\n    } else {\n      this.hooks.copy(data);\n    }\n    this.changeSet.add('selection');\n    this.emitChange();\n  }\n  cut(event?: ClipboardEvent) {\n    this.cutRanges = [this.getActiveCell()];\n    this.copy(event);\n  }\n  getCopyRanges() {\n    return this.copyRanges.slice();\n  }\n  getDomRect(): CanvasOverlayPosition {\n    const canvas = this.getMainDom().canvas;\n    if (!canvas) {\n      return {\n        top: 0,\n        left: 0,\n        width: 0,\n        height: 0,\n      };\n    }\n    const size = canvas.parentElement!.getBoundingClientRect();\n    return {\n      top: size.top,\n      left: size.left,\n      width: size.width,\n      height: size.height,\n    };\n  }\n  setMainDom(dom: MainDom): void {\n    this.mainDom = Object.assign(this.mainDom, dom);\n  }\n  getMainDom(): MainDom {\n    return this.mainDom;\n  }\n}\n", "import type { TokenType } from '@/types'\nexport class Token {\n  type: TokenType;\n  value: string;\n  constructor(type: TokenType, value: string) {\n    this.type = type;\n    this.value = value;\n  }\n  error() {\n    return `type:${this.type},value:${this.value}`;\n  }\n  toString(): string {\n    return this.value;\n  }\n}", "import type { ErrorTypes } from '@/types';\n\nexport class CustomError extends Error {\n  readonly value: ErrorTypes;\n  constructor(value: ErrorTypes) {\n    super(value);\n    this.value = value;\n  }\n}\n\nexport const paramsError = new CustomError('#VALUE!');\nexport const resultError = new CustomError('#NUM!');\n\nexport function assert(\n  condition: boolean,\n  message: ErrorTypes = '#VALUE!',\n): asserts condition {\n  if (!condition) {\n    throw new CustomError(message);\n  }\n}\n\nexport function mustOne(list: any[]): any {\n  assert(list.length === 1);\n  const [value] = list;\n  return value;\n}\n\nexport function mustOneString(list: any[]): string {\n  const value = mustOne(list);\n  assert(typeof value === 'string');\n  return value;\n}\n\nexport function mustOneNumber(list: any[]): number {\n  const value = mustOne(list);\n  assert(typeof value === 'number' && !isNaN(value));\n  return value;\n}\n\nexport function mustEmpty(list: any[]) {\n  assert(list.length === 0);\n}\n", "import type { TextFormulaType } from '@/types';\nimport { MAX_PARAMS_COUNT } from '@/util';\nimport { assert, mustOneString, mustOneNumber, mustOne } from './error';\n\nexport const T = (...list: any[]): string => {\n  const value = mustOne(list);\n  return typeof value === 'string' ? value : '';\n};\n\nexport const LOWER = (...list: any[]): string => {\n  const value = mustOneString(list);\n  return value.toLowerCase();\n};\nexport const CHAR = (...list: any[]): string => {\n  const value = mustOneNumber(list);\n  return String.fromCharCode(value);\n};\nexport const CODE = (...list: any[]): number => {\n  const value = mustOneString(list);\n  return value.charCodeAt(0);\n};\nexport const LEN = (...list: any[]): number => {\n  const value = mustOneString(list);\n  return value.length;\n};\n\nexport const SPLIT = (...list: any[]): string[] => {\n  assert(list.length === 2);\n  const [value, sep] = list;\n  assert(typeof value === 'string');\n  assert(typeof sep === 'string');\n  return value.split(sep);\n};\nexport const UPPER = (...list: any[]): string => {\n  const value = mustOneString(list);\n  return value.toUpperCase();\n};\nexport const TRIM = (...list: any[]): string => {\n  const value = mustOneString(list);\n  return value.replace(/ +/g, ' ').trim();\n};\nexport const CONCAT = (...list: any[]): string => {\n  assert(list.length <= MAX_PARAMS_COUNT);\n  return list.join('');\n};\n\nconst textFormulas: TextFormulaType = {\n  CONCAT,\n  CONCATENATE: CONCAT,\n  SPLIT,\n  CHAR,\n  CODE,\n  UNICHAR: CHAR,\n  UNICODE: CODE,\n  LEN,\n  LOWER,\n  UPPER,\n  TRIM,\n  T,\n};\n\nexport default textFormulas;\n", "import { parseNumberArray, MAX_PARAMS_COUNT } from '@/util';\nimport type { MathFormulaType } from '../../types';\nimport { assert, mustOneNumber, mustEmpty } from './error';\n\nexport const ABS = (...list: any[]): number => {\n  const data = mustOneNumber(list);\n  return Math.abs(data);\n};\nexport const ACOS = (...list: any[]): number => {\n  const data = mustOneNumber(list);\n  return Math.acos(data);\n};\n\nexport const ACOSH = (...list: any[]): number => {\n  const data = mustOneNumber(list);\n  return Math.log(data + Math.sqrt(data * data - 1));\n};\n\nexport const ACOT = (...list: any[]): number => {\n  const data = mustOneNumber(list);\n  return Math.atan(1 / data);\n};\n\nexport const ACOTH = (...list: any[]): number => {\n  const data = mustOneNumber(list);\n  return 0.5 * Math.log((data + 1) / (data - 1));\n};\nexport const ASIN = (...list: any[]): number => {\n  const data = mustOneNumber(list);\n  return Math.asin(data);\n};\n\nexport const ASINH = (...list: any[]): number => {\n  const data = mustOneNumber(list);\n  return Math.log(data + Math.sqrt(data * data + 1));\n};\nexport const ATAN = (...list: any[]): number => {\n  const data = mustOneNumber(list);\n  return Math.atan(data);\n};\nexport const ATAN2 = (...list: any[]): number => {\n  assert(list.length === 2);\n  const [x, y] = list;\n  assert(typeof x === 'number');\n  assert(typeof y === 'number');\n  return Math.atan2(x, y);\n};\nexport const ATANH = (...list: any[]): number => {\n  const data = mustOneNumber(list);\n  return Math.log((1 + data) / (data + 1)) / 2;\n};\n\nexport const COS = (...list: any[]): number => {\n  const data = mustOneNumber(list);\n  return Math.cos(data);\n};\nexport const COT = (...list: any[]): number => {\n  const data = mustOneNumber(list);\n  return 1 / Math.tan(data);\n};\nexport const CSC = (...list: any[]): number => {\n  const data = mustOneNumber(list);\n  return 1 / Math.sin(data);\n};\nexport const DECIMAL = (...list: any[]): number => {\n  assert(list.length === 2);\n  const [data, radix] = list;\n  assert(typeof data === 'string');\n  assert(typeof radix === 'number');\n  return parseInt(data, radix);\n};\nexport const DEGREES = (...list: any[]): number => {\n  const data = mustOneNumber(list);\n  return (data * 180) / Math.PI;\n};\nexport const EXP = (...list: any[]): number => {\n  const data = mustOneNumber(list);\n  return Math.exp(data);\n};\nexport const INT = (...list: any[]): number => {\n  const data = mustOneNumber(list);\n  return Math.floor(data);\n};\nexport const LN10 = (...list: any[]): number => {\n  mustEmpty(list);\n  return Math.log(10);\n};\nexport const LN2 = (...list: any[]): number => {\n  mustEmpty(list);\n  return Math.log(2);\n};\nexport const LOG10E = (...list: any[]): number => {\n  mustEmpty(list);\n  return Math.LOG10E;\n};\nexport const LOG2E = (...list: any[]): number => {\n  mustEmpty(list);\n  return Math.LOG2E;\n};\nexport const LOG = (...list: any[]): number => {\n  assert(list.length >= 1 && list.length <= 2);\n  const [data, base = 10] = list;\n  assert(typeof data === 'number');\n  assert(typeof base === 'number');\n  return Math.log(data) / Math.log(base);\n};\n\nexport const LOG10 = (...list: any[]): number => {\n  const data = mustOneNumber(list);\n  return Math.log(data) / Math.log(10);\n};\nexport const PI = (...list: any[]): number => {\n  mustEmpty(list);\n  return Math.PI;\n};\nexport const E = (...list: any[]): number => {\n  mustEmpty(list);\n  return Math.E;\n};\nexport const SIN = (...list: any[]): number => {\n  const data = mustOneNumber(list);\n  return Math.sin(data);\n};\nexport const SUM = (...rest: any[]): number => {\n  const list = parseNumberArray(rest);\n  assert(list.length <= MAX_PARAMS_COUNT);\n  return list.reduce((sum, cur) => sum + cur, 0);\n};\n\nconst formulas: MathFormulaType = {\n  ABS,\n  ACOS,\n  ACOSH,\n  ACOT,\n  ACOTH,\n  ASIN,\n  ASINH,\n  ATAN,\n  ATAN2,\n  ATANH,\n  COT,\n  COS,\n  EXP,\n  INT,\n  PI,\n  E,\n  SIN,\n  SUM,\n};\n\nexport default formulas;\n", "import textFormulas from \"./text\";\nimport mathFormulas from \"./math\";\nimport type { FormulaType } from \"@/types\";\n\nconst formulas: FormulaType = {\n  ...textFormulas,\n  ...mathFormulas,\n};\nexport * from './error'\nexport default formulas;", "import { TokenType } from '@/types';\nimport { Token } from './token';\nimport { CustomError } from './formula';\n\nconst emptyData = '';\nconst identifierMap = new Map<string, TokenType>([\n  ['TRUE', TokenType.TRUE],\n  ['FALSE', TokenType.FALSE],\n]);\n\nexport class Scanner {\n  private readonly list: string[];\n  private current = 0;\n  private start = 0;\n  private readonly tokens: Token[] = [];\n  constructor(source: string) {\n    // unicode\n    this.list = [...source];\n  }\n  scan(): Token[] {\n    while (!this.isAtEnd()) {\n      this.start = this.current;\n      this.scanToken();\n    }\n    this.tokens.push(new Token(TokenType.EOF, ''));\n    if (this.tokens.length > 0 && this.tokens[0].type === TokenType.EQUAL) {\n      this.tokens.shift();\n    }\n    return this.tokens;\n  }\n  private peek() {\n    if (this.isAtEnd()) {\n      return emptyData;\n    }\n    return this.list[this.current];\n  }\n  private match(text: string) {\n    if (this.peek() !== text) {\n      return false;\n    }\n    this.next();\n    return true;\n  }\n  private next() {\n    if (this.isAtEnd()) {\n      return emptyData;\n    }\n    return this.list[this.current++];\n  }\n  private isAtEnd() {\n    return this.current >= this.list.length;\n  }\n  private addToken(type: TokenType) {\n    const text = this.list.slice(this.start, this.current).join('');\n    this.tokens.push(new Token(type, text));\n  }\n  private string(end: string) {\n    while (!this.isAtEnd() && this.peek() !== end) {\n      this.next();\n    }\n    if (this.peek() !== end) {\n      throw new CustomError('#VALUE!');\n    } else {\n      this.next();\n    }\n    const text = this.list.slice(this.start + 1, this.current - 1).join('');\n    this.tokens.push(new Token(TokenType.STRING, text));\n  }\n  private allDigit() {\n    while (!this.isAtEnd() && this.isDigit(this.peek())) {\n      this.next();\n    }\n  }\n  private number() {\n    this.allDigit()\n    if (this.match('E')) {\n      // 1E-10 1E+10\n      if (this.match('+') || this.match('-')) {\n        this.allDigit()\n        this.addToken(TokenType.NUMBER);\n        return\n      }\n      throw new CustomError('#VALUE!');\n    }\n    if (this.match('.')) {\n      this.allDigit()\n    }\n    if (this.match('E')) {\n      // 1E-10 1E+10\n      if (this.match('+') || this.match('-')) {\n        this.allDigit()\n        this.addToken(TokenType.NUMBER);\n        return\n      }\n      throw new CustomError('#VALUE!');\n    }\n    this.addToken(TokenType.NUMBER);\n  }\n  private isDigit(char: string) {\n    return char >= '0' && char <= '9';\n  }\n  private identifier() {\n    while (!this.isAtEnd() && this.anyChar(this.peek())) {\n      this.next();\n    }\n    let text = this.list.slice(this.start, this.current).join('');\n    const temp = identifierMap.get(text.toUpperCase());\n    let type: TokenType = TokenType.IDENTIFIER;\n    if (temp) {\n      text = text.toUpperCase();\n      type = temp;\n    }\n    this.tokens.push(new Token(type, text));\n  }\n  private scanToken() {\n    const c = this.next();\n    switch (c) {\n      case '(':\n        this.addToken(TokenType.LEFT_BRACKET);\n        break;\n      case ')':\n        this.addToken(TokenType.RIGHT_BRACKET);\n        break;\n      case ',':\n        this.addToken(TokenType.COMMA);\n        break;\n      case ':':\n        this.addToken(TokenType.COLON);\n        break;\n      case '=':\n        this.addToken(TokenType.EQUAL);\n        break;\n      case '<':\n        if (this.match('>')) {\n          this.addToken(TokenType.NOT_EQUAL);\n        } else if (this.match('=')) {\n          this.addToken(TokenType.LESS_EQUAL);\n        } else {\n          this.addToken(TokenType.LESS);\n        }\n        break;\n      case '>':\n        if (this.match('=')) {\n          this.addToken(TokenType.GREATER_EQUAL);\n        } else {\n          this.addToken(TokenType.GREATER);\n        }\n        break;\n      case '+':\n        this.addToken(TokenType.PLUS);\n        break;\n      case '-':\n        this.addToken(TokenType.MINUS);\n        break;\n      case '*':\n        this.addToken(TokenType.STAR);\n        break;\n      case '/':\n        this.addToken(TokenType.SLASH);\n        break;\n      case '^':\n        this.addToken(TokenType.EXPONENT);\n        break;\n      case '&':\n        this.addToken(TokenType.CONCATENATE);\n        break;\n      case '%':\n        this.addToken(TokenType.PERCENT);\n        break;\n      case '\"':\n        this.string(c);\n        break;\n      case '!':\n        this.addToken(TokenType.EXCLAMATION);\n        break;\n      case ';':\n        this.addToken(TokenType.SEMICOLON);\n        break;\n      case '{':\n        this.addToken(TokenType.lEFT_BRACE);\n        break;\n      case '}':\n        this.addToken(TokenType.RIGHT_BRACE);\n        break;\n      case ' ':\n        // while (!this.isAtEnd() && this.peek() === ' ') {\n        // this.next();\n        // }\n        // this.addToken(TokenType.EMPTY_CHAR);\n        break;\n      case '\\r':\n      case '\\t':\n      case '\\n':\n        break;\n      default:\n        if (this.isDigit(c)) {\n          this.number();\n        } else if (this.anyChar(c)) {\n          this.identifier();\n        } else {\n          throw new CustomError('#ERROR!');\n        }\n        break;\n    }\n  }\n  private anyChar(c: string) {\n    const text = '(),:=<>+-*/^&%\"{}!';\n    return !text.includes(c) && !this.isWhiteSpace(c);\n  }\n  private isWhiteSpace(c: string) {\n    return c === ' ' || c === '\\r' || c === '\\n' || c === '\\t';\n  }\n}\n", "import type { Token } from './token';\nimport type { ReferenceType } from '@/types';\nimport { TokenType } from '@/types';\n\nexport interface Visitor {\n  visitBinaryExpression(expr: BinaryExpression): any;\n  visitUnaryExpression(expr: UnaryExpression): any;\n  visitPostUnaryExpression(expr: PostUnaryExpression): any;\n  visitLiteralExpression(expr: LiteralExpression): any;\n  visitCellExpression(expr: CellExpression): any;\n  visitCellRangeExpression(expr: CellRangeExpression): any;\n  visitCallExpression(expr: CallExpression): any;\n  visitGroupExpression(expr: GroupExpression): any;\n  visitTokenExpression(expr: TokenExpression): any;\n}\n\nexport interface Expression {\n  accept(visitor: Visitor): any;\n  toString(): string;\n}\n\nexport class BinaryExpression implements Expression {\n  readonly left: Expression;\n  readonly right: Expression;\n  readonly operator: Token;\n  constructor(left: Expression, operator: Token, right: Expression) {\n    this.left = left;\n    this.operator = operator;\n    this.right = right;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitBinaryExpression(this);\n  }\n  private handleConcatenate(value: Expression): string {\n    const result = value.toString();\n    const check =\n      this.operator.type === TokenType.CONCATENATE &&\n      value instanceof LiteralExpression &&\n      value.value.type === TokenType.STRING;\n    if (check) {\n      return JSON.stringify(result);\n    }\n    return result;\n  }\n  toString(): string {\n    const left = this.handleConcatenate(this.left);\n    const right = this.handleConcatenate(this.right);\n    return `${left}${this.operator.toString()}${right}`;\n  }\n}\n\nexport class UnaryExpression implements Expression {\n  readonly right: Expression;\n  readonly operator: Token;\n  constructor(operator: Token, right: Expression) {\n    this.operator = operator;\n    this.right = right;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitUnaryExpression(this);\n  }\n  toString(): string {\n    return this.operator.toString() + this.right.toString();\n  }\n}\n\nexport class PostUnaryExpression implements Expression {\n  readonly left: Expression;\n  readonly operator: Token;\n  constructor(operator: Token, left: Expression) {\n    this.operator = operator;\n    this.left = left;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitPostUnaryExpression(this);\n  }\n  toString(): string {\n    return this.left.toString() + this.operator.toString();\n  }\n}\n\nexport class LiteralExpression implements Expression {\n  readonly value: Token;\n  constructor(value: Token) {\n    this.value = value;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitLiteralExpression(this);\n  }\n  toString(): string {\n    return this.value.toString();\n  }\n}\n\nexport class CellExpression implements Expression {\n  readonly value: Token;\n  readonly sheetName: Token | null;\n  readonly type: ReferenceType;\n  constructor(value: Token, type: ReferenceType, sheetName: Token | null) {\n    this.value = value;\n    this.sheetName = sheetName;\n    this.type = type;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitCellExpression(this);\n  }\n  toString(): string {\n    if (this.sheetName) {\n      return this.sheetName.toString() + '!' + this.value.toString();\n    } else {\n      return this.value.toString();\n    }\n  }\n}\n\nexport class CallExpression implements Expression {\n  readonly name: Expression;\n  readonly params: Expression[];\n  constructor(name: Expression, params: Expression[]) {\n    this.name = name;\n    this.params = params;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitCallExpression(this);\n  }\n  toString(): string {\n    return `${this.name.toString().toUpperCase()}(${this.params\n      .map((item) => item.toString())\n      .join(',')})`;\n  }\n}\nexport class CellRangeExpression implements Expression {\n  readonly left: Expression;\n  readonly right: Expression;\n  readonly operator: Token;\n  constructor(left: Expression, operator: Token, right: Expression) {\n    this.left = left;\n    this.operator = operator;\n    this.right = right;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitCellRangeExpression(this);\n  }\n  toString(): string {\n    return (\n      this.left.toString() + this.operator.toString() + this.right.toString()\n    );\n  }\n}\n\nexport class GroupExpression implements Expression {\n  readonly value: Expression;\n  constructor(value: Expression) {\n    this.value = value;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitGroupExpression(this);\n  }\n  toString(): string {\n    return `(${this.value.toString()})`;\n  }\n}\n\nexport class TokenExpression implements Expression {\n  readonly value: Token;\n  constructor(value: Token) {\n    this.value = value;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitTokenExpression(this);\n  }\n  toString(): string {\n    return this.value.toString();\n  }\n}\n", "import { TokenType, ErrorTypes } from '@/types';\nimport { Token } from './token';\nimport {\n  TokenExpression,\n  Expression,\n  GroupExpression,\n  PostUnaryExpression,\n} from './expression';\nimport {\n  BinaryExpression,\n  UnaryExpression,\n  CallExpression,\n  LiteralExpression,\n  CellRangeExpression,\n} from './expression';\nimport { CustomError } from './formula';\n\nconst errorSet = new Set<ErrorTypes>([\n  '#ERROR!',\n  '#DIV/0!',\n  '#NULL!',\n  '#NUM!',\n  '#REF!',\n  '#VALUE!',\n  '#N/A',\n  '#NAME?',\n]);\n\nexport class Parser {\n  private readonly tokens: Token[];\n  private current = 0;\n  constructor(tokens: Token[]) {\n    this.tokens = tokens;\n  }\n  parse() {\n    const result: Expression[] = [];\n    while (!this.isAtEnd()) {\n      result.push(this.expression());\n    }\n    return result;\n  }\n  private expression(): Expression {\n    return this.comparison();\n  }\n  private comparison(): Expression {\n    let expr = this.concatenate();\n    while (\n      this.match(\n        TokenType.EQUAL,\n        TokenType.NOT_EQUAL,\n        TokenType.GREATER,\n        TokenType.GREATER_EQUAL,\n        TokenType.LESS,\n        TokenType.LESS_EQUAL,\n      )\n    ) {\n      const operator = this.previous();\n      const right = this.concatenate();\n      expr = new BinaryExpression(expr, operator, right);\n    }\n    return expr;\n  }\n  private concatenate(): Expression {\n    let expr = this.term();\n    while (this.match(TokenType.CONCATENATE)) {\n      const operator = this.previous();\n      const right = this.term();\n      expr = new BinaryExpression(expr, operator, right);\n    }\n    return expr;\n  }\n  private term(): Expression {\n    let expr = this.factor();\n    while (this.match(TokenType.PLUS, TokenType.MINUS)) {\n      const operator = this.previous();\n      const right = this.factor();\n      expr = new BinaryExpression(expr, operator, right);\n    }\n    return expr;\n  }\n  private factor(): Expression {\n    let expr = this.expo();\n    while (this.match(TokenType.SLASH, TokenType.STAR)) {\n      const operator = this.previous();\n      const right = this.expo();\n      expr = new BinaryExpression(expr, operator, right);\n    }\n    return expr;\n  }\n  private expo(): Expression {\n    let expr = this.unary();\n    while (this.match(TokenType.EXPONENT)) {\n      const operator = this.previous();\n      const right = this.unary();\n      expr = new BinaryExpression(expr, operator, right);\n    }\n    return expr;\n  }\n\n  private unary(): Expression {\n    if (this.match(TokenType.PLUS, TokenType.MINUS)) {\n      const operator = this.previous();\n      const right = this.unary();\n      return new UnaryExpression(operator, right);\n    }\n    return this.postUnary();\n  }\n  private postUnary(): Expression {\n    let expr = this.cellRange();\n    if (this.match(TokenType.PERCENT)) {\n      const operator = this.previous();\n      expr = new PostUnaryExpression(operator, expr);\n    }\n    return expr;\n  }\n  private cellRange(): Expression {\n    let expr = this.call();\n    while (this.match(TokenType.COLON, TokenType.EXCLAMATION)) {\n      const operator = this.previous();\n      const right = this.call();\n      expr = new CellRangeExpression(expr, operator, right);\n    }\n    return expr;\n  }\n  private call(): Expression {\n    let expr = this.primary();\n    while (true) {\n      if (this.match(TokenType.LEFT_BRACKET)) {\n        expr = this.finishCall(expr);\n      } else {\n        break;\n      }\n    }\n    return expr;\n  }\n\n  private finishCall(name: Expression): CallExpression {\n    const params: Expression[] = [];\n    if (!this.check(TokenType.RIGHT_BRACKET)) {\n      do {\n        // fix SUM(1,)\n        if (this.peek().type == TokenType.RIGHT_BRACKET) {\n          break;\n        }\n        params.push(this.expression());\n      } while (this.match(TokenType.COMMA));\n    }\n    this.expect(TokenType.RIGHT_BRACKET);\n    return new CallExpression(name, params);\n  }\n  private primary(): Expression {\n    if (this.match(TokenType.LEFT_BRACKET)) {\n      const value = this.expression();\n      this.expect(TokenType.RIGHT_BRACKET);\n      return new GroupExpression(value);\n    }\n    if (\n      this.match(\n        TokenType.NUMBER,\n        TokenType.STRING,\n        TokenType.TRUE,\n        TokenType.FALSE,\n      )\n    ) {\n      return new LiteralExpression(this.previous());\n    }\n\n    if (this.match(TokenType.IDENTIFIER)) {\n      const name = this.previous();\n      const realValue = name.value.toUpperCase();\n      if (errorSet.has(realValue as ErrorTypes)) {\n        throw new CustomError(realValue as ErrorTypes);\n      }\n      // if (this.match(TokenType.EXCLAMATION)) {\n      //   const expr = this.expression();\n      //   if (expr instanceof TokenExpression) {\n      //     return this.addCellExpression(expr.value, expr.type, name);\n      //   }\n      //   throw new CustomError('#REF!');\n      // }\n      return new TokenExpression(name);\n      // const newToken = new Token(type, realValue);\n      // if (this.isFunctionName(realValue)) {\n      //   return new TokenExpression(new Token(type, getFunctionName(realValue)))\n      // }\n      // if (/^[a-z]+$/i.test(value)) {\n      //   return new TokenExpression(name);\n      // }\n      // if (\n      //   /^\\$[A-Z]+\\$\\d+$/.test(realValue) ||\n      //   /^\\$[A-Z]+$/.test(realValue) ||\n      //   /^\\$\\d+$/.test(realValue)\n      // ) {\n      //   return this.addCellExpression(newToken, 'absolute', null);\n      // }\n      // if (/^\\$[A-Z]+\\d+$/.test(realValue) || /^[A-Z]+\\$\\d+$/.test(realValue)) {\n      //   return this.addCellExpression(newToken, 'mixed', null);\n      // }\n      // if (/^[A-Z]+\\d+$/.test(realValue) || /^[A-Z]+$/.test(realValue)) {\n      //   return this.addCellExpression(newToken, 'relative', null);\n      // }\n      // return new TokenExpression(name);\n    }\n\n    throw new CustomError('#ERROR!');\n  }\n  private match(...types: TokenType[]): boolean {\n    const type = this.peek().type;\n    if (types.includes(type)) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n  private previous(): Token {\n    return this.tokens[this.current - 1];\n  }\n  private check(type: TokenType): boolean {\n    return this.peek().type === type;\n  }\n  private expect(type: TokenType): Token {\n    if (this.check(type)) {\n      this.next();\n      return this.previous();\n    } else {\n      throw new CustomError('#ERROR!');\n    }\n  }\n  private next() {\n    this.current++;\n  }\n  private isAtEnd() {\n    return this.peek().type === TokenType.EOF;\n  }\n  private peek(): Token {\n    if (this.current < this.tokens.length) {\n      return this.tokens[this.current];\n    }\n    return new Token(TokenType.EOF, '');\n  }\n}\n", "import { Range, mergeRange, parseCell } from '@/util';\nimport {\n  TokenType,\n  CellDataMap,\n  VariableMap,\n  FormulaData,\n  ReferenceType,\n} from '@/types';\nimport type {\n  Visitor,\n  Expression,\n  CellRangeExpression,\n  PostUnaryExpression,\n} from './expression';\nimport {\n  BinaryExpression,\n  UnaryExpression,\n  CellExpression,\n  CallExpression,\n  LiteralExpression,\n  TokenExpression,\n  GroupExpression,\n} from './expression';\nimport { CustomError } from './formula';\nimport { Token } from './token';\n\nexport class Interpreter implements Visitor {\n  private readonly expressions: Expression[];\n  private readonly functionMap: FormulaData;\n  private readonly cellDataMap: CellDataMap;\n  private readonly variableMap: VariableMap;\n  constructor(\n    expressions: Expression[],\n    cellDataMap: CellDataMap,\n    variableMap: VariableMap,\n    functionMap: FormulaData,\n  ) {\n    this.expressions = expressions;\n    this.functionMap = functionMap;\n    this.cellDataMap = cellDataMap;\n    this.variableMap = variableMap;\n  }\n  interpret(): any {\n    const result: any[] = [];\n    for (const item of this.expressions) {\n      result.push(this.evaluate(item));\n    }\n    if (result.length === 1) {\n      return this.getRangeCellValue(result[0]);\n    } else {\n      throw new CustomError('#ERROR!');\n    }\n  }\n  private getRangeCellValue(value: any): any {\n    if (value instanceof Range) {\n      if (value.colCount === value.rowCount && value.colCount === 1) {\n        return this.cellDataMap.get(value.row, value.col, value.sheetId);\n      } else {\n        throw new CustomError('#REF!');\n      }\n    }\n    return value;\n  }\n  private checkNumber(value: any) {\n    if (typeof value !== 'number') {\n      throw new CustomError('#VALUE!');\n    }\n  }\n  visitBinaryExpression(data: BinaryExpression): any {\n    let left = this.evaluate(data.left);\n    let right = this.evaluate(data.right);\n    left = this.getRangeCellValue(left);\n    right = this.getRangeCellValue(right);\n    switch (data.operator.type) {\n      case TokenType.MINUS:\n        this.checkNumber(left);\n        this.checkNumber(right);\n        return left - right;\n      case TokenType.PLUS:\n        this.checkNumber(left);\n        this.checkNumber(right);\n        return left + right;\n      case TokenType.SLASH:\n        this.checkNumber(left);\n        this.checkNumber(right);\n        if (right === 0) {\n          throw new CustomError('#DIV/0!');\n        }\n        return left / right;\n      case TokenType.STAR:\n        this.checkNumber(left);\n        this.checkNumber(right);\n        return left * right;\n      case TokenType.EXPONENT:\n        this.checkNumber(left);\n        this.checkNumber(right);\n        return Math.pow(left, right);\n      case TokenType.EQUAL:\n        return left === right;\n      case TokenType.NOT_EQUAL:\n        return left !== right;\n      case TokenType.GREATER:\n        return left > right;\n      case TokenType.GREATER_EQUAL:\n        return left >= right;\n      case TokenType.LESS:\n        return left < right;\n      case TokenType.LESS_EQUAL:\n        return left <= right;\n      case TokenType.CONCATENATE:\n        return `${left}${right}`;\n      default:\n        throw new CustomError('#VALUE!');\n    }\n  }\n  visitCallExpression(expr: CallExpression) {\n    const callee = this.evaluate(expr.name);\n    if (callee && typeof callee === 'function') {\n      const params: any[] = [];\n      for (const item of expr.params) {\n        const t = this.evaluate(item);\n        if (t instanceof Range) {\n          const { row, col, rowCount, colCount, sheetId } = t;\n          for (let r = row, endRow = row + rowCount; r < endRow; r++) {\n            for (let c = col, endCol = col + colCount; c < endCol; c++) {\n              params.push(this.cellDataMap.get(r, c, sheetId));\n            }\n          }\n        } else {\n          params.push(t);\n        }\n      }\n      return callee(...params);\n    }\n    throw new CustomError('#NAME?');\n  }\n  visitCellExpression(data: CellExpression) {\n    let sheetId = '';\n    if (data.sheetName) {\n      sheetId = this.cellDataMap.convertSheetNameToSheetId(\n        data.sheetName.value,\n      );\n    }\n    const t = parseCell(data.value.value);\n    if (t === null) {\n      throw new CustomError('#NAME?');\n    }\n    if (sheetId) {\n      t.sheetId = sheetId;\n    }\n    return t;\n  }\n  visitLiteralExpression(expr: LiteralExpression) {\n    const { type, value } = expr.value;\n    switch (type) {\n      case TokenType.STRING:\n        return value;\n      case TokenType.NUMBER: {\n        const t = parseFloat(value);\n        if (isNaN(t)) {\n          throw new CustomError('#VALUE!');\n        }\n        return t;\n      }\n      case TokenType.TRUE:\n        return true;\n      case TokenType.FALSE:\n        return false;\n      default:\n        throw new CustomError('#ERROR!');\n    }\n  }\n  private addCellExpression(\n    value: Token,\n    type: ReferenceType,\n    sheetName: Token | null,\n  ) {\n    value.value = value.value.toUpperCase();\n    const result = new CellExpression(value, type, sheetName);\n    return this.visitCellExpression(result);\n  }\n\n  visitTokenExpression(expr: TokenExpression) {\n    const { value, type } = expr.value;\n    const defineName = value.toLowerCase();\n    if (this.variableMap.has(defineName)) {\n      return this.variableMap.get(defineName);\n    }\n    const funcName = value.toUpperCase();\n    if (this.functionMap[funcName]) {\n      return this.functionMap[funcName];\n    }\n    const realValue = funcName;\n    const newToken = new Token(type, realValue);\n    if (\n      /^\\$[A-Z]+\\$\\d+$/.test(realValue) ||\n      /^\\$[A-Z]+$/.test(realValue) ||\n      /^\\$\\d+$/.test(realValue)\n    ) {\n      return this.addCellExpression(newToken, 'absolute', null);\n    }\n    if (/^\\$[A-Z]+\\d+$/.test(realValue) || /^[A-Z]+\\$\\d+$/.test(realValue)) {\n      return this.addCellExpression(newToken, 'mixed', null);\n    }\n    if (/^[A-Z]+\\d+$/.test(realValue) || /^[A-Z]+$/.test(realValue)) {\n      return this.addCellExpression(newToken, 'relative', null);\n    }\n\n    throw new CustomError('#NAME?');\n  }\n  visitUnaryExpression(data: UnaryExpression): any {\n    const value = this.evaluate(data.right);\n    switch (data.operator.type) {\n      case TokenType.MINUS:\n        return -value;\n      case TokenType.PLUS:\n        return value;\n      default:\n        throw new CustomError('#VALUE!');\n    }\n  }\n  private convertToCellExpression(expr: Expression): CellExpression | null {\n    if (expr instanceof CellExpression) {\n      return expr;\n    }\n    if (expr instanceof TokenExpression) {\n      return new CellExpression(\n        new Token(TokenType.IDENTIFIER, expr.value.value.toUpperCase()),\n        'relative',\n        null,\n      );\n    }\n    if (expr instanceof LiteralExpression) {\n      if (\n        expr.value.type === TokenType.NUMBER &&\n        /^\\d+$/.test(expr.value.value)\n      ) {\n        return new CellExpression(\n          new Token(TokenType.IDENTIFIER, expr.value.value),\n          'relative',\n          null,\n        );\n      }\n    }\n    return null;\n  }\n  visitCellRangeExpression(expr: CellRangeExpression): any {\n    switch (expr.operator.type) {\n      case TokenType.COLON: {\n        const left = this.convertToCellExpression(expr.left);\n        const right = this.convertToCellExpression(expr.right);\n        if (left !== null && right !== null) {\n          const a = this.visitCellExpression(left);\n          const b = this.visitCellExpression(right);\n          const result = mergeRange(a, b);\n          if (result === null) {\n            throw new CustomError('#NAME?');\n          }\n          return result;\n        } else {\n          throw new CustomError('#NAME?');\n        }\n        break;\n      }\n      case TokenType.EXCLAMATION: {\n        const right = this.convertToCellExpression(expr.right);\n        if (right === null) {\n          throw new CustomError('#REF!');\n        }\n        if (expr.left instanceof TokenExpression) {\n          return this.visitCellExpression(\n            new CellExpression(right.value, right.type, expr.left.value),\n          );\n        }\n        throw new CustomError('#NAME?');\n      }\n      default:\n        throw new CustomError('#NAME?');\n    }\n  }\n  visitGroupExpression(expr: GroupExpression): any {\n    return this.evaluate(expr.value);\n  }\n  visitPostUnaryExpression(expr: PostUnaryExpression): any {\n    const value = this.evaluate(expr.left);\n    switch (expr.operator.type) {\n      case TokenType.PERCENT:\n        this.checkNumber(value);\n        return value * 0.01;\n      default:\n        throw new CustomError('#VALUE!');\n    }\n  }\n  private evaluate(expr: Expression) {\n    return expr.accept(this);\n  }\n}\n", "import { Scanner } from './scanner';\nimport { Parser } from './parser';\nimport formulas, { CustomError } from './formula';\nimport { Interpreter } from './interpreter';\nimport {\n  CellDataMap,\n  InterpreterResult,\n  VariableMap,\n  FormulaData,\n} from '@/types';\n\nexport function parseFormula(\n  source: string,\n  cellData: CellDataMap = new CellDataMapImpl(),\n  variableMap: VariableMap = new VariableMapImpl(),\n  functionMap: FormulaData = formulas,\n): InterpreterResult {\n  let expressionStr = '';\n  try {\n    const list = new Scanner(source).scan();\n    const expressions = new Parser(list).parse();\n    const result = new Interpreter(\n      expressions,\n      cellData,\n      variableMap,\n      functionMap,\n    ).interpret();\n\n    const strList: string[] = [];\n    for (const item of expressions) {\n      strList.push(item.toString());\n    }\n    expressionStr = strList.join('');\n\n    return {\n      result: result,\n      error: null,\n      expressionStr,\n    };\n  } catch (error) {\n    if (error instanceof CustomError) {\n      return {\n        result: null,\n        error: error.value,\n        expressionStr,\n      };\n    }\n  }\n  return {\n    result: null,\n    error: '#ERROR!',\n    expressionStr,\n  };\n}\n\nexport class CellDataMapImpl implements CellDataMap {\n  private readonly map = new Map<string, any>();\n  private sheetNameMap: Record<string, string> = {};\n  private getKey(row: number, col: number, sheetId: string = '') {\n    const key = `${row}_${col}_${sheetId}`;\n    return key;\n  }\n  setSheetNameMap(sheetNameMap: Record<string, string>) {\n    this.sheetNameMap = sheetNameMap;\n  }\n  set(row: number, col: number, sheetId: string, value: any): void {\n    const key = this.getKey(row, col, sheetId);\n    this.map.set(key, value);\n  }\n  get(row: number, col: number, sheetId: string = ''): any {\n    const key = this.getKey(row, col, sheetId);\n    return this.map.get(key);\n  }\n  convertSheetNameToSheetId(sheetName: string): string {\n    if (!sheetName) {\n      return '';\n    }\n    return this.sheetNameMap[sheetName] || '';\n  }\n}\n\nexport class VariableMapImpl implements VariableMap {\n  private readonly map = new Map<string, any>();\n  set(name: string, value: any): void {\n    this.map.set(name, value);\n  }\n  get(name: string): any {\n    return this.map.get(name);\n  }\n  has(name: string): boolean {\n    return this.map.has(name);\n  }\n}\n", "import {\n  StyleType,\n  ModelCellType,\n  WorkBookJSON,\n  WorksheetType,\n  Coordinate,\n  IModel,\n  ResultType,\n  IRange,\n  IHistory,\n  UndoRedoItem,\n} from '@/types';\nimport {\n  getDefaultSheetInfo,\n  assert,\n  modelLog,\n  Range,\n  DEFAULT_ROW_COUNT,\n  DEFAULT_COL_COUNT,\n  isEmpty,\n  get,\n  setWith,\n  isSameRange,\n} from '@/util';\nimport { parseFormula } from '@/formula';\n\nconst CELL_HEIGHT = 19;\nconst CELL_WIDTH = 68;\nconst XLSX_MAX_COL_COUNT = 16384; // XFD\nconst XLSX_MAX_ROW_COUNT = 1048576;\n\nfunction convertToNumber(list: string[]) {\n  const result = list\n    .map((item) => parseInt(item, 10))\n    .filter((v) => !isNaN(v));\n  result.sort((a, b) => a - b);\n  return result;\n}\n\nexport class Model implements IModel {\n  private currentSheetId = '';\n  private workbook: WorkBookJSON['workbook'] = [];\n  private worksheets: WorkBookJSON['worksheets'] = {};\n  private mergeCells: WorkBookJSON['mergeCells'] = [];\n  private customHeight: WorkBookJSON['customHeight'] = {};\n  private customWidth: WorkBookJSON['customWidth'] = {};\n  private history: IHistory;\n  private customVariableMap: WorkBookJSON['customVariable'] = {}\n  constructor(history: IHistory) {\n    this.history = history;\n  }\n  getSheetList(): WorkBookJSON['workbook'] {\n    return this.workbook;\n  }\n  setActiveCell(range: IRange): void {\n    const index = this.workbook.findIndex((v) => v.sheetId === range.sheetId);\n    if (index < 0) {\n      return;\n    }\n    const { row, col } = range;\n    const sheet = this.workbook[index];\n    if (row < 0 || col < 0 || row >= sheet.rowCount || col >= sheet.colCount) {\n      return;\n    }\n    const oldValue = sheet.activeCell;\n    if (isSameRange(oldValue, range)) {\n      return;\n    }\n    const key = `workbook.${index}.activeCell`;\n    this.history.pushRedo('set', key, {\n      ...oldValue,\n    });\n    setWith(this, key, { ...range });\n  }\n  addSheet(): void {\n    const item = getDefaultSheetInfo(this.workbook);\n    const sheet: WorksheetType = {\n      ...item,\n      isHide: false,\n      colCount: DEFAULT_COL_COUNT,\n      rowCount: DEFAULT_ROW_COUNT,\n      activeCell: {\n        row: 0,\n        col: 0,\n        rowCount: 1,\n        colCount: 1,\n        sheetId: item.sheetId,\n      },\n    };\n    const index = this.workbook.findIndex(\n      (item) => item.sheetId === this.currentSheetId,\n    );\n    if (index < 0) {\n      this.workbook.push(sheet);\n    } else {\n      this.workbook.splice(index + 1, 0, sheet);\n    }\n    this.currentSheetId = sheet.sheetId;\n  }\n  private getSheetIndex(sheetId?: string) {\n    const id = sheetId || this.currentSheetId;\n    const index = this.workbook.findIndex((item) => item.sheetId === id);\n    assert(index >= 0);\n    let lastIndex = 0;\n    if (index === 0) {\n      lastIndex = index + 1;\n      while (\n        lastIndex <= this.workbook.length - 2 &&\n        this.workbook[lastIndex].isHide\n      ) {\n        lastIndex++;\n      }\n    } else {\n      lastIndex = index - 1;\n      while (lastIndex >= 1 && this.workbook[lastIndex].isHide) {\n        lastIndex--;\n      }\n    }\n    return {\n      index,\n      lastIndex,\n    };\n  }\n  deleteSheet(sheetId?: string): void {\n    const list = this.workbook.filter((v) => !v.isHide);\n    assert(\n      list.length >= 2,\n      'A workbook must contains at least on visible worksheet',\n    );\n    const { index, lastIndex } = this.getSheetIndex(sheetId);\n    this.currentSheetId = this.workbook[lastIndex].sheetId;\n    this.workbook.splice(index, 1);\n  }\n  hideSheet(sheetId?: string | undefined): void {\n    const list = this.workbook.filter((v) => !v.isHide);\n    assert(\n      list.length >= 2,\n      'A workbook must contains at least on visible worksheet',\n    );\n    const { index, lastIndex } = this.getSheetIndex(sheetId);\n    this.workbook[index].isHide = true;\n    this.currentSheetId = this.workbook[lastIndex].sheetId;\n  }\n  unhideSheet(sheetId?: string | undefined): void {\n    const { index } = this.getSheetIndex(sheetId);\n    this.workbook[index].isHide = false;\n    this.currentSheetId = this.workbook[index].sheetId;\n  }\n  renameSheet(sheetName: string, sheetId?: string | undefined): void {\n    assert(!!sheetName, 'You typed a invalid name for a sheet.');\n    const sheetInfo = this.getSheetInfo(sheetId);\n    sheetInfo.name = sheetName;\n  }\n  getSheetInfo(id: string = this.currentSheetId): WorksheetType {\n    const item = this.workbook.find((item) => item.sheetId === id);\n    assert(item !== undefined);\n    return item;\n  }\n  setCurrentSheetId(id: string): void {\n    this.currentSheetId = id;\n    this.computeAllCell();\n  }\n  getCurrentSheetId(): string {\n    return this.currentSheetId;\n  }\n  fromJSON = (json: WorkBookJSON) => {\n    modelLog('fromJSON', json);\n    const {\n      worksheets = {},\n      workbook = [],\n      mergeCells = [],\n      customHeight = {},\n      customWidth = {},\n      customVariable = {}\n    } = json;\n    this.worksheets = worksheets;\n    this.workbook = workbook;\n    this.currentSheetId = workbook[0].sheetId || this.currentSheetId;\n    this.mergeCells = mergeCells;\n    this.customWidth = customWidth;\n    this.customHeight = customHeight;\n    this.customVariableMap = customVariable\n    this.computeAllCell();\n    this.history.clear();\n  };\n  toJSON = (): WorkBookJSON => {\n    const { worksheets, workbook, mergeCells, customHeight, customWidth, customVariableMap } =\n      this;\n    return {\n      workbook,\n      worksheets,\n      mergeCells,\n      customHeight,\n      customWidth,\n      customVariable: customVariableMap\n    };\n  };\n\n  private setCellValue(value: ResultType, range: Coordinate): void {\n    const { row, col } = range;\n    const key = `worksheets[${this.currentSheetId}][${row}][${col}].value`;\n    this.history.pushRedo('set', key, get(this, key, undefined));\n\n    setWith(this, key, value);\n  }\n  private setCellFormula(formula: string, range: Coordinate): void {\n    const { row, col } = range;\n    const key = `worksheets[${this.currentSheetId}][${row}][${col}].formula`;\n\n    this.history.pushRedo('set', key, get(this, key, undefined));\n\n    setWith(this, key, formula);\n  }\n  setCellValues(\n    value: string[][],\n    style: Partial<StyleType>[][],\n    ranges: Range[],\n  ): void {\n    const [range] = ranges;\n    const { row, col } = range;\n    for (let r = 0; r < value.length; r++) {\n      for (let c = 0; c < value[r].length; c++) {\n        const t = value[r][c];\n        const temp: Coordinate = {\n          row: row + r,\n          col: col + c,\n        };\n        if (style[r] && style[r][c]) {\n          this.setStyle(style[r][c], temp);\n        }\n        if (t.startsWith('=')) {\n          this.setCellFormula(t, temp);\n        } else {\n          this.setCellFormula('', temp);\n          this.setCellValue(t, temp);\n        }\n      }\n    }\n    this.computeAllCell();\n  }\n  private setStyle(style: Partial<StyleType>, range: Coordinate) {\n    const stylePath = `worksheets[${this.currentSheetId}][${range.row}][${range.col}].style`;\n    this.history.pushRedo('set', stylePath, get(this, stylePath, {}));\n    setWith(this, stylePath, style);\n  }\n  setCellStyle(style: Partial<StyleType>, ranges: Range[]): void {\n    const [range] = ranges;\n    const { row, col, rowCount, colCount } = range;\n    for (let r = row, endRow = row + rowCount; r < endRow; r++) {\n      for (let c = col, endCol = col + colCount; c < endCol; c++) {\n        this.setStyle(style, { row: r, col: c });\n      }\n    }\n  }\n  getCell = (range: IRange) => {\n    const { row, col, sheetId } = range;\n    const realSheetId = sheetId || this.currentSheetId;\n    const cellData = get<ModelCellType>(\n      this,\n      `worksheets[${realSheetId}][${row}][${col}]`,\n      {},\n    );\n    return {\n      ...cellData,\n      row,\n      col,\n    };\n  };\n  private computeAllCell() {\n    const sheetData = this.worksheets[this.currentSheetId];\n    if (isEmpty(sheetData)) {\n      return [];\n    }\n    const rowKeys = Object.keys(sheetData);\n    for (const rowKey of rowKeys) {\n      const colKeys = Object.keys(sheetData[rowKey]);\n      for (const colKey of colKeys) {\n        const temp = sheetData[rowKey][colKey];\n        if (temp?.formula) {\n          temp.value = this.parseFormula(temp.formula);\n        }\n      }\n    }\n  }\n  private parseFormula(formula: string) {\n    const self = this;\n    const result = parseFormula(formula, {\n      get: (row: number, col: number, sheetId: string) => {\n        const temp = self.getCell(new Range(row, col, 1, 1, sheetId));\n        return temp.value;\n      },\n      set: () => { },\n      convertSheetNameToSheetId: (sheetName: string): string => {\n        const item = self.workbook.find((v) => v.name === sheetName);\n        return item?.sheetId || '';\n      },\n    }, {\n      set(name: string, value: any) {\n        self.customVariableMap[name] = value\n      },\n      get(name: string) {\n        return self.customVariableMap[name]\n      },\n      has(name: string) {\n        return name in self.customVariableMap\n      }\n    });\n    return result.error ? result.error : result.result;\n  }\n  addRow(rowIndex: number, count: number): void {\n    const sheetData = this.worksheets[this.currentSheetId];\n    if (isEmpty(sheetData)) {\n      return;\n    }\n    const rowKeys = convertToNumber(Object.keys(sheetData));\n    for (let i = rowKeys.length - 1; i >= 0; i--) {\n      const rowKey = rowKeys[i];\n      if (rowKey < rowIndex) {\n        continue;\n      }\n      const key = String(rowKey + count);\n      sheetData[key] = {\n        ...sheetData[rowKey],\n      };\n      sheetData[rowKey] = {};\n    }\n    const sheetInfo = this.getSheetInfo();\n    if (sheetInfo.rowCount >= XLSX_MAX_ROW_COUNT) {\n      return;\n    }\n    sheetInfo.rowCount += count;\n  }\n  addCol(colIndex: number, count: number): void {\n    const sheetData = this.worksheets[this.currentSheetId];\n    if (isEmpty(sheetData)) {\n      return;\n    }\n    const sheetInfo = this.getSheetInfo();\n\n    const rowKeys = Object.keys(sheetData);\n    for (const rowKey of rowKeys) {\n      const colKeys = convertToNumber(Object.keys(sheetData[rowKey]));\n      for (let i = colKeys.length - 1; i >= 0; i--) {\n        const colKey = colKeys[i];\n        if (colKey < colIndex) {\n          continue;\n        }\n        const key = String(colKey + count);\n        sheetData[rowKey][key] = {\n          ...sheetData[rowKey][colKey],\n        };\n        sheetData[rowKey][colKey] = {};\n      }\n    }\n    if (sheetInfo.colCount >= XLSX_MAX_COL_COUNT) {\n      return;\n    }\n    sheetInfo.colCount += count;\n  }\n  deleteCol(colIndex: number, count: number): void {\n    const sheetData = this.worksheets[this.currentSheetId];\n    if (isEmpty(sheetData)) {\n      return;\n    }\n    const sheetInfo = this.getSheetInfo();\n\n    const rowKeys = Object.keys(sheetData);\n    for (const rowKey of rowKeys) {\n      const colKeys = convertToNumber(Object.keys(sheetData[rowKey]));\n      for (let i = 0; i < colKeys.length; i++) {\n        const colKey = colKeys[i];\n        if (colKey < colIndex) {\n          continue;\n        }\n        const key = String(colKey - count);\n        sheetData[rowKey][key] = {\n          ...sheetData[rowKey][colKey],\n        };\n        sheetData[rowKey][colKey] = {};\n      }\n    }\n\n    sheetInfo.colCount -= count;\n  }\n  deleteRow(rowIndex: number, count: number): void {\n    const sheetData = this.worksheets[this.currentSheetId];\n    if (isEmpty(sheetData)) {\n      return;\n    }\n    const rowKeys = convertToNumber(Object.keys(sheetData));\n    for (let i = 0; i < rowKeys.length; i++) {\n      const rowKey = rowKeys[i];\n      if (rowKey < rowIndex) {\n        continue;\n      }\n      const key = String(rowKey - count);\n      sheetData[key] = {\n        ...sheetData[rowKey],\n      };\n      sheetData[rowKey] = {};\n    }\n    const sheetInfo = this.getSheetInfo();\n    sheetInfo.rowCount -= count;\n  }\n  getColWidth(col: number): number {\n    const temp = this.customWidth[this.currentSheetId];\n    if (!temp) {\n      return CELL_WIDTH;\n    }\n    if (typeof temp[col] === 'number') {\n      return temp[col];\n    }\n    return CELL_WIDTH;\n  }\n  setColWidth(col: number, width: number): void {\n    this.customWidth[this.currentSheetId] =\n      this.customWidth[this.currentSheetId] || {};\n    this.customWidth[this.currentSheetId][col] = width;\n  }\n  getRowHeight(row: number): number {\n    const temp = this.customHeight[this.currentSheetId];\n    if (!temp) {\n      return CELL_HEIGHT;\n    }\n    if (typeof temp[row] === 'number') {\n      return temp[row];\n    }\n    return CELL_HEIGHT;\n  }\n  setRowHeight(row: number, height: number): void {\n    this.customHeight[this.currentSheetId] =\n      this.customHeight[this.currentSheetId] || {};\n    this.customHeight[this.currentSheetId][row] = height;\n  }\n  canRedo(): boolean {\n    return this.history.canRedo();\n  }\n  canUndo(): boolean {\n    return this.history.canUndo();\n  }\n  undo() {\n    if (!this.canUndo()) {\n      return;\n    }\n    this.executeOperate(this.history.undo());\n  }\n  redo() {\n    if (!this.canRedo()) {\n      return;\n    }\n    this.executeOperate(this.history.redo());\n  }\n  record(): void {\n    this.history.onChange();\n  }\n\n  private executeOperate(list: UndoRedoItem[]) {\n    for (const item of list) {\n      const { op, path, value } = item;\n      switch (op) {\n        case 'set': {\n          this.history.pushUndo(op, path, get(this, path, undefined));\n          this.record();\n          setWith(this, path, value);\n          break;\n        }\n        // case 'add-array':\n        //   break;\n        // case 'delete-array':\n        //   break;\n        default:\n          console.error(`not support type: ${op}`);\n          break;\n      }\n    }\n  }\n}\n", "import { WorkBookJSON, EUnderLine } from '@/types';\nimport { DEFAULT_ROW_COUNT, DEFAULT_COL_COUNT } from '@/util';\n\nexport const MOCK_MODEL: WorkBookJSON = {\n  workbook: [\n    {\n      sheetId: '1',\n      name: 'Sheet1',\n      isHide: false,\n      activeCell: {\n        row: 2,\n        col: 2,\n        rowCount: 1,\n        colCount: 1,\n        sheetId: '',\n      },\n      colCount: DEFAULT_COL_COUNT,\n      rowCount: DEFAULT_ROW_COUNT,\n    },\n    {\n      sheetId: '2',\n      name: 'test',\n      isHide: false,\n      colCount: DEFAULT_COL_COUNT,\n      rowCount: DEFAULT_ROW_COUNT,\n      activeCell: {\n        row: 4,\n        col: 4,\n        rowCount: 2,\n        colCount: 2,\n        sheetId: '',\n      },\n    },\n  ],\n  worksheets: {\n    1: {\n      0: {\n        0: {\n          value: '',\n          // formula: '1',\n          style: {\n            fontColor: '#ff0000',\n          },\n        },\n        1: {\n          value: '',\n          formula: '=foo',\n        },\n        2: {\n          value: '',\n          // formula: '3',\n        },\n        3: {\n          value: '\u8D85\u5927\u5B57',\n          style: {\n            fontSize: 36,\n          },\n        },\n        4: {\n          value: '\u8FD9\u662F\u4E00\u6BB5\u975E\u5E38\u957F\u7684\u6587\u6848\uFF0C\u9700\u8981\u6362\u884C\u5C55\u793A',\n          style: {\n            isWrapText: true,\n            underline: EUnderLine.SINGLE,\n          },\n        },\n      },\n      3: {\n        0: {\n          style: {\n            fillColor: 'red',\n          },\n        },\n        1: {\n          style: {\n            fillColor: 'red',\n          },\n        },\n      },\n      4: {\n        0: {\n          style: {\n            fillColor: 'red',\n          },\n        },\n        1: {\n          style: {\n            fillColor: 'red',\n          },\n        },\n      },\n    },\n    2: {\n      0: {\n        0: {\n          // formula: '=Sheet1!A1',\n        },\n      },\n    },\n  },\n  mergeCells: [\n    {\n      row: 7,\n      col: 0,\n      rowCount: 2,\n      colCount: 2,\n      sheetId: '1',\n    },\n  ],\n  customHeight: {\n    1: {\n      1: 100,\n    },\n  },\n  customWidth: {\n    1: {\n      1: 100,\n    },\n  },\n  customVariable: {\n    'foo': 1\n  }\n};\n", "import { IHistory, UndoRedoItem, UndoRedoType } from '@/types';\nexport class History implements IHistory {\n  private undoList: UndoRedoItem[][] = [];\n  private redoList: UndoRedoItem[][] = [];\n  private undoItem: UndoRedoItem[] = [];\n  private redoItem: UndoRedoItem[] = [];\n  constructor() {\n    this.clear();\n  }\n  private clearItem(): void {\n    this.undoItem = [];\n    this.redoItem = [];\n  }\n  onChange(): void {\n    if (this.undoItem.length > 0) {\n      this.undoList.push(this.undoItem.slice());\n    }\n    if (this.redoItem.length > 0) {\n      this.redoList.push(this.redoItem.slice());\n    }\n    this.clearItem();\n  }\n  pushRedo(op: UndoRedoType, key: string, value: any): void {\n    this.redoItem.push({\n      op,\n      path: key,\n      value,\n    });\n  }\n  pushUndo(op: UndoRedoType, key: string, value: any): void {\n    this.undoItem.push({\n      op,\n      path: key,\n      value,\n    });\n  }\n  clear(): void {\n    this.undoList = [];\n    this.redoList = [];\n    this.clearItem();\n  }\n  canRedo(): boolean {\n    return this.redoList.length > 0;\n  }\n  canUndo(): boolean {\n    return this.undoList.length > 0;\n  }\n  redo() {\n    return this.redoList.pop()!;\n  }\n  undo() {\n    return this.undoList.pop()!;\n  }\n}\n", "import { StoreValue, IController, ChangeEventType, OptionItem } from './types';\nimport { Controller } from './controller';\nimport { Model, MOCK_MODEL, History } from './model';\nimport { MainCanvas, registerGlobalEvent, Content } from './canvas';\nimport {\n  FONT_FAMILY_LIST,\n  QUERY_ALL_LOCAL_FONT,\n  isSupportFontFamily,\n  copy,\n  cut,\n  paste,\n  theme,\n  LOCAL_FONT_KEY,\n} from './util';\n\nexport function initTheme(dom: HTMLElement) {\n  const keyList = Object.keys(theme) as Array<keyof typeof theme>;\n  for (const key of keyList) {\n    dom.style.setProperty(`--${key}`, String(theme[key] || ''));\n  }\n}\nexport function initFontFamilyList(fontList = FONT_FAMILY_LIST): OptionItem[] {\n  const cacheFont = localStorage.getItem(LOCAL_FONT_KEY);\n  if (cacheFont) {\n    const fontList = JSON.parse(cacheFont) as string[];\n    return fontList.map((v) => ({ value: v, label: v, disabled: false }));\n  }\n  const list = fontList.map((v) => ({\n    label: v,\n    value: v,\n    disabled: !isSupportFontFamily(v),\n  }));\n  if ((window as any).queryLocalFonts) {\n    list.push({\n      value: QUERY_ALL_LOCAL_FONT,\n      label: '--> get all installed fonts',\n      disabled: false,\n    });\n  }\n  return list;\n}\n\nfunction getStoreValue(\n  controller: IController,\n  stateValue: StoreValue,\n): Partial<StoreValue> {\n  const { top } = controller.getDomRect();\n  const activeCell = controller.getActiveCell();\n  const cell = controller.getCell(activeCell);\n  const cellPosition = controller.computeCellPosition(\n    activeCell.row,\n    activeCell.col,\n  );\n  cellPosition.top = top + cellPosition.top;\n  if (!cell.style) {\n    cell.style = {};\n  }\n  if (!cell.style.fontFamily) {\n    let defaultFontFamily = '';\n    for (const item of stateValue.fontFamilyList) {\n      if (!item.disabled) {\n        defaultFontFamily = String(item.value);\n        break;\n      }\n    }\n    cell.style.fontFamily = defaultFontFamily;\n  }\n  const sheetList = controller\n    .getSheetList()\n    .filter((v) => !v.isHide)\n    .map((v) => ({ value: v.sheetId, label: v.name }));\n  const newStateValue: Partial<StoreValue> = {\n    activeCell: {\n      ...cellPosition,\n      ...cell,\n    },\n    sheetList,\n    currentSheetId: controller.getCurrentSheetId(),\n  };\n  return newStateValue;\n}\n\nfunction createCanvas() {\n  const canvas = document.createElement('canvas');\n  canvas.style.display = 'none';\n  document.body.appendChild(canvas);\n  return canvas;\n}\n\nexport const initCanvas = (stateValue: StoreValue, controller: IController) => {\n  const mainCanvas = new MainCanvas(\n    controller,\n    new Content(controller, createCanvas()),\n  );\n  const resize = () => {\n    mainCanvas.resize();\n    mainCanvas.render({\n      changeSet: new Set<ChangeEventType>(['content']),\n    });\n  };\n  resize();\n  const removeEvent = registerGlobalEvent(stateValue, controller, resize);\n  controller.setHooks({\n    copy,\n    cut,\n    paste,\n    modelChange: (changeSet) => {\n      const newStateValue = getStoreValue(controller, stateValue);\n      Object.assign(stateValue, newStateValue);\n      mainCanvas.render({ changeSet: changeSet });\n      mainCanvas.render({\n        changeSet: controller.getChangeSet(),\n      });\n    },\n  });\n  controller.fromJSON(MOCK_MODEL);\n  return removeEvent;\n};\nexport function initController(): IController {\n  const controller = new Controller(new Model(new History()));\n  controller.addSheet();\n  (window as any).controller = controller;\n  return controller;\n}\n"],
  "mappings": "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UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACF,EACaC,GAAmB,IAEnBC,GAAY,IAAI,IAAgB,CAC3C,UACA,UACA,SACA,QACA,QACA,UACA,OACA,QACF,CAAC,EAEYC,GAAkC,CAC7C,UAAW,CAAC,EACZ,eAAgB,GAChB,cAAe,GACf,WAAY,CACV,MAAO,GACP,MAAO,CAAC,EACR,IAAK,EACL,IAAK,EACL,KAAM,KACN,IAAK,KACL,MAAO,EACP,OAAQ,CACV,EACA,eAAgB,CAAC,EACjB,oBAAqB,OACrB,wBAAyB,OACzB,mBAAoB,EACtB,EC/GO,SAASC,GAASC,EAAqB,CAC5C,GAAI,OAAOA,GAAU,UAAY,CAAC,OAAO,MAAMA,CAAK,EAClD,MAAO,GAET,GAAI,OAAOA,GAAU,SACnB,MAAO,GAET,IAAMC,EAAO,WAAWD,CAAK,EAC7B,MAAO,CAAC,OAAO,MAAMC,CAAI,CAC3B,CAEO,SAASC,GAAYF,EAAoB,CAC9C,OAAID,GAASC,CAAK,EACT,OAAOA,CAAK,EAEd,CACT,CAEO,SAASG,GAAiBC,EAAuB,CACtD,IAAMC,EAAmB,CAAC,EAC1B,QAASC,EAAI,EAAGA,EAAIF,EAAK,OAAQE,IAAK,CACpC,IAAML,EAAOC,GAAYE,EAAKE,CAAC,CAAC,EAC3B,OAAO,MAAML,CAAI,GACpBI,EAAO,KAAKJ,CAAI,CAEpB,CACA,OAAOI,CACT,CAEO,SAASE,GAAcH,EAAiB,CAAC,EAAW,CACzD,IAAMI,EAAmBJ,EACtB,IAAKK,GACAV,GAASU,CAAI,EACR,SAASA,EAAM,EAAE,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",
  "names": ["src_exports", "__export", "initExcel", "dpr", "data", "npx", "px", "thinLineWidth", "isMac", "DEFAULT_FONT_SIZE", "DEFAULT_FONT_COLOR", "ERROR_FORMULA_COLOR", "MUST_FONT_FAMILY", "FONT_SIZE_LIST", "DEFAULT_FONT_SIZE", "makeFont", "fontStyle", "fontWeight", "fontSize", "fontFamily", "temp", "DEFAULT_FONT_CONFIG", "npx", "convertCanvasStyleToString", "style", "result", "convertCSSStyleToCanvasStyle", "selectorCSSText", "color", "backgroundColor", "whiteSpace", "textDecoration", "size", "parseStyle", "styleList", "selector", "item", "cssText", "rule", "startIndex", "endIndex", "plainText", "assert", "condition", "message", "env", "SHEET_NAME_PREFIX", "DEFAULT_ROW_COUNT", "DEFAULT_COL_COUNT", "SCROLL_SIZE", "BOTTOM_BUFF", "DEBUG_COLOR_LIST", "MAX_PARAMS_COUNT", "ERROR_SET", "DEFAULT_STORE_VALUE", "isNumber", "value", "temp", "parseNumber", "parseNumberArray", "list", "result", "i", "getListMaxNum", "idList", "item", "v", "getDefaultSheetInfo", "sheetId", "SHEET_NAME_PREFIX", "isTestEnv", "columnNameToInt", "columnName", "temp", "num", "i", "intToColumnName", "dividend", "rest", "rowLabelToInt", "label", "result", "classnames", "rest", "result", "temp", "key", "isSheet", "range", "isRow", "isCol", "isSameRange", "oldRange", "newRange", "Range", "_Range", "row", "col", "rowCount", "colCount", "sheetId", "isCharacter", "char", "isNum", "convertSheetNameToSheetId", "value", "parseCell", "ref", "convertSheetName", "realRef", "sheetName", "other", "rowText", "colText", "rowCount", "colCount", "row", "col", "DEFAULT_ROW_COUNT", "rowLabelToInt", "DEFAULT_COL_COUNT", "columnNameToInt", "Range", "mergeRange", "start", "end", "rowCount", "colCount", "row", "col", "Range", "Debug", "_Debug", "namespace", "rest", "color", "result", "index", "DEBUG_COLOR_LIST", "assert", "storage", "reactLog", "controllerLog", "canvasLog", "modelLog", "SupportFontFamilyFactory", "body", "monoFont", "serifFont", "container", "getWidth", "fontFamily", "width", "monoWidth", "serifWidth", "sansWidth", "MUST_FONT_FAMILY", "isSupportFontFamily", "PLAIN_FORMAT", "HTML_FORMAT", "select", "element", "isReadOnly", "createFakeElement", "value", "isRTL", "fakeElement", "yPosition", "writeDataToClipboard", "textData", "result", "keyList", "key", "data", "readDataFromClipboard", "HTML_FORMAT", "PLAIN_FORMAT", "list", "item", "buf", "fakeCopyAction", "container", "type", "selectedText", "select", "copy", "error", "cut", "paste", "generateHTML", "style", "content", "debounce", "fn", "timer", "rest", "get", "obj", "path", "defaultValue", "result", "res", "key", "isEmpty", "value", "temp", "setWith", "index", "arr", "size", "size_default", "color", "DEFAULT_FONT_COLOR", "color_default", "theme", "size_default", "color_default", "QUERY_ALL_LOCAL_FONT", "LOCAL_FONT_KEY", "FONT_FAMILY_LIST", "getHitInfo", "event", "controller", "canvasSize", "scroll", "sheetInfo", "headerSize", "pageX", "pageY", "x", "y", "resultX", "resultY", "row", "col", "createElement", "tagName", "options", "reactLog", "createElementNS", "namespaceURI", "qualifiedName", "createTextNode", "text", "insertBefore", "parentNode", "newNode", "referenceNode", "removeChild", "node", "child", "appendChild", "nextSibling", "setTextContent", "isElement", "htmlDomApi", "SVG_NS", "addNs", "node", "item", "h", "sel", "data", "children", "key", "nodeData", "nodeList", "textList", "list", "t", "keyList", "result", "isUndef", "s", "isDef", "emptyNode", "h", "sameVNode", "vNode1", "vNode2", "isSameKey", "isSameIs", "isSameSel", "isSameTextOrFragment", "isElement", "api", "vNode", "createKeyToOldIdx", "children", "beginIdx", "endIdx", "map", "i", "key", "hooks", "init", "modules", "domApi", "cbs", "htmlDomApi", "hook", "module", "currentHook", "createRmCb", "childElm", "listeners", "parent", "createElm", "insertedVNodeQueue", "data", "sel", "elm", "ch", "addVNodes", "parentElm", "before", "vNodes", "startIdx", "invokeDestroyHook", "j", "child", "removeVNodes", "rm", "removeHook", "updateChildren", "oldCh", "newCh", "oldStartIdx", "newStartIdx", "oldEndIdx", "oldStartVNode", "oldEndVNode", "newEndIdx", "newStartVNode", "newEndVNode", "oldKeyToIdx", "idxInOld", "elmToMove", "patchVNode", "oldVNode", "patch", "xLinkNS", "xmlNS", "colonChar", "xChar", "updateAttrs", "oldVNode", "vNode", "key", "elm", "oldAttrs", "attrs", "cur", "attributesModule", "updateClass", "oldVNode", "vNode", "elm", "oldClass", "newClass", "classModule", "CAPS_REGEX", "updateDataset", "oldVNode", "vNode", "elm", "oldDataset", "dataset", "key", "d", "datasetModule", "invokeHandler", "handler", "vNode", "event", "temp", "i", "handleEvent", "name", "on", "createListener", "updateEventListeners", "oldVNode", "oldOn", "oldListener", "oldElm", "elm", "listener", "eventListenersModule", "updateProps", "oldVNode", "vNode", "key", "cur", "old", "elm", "oldProps", "props", "propsModule", "convertKey", "key", "CAPS_REGEX", "updateStyle", "oldVNode", "vNode", "name", "elm", "oldStyle", "style", "t", "styleModule", "patch", "init", "attributesModule", "classModule", "datasetModule", "eventListenersModule", "propsModule", "styleModule", "htmlDomApi", "render", "container", "vNode", "dom", "temp", "measureTextMap", "measureText", "ctx", "char", "mapKey", "temp", "actualBoundingBoxDescent", "actualBoundingBoxAscent", "width", "result", "dpr", "fillRect", "x", "y", "height", "npx", "strokeRect", "clearRect", "fillText", "text", "convertValueToString", "value", "renderCell", "cellInfo", "style", "left", "top", "isNum", "isNumber", "font", "DEFAULT_FONT_CONFIG", "fillStyle", "DEFAULT_FONT_COLOR", "isEmpty", "fontSize", "DEFAULT_FONT_SIZE", "makeFont", "ERROR_SET", "ERROR_FORMULA_COLOR", "texts", "textItemList", "t", "offset", "i", "lastIndex", "textHeight", "textData", "k", "b", "pointList", "drawUnderline", "v", "textWidth", "drawLines", "assert", "first", "second", "drawTriangle", "point1", "point2", "point3", "drawAntLine", "oldDash", "underline", "start", "end", "list", "resizeCanvas", "canvas", "realWidth", "realHeight", "MainCanvas", "controller", "content", "canvas", "size", "dpr", "width", "height", "resizeCanvas", "npx", "params", "result", "position", "ranges", "range", "theme", "drawAntLine", "isSheet", "isCol", "isRow", "cellData", "activeCell", "clearRect", "renderCell", "headerSize", "endCellRow", "endCellCol", "endCell", "fillRect", "check", "list", "drawLines", "strokeRect", "computeScrollRowAndCol", "controller", "left", "top", "oldScroll", "row", "col", "t", "computeScrollPosition", "headerSize", "canvasRect", "viewSize", "maxHeight", "BOTTOM_BUFF", "maxWidth", "maxScrollHeight", "SCROLL_SIZE", "maxScrollWidth", "scrollTop", "scrollLeft", "scrollBar", "scrollX", "scrollY", "recalculateScroll", "activeCell", "position", "domRect", "sheetInfo", "buff", "checkActiveElement", "inputDom", "keyboardEventList", "isMac", "style", "isInputEvent", "event", "name", "clickOutSideMap", "setOutSideMap", "key", "item", "registerGlobalEvent", "stateValue", "controller", "resizeWindow", "handleKeydown", "list", "keyboardEventList", "v", "a", "b", "temp", "handleWheel", "debounce", "scrollBar", "handlePaste", "handleCopy", "handleCut", "handleMouseDown", "HEADER_STYLE", "DEFAULT_FONT_CONFIG", "theme", "thinLineWidth", "Content", "controller", "canvas", "ctx", "size", "dpr", "width", "height", "resizeCanvas", "npx", "changeSet", "headerSize", "contentWidth", "contentHeight", "currentSheetId", "row", "col", "x", "c", "y", "r", "t", "endRow", "endCol", "cellInfo", "Range", "isEmpty", "cellSize", "wrapHeight", "fontSizeHeight", "renderCell", "isTestEnv", "theme", "fillRect", "offset", "drawTriangle", "rowIndex", "colIndex", "rowCount", "colCount", "lineWidth", "thinLineWidth", "pointList", "maxX", "i", "realWidth", "drawLines", "rowWidth", "fillText", "colText", "colHeight", "HEADER_STYLE", "rowHeight", "temp", "colWidth", "intToColumnName", "DOUBLE_CLICK_TIME", "scrollBar", "controller", "scrollX", "scrollY", "oldScroll", "maxHeight", "maxScrollHeight", "maxScrollWidth", "maxWidth", "computeScrollPosition", "scrollTop", "scrollLeft", "top", "left", "row", "col", "computeScrollRowAndCol", "prevPageY", "prevPageX", "scrollStatus", "lastTimeStamp", "CanvasContainer", "state", "headerSize", "scrollData", "handleDrag", "event", "handleDragEnd", "tearDown", "register", "h", "dom", "canvas", "rect", "clientX", "clientY", "x", "y", "position", "getHitInfo", "activeCell", "colCount", "rowCount", "canvasRect", "timeStamp", "sheetInfo", "inputDom", "value", "SCROLL_SIZE", "Button", "props", "children", "className", "onClick", "disabled", "active", "type", "style", "testId", "title", "dataType", "buttonType", "realProps", "classnames", "h", "pathStyle", "Github", "h", "icon", "icon_default", "BaseIcon", "className", "paths", "h", "classnames", "item", "FillColorIcon", "BaseIcon", "Icon", "name", "className", "paths", "icon_default", "item", "BaseIcon", "Select", "props", "data", "activeValue", "style", "onChange", "getItemStyle", "title", "h", "event", "value", "item", "label", "disabled", "itemStyle", "classnames", "NO_FILL", "COLOR_LIST", "baseClassName", "ColorPicker", "props", "children", "color", "style", "onChange", "key", "ref", "toggleVisible", "value", "className", "h", "dom", "item", "classnames", "Dialog", "props", "children", "dialogContent", "title", "dialogStyle", "onCancel", "onOk", "ref", "h", "dom", "Button", "assert", "defaultStyle", "handleClick", "dataType", "controller", "ContextMenuContainer", "state", "contextMenuPosition", "style", "hideContextMenu", "h", "dom", "setOutSideMap", "stateValue", "event", "Button", "getEditorStyle", "data", "style", "cellPosition", "isEmpty", "font", "makeFont", "DEFAULT_FONT_SIZE", "DEFAULT_FONT_COLOR", "FormulaEditor", "state", "controller", "activeCell", "isCellEditing", "initValue", "inputDom", "ref", "element", "h", "event", "FormulaBarContainer", "state", "controller", "activeCell", "h", "intToColumnName", "FormulaEditor", "classnames", "underlineList", "ToolbarContainer", "state", "controller", "getItemStyle", "value", "setCellStyle", "styleData", "activeCell", "fontFamilyList", "style", "isBold", "isItalic", "fontSize", "DEFAULT_FONT_SIZE", "fontColor", "DEFAULT_FONT_COLOR", "fillColor", "isWrapText", "underline", "fontFamily", "h", "Button", "Icon", "Select", "QUERY_ALL_LOCAL_FONT", "list", "fontList", "v", "isSupportFontFamily", "a", "LOCAL_FONT_KEY", "FONT_SIZE_LIST", "ColorPicker", "FillColorIcon", "Github", "defaultStyle", "handleClick", "dataType", "controller", "state", "SheetBarContextMenu", "style", "optionList", "v", "item", "selectValue", "hideContextMenu", "h", "dom", "setOutSideMap", "stateValue", "event", "Button", "Dialog", "Select", "value", "SheetBarContainer", "state", "controller", "setSheetName", "sheetName", "h", "item", "isActive", "showInput", "classnames", "event", "Button", "theme", "Icon", "SheetBarContextMenu", "App", "state", "controller", "h", "ToolbarContainer", "FormulaBarContainer", "CanvasContainer", "SheetBarContainer", "ContextMenuContainer", "ROW_TITLE_HEIGHT", "COL_TITLE_WIDTH", "defaultScrollValue", "Controller", "HTML_FORMAT", "PLAIN_FORMAT", "model", "sheetId", "hooks", "controllerLog", "currentSheetId", "activeCell", "range", "id", "pos", "sheetName", "json", "value", "style", "ranges", "isEmpty", "col", "width", "row", "height", "headerSize", "sheetInfo", "size", "scroll", "resultX", "resultY", "r", "c", "rowIndex", "count", "colIndex", "result", "data", "text", "list", "item", "last", "rowCount", "colCount", "htmlString", "parser", "doc", "trList", "styleList", "resultStyle", "tdList", "temp", "td", "itemStyle", "parseStyle", "event", "i", "html", "index", "classList", "endRow", "t", "endCol", "a", "Range", "str", "convertCanvasStyleToString", "className", "htmlData", "generateHTML", "keyList", "key", "canvas", "dom", "Token", "type", "value", "CustomError", "value", "paramsError", "resultError", "assert", "condition", "message", "mustOne", "list", "mustOneString", "mustOneNumber", "mustEmpty", "T", "list", "value", "mustOne", "LOWER", "mustOneString", "CHAR", "mustOneNumber", "CODE", "LEN", "SPLIT", "assert", "sep", "UPPER", "TRIM", "CONCAT", "MAX_PARAMS_COUNT", "textFormulas", "text_default", "ABS", "list", "data", "mustOneNumber", "ACOS", "ACOSH", "ACOT", "ACOTH", "ASIN", "ASINH", "ATAN", "ATAN2", "assert", "x", "y", "ATANH", "COS", "COT", "EXP", "list", "data", "mustOneNumber", "INT", "PI", "list", "mustEmpty", "E", "SIN", "data", "mustOneNumber", "SUM", "rest", "parseNumberArray", "assert", "MAX_PARAMS_COUNT", "sum", "cur", "formulas", "ABS", "ACOS", "ACOSH", "ACOT", "ACOTH", "ASIN", "ASINH", "ATAN", "ATAN2", "ATANH", "COT", "COS", "EXP", "INT", "math_default", "formulas", "text_default", "math_default", "formula_default", "emptyData", "identifierMap", "Scanner", "source", "Token", "text", "type", "end", "CustomError", "char", "temp", "c", "BinaryExpression", "left", "operator", "right", "visitor", "value", "result", "LiteralExpression", "UnaryExpression", "PostUnaryExpression", "CellExpression", "type", "sheetName", "CallExpression", "name", "params", "item", "CellRangeExpression", "GroupExpression", "TokenExpression", "errorSet", "Parser", "tokens", "result", "expr", "operator", "right", "BinaryExpression", "UnaryExpression", "PostUnaryExpression", "CellRangeExpression", "name", "params", "CallExpression", "value", "GroupExpression", "LiteralExpression", "realValue", "CustomError", "TokenExpression", "types", "type", "Token", "Interpreter", "expressions", "cellDataMap", "variableMap", "functionMap", "result", "item", "CustomError", "value", "Range", "data", "left", "right", "expr", "callee", "params", "t", "row", "col", "rowCount", "colCount", "sheetId", "r", "endRow", "c", "endCol", "parseCell", "type", "sheetName", "CellExpression", "defineName", "funcName", "realValue", "newToken", "Token", "TokenExpression", "LiteralExpression", "a", "b", "mergeRange", "parseFormula", "source", "cellData", "CellDataMapImpl", "variableMap", "VariableMapImpl", "functionMap", "formula_default", "expressionStr", "list", "Scanner", "expressions", "Parser", "result", "Interpreter", "strList", "item", "error", "CustomError", "row", "col", "sheetId", "sheetNameMap", "value", "key", "sheetName", "name", "CELL_HEIGHT", "CELL_WIDTH", "XLSX_MAX_COL_COUNT", "XLSX_MAX_ROW_COUNT", "convertToNumber", "list", "result", "item", "v", "a", "b", "Model", "history", "range", "index", "row", "col", "sheet", "oldValue", "isSameRange", "key", "setWith", "getDefaultSheetInfo", "DEFAULT_COL_COUNT", "DEFAULT_ROW_COUNT", "sheetId", "id", "assert", "lastIndex", "sheetName", "sheetInfo", "json", "modelLog", "worksheets", "workbook", "mergeCells", "customHeight", "customWidth", "customVariable", "customVariableMap", "value", "get", "formula", "style", "ranges", "r", "c", "t", "temp", "stylePath", "rowCount", "colCount", "endRow", "endCol", "realSheetId", "sheetData", "isEmpty", "rowKeys", "rowKey", "colKeys", "colKey", "self", "parseFormula", "Range", "name", "rowIndex", "count", "i", "colIndex", "width", "height", "op", "path", "MOCK_MODEL", "DEFAULT_COL_COUNT", "DEFAULT_ROW_COUNT", "History", "op", "key", "value", "initTheme", "dom", "keyList", "theme", "key", "initFontFamilyList", "fontList", "FONT_FAMILY_LIST", "cacheFont", "LOCAL_FONT_KEY", "v", "list", "isSupportFontFamily", "QUERY_ALL_LOCAL_FONT", "getStoreValue", "controller", "stateValue", "top", "activeCell", "cell", "cellPosition", "defaultFontFamily", "item", "sheetList", "createCanvas", "canvas", "initCanvas", "mainCanvas", "MainCanvas", "Content", "resize", "removeEvent", "registerGlobalEvent", "copy", "cut", "paste", "changeSet", "newStateValue", "MOCK_MODEL", "initController", "Controller", "Model", "History", "initExcel", "containerDom", "fontFamilyList", "initFontFamilyList", "initTheme", "controller", "initController", "stateValue", "DEFAULT_STORE_VALUE", "obj", "prop", "value", "res", "setState", "render", "App", "initCanvas"]
}
