{
  "version": 3,
  "sources": ["../src/util/dpr.ts", "../src/util/style.ts", "../src/util/assert.ts", "../src/util/constant.ts", "../src/util/util.ts", "../src/util/convert.ts", "../src/util/classnames.ts", "../src/util/range.ts", "../src/util/reference.ts", "../src/lodash/isEmpty.ts", "../src/lodash/randomInt.ts", "../src/lodash/get.ts", "../src/lodash/setWith.ts", "../src/lodash/debounce.ts", "../src/util/debug.ts", "../src/util/isSupportFontFamily.ts", "../src/react/dom.ts", "../src/react/h.ts", "../src/react/init.ts", "../src/react/modules/attributes.ts", "../src/react/modules/class.ts", "../src/react/modules/dataset.ts", "../src/react/modules/event.ts", "../src/react/modules/props.ts", "../src/react/modules/style.ts", "../src/react/index.ts", "../src/containers/canvas/index.ts", "../src/containers/FormulaBar/FormulaEditor.ts", "../src/containers/FormulaBar/index.tsx", "../src/components/Button/index.tsx", "../src/components/Github/index.ts", "../src/components/BaseIcon/icon.ts", "../src/components/BaseIcon/BaseIcon.ts", "../src/components/BaseIcon/FillColorIcon.ts", "../src/components/BaseIcon/index.ts", "../src/components/Select/index.ts", "../src/components/ColorPicker/index.tsx", "../src/containers/ToolBar/index.ts", "../src/theme/size.ts", "../src/theme/color.ts", "../src/theme/index.ts", "../src/containers/SheetBar/index.ts", "../src/containers/ContextMenu/index.ts", "../src/App.ts", "../src/controller/Controller.ts", "../src/controller/History.ts", "../src/parser/token.ts", "../src/parser/error.ts", "../src/parser/scanner.ts", "../src/parser/expression.ts", "../src/parser/parser.ts", "../src/formula/text.ts", "../src/formula/math.ts", "../src/formula/index.ts", "../src/parser/interpreter.ts", "../src/parser/eval.ts", "../src/model/Model.ts", "../src/model/mockModel.ts", "../src/canvas/Main.ts", "../src/canvas/event.ts", "../src/canvas/util.ts", "../src/canvas/Selection.ts", "../src/canvas/constant.ts", "../src/canvas/Content.ts", "../src/init.ts", "../src/index.ts"],
  "sourcesContent": ["export function dpr(data = window.devicePixelRatio): number {\n  return Math.max(Math.floor(data || 1), 1);\n}\n\nexport function npx(px: number): number {\n  return Math.floor(px * dpr());\n}\n\nexport function thinLineWidth(): number {\n  return 1;\n}\n\nexport function resizeCanvas(\n  canvas: HTMLCanvasElement,\n  width: number,\n  height: number,\n): void {\n  canvas.style.width = width + 'px';\n  canvas.style.height = height + 'px';\n  const realWidth = npx(width);\n  const realHeight = npx(height);\n  canvas.width = realWidth;\n  canvas.height = realHeight;\n}\n\nexport function createCanvas() {\n  const canvas = document.createElement('canvas');\n  canvas.style.display = 'none';\n  document.body.appendChild(canvas);\n  return canvas;\n}\n", "/**\n * font-style:  none | normal | italic | oblique\n * font-variant none | normal | small-caps // \u4F5C\u7528\u4E0D\u5927\n * font-weight  none | normal | bold | \u6570\u5B57\n * font-size\n * line-height\n * font-family\n * e.g italic bold 14px/16px sans-serif;\n */\nimport { npx } from \"./dpr\";\n\nexport const DEFAULT_FONT_SIZE = 11;\nexport const DEFAULT_FONT_COLOR = \"#333333\";\nexport const ERROR_FORMULA_COLOR = \"#ff0000\";\nexport const DEFAULT_FILL_COLOR = \"transparent\";\nexport const MUST_FONT_FAMILY = \"sans-serif\";\nexport const DEFAULT_FONT_FAMILY = \"\u5B8B\u4F53\";\n\nexport const FONT_SIZE_LIST = [\n  6,\n  8,\n  9,\n  10,\n  DEFAULT_FONT_SIZE,\n  12,\n  14,\n  16,\n  18,\n  20,\n  22,\n  24,\n  26,\n  28,\n  36,\n  48,\n  72,\n];\n\nexport const FONT_FAMILY_LIST = [\n  DEFAULT_FONT_FAMILY,\n  \"Times New Roman\",\n  \"Arial\",\n  \"Tahoma\",\n  \"Verdana\",\n  \"\u5FAE\u8F6F\u96C5\u9ED1\",\n  \"\u9ED1\u4F53\",\n  \"\u6977\u4F53\",\n  \"\u4EFF\u5B8B\",\n  \"\u65B0\u5B8B\u4F53\",\n  \"\u534E\u6587\u65B0\u9B4F\",\n  \"\u534E\u6587\u884C\u6977\",\n  \"\u534E\u6587\u96B6\u4E66\",\n  \"\u82F9\u65B9\",\n];\n\nexport function makeFont(\n  fontStyle: \"none\" | \"normal\" | \"italic\" | \"oblique\" = \"normal\",\n  fontWeight = \"normal\",\n  fontSize = 12,\n  fontFamily: string = DEFAULT_FONT_FAMILY\n): string {\n  return `${fontStyle} ${fontWeight} ${fontSize}px ${fontFamily},${MUST_FONT_FAMILY}`;\n}\n\nexport const DEFAULT_FONT_CONFIG = makeFont(\n  undefined,\n  \"500\",\n  npx(DEFAULT_FONT_SIZE)\n);\n", "export function assert(\n  condition: boolean,\n  message = \"assert error\",\n  env = process.env.NODE_ENV\n): asserts condition {\n  if (!condition) {\n    if (env === \"production\") {\n      console.error(message);\n      return;\n    }\n    throw new Error(message);\n  }\n}\n", "import type { ErrorTypes, StoreValue } from '@/types';\nexport const SHEET_NAME_PREFIX = 'Sheet';\nexport const STYLE_ID_PREFIX = 'style';\nexport const DEFAULT_ROW_COUNT = 200;\nexport const DEFAULT_COL_COUNT = 30;\nexport const MAIN_CANVAS_ID = 'main-canvas-id';\nexport const FORMULA_EDITOR_ID = 'formula-editor';\nexport const DOUBLE_CLICK_TIME = 300;\nexport const TEST_ID_KEY = 'data-test-id';\nexport const SCROLL_SIZE = 30;\nexport const DEBUG_COLOR_LIST = [\n  '#0000CC',\n  '#0000FF',\n  '#0033CC',\n  '#0033FF',\n  '#0066CC',\n  '#0066FF',\n  '#0099CC',\n  '#0099FF',\n  '#00CC00',\n  '#00CC33',\n  '#00CC66',\n  '#00CC99',\n  '#00CCCC',\n  '#00CCFF',\n  '#3300CC',\n  '#3300FF',\n  '#3333CC',\n  '#3333FF',\n  '#3366CC',\n  '#3366FF',\n  '#3399CC',\n  '#3399FF',\n  '#33CC00',\n  '#33CC33',\n  '#33CC66',\n  '#33CC99',\n  '#33CCCC',\n  '#33CCFF',\n  '#6600CC',\n  '#6600FF',\n  '#6633CC',\n  '#6633FF',\n  '#66CC00',\n  '#66CC33',\n  '#9900CC',\n  '#9900FF',\n  '#9933CC',\n  '#9933FF',\n  '#99CC00',\n  '#99CC33',\n  '#CC0000',\n  '#CC0033',\n  '#CC0066',\n  '#CC0099',\n  '#CC00CC',\n  '#CC00FF',\n  '#CC3300',\n  '#CC3333',\n  '#CC3366',\n  '#CC3399',\n  '#CC33CC',\n  '#CC33FF',\n  '#CC6600',\n  '#CC6633',\n  '#CC9900',\n  '#CC9933',\n  '#CCCC00',\n  '#CCCC33',\n  '#FF0000',\n  '#FF0033',\n  '#FF0066',\n  '#FF0099',\n  '#FF00CC',\n  '#FF00FF',\n  '#FF3300',\n  '#FF3333',\n  '#FF3366',\n  '#FF3399',\n  '#FF33CC',\n  '#FF33FF',\n  '#FF6600',\n  '#FF6633',\n  '#FF9900',\n  '#FF9933',\n  '#FFCC00',\n  '#FFCC33',\n];\nexport const MAX_PARAMS_COUNT = 256;\n\nexport const ERROR_SET = new Set<ErrorTypes>([\n  '#ERROR!',\n  '#DIV/0!',\n  '#NULL!',\n  '#NUM!',\n  '#REF!',\n  '#VALUE!',\n  '#N/A',\n  '#NAME?',\n]);\n\nexport const DEFAULT_STORE_VALUE: StoreValue = {\n  sheetList: [],\n  currentSheetId: '',\n  isCellEditing: false,\n  activeCell: {\n    value: '',\n    row: 0,\n    col: 0,\n    style: {},\n  },\n  cellPosition: {\n    left: -999,\n    top: -999,\n    width: 0,\n    height: 0,\n  },\n  canRedo: false,\n  canUndo: false,\n  fontFamilyList: [],\n  contextMenuPosition: undefined,\n  scrollLeft: 0,\n  scrollTop: 0,\n};\n", "import { SHEET_NAME_PREFIX } from './constant';\nimport type { WorksheetType, ResultType } from '@/types';\nexport const isString = (value: ResultType): boolean => {\n  return typeof value === 'string';\n};\nexport function isNumber(value: ResultType): boolean {\n  if (typeof value === 'number' && !window.isNaN(value)) {\n    return true;\n  }\n  if (typeof value !== 'string') {\n    return false;\n  }\n  const temp = parseFloat(value);\n  return !window.isNaN(temp) && temp === Number(value);\n}\n\nexport function parseNumber(value: ResultType): number {\n  if (isNumber(value)) {\n    return Number(value);\n  }\n  return 0;\n}\n\nexport function parseNumberArray(list: ResultType[]): number[] {\n  const result: number[] = [];\n  for (let i = 0; i < list.length; i++) {\n    const temp = parseNumber(list[i]);\n    if (!window.isNaN(temp)) {\n      result.push(temp);\n    }\n  }\n  return result;\n}\n\nexport function getListMaxNum(list: string[] = [], prefix = ''): number {\n  const idList: number[] = list\n    .map((item) => {\n      if (isNumber(item) || prefix.length === 0) {\n        return parseInt(item, 10);\n      }\n      return parseInt(\n        item.includes(prefix) ? item.slice(prefix.length) : item,\n        10,\n      );\n    })\n    .filter((v) => !isNaN(v));\n  return Math.max(Math.max(...idList), 0);\n}\n\nexport function getDefaultSheetInfo(\n  list: WorksheetType[] = [],\n): Pick<WorksheetType, 'name' | 'sheetId'> {\n  const sheetNum = getListMaxNum(\n    list.map((item) => item.name),\n    SHEET_NAME_PREFIX,\n  );\n  const sheetId = getListMaxNum(list.map((item) => item.sheetId)) + 1;\n  return {\n    name: `${SHEET_NAME_PREFIX}${sheetNum + 1}`,\n    sheetId: String(sheetId),\n  };\n}\n\nexport function isTestEnv(): boolean {\n  return process.env.NODE_ENV === 'test';\n}\n", "/**\n * convert column name to number. e.g A -> 0, a -> 0\n * @param { string } columnName\n */\nexport function columnNameToInt(columnName = \"\"): number {\n  const temp = columnName.toUpperCase();\n  let num = 0;\n  for (let i = 0; i < temp.length; i++) {\n    num = temp.charCodeAt(i) - 64 + num * 26;\n  }\n  return num - 1;\n}\n/**\n * convert number to column name 0 -> A\n * @param { string } number\n */\nexport function intToColumnName(temp: number): string {\n  const num = temp + 1;\n  let columnName = \"\";\n  let dividend = Math.floor(Math.abs(num));\n  let rest;\n\n  while (dividend > 0) {\n    rest = (dividend - 1) % 26;\n    columnName = String.fromCharCode(65 + rest) + columnName;\n    dividend = Math.floor((dividend - rest) / 26);\n  }\n  return columnName.toUpperCase();\n}\n\nexport function rowLabelToInt(label: string): number {\n  let result = parseInt(label, 10);\n  if (window.isNaN(result)) {\n    result = -1;\n  } else {\n    result = Math.max(result - 1, -1);\n  }\n  return result;\n}\n\nexport function intToRowLabel(row: number): string {\n  if (row >= 0) {\n    return `${row + 1}`;\n  }\n  return \"\";\n}\n", "export function classnames(\n  ...rest: Array<string | Record<string, unknown>>\n): string {\n  let result = \"\";\n  for (const temp of rest) {\n    if (typeof temp === \"string\" && temp) {\n      result += `${temp} `;\n    }\n    if (typeof temp === \"object\") {\n      for (const key of Object.keys(temp)) {\n        if (temp[key]) {\n          result += `${key} `;\n        }\n      }\n    }\n  }\n  return result.trim();\n}\n", "import { IRange } from \"@/types\";\nexport function isSheet(range: IRange): boolean {\n  return isRow(range) && isCol(range);\n}\nexport function isRow(range: IRange): boolean {\n  return range.col === range.rowCount && range.rowCount === 0;\n}\nexport function isCol(range: IRange): boolean {\n  return range.row === range.colCount && range.colCount === 0;\n}\nexport class Range implements IRange {\n  row = 0;\n  col = 0;\n  colCount = 0;\n  rowCount = 0;\n  sheetId = \"\";\n  constructor(\n    row: number,\n    col: number,\n    rowCount: number,\n    colCount: number,\n    sheetId: string\n  ) {\n    this.row = row;\n    this.col = col;\n    this.colCount = colCount;\n    this.rowCount = rowCount;\n    this.sheetId = sheetId;\n  }\n\n  isValid(): boolean {\n    return (\n      this.row >= 0 && this.col >= 0 && this.colCount >= 0 && this.rowCount >= 0\n    );\n  }\n  static makeRange(range: IRange): Range {\n    return new Range(\n      range.row,\n      range.col,\n      range.rowCount,\n      range.colCount,\n      range.sheetId\n    );\n  }\n}\n", "import { columnNameToInt, rowLabelToInt } from './convert';\nimport { Range } from './range';\nimport { DEFAULT_ROW_COUNT, DEFAULT_COL_COUNT } from './constant';\n\nconst isCharacter = (char: string) =>\n  (char >= 'a' && char <= 'z') || (char >= 'A' && char <= 'Z');\nconst isNum = (char: string) => char >= '0' && char <= '9';\n\nexport function parseCell(ref: string): Range | null {\n  if (typeof ref !== 'string' || !ref) {\n    return null;\n  }\n  const realRef = ref.trim();\n  let [sheetName, other = ''] = realRef.split('!');\n  if (!realRef.includes('!')) {\n    sheetName = ''\n    other = realRef\n  }\n  let i = 0;\n  let rowText = '';\n  let colText = '';\n  if (other[i] === '$') {\n    i++;\n  }\n  while (isCharacter(other[i])) {\n    colText += other[i++];\n  }\n  if (other[i] === '$') {\n    i++;\n  }\n  while (isNum(other[i])) {\n    rowText += other[i++];\n  }\n  if (i !== other.length) {\n    return null;\n  }\n  if (!rowText && !colText) {\n    return null;\n  }\n\n  let rowCount = 1;\n  let colCount = 1;\n  let row = 0;\n  let col = 0;\n  if (rowText === '') {\n    colCount = 0;\n    rowCount = DEFAULT_ROW_COUNT;\n  } else {\n    row = rowLabelToInt(rowText);\n  }\n  if (colText === '') {\n    colCount = DEFAULT_COL_COUNT;\n    rowCount = 0;\n  } else {\n    col = columnNameToInt(colText);\n  }\n  if (row === -1 || col === -1) {\n    return null\n  }\n  const range = new Range(row, col, rowCount, colCount, sheetName);\n  return range;\n}\n\nexport function parseReference(text: string): Range | null {\n  const [cell1, cell2] = text.split(':');\n  const startCell = parseCell(cell1);\n  if (!startCell) {\n    return null;\n  }\n  const endCell = parseCell(cell2);\n  if (!endCell) {\n    return startCell;\n  }\n  const rowCount = endCell.row - startCell.row + 1;\n  const colCount = endCell.col - startCell.col + 1;\n  return new Range(\n    startCell.row,\n    startCell.col,\n    rowCount,\n    colCount,\n    endCell.sheetId,\n  );\n}\n", "export function isEmpty(value: unknown): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const temp: any = value || {};\n  return (\n    [Object, Array].includes(temp.constructor) && !Object.entries(temp).length\n  );\n}\n", "export function randomInt(min: number, max: number): number {\n  const t1 = Math.min(min, max);\n  const t2 = Math.max(min, max);\n  return Math.floor(t1 + Math.random() * (t2 - t1 + 1));\n}\n", "export function get<T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  obj: Record<string, any> | null | undefined,\n  path: string,\n  defaultValue?: T\n): T {\n  const result =\n    obj == null\n      ? undefined\n      : path\n          .replace(/\\[/g, \".\")\n          .replace(/\\]/g, \"\")\n          .split(\".\")\n          .reduce((res, key) => {\n            return res == null ? res : res[key];\n          }, obj);\n  return (result === undefined ? defaultValue : result) as T;\n}\n", "export function setWith<ValueType>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  obj: Record<string, any> | null | undefined,\n  path: string,\n  value: ValueType\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): Record<string, any> | null | undefined {\n  if (obj == null || typeof obj !== \"object\") {\n    return obj;\n  }\n  path\n    .replace(/\\[/g, \".\")\n    .replace(/\\]/g, \"\")\n    .split(\".\")\n    .reduce((res, key, index, arr) => {\n      if (index === arr.length - 1) {\n        res[key] = value;\n      } else {\n        if (res[key] == null) {\n          res[key] = {};\n        }\n      }\n      return res[key];\n    }, obj);\n  return obj;\n}\n", "export function debounce(fn: (...params: any[]) => void) {\n  let timer: ReturnType<typeof requestAnimationFrame>;\n  return (...rest: any[]) => {\n    cancelAnimationFrame(timer);\n    timer = requestAnimationFrame(() => {\n      fn(...rest);\n    });\n  };\n}", "import { randomInt } from '@/lodash';\nimport { assert } from './assert';\nimport { DEBUG_COLOR_LIST } from './constant';\ntype NameSpaceType = 'react' | 'controller' | 'canvas' | 'model';\n\nclass Debug {\n  namespace: NameSpaceType;\n\n  static readonly colorMap: Map<NameSpaceType, string> = new Map<\n    NameSpaceType,\n    string\n  >();\n  static readonly enableMap: Map<NameSpaceType, boolean> = new Map<\n    NameSpaceType,\n    boolean\n  >([]);\n  constructor(namespace: NameSpaceType) {\n    this.namespace = namespace;\n  }\n  init = () => {\n    this.setColor();\n    return this.log;\n  };\n  log = (...rest: Array<unknown>): void => {\n    if (!this.enable()) {\n      return;\n    }\n    const { namespace } = this;\n    const color = Debug.colorMap.get(namespace);\n    const result = [`%c ${namespace}:`, `color:${color};`, ...rest];\n    console.log(...result);\n  };\n  getRandomColor = (): string => {\n    const index = randomInt(0, DEBUG_COLOR_LIST.length - 1);\n    assert(index >= 0 && index < DEBUG_COLOR_LIST.length, String(index));\n    return DEBUG_COLOR_LIST[index];\n  };\n  enable() {\n    return this.checkEnable() && Debug.enableMap.get(this.namespace) !== false;\n  }\n  checkEnable(storage = window.localStorage) {\n    return storage.getItem('debug') === '*';\n  }\n  setColor() {\n    if (!Debug.colorMap.has(this.namespace)) {\n      Debug.colorMap.set(this.namespace, this.getRandomColor());\n    }\n  }\n}\n\nexport const reactLog = new Debug('react').init();\nexport const controllerLog = new Debug('controller').init();\nexport const canvasLog = new Debug('canvas').init();\nexport const modelLog = new Debug('model').init();\n", "import { assert } from './assert';\nimport { MUST_FONT_FAMILY } from './style';\nimport { isTestEnv } from './util';\n\nfunction SupportFontFamilyFactory(defaultFont = MUST_FONT_FAMILY) {\n  if (isTestEnv()) {\n    return {\n      isSupportFontFamily: () => true,\n    };\n  }\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  assert(ctx !== null);\n  const getImageData = function (font: string) {\n    const width = 50;\n    canvas.width = width;\n    canvas.height = width;\n    ctx.textAlign = 'center';\n    ctx.fillStyle = 'black';\n    ctx.textBaseline = 'middle';\n    ctx.clearRect(0, 0, width, width);\n    ctx.font = `${width}px ${font},${defaultFont}`;\n    ctx.fillText('\u5B8Ba', width / 2, width / 2);\n    const imageData = ctx.getImageData(0, 0, width, width, {\n      colorSpace: 'srgb',\n    }).data;\n    return imageData.join('');\n  };\n  const defaultImageData = getImageData(defaultFont);\n  const isSupportFontFamily = (fontFamily: string) => {\n    if (typeof fontFamily != 'string') {\n      return false;\n    }\n    if (fontFamily.toLowerCase() == defaultFont.toLowerCase()) {\n      return true;\n    }\n    return defaultImageData !== getImageData(fontFamily);\n  };\n  return {\n    isSupportFontFamily,\n  };\n}\n\nconst { isSupportFontFamily } = SupportFontFamilyFactory();\n\nexport { isSupportFontFamily };\n", "import { reactLog } from '@/util';\n\nexport interface DOMOperation {\n  createElement: (\n    tagName: any,\n    options?: ElementCreationOptions,\n  ) => HTMLElement;\n  createElementNS: (\n    namespaceURI: string,\n    qualifiedName: string,\n    options?: ElementCreationOptions,\n  ) => Element;\n  createTextNode: (text: string) => Text;\n  insertBefore: (\n    parentNode: Node,\n    newNode: Node,\n    referenceNode: Node | null,\n  ) => void;\n  removeChild: (node: Node, child: Node) => void;\n  appendChild: (node: Node, child: Node) => void;\n  parentNode: (node: Node) => Node | null;\n  nextSibling: (node: Node) => Node | null;\n  setTextContent: (node: Node, text: string | null) => void;\n  isElement: (node: Node) => node is Element;\n}\n\nfunction createElement(\n  tagName: any,\n  options?: ElementCreationOptions,\n): HTMLElement {\n  reactLog('createElement');\n  return document.createElement(tagName, options);\n}\n\nfunction createElementNS(\n  namespaceURI: string,\n  qualifiedName: string,\n  options?: ElementCreationOptions,\n): Element {\n  reactLog('createElementNS');\n  return document.createElementNS(namespaceURI, qualifiedName, options);\n}\n\nfunction createTextNode(text: string): Text {\n  reactLog('createTextNode');\n  return document.createTextNode(text);\n}\n\nfunction insertBefore(\n  parentNode: Node,\n  newNode: Node,\n  referenceNode: Node | null,\n): void {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild(node: Node, child: Node): void {\n  node.removeChild(child);\n}\n\nfunction appendChild(node: Node, child: Node): void {\n  node.appendChild(child);\n}\n\nfunction parentNode(node: Node): Node | null {\n  return node.parentNode;\n}\n\nfunction nextSibling(node: Node): Node | null {\n  return node.nextSibling;\n}\n\nfunction setTextContent(node: Node, text: string | null): void {\n  node.textContent = text;\n}\n\nfunction isElement(node: Node): node is Element {\n  return node.nodeType === 1;\n}\n\nexport const htmlDomApi: DOMOperation = {\n  createElement,\n  createElementNS,\n  createTextNode,\n  insertBefore,\n  removeChild,\n  appendChild,\n  parentNode,\n  nextSibling,\n  setTextContent,\n  isElement,\n};\n", "import { VNode, VNodeData, Key, Listener } from './vNode';\nimport { CSSProperties } from './modules/style';\nimport { Hooks } from './hooks';\n\nconst SVG_NS = 'http://www.w3.org/2000/svg';\n\ntype EventListener = {\n  [N in keyof HTMLElementEventMap as N extends string\n    ? `on${N}`\n    : never]?: Listener<HTMLElementEventMap[N]>;\n};\n\ninterface VNodePropsData extends EventListener {\n  className?: string;\n  style?: CSSProperties;\n  key?: Key;\n  id?: string;\n  value?: string | number;\n  href?: string;\n  fill?: string;\n  ns?: string; // for SVGs\n  is?: string; // for custom elements v1\n  viewBox?: string;\n  name?: string;\n  'aria-hidden'?: boolean;\n  'aria-label'?: string;\n  target?: string;\n  rel?: string;\n  d?: string;\n  'fill-opacity'?: string;\n  hook?: Hooks;\n  'data-testId'?: string;\n  disabled?: boolean;\n  title?: string;\n}\n\nfunction addNs(node: VNode) {\n  node.data!.ns = SVG_NS;\n  if (node.data?.props) {\n    node.data!.attrs = Object.assign(\n      node.data!.props || {},\n      node.data?.attrs || {},\n    );\n    node.data!.props = undefined;\n  } else {\n    node.data!.attrs = {};\n  }\n  node.data!.attrs.class = node.data!.className || '';\n  node.data!.className = undefined;\n  if (node.children) {\n    for (const item of node.children) {\n      if (item) {\n        addNs(item);\n      }\n    }\n  }\n}\n\nexport function h(\n  sel: string,\n  data: VNodePropsData,\n  ...children: Array<VNode | string | null | undefined | number>\n): VNode {\n  const key = data.key === undefined ? undefined : data.key;\n  const nodeData: VNodeData = {\n    hook: data.hook,\n    style: data.style,\n    key: data.key,\n    className: data.className,\n  };\n\n  const nodeList: VNode[] = [];\n  const textList: string[] = [];\n  const list = children || [];\n  for (const item of list) {\n    if (typeof item === 'string' || typeof item === 'number') {\n      const t = String(item);\n      if (t) {\n        textList.push(t);\n      }\n    } else if (item && typeof item === 'object') {\n      nodeList.push(item);\n    }\n  }\n  const keyList = Object.keys(data) as Array<keyof VNodePropsData>;\n  for (const key of keyList) {\n    if (['className', 'style', 'key', 'ns', 'is'].includes(key)) {\n      continue;\n    }\n    const item: any = data[key];\n    if (key === 'data-testId') {\n      if (!nodeData.dataset) {\n        nodeData.dataset = {};\n      }\n      nodeData.dataset[key.slice(5)] = item;\n    } else if (key.startsWith('on')) {\n      if (!nodeData.on) {\n        nodeData.on = {};\n      }\n\n      nodeData.on[key.slice(2)] = item;\n    } else {\n      if (!nodeData.props) {\n        nodeData.props = {};\n      }\n      nodeData.props[key] = item;\n    }\n  }\n  const result: VNode = {\n    sel: sel,\n    data: nodeData,\n    key,\n    elm: undefined,\n    children: [],\n    text: undefined,\n  };\n\n  if (textList.length > 0 && nodeList.length > 0) {\n    throw new Error('error node');\n  }\n  if (textList.length > 0) {\n    result.text = textList.join(' ');\n  }\n  if (nodeList.length > 0) {\n    result.children = nodeList;\n  }\n  if (result.sel === 'svg') {\n    addNs(result);\n  }\n\n  return result;\n}\n", "import { Module } from './modules/module';\nimport { VNode } from './vNode';\nimport { htmlDomApi, DOMOperation } from './dom';\nimport { h } from './h';\n\ntype NonUndefined<T> = T extends undefined ? never : T;\n\nfunction isUndef(s: any): boolean {\n  return s === undefined;\n}\nfunction isDef<A>(s: A): s is NonUndefined<A> {\n  return s !== undefined;\n}\n\ntype VNodeQueue = VNode[];\n\nconst emptyNode = h('', {});\n\nfunction sameVNode(vNode1: VNode, vNode2: VNode): boolean {\n  const isSameKey = vNode1.key === vNode2.key;\n  const isSameIs = vNode1.data?.is === vNode2.data?.is;\n  const isSameSel = vNode1.sel === vNode2.sel;\n  const isSameTextOrFragment =\n    !vNode1.sel && vNode1.sel === vNode2.sel\n      ? typeof vNode1.text === typeof vNode2.text\n      : true;\n\n  return isSameSel && isSameKey && isSameIs && isSameTextOrFragment;\n}\n\nfunction isElement(\n  api: DOMOperation,\n  vNode: Element | VNode,\n): vNode is Element {\n  return api.isElement(vNode as any);\n}\n\ntype KeyToIndexMap = { [key: string]: number };\n\ntype ArraysOf<T> = {\n  [K in keyof T]: Array<T[K]>;\n};\n\ntype ModuleHooks = ArraysOf<Required<Module>>;\n\nfunction createKeyToOldIdx(\n  children: VNode[],\n  beginIdx: number,\n  endIdx: number,\n): KeyToIndexMap {\n  const map: KeyToIndexMap = {};\n  for (let i = beginIdx; i <= endIdx; ++i) {\n    const key = children[i]?.key;\n    if (key !== undefined) {\n      map[key as string] = i;\n    }\n  }\n  return map;\n}\n\nconst hooks: Array<keyof Module> = [\n  'create',\n  'update',\n  'remove',\n  'destroy',\n  'pre',\n  'post',\n];\n\n// TODO Should `domApi` be put into this in the next major version bump?\nexport type Options = {\n  experimental?: {\n    fragments?: boolean;\n  };\n};\n\nexport function init(modules: Array<Partial<Module>>, domApi?: DOMOperation) {\n  const cbs: ModuleHooks = {\n    create: [],\n    update: [],\n    remove: [],\n    destroy: [],\n    pre: [],\n    post: [],\n  };\n\n  const api: DOMOperation = domApi !== undefined ? domApi : htmlDomApi;\n\n  for (const hook of hooks) {\n    for (const module of modules) {\n      const currentHook = module[hook];\n      if (currentHook !== undefined) {\n        (cbs[hook] as any[]).push(currentHook);\n      }\n    }\n  }\n\n  function createRmCb(childElm: Node, listeners: number) {\n    return function rmCb() {\n      if (--listeners === 0) {\n        const parent = api.parentNode(childElm) as Node;\n        api.removeChild(parent, childElm);\n      }\n    };\n  }\n\n  function createElm(vNode: VNode, insertedVNodeQueue: VNodeQueue): Node {\n    let i: any;\n    let data = vNode.data;\n    if (data !== undefined) {\n      const init = data.hook?.init;\n      if (init) {\n        init(vNode);\n        data = vNode.data;\n      }\n    }\n    const children = vNode.children;\n    const sel = vNode.sel;\n    if (sel !== undefined) {\n      const elm = (vNode.elm =\n        isDef(data) && isDef((i = data.ns))\n          ? api.createElementNS(i, sel, data)\n          : api.createElement(sel, data));\n      for (i = 0; i < cbs.create.length; ++i) cbs.create[i](emptyNode, vNode);\n      if (Array.isArray(children) && children.length > 0) {\n        for (i = 0; i < children.length; ++i) {\n          const ch = children[i];\n          if (ch != null) {\n            api.appendChild(elm, createElm(ch as VNode, insertedVNodeQueue));\n          }\n        }\n      } else if (\n        typeof vNode.text === 'string' ||\n        typeof vNode.text === 'number'\n      ) {\n        api.appendChild(elm, api.createTextNode(vNode.text));\n      }\n      const hook = vNode.data!.hook;\n      if (isDef(hook)) {\n        hook.create?.(emptyNode, vNode);\n        if (hook.insert) {\n          insertedVNodeQueue.push(vNode);\n        }\n      }\n    } else {\n      vNode.elm = api.createTextNode(vNode.text!);\n    }\n    return vNode.elm;\n  }\n\n  function addVNodes(\n    parentElm: Node,\n    before: Node | null,\n    vNodes: VNode[],\n    startIdx: number,\n    endIdx: number,\n    insertedVNodeQueue: VNodeQueue,\n  ) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      const ch = vNodes[startIdx];\n      if (ch != null) {\n        api.insertBefore(parentElm, createElm(ch, insertedVNodeQueue), before);\n      }\n    }\n  }\n\n  function invokeDestroyHook(vNode: VNode) {\n    const data = vNode.data;\n    if (data !== undefined) {\n      data?.hook?.destroy?.(vNode);\n      for (let i = 0; i < cbs.destroy.length; ++i) cbs.destroy[i](vNode);\n      if (vNode.children !== undefined) {\n        for (let j = 0; j < vNode.children.length; ++j) {\n          const child = vNode.children[j];\n          if (child != null && typeof child !== 'string') {\n            invokeDestroyHook(child);\n          }\n        }\n      }\n    }\n  }\n\n  function removeVNodes(\n    parentElm: Node,\n    vNodes: VNode[],\n    startIdx: number,\n    endIdx: number,\n  ): void {\n    for (; startIdx <= endIdx; ++startIdx) {\n      let listeners: number;\n      let rm: () => void;\n      const ch = vNodes[startIdx];\n      if (ch != null) {\n        if (isDef(ch.sel)) {\n          invokeDestroyHook(ch);\n          listeners = cbs.remove.length + 1;\n          rm = createRmCb(ch.elm!, listeners);\n          for (let i = 0; i < cbs.remove.length; ++i) cbs.remove[i](ch, rm);\n          const removeHook = ch?.data?.hook?.remove;\n          if (isDef(removeHook)) {\n            removeHook(ch, rm);\n          } else {\n            rm();\n          }\n        } else if (ch.children) {\n          // Fragment node\n          invokeDestroyHook(ch);\n          removeVNodes(\n            parentElm,\n            ch.children as VNode[],\n            0,\n            ch.children.length - 1,\n          );\n        } else {\n          // Text node\n          api.removeChild(parentElm, ch.elm!);\n        }\n      }\n    }\n  }\n\n  function updateChildren(\n    parentElm: Node,\n    oldCh: VNode[],\n    newCh: VNode[],\n    insertedVNodeQueue: VNodeQueue,\n  ) {\n    let oldStartIdx = 0;\n    let newStartIdx = 0;\n    let oldEndIdx = oldCh.length - 1;\n    let oldStartVNode = oldCh[0];\n    let oldEndVNode = oldCh[oldEndIdx];\n    let newEndIdx = newCh.length - 1;\n    let newStartVNode = newCh[0];\n    let newEndVNode = newCh[newEndIdx];\n    let oldKeyToIdx: KeyToIndexMap | undefined;\n    let idxInOld: number;\n    let elmToMove: VNode;\n    let before: any;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (oldStartVNode == null) {\n        oldStartVNode = oldCh[++oldStartIdx]; // VNode might have been moved left\n      } else if (oldEndVNode == null) {\n        oldEndVNode = oldCh[--oldEndIdx];\n      } else if (newStartVNode == null) {\n        newStartVNode = newCh[++newStartIdx];\n      } else if (newEndVNode == null) {\n        newEndVNode = newCh[--newEndIdx];\n      } else if (sameVNode(oldStartVNode, newStartVNode)) {\n        patchVNode(oldStartVNode, newStartVNode, insertedVNodeQueue);\n        oldStartVNode = oldCh[++oldStartIdx];\n        newStartVNode = newCh[++newStartIdx];\n      } else if (sameVNode(oldEndVNode, newEndVNode)) {\n        patchVNode(oldEndVNode, newEndVNode, insertedVNodeQueue);\n        oldEndVNode = oldCh[--oldEndIdx];\n        newEndVNode = newCh[--newEndIdx];\n      } else if (sameVNode(oldStartVNode, newEndVNode)) {\n        // vNode moved right\n        patchVNode(oldStartVNode, newEndVNode, insertedVNodeQueue);\n        api.insertBefore(\n          parentElm,\n          oldStartVNode.elm!,\n          api.nextSibling(oldEndVNode.elm!),\n        );\n        oldStartVNode = oldCh[++oldStartIdx];\n        newEndVNode = newCh[--newEndIdx];\n      } else if (sameVNode(oldEndVNode, newStartVNode)) {\n        // vNode moved left\n        patchVNode(oldEndVNode, newStartVNode, insertedVNodeQueue);\n        api.insertBefore(parentElm, oldEndVNode.elm!, oldStartVNode.elm!);\n        oldEndVNode = oldCh[--oldEndIdx];\n        newStartVNode = newCh[++newStartIdx];\n      } else {\n        if (oldKeyToIdx === undefined) {\n          oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n        }\n        idxInOld = oldKeyToIdx[newStartVNode.key as string];\n        if (isUndef(idxInOld)) {\n          // New element\n          api.insertBefore(\n            parentElm,\n            createElm(newStartVNode, insertedVNodeQueue),\n            oldStartVNode.elm!,\n          );\n        } else {\n          elmToMove = oldCh[idxInOld];\n          if (elmToMove.sel !== newStartVNode.sel) {\n            api.insertBefore(\n              parentElm,\n              createElm(newStartVNode, insertedVNodeQueue),\n              oldStartVNode.elm!,\n            );\n          } else {\n            patchVNode(elmToMove, newStartVNode, insertedVNodeQueue);\n            oldCh[idxInOld] = undefined as any;\n            api.insertBefore(parentElm, elmToMove.elm!, oldStartVNode.elm!);\n          }\n        }\n        newStartVNode = newCh[++newStartIdx];\n      }\n    }\n\n    if (newStartIdx <= newEndIdx) {\n      before = newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].elm;\n      addVNodes(\n        parentElm,\n        before,\n        newCh,\n        newStartIdx,\n        newEndIdx,\n        insertedVNodeQueue,\n      );\n    }\n    if (oldStartIdx <= oldEndIdx) {\n      removeVNodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVNode(\n    oldVNode: VNode,\n    vNode: VNode,\n    insertedVNodeQueue: VNodeQueue,\n  ) {\n    const hook = vNode.data?.hook;\n    hook?.prePatch?.(oldVNode, vNode);\n    const elm = (vNode.elm = oldVNode.elm)!;\n    if (oldVNode === vNode) return;\n    if (\n      vNode.data !== undefined ||\n      (isDef(vNode.text) && vNode.text !== oldVNode.text)\n    ) {\n      vNode.data ??= {};\n      oldVNode.data ??= {};\n      for (let i = 0; i < cbs.update.length; ++i)\n        cbs.update[i](oldVNode, vNode);\n      vNode.data?.hook?.update?.(oldVNode, vNode);\n    }\n    const oldCh = oldVNode.children as VNode[];\n    const ch = vNode.children as VNode[];\n    if (isUndef(vNode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) updateChildren(elm, oldCh, ch, insertedVNodeQueue);\n      } else if (isDef(ch)) {\n        if (isDef(oldVNode.text)) api.setTextContent(elm, '');\n        addVNodes(elm, null, ch, 0, ch.length - 1, insertedVNodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVNodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVNode.text)) {\n        api.setTextContent(elm, '');\n      }\n    } else if (oldVNode.text !== vNode.text) {\n      if (isDef(oldCh)) {\n        removeVNodes(elm, oldCh, 0, oldCh.length - 1);\n      }\n      api.setTextContent(elm, vNode.text!);\n    }\n    hook?.postPatch?.(oldVNode, vNode);\n    if (hook?.ref) {\n      hook?.ref(vNode.elm! as Element);\n    }\n  }\n\n  function patch(oldVNode: VNode | Element, vNode: VNode): VNode {\n    let i: number, elm: Node, parent: Node;\n    const insertedVNodeQueue: VNodeQueue = [];\n    for (i = 0; i < cbs.pre.length; ++i) cbs.pre[i]();\n\n    if (isElement(api, oldVNode)) {\n      createElm(vNode, insertedVNodeQueue);\n      api.appendChild(oldVNode, vNode.elm!);\n      return vNode;\n    }\n\n    if (sameVNode(oldVNode, vNode)) {\n      patchVNode(oldVNode, vNode, insertedVNodeQueue);\n    } else {\n      elm = oldVNode.elm!;\n      parent = api.parentNode(elm) as Node;\n\n      createElm(vNode, insertedVNodeQueue);\n\n      if (parent !== null) {\n        api.insertBefore(parent, vNode.elm!, api.nextSibling(elm));\n        removeVNodes(parent, [oldVNode], 0, 0);\n      }\n    }\n\n    for (i = 0; i < insertedVNodeQueue.length; ++i) {\n      insertedVNodeQueue[i].data!.hook!.insert!(insertedVNodeQueue[i]);\n    }\n    for (i = 0; i < cbs.post.length; ++i) cbs.post[i]();\n    return vNode;\n  }\n  return patch;\n}\n", "import { VNode, VNodeData } from \"../vNode\";\nimport { Module } from \"./module\";\n\nexport type Attrs = Record<string, string | number | boolean>;\n\nconst xLinkNS = \"http://www.w3.org/1999/xlink\";\nconst xmlNS = \"http://www.w3.org/XML/1998/namespace\";\nconst colonChar = 58;\nconst xChar = 120;\n\nfunction updateAttrs(oldVNode: VNode, vNode: VNode): void {\n  let key: string;\n  const elm: Element = vNode.elm as Element;\n  let oldAttrs = (oldVNode.data as VNodeData).attrs;\n  let attrs = (vNode.data as VNodeData).attrs;\n\n  if (!oldAttrs && !attrs) return;\n  if (oldAttrs === attrs) return;\n  oldAttrs = oldAttrs || {};\n  attrs = attrs || {};\n\n  // update modified attributes, add new attributes\n  for (key in attrs) {\n    const cur = attrs[key];\n    const old = oldAttrs[key];\n    if (old !== cur) {\n      if (cur === true) {\n        elm.setAttribute(key, \"\");\n      } else if (cur === false) {\n        elm.removeAttribute(key);\n      } else {\n        if (key.charCodeAt(0) !== xChar) {\n          elm.setAttribute(key, cur as any);\n        } else if (key.charCodeAt(3) === colonChar) {\n          // Assume xml namespace\n          elm.setAttributeNS(xmlNS, key, cur as any);\n        } else if (key.charCodeAt(5) === colonChar) {\n          // Assume xLink namespace\n          elm.setAttributeNS(xLinkNS, key, cur as any);\n        } else {\n          elm.setAttribute(key, cur as any);\n        }\n      }\n    }\n  }\n  // remove removed attributes\n  // use `in` operator since the previous `for` iteration uses it (.i.e. add even attributes with undefined value)\n  // the other option is to remove all attributes with value == undefined\n  for (key in oldAttrs) {\n    if (!(key in attrs)) {\n      elm.removeAttribute(key);\n    }\n  }\n}\n\nexport const attributesModule: Module = {\n  create: updateAttrs,\n  update: updateAttrs,\n};\n", "import { VNode, VNodeData } from '../vNode';\nimport { Module } from './module';\n\nfunction updateClass(oldVNode: VNode, vNode: VNode): void {\n  const elm: Element = vNode.elm as Element;\n  const oldClass = (oldVNode.data as VNodeData).className;\n  const newClass = (vNode.data as VNodeData).className;\n\n  if (oldClass === newClass) return;\n  elm.className = newClass || '';\n}\n\nexport const classModule: Module = { create: updateClass, update: updateClass };\n", "import { VNode, VNodeData } from '../vNode';\nimport { Module } from './module';\n\nexport type Dataset = Record<string, string>;\n\nexport const CAPS_REGEX = /[A-Z]/g;\n\nfunction updateDataset(oldVNode: VNode, vNode: VNode): void {\n  const elm: HTMLElement = vNode.elm as HTMLElement;\n  let oldDataset = (oldVNode.data as VNodeData).dataset;\n  let dataset = (vNode.data as VNodeData).dataset;\n  let key: string;\n\n  if (!oldDataset && !dataset) return;\n  if (oldDataset === dataset) return;\n  oldDataset = oldDataset || {};\n  dataset = dataset || {};\n  const d = elm.dataset;\n\n  for (key in oldDataset) {\n    if (!dataset[key]) {\n      if (d) {\n        if (key in d) {\n          delete d[key];\n        }\n      } else {\n        elm.removeAttribute(\n          'data-' + key.replace(CAPS_REGEX, '-$&').toLowerCase(),\n        );\n      }\n    }\n  }\n  for (key in dataset) {\n    if (oldDataset[key] !== dataset[key]) {\n      if (d) {\n        d[key] = dataset[key];\n      } else {\n        elm.setAttribute(\n          'data-' + key.replace(CAPS_REGEX, '-$&').toLowerCase(),\n          dataset[key],\n        );\n      }\n    }\n  }\n}\n\nexport const datasetModule: Module = {\n  create: updateDataset,\n  update: updateDataset,\n};\n", "import { VNode, Listener } from '../vNode';\nimport { Module } from './module';\n\nexport type On = {\n  [N in keyof HTMLElementEventMap]?: Listener<HTMLElementEventMap[N]>;\n} & {\n  [event: string]: Listener<any>;\n};\n\ntype SomeListener<N extends keyof HTMLElementEventMap> =\n  | Listener<HTMLElementEventMap[N]>\n  | Listener<any>;\n\nfunction invokeHandler<N extends keyof HTMLElementEventMap>(\n  handler: SomeListener<N> | Array<SomeListener<N>>,\n  vNode: VNode,\n  event?: Event,\n): void {\n  if (typeof handler === 'function') {\n    const temp: any = event || {};\n    // call function handler\n    handler.call(vNode, temp, vNode);\n  } else if (typeof handler === 'object') {\n    // call multiple handlers\n    for (let i = 0; i < handler.length; i++) {\n      invokeHandler(handler[i], vNode, event);\n    }\n  }\n}\n\nfunction handleEvent(event: Event, vNode: VNode) {\n  const name = event.type;\n  const on: any = vNode.data?.on;\n\n  // call event handler(s) if exists\n  if (on && on[name]) {\n    invokeHandler(on[name], vNode, event);\n  }\n}\n\nfunction createListener() {\n  return function handler(event: Event) {\n    handleEvent(event, (handler as any).vNode);\n  };\n}\n\nfunction updateEventListeners(oldVNode: VNode, vNode?: VNode): void {\n  const oldOn: any = oldVNode.data?.on;\n  const oldListener = (oldVNode as any).listener;\n  const oldElm: Element = oldVNode.elm as Element;\n  const on: any = vNode?.data?.on;\n  const elm: Element = (vNode && vNode.elm) as Element;\n  let name: string;\n\n  // optimization for reused immutable handlers\n  if (oldOn === on) {\n    return;\n  }\n\n  // remove existing listeners which no longer used\n  if (oldOn && oldListener) {\n    // if element changed or deleted we remove all existing listeners unconditionally\n    if (!on) {\n      for (name in oldOn) {\n        // remove listener if element was changed or existing listeners removed\n        oldElm.removeEventListener(name, oldListener, false);\n      }\n    } else {\n      for (name in oldOn) {\n        // remove listener if existing listener removed\n        if (!on[name]) {\n          oldElm.removeEventListener(name, oldListener, false);\n        }\n      }\n    }\n  }\n\n  // add new listeners which has not already attached\n  if (on) {\n    // reuse existing listener or create new\n    const listener = ((vNode as any).listener =\n      (oldVNode as any).listener || createListener());\n    // update vNode for listener\n    listener.vNode = vNode;\n\n    // if element changed or added we add all needed listeners unconditionally\n    if (!oldOn) {\n      for (name in on) {\n        // add listener if element was changed or new listeners added\n        elm.addEventListener(name, listener, false);\n      }\n    } else {\n      for (name in on) {\n        // add listener if new listener added\n        if (!oldOn[name]) {\n          elm.addEventListener(name, listener, false);\n        }\n      }\n    }\n  }\n}\n\nexport const eventListenersModule: Module = {\n  create: updateEventListeners,\n  update: updateEventListeners,\n  destroy: updateEventListeners,\n};\n", "import { VNode, VNodeData } from '../vNode';\nimport { Module } from './module';\n\nexport type Props = Record<string, any>;\n\nfunction updateProps(oldVNode: VNode, vNode: VNode): void {\n  let key: string;\n  let cur: any;\n  let old: any;\n  const elm: any = vNode.elm;\n  let oldProps = (oldVNode.data as VNodeData).props;\n  let props = (vNode.data as VNodeData).props;\n\n  if (!oldProps && !props) return;\n  if (oldProps === props) return;\n  oldProps = oldProps || {};\n  props = props || {};\n\n  for (key in props) {\n    cur = props[key];\n    old = oldProps[key];\n    if (old !== cur && (key !== 'value' || elm[key] !== cur)) {\n      elm[key] = cur;\n    }\n  }\n}\n\nexport const propsModule: Module = { create: updateProps, update: updateProps };\n", "import { VNode, VNodeData } from '../vNode';\nimport { Module } from './module';\nimport { CAPS_REGEX } from './dataset';\n\nexport type CSSProperties = {\n  [K in keyof CSSStyleDeclaration]?: CSSStyleDeclaration[K] | number;\n} & {\n  [event: string]: string | number;\n};\n\nconst convertKey = (key: string) =>\n  key.replace(CAPS_REGEX, '-$&').toLowerCase();\n\nfunction updateStyle(oldVNode: VNode, vNode: VNode): void {\n  let name: string;\n  const elm: any = vNode.elm;\n  let oldStyle = (oldVNode.data as VNodeData).style;\n  let style = (vNode.data as VNodeData).style;\n\n  if (!oldStyle && !style) return;\n  if (oldStyle === style) return;\n  oldStyle = oldStyle || {};\n  style = style || {};\n\n  for (name in oldStyle) {\n    if (!style[name]) {\n      if (name.slice(0, 2) === '--') {\n        elm.style.removeProperty(name);\n      } else {\n        elm.style[convertKey(name)] = '';\n      }\n    }\n  }\n  for (name in style) {\n    if (style[name] !== oldStyle[name]) {\n      if (name.slice(0, 2) === '--') {\n        elm.style.setProperty(name, style[name]);\n      } else {\n        const key = convertKey(name);\n        const t = style[name];\n        if (typeof t === 'number') {\n          elm.style[key] = t + 'px';\n        } else {\n          elm.style[key] = t;\n        }\n      }\n    }\n  }\n}\n\nexport const styleModule: Module = {\n  create: updateStyle,\n  update: updateStyle,\n};\n", "import type { StoreValue, IController } from '@/types';\nimport { VNode } from './vNode';\nimport { init } from './init';\nimport { attributesModule } from './modules/attributes';\nimport { classModule } from './modules/class';\nimport { datasetModule } from './modules/dataset';\nimport { eventListenersModule } from './modules/event';\nimport { propsModule } from './modules/props';\nimport { styleModule } from './modules/style';\nimport { htmlDomApi } from './dom';\n\ninterface DomType extends Element {\n  vDom?: VNode;\n}\n\nconst patch = init(\n  [\n    attributesModule,\n    classModule,\n    datasetModule,\n    eventListenersModule,\n    propsModule,\n    styleModule,\n  ],\n  htmlDomApi,\n);\nexport function render(container: Element, vNode: VNode): VNode {\n  const dom = container as DomType;\n  let temp: VNode;\n  if (dom.vDom) {\n    temp = patch(dom.vDom as VNode, vNode);\n  } else {\n    temp = patch(dom, vNode);\n  }\n  dom.vDom = temp;\n  return temp;\n}\n\nexport type { VNode, FunctionComponent } from './vNode';\nexport { h } from './h';\nexport type { CSSProperties } from './modules/style';\n\nexport interface SmartComponent {\n  (props: StoreValue, controller: IController): VNode;\n  displayName: string;\n}\n", "import { h, SmartComponent } from '@/react';\nimport { MAIN_CANVAS_ID, SCROLL_SIZE } from '@/util';\n\nexport const CanvasContainer: SmartComponent = (state, controller) => {\n  const headerSize = controller.getHeaderSize();\n  return h(\n    'div',\n    {\n      className: 'relative canvas-container',\n    },\n    h('canvas', {\n      className: 'full canvas-content',\n      id: MAIN_CANVAS_ID,\n    }),\n    h(\n      'div',\n      {\n        className: 'vertical-scroll-bar',\n        style: {\n          top: headerSize.height,\n        },\n      },\n      h('div', {\n        className: 'vertical-scroll-bar-content',\n        style: {\n          height: SCROLL_SIZE,\n          transform: `translateY(${state.scrollTop}px)`,\n        },\n      }),\n    ),\n    h(\n      'div',\n      {\n        className: 'horizontal-scroll-bar',\n        style: {\n          left: headerSize.width,\n        },\n      },\n      h('div', {\n        className: 'horizontal-scroll-bar-content',\n        style: {\n          width: SCROLL_SIZE,\n          transform: `translateX(${state.scrollLeft}px)`,\n        },\n      }),\n    ),\n  );\n};\nCanvasContainer.displayName = 'CanvasContainer';\n", "import { h, SmartComponent, CSSProperties } from '@/react';\nimport { QueryCellResult, CanvasOverlayPosition } from '@/types';\nimport {\n  DEFAULT_FONT_COLOR,\n  makeFont,\n  DEFAULT_FONT_SIZE,\n  FORMULA_EDITOR_ID,\n} from '@/util';\nimport { isEmpty } from '@/lodash';\n\nexport function getEditorStyle(\n  style: QueryCellResult['style'],\n  cellPosition: CanvasOverlayPosition,\n): CSSProperties | undefined {\n  if (isEmpty(style)) {\n    return cellPosition;\n  }\n  const font = makeFont(\n    style?.isItalic ? 'italic' : 'normal',\n    style?.isBold ? 'bold' : '500',\n    style?.fontSize || DEFAULT_FONT_SIZE,\n    style?.fontFamily,\n  );\n  return {\n    ...cellPosition,\n    backgroundColor: style?.fillColor || 'inherit',\n    color: style?.fontColor || DEFAULT_FONT_COLOR,\n    font,\n  };\n}\n\nexport const FormulaEditor: SmartComponent = (state, controller) => {\n  const { activeCell, isCellEditing, cellPosition } = state;\n  const initValue = activeCell.formula || String(activeCell.value || '');\n  let inputDom: HTMLInputElement;\n  const ref = (element: Element) => {\n    inputDom = element as HTMLInputElement;\n  };\n\n  const setValue = (value: string) => {\n    controller.setCellValue(activeCell, value);\n    inputDom.value = '';\n    state.isCellEditing = false;\n  };\n  return h('input', {\n    title: 'editor',\n    className: 'base-editor',\n    id: FORMULA_EDITOR_ID,\n    value: initValue,\n    style: isCellEditing\n      ? getEditorStyle(activeCell.style, cellPosition)\n      : undefined,\n    hook: {\n      ref,\n    },\n    onfocus: () => {\n      if (!isCellEditing) {\n        return;\n      }\n      state.isCellEditing = true;\n    },\n    onblur: (event: any) => {\n      setValue(event.currentTarget.value);\n    },\n    onkeydown: (event: any) => {\n      inputDom.nextSibling!.textContent = event.currentTarget.value;\n      if (event.key === 'Enter' || event.key === 'Tab') {\n        setValue(event.currentTarget.value);\n      }\n    },\n  });\n};\n\nFormulaEditor.displayName = 'FormulaEditor';\n", "import { h, SmartComponent } from '@/react';\nimport { FormulaEditor } from './FormulaEditor';\nimport { intToColumnName, classnames } from '@/util';\n\nexport const FormulaBarContainer: SmartComponent = (\n  state,\n  controller,\n) => {\n  const { activeCell } = state;\n  return h(\n    'div',\n    {\n      className: 'formula-bar-wrapper',\n    },\n    h(\n      'div',\n      { className: 'formula-bar-name' },\n      `${intToColumnName(activeCell.col)}${activeCell.row + 1}`,\n    ),\n    h(\n      'div',\n      { className: 'formula-bar-editor-wrapper' },\n      FormulaEditor(state, controller),\n      h('div', {\n        className: classnames('formula-bar-value', {\n          show: state.isCellEditing,\n        })\n      }, activeCell.formula || String(activeCell.value || ''))\n    ),\n  );\n};\nFormulaBarContainer.displayName = 'FormulaBarContainer';\n", "import { h, FunctionComponent, CSSProperties } from '@/react';\nimport { classnames } from '@/util';\n\nexport interface ButtonProps {\n  type?: 'normal' | 'circle';\n  style?: CSSProperties;\n  active?: boolean;\n  disabled?: boolean;\n  onClick?: (event: MouseEvent) => void;\n  className?: string;\n  testId?: string;\n}\n\nconst defaultClick: (event: MouseEvent) => void = () => {\n  console.log('add click event');\n};\n\nexport const Button: FunctionComponent<ButtonProps> = (props, ...children) => {\n  const {\n    className = '',\n    onClick = defaultClick,\n    disabled = false,\n    active = false,\n    type = 'normal',\n    style = {},\n    testId = undefined,\n  } = props;\n  return h(\n    'div',\n    {\n      onclick: onClick,\n      className: classnames('button-wrapper', className, {\n        disabled,\n        active,\n        circle: type === 'circle',\n      }),\n      style,\n      'data-testId': testId,\n    },\n    ...children,\n  );\n};\nButton.displayName = 'Button';\n", "import { h, FunctionComponent } from '@/react';\n\nconst pathStyle = {\n  'transform-origin': '130px 106px',\n};\n\nexport const Github: FunctionComponent = () => {\n  return h(\n    'a',\n    {\n      href: 'https://github.com/nusr/excel',\n      'aria-label': 'View source on Github',\n      target: '_blank',\n      rel: 'noreferrer',\n      title: 'github link'\n    },\n    h(\n      'svg',\n      {\n        className: 'github-wrapper',\n        viewBox: '0 0 250 250',\n        'aria-hidden': true,\n      },\n      h('path', {\n        d: 'M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z',\n      }),\n      h('path', {\n        d: 'M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2',\n        fill: 'currentColor',\n        style: pathStyle,\n      }),\n      h('path', {\n        style: pathStyle,\n        fill: 'currentColor',\n        d: 'M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z',\n      }),\n    ),\n  );\n};\nGithub.displayName = 'Github';\n", "export type BaseIconName =\n  | 'alignCenter'\n  | 'alignLeft'\n  | 'alignRight'\n  | 'bold'\n  | 'fontColor'\n  | 'italic'\n  | 'middleAlign'\n  | 'plus'\n  | 'redo'\n  | 'underline'\n  | 'undo';\n\nconst icon: Record<BaseIconName, string[]> = {\n  alignCenter: [\n    'M142.2 227.6h739.6v56.9H142.2zM142.2 568.9h739.6v56.9H142.2zM256 398.2h512v56.9H256zM256 739.6h512v56.9H256z',\n  ],\n  alignLeft: [\n    'M627.712 788.48c11.305 0 20.48-9.155 20.48-20.48s-9.175-20.48-20.48-20.48H218.46c-11.305 0-20.48 9.155-20.48 20.48s9.175 20.48 20.48 20.48h409.252zM832.86 583.68h-614.4c-11.305 0-20.48 9.155-20.48 20.48s9.175 20.48 20.48 20.48h614.4c11.305 0 20.48-9.155 20.48-20.48s-9.175-20.48-20.48-20.48zM832.86 256h-614.4c-11.305 0-20.48 9.155-20.48 20.48s9.175 20.48 20.48 20.48h614.4c11.305 0 20.48-9.155 20.48-20.48S844.165 256 832.86 256zM218.46 460.8h409.252c11.305 0 20.48-9.155 20.48-20.48s-9.175-20.48-20.48-20.48H218.46c-11.305 0-20.48 9.155-20.48 20.48s9.155 20.48 20.48 20.48z',\n  ],\n  alignRight: [\n    'M832.86 747.52H423.588a20.48 20.48 0 1 0 0 40.96H832.84a20.48 20.48 0 0 0 0.02-40.96z m20.48-143.36a20.48 20.48 0 0 0-20.48-20.48h-614.4a20.48 20.48 0 1 0 0 40.96h614.4a20.48 20.48 0 0 0 20.48-20.48zM832.86 256h-614.4a20.48 20.48 0 1 0 0 40.96h614.4a20.48 20.48 0 1 0 0-40.96z m0 163.84H423.588a20.48 20.48 0 1 0 0 40.96H832.84a20.48 20.48 0 0 0 0.02-40.96z',\n  ],\n  bold: [\n    'M724.342857 477.028571c38.4-40 61.942857-94.057143 61.942857-153.485714v-11.657143C786.285714 188.914286 685.6 89.142857 561.485714 89.142857H223.314286c-17.257143 0-31.314286 14.057143-31.314286 31.314286v776.114286c0 18.628571 15.085714 33.714286 33.714286 33.714285h364.228571c133.714286 0 242.057143-107.657143 242.057143-240.571428v-12.571429c0-83.428571-42.742857-156.914286-107.657143-200.114286zM301.714286 198.857143h256.8c65.257143 0 118.057143 50.742857 118.057143 113.485714v10.857143c0 62.628571-52.914286 113.485714-118.057143 113.485714H301.714286V198.857143z m418.971428 490.742857c0 71.885714-59.085714 130.171429-132 130.171429H301.714286V547.085714h286.971428c72.914286 0 132 58.285714 132 130.171429v12.342857z',\n  ],\n  fontColor: [\n    'M650.496 597.333333H373.504l-68.266667 170.666667H213.333333l256-640h85.333334l256 640h-91.904l-68.266667-170.666667z m-34.133333-85.333333L512 251.093333 407.637333 512h208.725334zM128 853.333333h768v85.333334H128v-85.333334z',\n  ],\n  italic: [\n    'M219.428571 949.714286l9.714286-48.571429q3.428571-1.142857 46.571429-12.285714t63.714286-21.428571q16-20 23.428571-57.714286 0.571429-4 35.428571-165.142857t65.142857-310.571429 29.714286-169.428571l0-14.285714q-13.714286-7.428571-31.142857-10.571429t-39.714286-4.571429-33.142857-3.142857l10.857143-58.857143q18.857143 1.142857 68.571429 3.714286t85.428571 4 68.857143 1.428571q27.428571 0 56.285714-1.428571t69.142857-4 56.285714-3.714286q-2.857143 22.285714-10.857143 50.857143-17.142857 5.714286-58 16.285714t-62 19.142857q-4.571429 10.857143-8 24.285714t-5.142857 22.857143-4.285714 26-3.714286 24q-15.428571 84.571429-50 239.714286t-44.285714 203.142857q-1.142857 5.142857-7.428571 33.142857t-11.428571 51.428571-9.142857 47.714286-3.428571 32.857143l0.571429 10.285714q9.714286 2.285714 105.714286 17.714286-1.714286 25.142857-9.142857 56.571429-6.285714 0-18.571429 0.857143t-18.571429 0.857143q-16.571429 0-49.714286-5.714286t-49.142857-5.714286q-78.857143-1.142857-117.714286-1.142857-29.142857 0-81.714286 5.142857t-69.142857 6.285714z',\n  ],\n  middleAlign: [\n    'M740.43392 788.48c11.30496 0 20.48-9.15456 20.48-20.48s-9.17504-20.48-20.48-20.48L331.18208 747.52c-11.30496 0-20.48 9.15456-20.48 20.48s9.17504 20.48 20.48 20.48L740.43392 788.48zM863.49824 604.16c0-11.32544-9.17504-20.48-20.48-20.48l-614.4 0c-11.30496 0-20.48 9.15456-20.48 20.48s9.17504 20.48 20.48 20.48l614.4 0C854.3232 624.64 863.49824 615.48544 863.49824 604.16zM208.13824 276.48c0 11.32544 9.17504 20.48 20.48 20.48l614.4 0c11.30496 0 20.48-9.15456 20.48-20.48s-9.17504-20.48-20.48-20.48l-614.4 0C217.2928 256 208.13824 265.15456 208.13824 276.48zM740.43392 460.8c11.30496 0 20.48-9.15456 20.48-20.48s-9.17504-20.48-20.48-20.48L331.18208 419.84c-11.30496 0-20.48 9.15456-20.48 20.48s9.17504 20.48 20.48 20.48L740.43392 460.8z',\n  ],\n  plus: [\n    'M896 468.571429H555.428571V100.571429h-86.857142v368H128c-5.028571 0-9.142857 4.114286-9.142857 9.142857v68.571428c0 5.028571 4.114286 9.142857 9.142857 9.142857h340.571429v368h86.857142V555.428571h340.571429c5.028571 0 9.142857-4.114286 9.142857-9.142857v-68.571428c0-5.028571-4.114286-9.142857-9.142857-9.142857z',\n  ],\n  redo: [\n    'M611.783111 569.344L549.622519 644.740741h284.444444l-65.498074-265.481482-59.922963 72.666074c-35.422815-28.48237-108.278519-68.342519-238.667852-68.342518-202.827852 0-280.651852 206.01363-280.651852 206.013629s116.318815-132.778667 246.215111-132.778666c97.204148-0.037926 153.865481 74.827852 176.241778 112.526222z',\n  ],\n  underline: [\n    'M512 725.333333c166.4 0 298.666667-132.266667 298.666667-298.666666V128c0-25.6-17.066667-42.666667-42.666667-42.666667s-42.666667 17.066667-42.666667 42.666667v298.666667c0 119.466667-93.866667 213.333333-213.333333 213.333333s-213.333333-93.866667-213.333333-213.333333V128c0-25.6-17.066667-42.666667-42.666667-42.666667s-42.666667 17.066667-42.666667 42.666667v298.666667c0 166.4 132.266667 298.666667 298.666667 298.666666zM853.333333 853.333333H170.666667c-25.6 0-42.666667 17.066667-42.666667 42.666667s17.066667 42.666667 42.666667 42.666667h682.666666c25.6 0 42.666667-17.066667 42.666667-42.666667s-17.066667-42.666667-42.666667-42.666667z',\n  ],\n  undo: [\n    'M489.244444 568.888889l60.681482 75.851852H265.481481l64.474075-265.481482 60.681481 72.05926c34.133333-30.340741 109.985185-68.266667 238.933333-68.266667 201.007407 0 280.651852 204.8 280.651852 204.8S792.651852 455.111111 663.703704 455.111111c-98.607407 0-155.496296 75.851852-174.45926 113.777778z',\n  ],\n};\n\nexport default icon;\n", "import { h, FunctionComponent } from '@/react';\nimport { classnames } from '@/util';\n\ntype PathItem = {\n  d: string;\n  'fill-opacity'?: string;\n};\n\nexport interface BaseIconProps {\n  className?: string;\n  paths: PathItem[];\n}\n\nexport const BaseIcon: FunctionComponent<BaseIconProps> = ({\n  className = '',\n  paths = [],\n}) => {\n  return h(\n    'svg',\n    {\n      className: classnames('base-icon', className),\n      viewBox: '0 0 1137 1024',\n      'aria-hidden': true,\n    },\n    ...paths.map((item) => h('path', item)),\n  );\n};\nBaseIcon.displayName = 'BaseIcon';\n", "import type { FunctionComponent } from '@/react'\nimport { BaseIcon } from './BaseIcon';\n\nexport const FillColorIcon: FunctionComponent = () => {\n  return BaseIcon({\n    paths: [\n      {\n        d: 'M0 0h1024v1024H0z',\n        'fill-opacity': '.01',\n      },\n      {\n        d: 'M496.512 32a128 128 0 0 1 127.84 121.6l0.16 6.4-0.032 113.504 264.256 264.256a32 32 0 0 1-8.16 51.2l-144.064 72.96-269.12 269.12a64 64 0 0 1-90.496 0l-294.144-294.176a64 64 0 0 1 0-90.496l286.016-286.08-0.192-2.048-0.064-2.08V160a128 128 0 0 1 128-128z m-6.464 197.568L128 591.616l294.144 294.144 276.32-276.32 113.792-57.632-187.776-187.776V416a32 32 0 0 1-28.256 31.776l-3.712 0.224a32 32 0 0 1-31.808-28.256L560.512 416l-0.032-115.968-70.432-70.464z m402.016 395.936l1.792 2.24 5.472 8.416c30.112 46.752 45.184 80.032 45.184 99.84a64 64 0 1 1-128 0c0-20.96 16.864-57.024 50.624-108.224a16 16 0 0 1 24.928-2.24zM496.512 96a64 64 0 0 0-63.84 59.2l-0.16 4.8-0.032 36.576 34.944-34.88a32 32 0 0 1 45.248 0l47.808 47.808V160a64 64 0 0 0-59.2-63.84L496.48 96z',\n      },\n    ],\n  });\n};\nFillColorIcon.displayName = 'FillColorIcon';\n", "import type { FunctionComponent } from '@/react'\nimport iconConfig from './icon';\nimport type { BaseIconName } from './icon';\nimport { BaseIcon, BaseIconProps } from './BaseIcon';\n\nexport interface IconProps {\n  name: BaseIconName;\n  className?: string;\n}\n\nexport const Icon: FunctionComponent<IconProps> = ({ name, className = '' }) => {\n  const paths = iconConfig[name].map((item) => ({ d: item }));\n  return BaseIcon({ className, paths });\n};\nIcon.displayName = 'Icon';\n\nexport { BaseIcon, BaseIconProps };\n\nexport { FillColorIcon } from './FillColorIcon';\n", "import { h, CSSProperties, FunctionComponent } from '@/react';\nimport { classnames } from '@/util';\nimport { OptionItem } from '@/types';\n\nexport type SelectProps = {\n  value?: string | number;\n  style?: CSSProperties;\n  data: Array<string | number | OptionItem>;\n  getItemStyle?: (value: string | number) => CSSProperties;\n  onChange: (value: string | number) => void;\n};\n\nexport const Select: FunctionComponent<SelectProps> = (props) => {\n  const {\n    data,\n    value: activeValue,\n    style = {},\n    onChange,\n    getItemStyle = () => ({}),\n  } = props;\n  const handleChange = (event: any) => {\n    const { value } = event.target;\n    onChange(value);\n  };\n  return h(\n    'select',\n    {\n      onchange: handleChange,\n      value: activeValue,\n      style,\n      name: 'select',\n      className: 'select-list',\n    },\n    ...data.map((item) => {\n      const value = typeof item === 'object' ? item.value : item;\n      const label = typeof item === 'object' ? item.label : item;\n      const disabled = typeof item === 'object' ? item.disabled : false;\n      const itemStyle = getItemStyle(value);\n      return h(\n        'option',\n        {\n          key: value,\n          value,\n          style: itemStyle,\n          disabled: !!disabled,\n          className: classnames('select-item', { disabled }),\n        },\n        label,\n      );\n    }),\n  );\n};\nSelect.displayName = 'Select';\n", "import { h, FunctionComponent, CSSProperties } from '@/react';\nexport type ColorPickerProps = {\n  color: string;\n  style?: CSSProperties;\n  key: string;\n  onChange: (value: string) => void;\n};\nexport const COLOR_LIST = [\n  '#4D4D4D',\n  '#999999',\n  '#FFFFFF',\n  '#F44E3B',\n  '#FE9200',\n  '#FCDC00',\n  '#DBDF00',\n  '#A4DD00',\n  '#68CCCA',\n  '#73D8FF',\n  '#AEA1FF',\n  '#FDA1FF',\n  '#333333',\n  '#808080',\n  '#cccccc',\n  '#D33115',\n  '#E27300',\n  '#FCC400',\n  '#B0BC00',\n  '#68BC00',\n  '#16A5A5',\n  '#009CE0',\n  '#7B64FF',\n  '#FA28FF',\n  '#000000',\n  '#666666',\n  '#B3B3B3',\n  '#9F0500',\n  '#C45100',\n  '#FB9E00',\n  '#808900',\n  '#194D33',\n  '#0C797D',\n  '#0062B1',\n  '#653294',\n  '#AB149E',\n];\n\nconst baseClassName = 'color-picker-wrapper';\n\nexport const ColorPicker: FunctionComponent<ColorPickerProps> = (\n  props,\n  ...children\n) => {\n  const { color, style = {}, onChange, key } = props;\n  let ref: Element;\n  const toggleVisible = (value: boolean) => {\n    let className = baseClassName;\n    if (value) {\n      className = className + ' ' + 'show';\n    }\n    ref.className = className;\n  };\n  return h(\n    'div',\n    {\n      className: 'relative color-picker',\n      key,\n      style: style,\n    },\n    h(\n      'div',\n      {\n        className: 'color-picker-trigger',\n        style: {\n          color,\n        },\n        onclick: () => {\n          toggleVisible(true);\n        },\n      },\n      ...children,\n    ),\n\n    h(\n      'div',\n      {\n        className: baseClassName,\n        hook: {\n          ref: (dom) => {\n            ref = dom;\n          },\n        },\n        onmouseleave() {\n          toggleVisible(false);\n        },\n      },\n      h(\n        'div',\n        {\n          className: 'color-picker-list',\n        },\n        ...COLOR_LIST.map((item) =>\n          h('div', {\n            key: item,\n            className: 'color-picker-item',\n            style: {\n              backgroundColor: item,\n            },\n            onclick: () => {\n              toggleVisible(false);\n              onChange(item);\n            },\n          }),\n        ),\n      ),\n    ),\n  );\n};\nColorPicker.displayName = 'ColorPicker';\n", "import { h, SmartComponent } from '@/react';\nimport {\n  Icon,\n  Button,\n  ColorPicker,\n  Github,\n  Select,\n  FillColorIcon,\n} from '@/components';\nimport {\n  DEFAULT_FONT_FAMILY,\n  FONT_SIZE_LIST,\n  DEFAULT_FONT_SIZE,\n  DEFAULT_FONT_COLOR,\n} from '@/util';\nimport { StyleType, EWrap } from '@/types';\n\nexport const ToolbarContainer: SmartComponent = (state, controller) => {\n  const getItemStyle = (value: string | number) => {\n    return {\n      'font-family': String(value),\n    };\n  };\n  const setCellStyle = (value: Partial<StyleType>) => {\n    controller.setCellStyle(value);\n  };\n  const { activeCell, canRedo, canUndo, fontFamilyList } = state;\n  const { style = {} } = activeCell;\n  const {\n    isBold,\n    isItalic,\n    fontSize = DEFAULT_FONT_SIZE,\n    fontColor = DEFAULT_FONT_COLOR,\n    fillColor = '',\n    fontFamily = DEFAULT_FONT_FAMILY,\n    wrapText,\n  } = style;\n  return h(\n    'div',\n    {\n      className: 'toolbar-wrapper',\n    },\n    Button(\n      {\n        disabled: !canUndo,\n        onClick() {\n          controller.undo();\n        },\n        testId: 'toolbar-undo',\n      },\n      Icon({ name: 'undo' }),\n    ),\n    Button(\n      {\n        disabled: !canRedo,\n        onClick() {\n          controller.redo();\n        },\n        testId: 'toolbar-redo',\n      },\n      Icon({ name: 'redo' }),\n    ),\n    Button(\n      {\n        active: isBold,\n        onClick: () => {\n          setCellStyle({\n            isBold: !isBold,\n          });\n        },\n        testId: 'toolbar-bold',\n      },\n      Icon({ name: 'bold' }),\n    ),\n    Button(\n      {\n        active: isItalic,\n        onClick: () => {\n          setCellStyle({\n            isItalic: !isItalic,\n          });\n        },\n        testId: 'toolbar-italic',\n      },\n      Icon({ name: 'italic' }),\n    ),\n    Button(\n      {\n        onClick: () => {\n          setCellStyle({ wrapText: EWrap.AUTO_WRAP });\n        },\n        active: wrapText === EWrap.AUTO_WRAP,\n        testId: 'toolbar-wrap-text',\n      },\n      'Wrap Text',\n    ),\n    Select({\n      data: fontFamilyList,\n      value: fontFamily,\n      style: {\n        width: '140px',\n      },\n      getItemStyle: getItemStyle,\n      onChange: (value) => {\n        setCellStyle({ fontFamily: String(value) });\n      },\n    }),\n    Select({\n      data: FONT_SIZE_LIST,\n      value: fontSize,\n      onChange: (value) => {\n        setCellStyle({ fontSize: Number(value) });\n      },\n    }),\n    ColorPicker(\n      {\n        color: fontColor,\n        onChange: (value) => {\n          setCellStyle({ fontColor: value });\n        },\n        key: 'font-color',\n      },\n      Icon({ name: 'fontColor' }),\n    ),\n    ColorPicker(\n      {\n        key: 'fill-color',\n        color: fillColor,\n        onChange: (value) => {\n          setCellStyle({ fillColor: value });\n        },\n      },\n      FillColorIcon({}),\n    ),\n    Github({}),\n  );\n};\n\nToolbarContainer.displayName = 'ToolbarContainer';\n", "import { MUST_FONT_FAMILY, DEFAULT_FONT_FAMILY } from \"@/util/\";\nconst size = {\n  smallFont: \"10px\",\n  font: \"12px\",\n  largeFont: \"14px\",\n  padding: \"12px\",\n  fontFamily: `${DEFAULT_FONT_FAMILY},${MUST_FONT_FAMILY}`,\n  lineHeight: \"1.5\",\n  mediumPadding: \"8px\",\n  borderRadius: \"4px\",\n  tinyPadding: \"4px\",\n};\nexport default size;\n", "import { DEFAULT_FONT_COLOR } from \"@/util/\";\nconst color = {\n  primaryColor: \"#217346\",\n  buttonActiveColor: \"rgb(198,198,198)\",\n  selectionColor: \"rgba(198,198,198,0.3)\",\n  backgroundColor: \"#e6e6e6\",\n  white: \"#ffffff\",\n  black: \"#000000\",\n  gridStrokeColor: \"#d4d4d4\",\n  triangleFillColor: \"#b4b4b4\",\n  contentColor: DEFAULT_FONT_COLOR,\n  borderColor: \"#cccccc\",\n  activeBorderColor: \"#808080\",\n  disabledColor: \"#ccc\",\n};\nexport default color;\n", "import size from \"./size\";\nimport color from \"./color\";\nconst theme = {\n  ...size,\n  ...color,\n};\n\nexport default theme;\n", "import { h, SmartComponent } from '@/react';\nimport { classnames } from '@/util';\nimport theme from '@/theme';\nimport { Button, Icon } from '@/components';\n\nexport const SheetBarContainer: SmartComponent = (state, controller) => {\n  return h(\n    'div',\n    {\n      className: 'sheet-bar-wrapper',\n    },\n    h(\n      'div',\n      {\n        className: 'sheet-bar-list',\n      },\n      ...state.sheetList.map((item) => {\n        return h(\n          'div',\n          {\n            key: item.sheetId,\n            className: classnames('sheet-bar-item', {\n              active: state.currentSheetId === item.sheetId,\n            }),\n            onclick: () => {\n              controller.setCurrentSheetId(item.sheetId);\n            },\n          },\n          item.name,\n        );\n      }),\n    ),\n    h(\n      'div',\n      {\n        className: 'sheet-bar-add',\n      },\n      Button(\n        {\n          onClick: () => {\n            controller.addSheet();\n          },\n          type: 'circle',\n          style: {\n            backgroundColor: theme.buttonActiveColor,\n          },\n        },\n        Icon({\n          name: 'plus',\n        }),\n      ),\n    ),\n  );\n};\nSheetBarContainer.displayName = 'SheetBarContainer';\n", "import { h, SmartComponent, CSSProperties } from '@/react';\nimport { Button } from '@/components';\n\nconst defaultStyle: CSSProperties = {\n  display: 'none',\n};\n\nexport const ContextMenuContainer: SmartComponent = (state, controller) => {\n  const { contextMenuPosition } = state;\n  const style =\n    contextMenuPosition === undefined\n      ? defaultStyle\n      : {\n          top: contextMenuPosition.top,\n          left: contextMenuPosition.left,\n        };\n  const hideContextMenu = () => {\n    state.contextMenuPosition = undefined;\n  };\n  return h(\n    'div',\n    {\n      className: 'context-menu',\n      style,\n    },\n    Button(\n      {\n        onClick() {\n          controller.addCol(controller.getActiveCell().col, 1);\n          hideContextMenu();\n        },\n      },\n      '\u65B0\u589E\u4E00\u5217',\n    ),\n    Button(\n      {\n        onClick() {\n          controller.addRow(controller.getActiveCell().row, 1);\n          hideContextMenu();\n        },\n      },\n      '\u65B0\u589E\u4E00\u884C',\n    ),\n  );\n};\nContextMenuContainer.displayName = 'ContextMenuContainer';\n", "import { h, SmartComponent } from './react';\nimport {\n  CanvasContainer,\n  SheetBarContainer,\n  ToolbarContainer,\n  FormulaBarContainer,\n  ContextMenuContainer,\n} from './containers';\n\nexport const App: SmartComponent = (state, controller) => {\n  return h(\n    'div',\n    {\n      className: 'app-container',\n    },\n    ToolbarContainer(state, controller),\n    FormulaBarContainer(state, controller),\n    CanvasContainer(state, controller),\n    SheetBarContainer(state, controller),\n    ContextMenuContainer(state, controller),\n  );\n};\nApp.displayName = 'App';\n", "import { isEmpty } from '@/lodash';\nimport {\n  Coordinate,\n  WorkBookJSON,\n  CellInfo,\n  StyleType,\n  ChangeEventType,\n  IController,\n  IHooks,\n  IModel,\n  WorksheetType,\n  IHistory,\n  IWindowSize,\n  CanvasOverlayPosition,\n  ScrollValue,\n} from '@/types';\nimport { parseReference, controllerLog, Range, assert } from '@/util';\n\nconst DEFAULT_ACTIVE_CELL = { row: 0, col: 0 };\nconst CELL_HEIGHT = 20;\nconst CELL_WIDTH = 68;\nconst ROW_TITLE_HEIGHT = 20;\nconst COL_TITLE_WIDTH = 34;\n\nconst defaultScrollValue: ScrollValue = {\n  top: 0,\n  left: 0,\n  row: 0,\n  col: 0,\n  scrollLeft: 0,\n  scrollTop: 0,\n};\n\nexport class Controller implements IController {\n  private scrollValue: Record<string, ScrollValue> = {};\n  private model: IModel;\n  private ranges: Array<Range> = [];\n  private changeSet = new Set<ChangeEventType>();\n  private hooks: IHooks = {\n    modelChange() {},\n  };\n  private history: IHistory;\n  private readonly rowMap: Map<number, number> = new Map([]);\n  private readonly colMap: Map<number, number> = new Map([]);\n  private viewSize = {\n    width: 0,\n    height: 0,\n  };\n  constructor(model: IModel, history: IHistory) {\n    this.model = model;\n    this.ranges = [\n      new Range(\n        DEFAULT_ACTIVE_CELL.row,\n        DEFAULT_ACTIVE_CELL.col,\n        1,\n        1,\n        this.getCurrentSheetId(),\n      ),\n    ];\n    this.history = history;\n  }\n  getCurrentSheetId(): string {\n    return this.model.getCurrentSheetId();\n  }\n  getSheetList(): WorkBookJSON['workbook'] {\n    return this.model.getSheetList();\n  }\n  getCellsContent(sheetId?: string | undefined): Coordinate[] {\n    return this.model.getCellsContent(sheetId);\n  }\n  getSheetInfo(sheetId?: string | undefined): WorksheetType {\n    return this.model.getSheetInfo(sheetId);\n  }\n  getRanges(): Range[] {\n    return this.ranges;\n  }\n  setHooks(hooks: IHooks): void {\n    this.hooks = hooks;\n  }\n  private emitChange(recordHistory = true): void {\n    controllerLog('emitChange', this.changeSet);\n    if (recordHistory) {\n      this.history.onChange(this.toJSON());\n    }\n    this.hooks.modelChange(this.changeSet);\n    this.changeSet = new Set<ChangeEventType>();\n  }\n  getActiveCell(): Coordinate {\n    const { activeCell } = this.getSheetInfo();\n    if (!activeCell) {\n      return { ...DEFAULT_ACTIVE_CELL };\n    }\n    const result = parseReference(activeCell);\n    assert(!!result);\n    const { row, col } = result;\n    return { row, col };\n  }\n  setActiveCell(row = -1, col = -1, colCount = 1, rowCount = 1): void {\n    this.changeSet.add('selectionChange');\n    let position: Coordinate = { ...DEFAULT_ACTIVE_CELL };\n    if (row === col && row === -1) {\n      position = this.getActiveCell();\n    } else {\n      position = { row, col };\n    }\n    this.model.setActiveCell(position.row, position.col);\n    this.ranges = [\n      new Range(\n        position.row,\n        position.col,\n        colCount,\n        rowCount,\n        this.getCurrentSheetId(),\n      ),\n    ];\n    this.emitChange();\n  }\n  setCurrentSheetId(id: string): void {\n    if (id === this.getCurrentSheetId()) {\n      return;\n    }\n    this.model.setCurrentSheetId(id);\n    this.setActiveCell();\n    this.changeSet.add('contentChange');\n    this.computeViewSize();\n    this.emitChange();\n  }\n  addSheet(): void {\n    this.model.addSheet();\n    this.computeViewSize();\n    this.model.setActiveCell(0, 0);\n    this.setScroll({\n      top: 0,\n      left: 0,\n      row: 0,\n      col: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n    });\n  }\n  selectAll(row: number, col: number): void {\n    this.setActiveCell(row, col, 0, 0);\n    controllerLog('selectAll');\n  }\n  selectCol(row: number, col: number): void {\n    const sheetInfo = this.model.getSheetInfo();\n    this.setActiveCell(row, col, sheetInfo.rowCount, 0);\n    controllerLog('selectCol');\n  }\n  selectRow(row: number, col: number): void {\n    const sheetInfo = this.model.getSheetInfo();\n    this.setActiveCell(row, col, 0, sheetInfo.colCount);\n    controllerLog('selectRow');\n  }\n  fromJSON(json: WorkBookJSON): void {\n    controllerLog('loadJSON', json);\n    this.model.fromJSON(json);\n    this.model.setActiveCell(0, 0);\n    this.changeSet.add('contentChange');\n    this.emitChange(false);\n  }\n  toJSON(): WorkBookJSON {\n    return this.model.toJSON();\n  }\n  updateSelection(row: number, col: number): void {\n    const activeCell = this.getActiveCell();\n    if (activeCell.row === row && activeCell.col === col) {\n      return;\n    }\n    const colCount = Math.abs(col - activeCell.col) + 1;\n    const rowCount = Math.abs(row - activeCell.row) + 1;\n    const temp = new Range(\n      Math.min(activeCell.row, row),\n      Math.min(activeCell.col, col),\n      rowCount,\n      colCount,\n      this.getCurrentSheetId(),\n    );\n    this.ranges = [temp];\n    controllerLog('updateSelection', temp);\n    this.changeSet.add('selectionChange');\n    this.emitChange();\n  }\n\n  setCellValue(data: Coordinate, value: string): void {\n    controllerLog('setCellValue', value);\n    const temp = [\n      new Range(data.row, data.col, 1, 1, this.getCurrentSheetId()),\n    ];\n    this.model.setCellValues(value, temp);\n    this.changeSet.add('contentChange');\n    this.emitChange();\n  }\n  setCellStyle(style: Partial<StyleType>, ranges = this.ranges): void {\n    if (isEmpty(style)) {\n      return;\n    }\n    this.model.setCellStyle(style, ranges);\n    this.changeSet.add('contentChange');\n    this.emitChange();\n  }\n  getCell = (data: Coordinate): CellInfo => {\n    const { row, col } = data;\n    const { model } = this;\n    const { value, formula, style } = model.queryCell(row, col);\n    return {\n      value,\n      row,\n      col,\n      formula,\n      style,\n    };\n  };\n  canRedo(): boolean {\n    return this.history.canRedo();\n  }\n  canUndo(): boolean {\n    return this.history.canUndo();\n  }\n  undo(): void {\n    const result = this.history.undo(this.toJSON());\n    if (result) {\n      this.fromJSON(result);\n    }\n  }\n  redo(): void {\n    const result = this.history.redo(this.toJSON());\n    if (result) {\n      this.fromJSON(result);\n    }\n  }\n  getColWidth(col: number): number {\n    return this.colMap.get(col) || CELL_WIDTH;\n  }\n  setColWidth(col: number, width: number): void {\n    this.colMap.set(col, width);\n    this.computeViewSize();\n    this.changeSet.add('contentChange');\n  }\n  getRowHeight(row: number): number {\n    return this.rowMap.get(row) || CELL_HEIGHT;\n  }\n  setRowHeight(row: number, height: number) {\n    this.rowMap.set(row, height);\n    this.computeViewSize();\n    this.changeSet.add('contentChange');\n  }\n  private computeViewSize() {\n    const headerSize = this.getHeaderSize();\n    const sheetInfo = this.model.getSheetInfo();\n    let width = headerSize.width;\n    let height = headerSize.height;\n    for (let i = 0; i < sheetInfo.colCount; i++) {\n      width += this.getColWidth(i);\n    }\n    for (let i = 0; i < sheetInfo.rowCount; i++) {\n      height += this.getRowHeight(i);\n    }\n    this.viewSize = {\n      width,\n      height,\n    };\n  }\n  getViewSize() {\n    return {\n      ...this.viewSize,\n    };\n  }\n  getCellSize(row: number, col: number): IWindowSize {\n    return { width: this.getColWidth(col), height: this.getRowHeight(row) };\n  }\n  getHeaderSize() {\n    return {\n      width: COL_TITLE_WIDTH,\n      height: ROW_TITLE_HEIGHT,\n    };\n  }\n  computeCellPosition(row: number, col: number): CanvasOverlayPosition {\n    const size = this.getHeaderSize();\n    const scroll = this.getScroll();\n    let resultX = size.width;\n    let resultY = size.height;\n    let r = scroll.row;\n    let c = scroll.col;\n    while (c < col) {\n      resultX += this.getColWidth(c);\n      c++;\n    }\n    while (r < row) {\n      resultY += this.getRowHeight(r);\n      r++;\n    }\n    const cellSize = this.getCellSize(row, col);\n    return { ...cellSize, top: resultY, left: resultX };\n  }\n\n  addRow(rowIndex: number, count: number): void {\n    this.model.addRow(rowIndex, count);\n    this.changeSet.add('contentChange');\n    this.emitChange();\n  }\n  addCol(colIndex: number, count: number): void {\n    this.model.addCol(colIndex, count);\n    this.changeSet.add('contentChange');\n    this.emitChange();\n  }\n  getChangeSet(): Set<ChangeEventType> {\n    const result = this.changeSet;\n    this.changeSet = new Set<ChangeEventType>();\n    return result;\n  }\n\n  getScroll(): ScrollValue {\n    const sheetId = this.model.getCurrentSheetId()\n    const result = this.scrollValue[sheetId] || defaultScrollValue;\n    return result;\n  }\n  setScroll(data: ScrollValue): void {\n    const sheetId = this.model.getCurrentSheetId()\n    this.scrollValue[sheetId] = {\n      ...data\n    }\n    this.changeSet.add('contentChange');\n    this.emitChange();\n  }\n}\n", "import { WorkBookJSON, IHistory } from '@/types';\nexport class History implements IHistory {\n  private undoList: string[] = [];\n  private redoList: string[] = [];\n  constructor() {\n    this.reset();\n  }\n  private reset(): void {\n    this.undoList = [];\n    this.redoList = [];\n  }\n  onChange(sheetData: WorkBookJSON): void {\n    this.addUndoData(sheetData);\n    this.redoList = [];\n  }\n  private addUndoData(sheetData: WorkBookJSON): void {\n    this.undoList.push(JSON.stringify(sheetData));\n  }\n  private addRedoData(sheetData: WorkBookJSON): void {\n    this.redoList.push(JSON.stringify(sheetData));\n  }\n  private getUndoData(): WorkBookJSON | undefined {\n    const temp = this.undoList.pop();\n    return temp ? JSON.parse(temp) : temp;\n  }\n  private getRedoData(): WorkBookJSON | undefined {\n    const temp = this.redoList.pop();\n    return temp ? JSON.parse(temp) : temp;\n  }\n  canRedo(): boolean {\n    return this.redoList.length > 0;\n  }\n  canUndo(): boolean {\n    return this.undoList.length > 0;\n  }\n  redo(sheetData: WorkBookJSON): WorkBookJSON | undefined {\n    if (this.canRedo()) {\n      this.addUndoData(sheetData);\n      return this.getRedoData();\n    }\n    return undefined;\n  }\n  undo(sheetData: WorkBookJSON): WorkBookJSON | undefined {\n    if (this.canUndo()) {\n      this.addRedoData(sheetData);\n      return this.getUndoData();\n    }\n    return undefined;\n  }\n}\n", "import type { TokenType } from '@/types'\nexport class Token {\n  type: TokenType;\n  value: string;\n  constructor(type: TokenType, value: string) {\n    this.type = type;\n    this.value = value;\n  }\n  error() {\n    return `type:${this.type},value:${this.value}`;\n  }\n}", "import type { ErrorTypes } from '@/types'\nexport class CustomError extends Error {\n  readonly value: ErrorTypes;\n  constructor(value: ErrorTypes) {\n    super(value);\n    this.value = value;\n  }\n}", "import { TokenType } from '@/types';\nimport { Token } from './token';\nimport { CustomError } from './error';\n\nconst emptyData = '';\nconst identifierMap = new Map<string, TokenType>([\n  ['TRUE', TokenType.TRUE],\n  ['FALSE', TokenType.FALSE],\n]);\n\nexport class Scanner {\n  private readonly list: string[];\n  private current = 0;\n  private start = 0;\n  private readonly tokens: Token[] = [];\n  constructor(source: string) {\n    // unicode\n    this.list = [...source];\n  }\n  scan(): Token[] {\n    while (!this.isAtEnd()) {\n      this.start = this.current;\n      this.scanToken();\n    }\n    this.tokens.push(new Token(TokenType.EOF, ''));\n    if (this.tokens.length > 0 && this.tokens[0].type === TokenType.EQUAL) {\n      this.tokens.shift();\n    }\n    return this.tokens;\n  }\n  private peek() {\n    if (this.isAtEnd()) {\n      return emptyData;\n    }\n    return this.list[this.current];\n  }\n  private match(text: string) {\n    if (this.peek() !== text) {\n      return false;\n    }\n    this.next();\n    return true;\n  }\n  private next() {\n    if (this.isAtEnd()) {\n      return emptyData;\n    }\n    return this.list[this.current++];\n  }\n  private isAtEnd() {\n    return this.current >= this.list.length;\n  }\n  private addToken(type: TokenType) {\n    const text = this.list.slice(this.start, this.current).join('');\n    this.tokens.push(new Token(type, text));\n  }\n  private string(end: string) {\n    while (!this.isAtEnd() && this.peek() !== end) {\n      this.next();\n    }\n    if (this.peek() !== end) {\n      throw new CustomError('#VALUE!');\n    } else {\n      this.next();\n    }\n    const text = this.list.slice(this.start + 1, this.current - 1).join('');\n    this.tokens.push(new Token(TokenType.STRING, text));\n  }\n  private number() {\n    while (!this.isAtEnd() && this.isDigit(this.peek())) {\n      this.next();\n    }\n    if (this.match('.')) {\n      while (!this.isAtEnd() && this.isDigit(this.peek())) {\n        this.next();\n      }\n    }\n    this.addToken(TokenType.NUMBER);\n  }\n  private isDigit(char: string) {\n    return char >= '0' && char <= '9';\n  }\n  private identifier() {\n    while (!this.isAtEnd() && this.anyChar(this.peek())) {\n      this.next();\n    }\n    let text = this.list.slice(this.start, this.current).join('');\n    const temp = identifierMap.get(text.toUpperCase());\n    let type: TokenType = TokenType.IDENTIFIER;\n    if (temp) {\n      text = text.toUpperCase();\n      type = temp;\n    }\n    this.tokens.push(new Token(type, text));\n  }\n  private scanToken() {\n    const c = this.next();\n    switch (c) {\n      case '(':\n        this.addToken(TokenType.LEFT_BRACKET);\n        break;\n      case ')':\n        this.addToken(TokenType.RIGHT_BRACKET);\n        break;\n      case ',':\n        this.addToken(TokenType.COMMA);\n        break;\n      case ':':\n        this.addToken(TokenType.COLON);\n        break;\n      case '=':\n        this.addToken(TokenType.EQUAL);\n        break;\n      case '<':\n        if (this.match('>')) {\n          this.addToken(TokenType.NOT_EQUAL);\n        } else if (this.match('=')) {\n          this.addToken(TokenType.LESS_EQUAL);\n        } else {\n          this.addToken(TokenType.LESS);\n        }\n        break;\n      case '>':\n        if (this.match('=')) {\n          this.addToken(TokenType.GREATER_EQUAL);\n        } else {\n          this.addToken(TokenType.GREATER);\n        }\n        break;\n      case '+':\n        this.addToken(TokenType.PLUS);\n        break;\n      case '-':\n        this.addToken(TokenType.MINUS);\n        break;\n      case '*':\n        this.addToken(TokenType.STAR);\n        break;\n      case '/':\n        this.addToken(TokenType.SLASH);\n        break;\n      case '^':\n        this.addToken(TokenType.EXPONENT);\n        break;\n      case '&':\n        this.addToken(TokenType.CONCATENATE);\n        break;\n      case '%':\n        this.addToken(TokenType.PERCENT);\n        break;\n      case '\"':\n        this.string(c);\n        break;\n      case ';':\n        this.addToken(TokenType.SEMICOLON);\n        break;\n      case '{':\n        this.addToken(TokenType.lEFT_BRACE);\n        break;\n      case '}':\n        this.addToken(TokenType.RIGHT_BRACE);\n        break;\n      case ' ':\n        // while (!this.isAtEnd() && this.peek() === ' ') {\n          // this.next();\n        // }\n        // this.addToken(TokenType.EMPTY_CHAR);\n        break;\n      case '\\r':\n      case '\\t':\n      case '\\n':\n        break;\n      default:\n        if (this.isDigit(c)) {\n          this.number();\n        } else if (this.anyChar(c)) {\n          this.identifier();\n        } else {\n          throw new CustomError('#ERROR!');\n        }\n        break;\n    }\n  }\n  private anyChar(c: string) {\n    const text = '(),:=<>+-*/^&%\"{}';\n    return !text.includes(c) && !this.isWhiteSpace(c);\n  }\n  private isWhiteSpace(c: string) {\n    return c === ' ' || c === '\\r' || c === '\\n' || c === '\\t';\n  }\n}\n", "import type { Token } from './token';\nimport type { ReferenceType } from '@/types';\n\nexport interface Visitor {\n  visitBinaryExpression(expr: BinaryExpression): any;\n  visitUnaryExpression(expr: UnaryExpression): any;\n  visitPostUnaryExpression(expr: PostUnaryExpression): any;\n  visitLiteralExpression(expr: LiteralExpression): any;\n  visitCellExpression(expr: CellExpression): any;\n  visitCellRangeExpression(expr: CellRangeExpression): any;\n  visitCallExpression(expr: CallExpression): any;\n  visitErrorExpression(expr: ErrorExpression): any;\n  visitGroupExpression(expr: GroupExpression): any;\n  visitDefineNameExpression(expr: DefineNameExpression): any;\n}\n\nexport interface Expression {\n  accept(visitor: Visitor): any;\n  toString(): string;\n}\n\nexport class BinaryExpression implements Expression {\n  readonly left: Expression;\n  readonly right: Expression;\n  readonly operator: Token;\n  constructor(left: Expression, operator: Token, right: Expression) {\n    this.left = left;\n    this.operator = operator;\n    this.right = right;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitBinaryExpression(this);\n  }\n  toString(): string {\n    return '';\n  }\n}\n\nexport class UnaryExpression implements Expression {\n  readonly right: Expression;\n  readonly operator: Token;\n  constructor(operator: Token, right: Expression) {\n    this.operator = operator;\n    this.right = right;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitUnaryExpression(this);\n  }\n  toString(): string {\n    return '';\n  }\n}\n\nexport class PostUnaryExpression implements Expression {\n  readonly left: Expression;\n  readonly operator: Token;\n  constructor(operator: Token, left: Expression) {\n    this.operator = operator;\n    this.left = left;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitPostUnaryExpression(this);\n  }\n  toString(): string {\n    return '';\n  }\n}\n\nexport class LiteralExpression implements Expression {\n  readonly value: Token;\n  constructor(value: Token) {\n    this.value = value;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitLiteralExpression(this);\n  }\n  toString(): string {\n    return '';\n  }\n}\n\nexport class CellExpression implements Expression {\n  readonly value: Token;\n  readonly sheetName: Token | null;\n  readonly type: ReferenceType;\n  constructor(value: Token, type: ReferenceType, sheetName: Token | null) {\n    this.value = value;\n    this.sheetName = sheetName;\n    this.type = type;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitCellExpression(this);\n  }\n  toString(): string {\n    return '';\n  }\n}\n\nexport class CallExpression implements Expression {\n  readonly name: Token;\n  readonly params: Expression[];\n  constructor(name: Token, params: Expression[]) {\n    this.name = name;\n    this.params = params;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitCallExpression(this);\n  }\n  toString(): string {\n    return '';\n  }\n}\nexport class ErrorExpression implements Expression {\n  readonly value: Token;\n  constructor(value: Token) {\n    this.value = value;\n  }\n  accept(visitor: Visitor): any {\n    return visitor.visitErrorExpression(this);\n  }\n  toString(): string {\n    return '';\n  }\n}\nexport class CellRangeExpression implements Expression {\n  readonly left: Expression;\n  readonly right: Expression;\n  readonly operator: Token;\n  constructor(left: Expression, operator: Token, right: Expression) {\n    this.left = left;\n    this.operator = operator;\n    this.right = right;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitCellRangeExpression(this);\n  }\n  toString(): string {\n    return '';\n  }\n}\n\nexport class GroupExpression implements Expression {\n  readonly value: Expression;\n  constructor(value: Expression) {\n    this.value = value;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitGroupExpression(this);\n  }\n  toString(): string {\n    return '';\n  }\n}\n\nexport class DefineNameExpression implements Expression {\n  readonly value: Token;\n  constructor(value: Token) {\n    this.value = value;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitDefineNameExpression(this);\n  }\n  toString(): string {\n    return '';\n  }\n}\n", "import { TokenType, ErrorTypes } from '@/types';\nimport { Token } from './token';\nimport {\n  DefineNameExpression,\n  Expression,\n  GroupExpression,\n  PostUnaryExpression,\n} from './expression';\nimport {\n  BinaryExpression,\n  UnaryExpression,\n  CellExpression,\n  CallExpression,\n  LiteralExpression,\n  ErrorExpression,\n  CellRangeExpression,\n} from './expression';\nimport { CustomError } from './error';\n\nconst errorSet = new Set<ErrorTypes>([\n  '#ERROR!',\n  '#DIV/0!',\n  '#NULL!',\n  '#NUM!',\n  '#REF!',\n  '#VALUE!',\n  '#N/A',\n  '#NAME?',\n]);\n\nexport class Parser {\n  private readonly tokens: Token[];\n  private current = 0;\n  constructor(tokens: Token[]) {\n    this.tokens = tokens;\n  }\n  parse() {\n    const result: Expression[] = [];\n    while (!this.isAtEnd()) {\n      result.push(this.expression());\n    }\n    return result;\n  }\n  private expression(): Expression {\n    return this.comparison();\n  }\n  private comparison(): Expression {\n    let expr = this.concatenate();\n    while (\n      this.match(\n        TokenType.EQUAL,\n        TokenType.NOT_EQUAL,\n        TokenType.GREATER,\n        TokenType.GREATER_EQUAL,\n        TokenType.LESS,\n        TokenType.LESS_EQUAL,\n      )\n    ) {\n      const operator = this.previous();\n      const right = this.concatenate();\n      expr = new BinaryExpression(expr, operator, right);\n    }\n    return expr;\n  }\n  private concatenate(): Expression {\n    let expr = this.term();\n    while (this.match(TokenType.CONCATENATE)) {\n      const operator = this.previous();\n      const right = this.term();\n      expr = new BinaryExpression(expr, operator, right);\n    }\n    return expr;\n  }\n  private term(): Expression {\n    let expr = this.factor();\n    while (this.match(TokenType.PLUS, TokenType.MINUS)) {\n      const operator = this.previous();\n      const right = this.factor();\n      expr = new BinaryExpression(expr, operator, right);\n    }\n    return expr;\n  }\n  private factor(): Expression {\n    let expr = this.expo();\n    while (this.match(TokenType.SLASH, TokenType.STAR)) {\n      const operator = this.previous();\n      const right = this.expo();\n      expr = new BinaryExpression(expr, operator, right);\n    }\n    return expr;\n  }\n  private expo(): Expression {\n    let expr = this.unary();\n    while (this.match(TokenType.EXPONENT)) {\n      const operator = this.previous();\n      const right = this.unary();\n      expr = new BinaryExpression(expr, operator, right);\n    }\n    return expr;\n  }\n\n  private unary(): Expression {\n    if (this.match(TokenType.PLUS, TokenType.MINUS)) {\n      const operator = this.previous();\n      const right = this.unary();\n      return new UnaryExpression(operator, right);\n    }\n    return this.postUnary();\n  }\n  private postUnary(): Expression {\n    let expr = this.spread();\n    if(this.match(TokenType.PERCENT)) {\n      const operator = this.previous();\n      expr = new PostUnaryExpression(operator, expr)\n    }\n    return expr\n  }\n  private spread(): Expression {\n    let expr = this.call();\n    while (this.match(TokenType.COLON)) {\n      const operator = this.previous();\n      const right = this.call();\n      expr = new CellRangeExpression(expr, operator, right);\n    }\n    return expr;\n  }\n  private call(): Expression {\n    let expr = this.primary();\n    if (this.match(TokenType.LEFT_BRACKET)) {\n      if (expr instanceof DefineNameExpression) {\n        expr = this.finishCall(expr.value);\n      } else {\n        throw new CustomError('#NAME?');\n      }\n    }\n    return expr;\n  }\n\n  private finishCall(name: Token): CallExpression {\n    const params: Expression[] = [];\n    if (!this.check(TokenType.RIGHT_BRACKET)) {\n      do {\n        params.push(this.expression());\n      } while (this.match(TokenType.COMMA));\n    }\n    this.expect(TokenType.RIGHT_BRACKET);\n    let realName: Token = name;\n    if (name.value[0] === '@') {\n      realName = new Token(TokenType.IDENTIFIER, name.value.slice(1));\n    }\n    return new CallExpression(realName, params);\n  }\n  private primary(): Expression {\n    if (\n      this.match(\n        TokenType.NUMBER,\n        TokenType.STRING,\n        TokenType.TRUE,\n        TokenType.FALSE,\n      )\n    ) {\n      return new LiteralExpression(this.previous());\n    }\n\n    if (this.match(TokenType.IDENTIFIER)) {\n      const name = this.previous();\n      const { value, type } = name;\n      const realValue = value.toUpperCase();\n      const newToken = new Token(type, realValue);\n      if (errorSet.has(realValue as ErrorTypes)) {\n        return new ErrorExpression(new Token(type, realValue));\n      }\n      if (realValue && realValue[realValue.length - 1] === '!') {\n        const expr = this.expression();\n        if (expr instanceof CellExpression) {\n          return new CellExpression(expr.value, expr.type, name);\n        }\n        throw new CustomError('#REF!');\n      }\n      if (/^[a-z]+$/i.test(value)) {\n        return new DefineNameExpression(name);\n      }\n      if (\n        /^\\$[A-Z]+\\$\\d+$/.test(realValue) ||\n        /^\\$[A-Z]+$/.test(realValue) ||\n        /^\\$\\d+$/.test(realValue)\n      ) {\n        return new CellExpression(newToken, 'absolute', null);\n      }\n      if (/^\\$[A-Z]+\\d+$/.test(realValue) || /^[A-Z]+\\$\\d+$/.test(realValue)) {\n        return new CellExpression(newToken, 'mixed', null);\n      }\n      if (/^[A-Z]+\\d+$/.test(realValue) || /^[A-Z]+$/.test(realValue)) {\n        return new CellExpression(newToken, 'relative', null);\n      }\n    }\n    if (this.match(TokenType.LEFT_BRACKET)) {\n      const value = this.expression();\n      this.expect(TokenType.RIGHT_BRACKET);\n      return new GroupExpression(value);\n    }\n    // if (this.match(TokenType.EMPTY_CHAR)) {\n      // return this.expression();\n    // }\n    throw new CustomError('#ERROR!');\n  }\n  private match(...types: TokenType[]): boolean {\n    const type = this.peek().type;\n    if (types.includes(type)) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n  private previous(): Token {\n    return this.tokens[this.current - 1];\n  }\n  private check(type: TokenType): boolean {\n    return this.peek().type === type;\n  }\n  private expect(type: TokenType): Token {\n    if (this.check(type)) {\n      this.next();\n      return this.previous();\n    } else {\n      throw new CustomError('#ERROR!');\n    }\n  }\n  private next() {\n    this.current++;\n  }\n  private isAtEnd() {\n    return this.peek().type === TokenType.EOF;\n  }\n  private peek(): Token {\n    if (this.current < this.tokens.length) {\n      return this.tokens[this.current];\n    }\n    return new Token(TokenType.EOF, '');\n  }\n}\n", "import type { TextFormulaType } from \"@/types\";\n\nexport const T = (value: unknown): string => {\n  return typeof value === \"string\" ? value : \"\";\n};\n\nexport const LOWER = (value: string): string => value.toLowerCase();\nexport const CHAR = (value: number): string => String.fromCharCode(value);\nexport const CODE = (value: string): number => value.charCodeAt(0);\nexport const LEN = (value: string): number => value.length;\n\nexport const SPLIT = (value: string, sep: string): string[] => value.split(sep);\nexport const UNICHAR = CHAR;\nexport const UNICODE = CODE;\nexport const UPPER = (value: string): string => value.toUpperCase();\nexport const TRIM = (value: string): string => value.replace(/ +/g, \" \").trim();\n\nconst textFormulas: TextFormulaType = {\n  ASC: null,\n  BAHTTEXT: null,\n  CONCATENATE: null,\n  CLEAN: null,\n  DBCS: null,\n  DOLLAR: null,\n  EXACT: null,\n  FIND: null,\n  FIXED: null,\n  HTML2TEXT: null,\n  LEFT: null,\n  MID: null,\n  NUMBERVALUE: null,\n  PRONETIC: null,\n  PROPER: null,\n  REGEXEXTRACT: null,\n  REGEXMATCH: null,\n  REGREPLACE: null,\n  REPLACE: null,\n  REPT: null,\n  RIGHT: null,\n  SEARCH: null,\n  SPLIT: null,\n  SUBSTITUTE: null,\n  TEXT: null,\n  VALUE: null,\n  CHAR: {\n    func: CHAR,\n    options: {\n      paramsType: \"string\",\n      minParamsCount: 1,\n      maxParamsCount: 1,\n      resultType: \"string\",\n    },\n  },\n  CODE: {\n    func: CODE,\n    options: {\n      paramsType: \"string\",\n      minParamsCount: 1,\n      maxParamsCount: 1,\n      resultType: \"number\",\n    },\n  },\n  UNICHAR: {\n    func: UNICHAR,\n    options: {\n      paramsType: \"string\",\n      minParamsCount: 1,\n      maxParamsCount: 1,\n      resultType: \"string\",\n    },\n  },\n  UNICODE: {\n    func: UNICODE,\n    options: {\n      paramsType: \"string\",\n      minParamsCount: 1,\n      maxParamsCount: 1,\n      resultType: \"number\",\n    },\n  },\n  LEN: {\n    func: LEN,\n    options: {\n      paramsType: \"string\",\n      minParamsCount: 1,\n      maxParamsCount: 1,\n      resultType: \"number\",\n    },\n  },\n  LOWER: {\n    func: LOWER,\n    options: {\n      paramsType: \"string\",\n      minParamsCount: 1,\n      maxParamsCount: 1,\n      resultType: \"string\",\n    },\n  },\n  UPPER: {\n    func: UPPER,\n    options: {\n      paramsType: \"string\",\n      minParamsCount: 1,\n      maxParamsCount: 1,\n      resultType: \"string\",\n    },\n  },\n  TRIM: {\n    func: TRIM,\n    options: {\n      paramsType: \"string\",\n      minParamsCount: 1,\n      maxParamsCount: 1,\n      resultType: \"string\",\n    },\n  },\n  T: {\n    func: T,\n    options: {\n      paramsType: \"any\",\n      minParamsCount: 1,\n      maxParamsCount: 1,\n      resultType: \"string\",\n    },\n  },\n};\n\nexport default textFormulas;\n", "import { parseNumberArray, MAX_PARAMS_COUNT } from \"@/util\";\nimport type { ResultType, MathFormulaType } from \"../types\";\nexport const ABS = (data: number): number => {\n  return Math.abs(data);\n};\nexport const ACOS = (data: number): number => {\n  return Math.acos(data);\n};\n\nexport const ACOSH = (data: number): number => {\n  return Math.log(data + Math.sqrt(data * data - 1));\n};\n\nexport const ACOT = (data: number): number => {\n  return Math.atan(1 / data);\n};\n\nexport const ACOTH = (data: number): number => {\n  return 0.5 * Math.log((data + 1) / (data - 1));\n};\nexport const ASIN = (data: number): number => {\n  return Math.asin(data);\n};\n\nexport const ASINH = (data: number): number => {\n  return Math.log(data + Math.sqrt(data * data + 1));\n};\nexport const ATAN = (data: number): number => Math.atan(data);\nexport const ATANH = (data: number): number =>\n  Math.log((1 + data) / (data + 1)) / 2;\nexport const COS = (data: number): number => Math.cos(data);\nexport const COT = (data: number): number => 1 / Math.tan(data);\nexport const CSC = (data: number): number => 1 / Math.sin(data);\nexport const DECIMAL = (data: string, radix: number): number =>\n  parseInt(data, radix);\nexport const DEGREES = (data: number): number => (data * 180) / Math.PI;\nexport const EXP = (data: number): number => Math.exp(data);\nexport const INT = (data: number): number => Math.floor(data);\nexport const LN10 = (): number => Math.log(10);\nexport const LN2 = (): number => Math.log(2);\nexport const LOG10E = (): number => Math.LOG10E;\nexport const LOG2E = (): number => Math.LOG2E;\nexport const LOG = (data: number, base = 10): number =>\n  Math.log(data) / Math.log(base);\nexport const LOG10 = (data: number): number => Math.log(data) / Math.log(10);\nexport const PI = (): number => Math.PI;\nexport const E = (): number => Math.E;\nexport const SIN = (data: number): number => Math.sin(data);\nexport const SUM = (...rest: Array<ResultType>): number => {\n  const list = parseNumberArray(rest);\n  return list.reduce((sum, cur) => sum + cur, 0);\n};\n\nconst formulas: MathFormulaType = {\n  ABS: {\n    func: ABS,\n    options: {\n      paramsType: \"number\",\n      minParamsCount: 1,\n      maxParamsCount: 1,\n      resultType: \"number\",\n    },\n  },\n  ACOS: {\n    func: ACOS,\n    options: {\n      paramsType: \"number\",\n      minParamsCount: 1,\n      maxParamsCount: 1,\n      resultType: \"number\",\n    },\n  },\n  ACOSH: {\n    func: ACOSH,\n    options: {\n      paramsType: \"number\",\n      minParamsCount: 1,\n      maxParamsCount: 1,\n      resultType: \"number\",\n    },\n  },\n  ACOT: {\n    func: ACOT,\n    options: {\n      paramsType: \"number\",\n      minParamsCount: 1,\n      maxParamsCount: 1,\n      resultType: \"number\",\n    },\n  },\n\n  ACOTH: {\n    func: ACOTH,\n    options: {\n      paramsType: \"number\",\n      minParamsCount: 1,\n      maxParamsCount: 1,\n      resultType: \"number\",\n    },\n  },\n\n  ASIN: {\n    func: ASIN,\n    options: {\n      paramsType: \"number\",\n      minParamsCount: 1,\n      maxParamsCount: 1,\n      resultType: \"number\",\n    },\n  },\n\n  ASINH: {\n    func: ASINH,\n    options: {\n      paramsType: \"number\",\n      minParamsCount: 1,\n      maxParamsCount: 1,\n      resultType: \"number\",\n    },\n  },\n  ATAN: {\n    func: ATAN,\n    options: {\n      paramsType: \"number\",\n      minParamsCount: 1,\n      maxParamsCount: 1,\n      resultType: \"number\",\n    },\n  },\n  ATANH: {\n    func: ATANH,\n    options: {\n      paramsType: \"number\",\n      minParamsCount: 1,\n      maxParamsCount: 1,\n      resultType: \"number\",\n    },\n  },\n  COT: {\n    func: COT,\n    options: {\n      paramsType: \"number\",\n      minParamsCount: 1,\n      maxParamsCount: 1,\n      resultType: \"number\",\n    },\n  },\n  COS: {\n    func: COS,\n    options: {\n      paramsType: \"number\",\n      minParamsCount: 1,\n      maxParamsCount: 1,\n      resultType: \"number\",\n    },\n  },\n  EXP: {\n    func: EXP,\n    options: {\n      paramsType: \"number\",\n      minParamsCount: 1,\n      maxParamsCount: 1,\n      resultType: \"number\",\n    },\n  },\n  INT: {\n    func: INT,\n    options: {\n      paramsType: \"number\",\n      minParamsCount: 1,\n      maxParamsCount: 1,\n      resultType: \"number\",\n    },\n  },\n  PI: {\n    func: PI,\n    options: {\n      paramsType: \"any\",\n      minParamsCount: 0,\n      maxParamsCount: 0,\n      resultType: \"number\",\n    },\n  },\n  E: {\n    func: INT,\n    options: {\n      paramsType: \"any\",\n      minParamsCount: 0,\n      maxParamsCount: 0,\n      resultType: \"number\",\n    },\n  },\n  SIN: {\n    func: SIN,\n    options: {\n      paramsType: \"number\",\n      minParamsCount: 1,\n      maxParamsCount: 1,\n      resultType: \"number\",\n    },\n  },\n  SUM: {\n    func: SUM,\n    options: {\n      paramsType: \"any\",\n      minParamsCount: 1,\n      maxParamsCount: MAX_PARAMS_COUNT,\n      resultType: \"number\",\n    },\n  },\n};\n\nexport default formulas;\n", "import textFormulas from \"./text\";\nimport mathFormulas from \"./math\";\nimport type { FormulaType } from \"@/types\";\n\nexport type FormulasKeys = \"SUM\" | \"ABS\" | \"T\" | \"LOWER\";\n\nconst formulas: FormulaType = {\n  ...textFormulas,\n  ...mathFormulas,\n};\nexport default formulas;", "import { Range, parseReference, parseCell } from '@/util';\nimport {\n  TokenType,\n  FunctionMap,\n  CellDataMap,\n  ErrorTypes,\n  VariableMap,\n} from '@/types';\nimport type {\n  Visitor,\n  Expression,\n  CellRangeExpression,\n  PostUnaryExpression,\n} from './expression';\nimport {\n  BinaryExpression,\n  UnaryExpression,\n  CellExpression,\n  CallExpression,\n  LiteralExpression,\n  ErrorExpression,\n  DefineNameExpression,\n  GroupExpression,\n} from './expression';\nimport { CustomError } from './error';\nimport { Token } from './token';\n\nexport class Interpreter implements Visitor {\n  private readonly expressions: Expression[];\n  private readonly functionMap: FunctionMap;\n  private readonly cellDataMap: CellDataMap;\n  private readonly variableMap: VariableMap;\n  constructor(\n    expressions: Expression[],\n    functionMap: FunctionMap,\n    cellDataMap: CellDataMap,\n    variableMap: VariableMap,\n  ) {\n    this.expressions = expressions;\n    this.functionMap = functionMap;\n    this.cellDataMap = cellDataMap;\n    this.variableMap = variableMap;\n  }\n  interpret(): any {\n    const result: any[] = [];\n    for (const item of this.expressions) {\n      result.push(this.evaluate(item));\n    }\n    if (result.length === 1) {\n      return this.getRangeCellValue(result[0]);\n    } else {\n      throw new CustomError('#ERROR!');\n    }\n  }\n  private getRangeCellValue(value: any): any {\n    if (value instanceof Range) {\n      if (value.colCount === value.rowCount && value.colCount === 1) {\n        return this.cellDataMap.get(value.row, value.col, value.sheetId);\n      } else {\n        throw new CustomError('#REF!');\n      }\n    }\n    return value;\n  }\n  private checkNumber(value: any) {\n    if (typeof value !== 'number') {\n      throw new CustomError('#VALUE!');\n    }\n  }\n  visitBinaryExpression(data: BinaryExpression): any {\n    let left = this.evaluate(data.left);\n    let right = this.evaluate(data.right);\n    left = this.getRangeCellValue(left);\n    right = this.getRangeCellValue(right);\n    switch (data.operator.type) {\n      case TokenType.MINUS:\n        this.checkNumber(left);\n        this.checkNumber(right);\n        return left - right;\n      case TokenType.PLUS:\n        this.checkNumber(left);\n        this.checkNumber(right);\n        return left + right;\n      case TokenType.SLASH:\n        this.checkNumber(left);\n        this.checkNumber(right);\n        if (right === 0) {\n          throw new CustomError('#DIV/0!');\n        }\n        return left / right;\n      case TokenType.STAR:\n        this.checkNumber(left);\n        this.checkNumber(right);\n        return left * right;\n      case TokenType.EXPONENT:\n        this.checkNumber(left);\n        this.checkNumber(right);\n        return Math.pow(left, right);\n      case TokenType.EQUAL:\n        return left === right;\n      case TokenType.NOT_EQUAL:\n        return left !== right;\n      case TokenType.GREATER:\n        return left > right;\n      case TokenType.GREATER_EQUAL:\n        return left >= right;\n      case TokenType.LESS:\n        return left < right;\n      case TokenType.LESS_EQUAL:\n        return left <= right;\n      case TokenType.CONCATENATE:\n        return `${left}${right}`;\n      default:\n        throw new CustomError('#VALUE!');\n    }\n  }\n  visitCallExpression(expr: CallExpression) {\n    const callee: any = this.functionMap.get(expr.name.value);\n    if (callee && typeof callee === 'function') {\n      const params: any[] = [];\n      for (const item of expr.params) {\n        const t = this.evaluate(item);\n        if (t instanceof Range) {\n          const { row, col, rowCount, colCount, sheetId } = t;\n          for (let r = row, endRow = row + rowCount; r < endRow; r++) {\n            for (let c = col, endCol = col + colCount; c < endCol; c++) {\n              params.push(this.cellDataMap.get(r, c, sheetId));\n            }\n          }\n        } else {\n          params.push(t);\n        }\n      }\n      return callee(...params);\n    }\n    throw new CustomError('#NAME?');\n  }\n  visitCellExpression(data: CellExpression) {\n    const t = parseCell(data.value.value);\n    if (t === null) {\n      throw new CustomError('#REF!');\n    }\n    return t;\n  }\n  visitErrorExpression(data: ErrorExpression) {\n    throw new CustomError(data.value.value as ErrorTypes);\n  }\n  visitLiteralExpression(expr: LiteralExpression) {\n    const { type, value } = expr.value;\n    switch (type) {\n      case TokenType.STRING:\n        return value;\n      case TokenType.NUMBER:\n        return parseFloat(value);\n      case TokenType.TRUE:\n        return true;\n      case TokenType.FALSE:\n        return false;\n      default:\n        throw new CustomError('#ERROR!');\n    }\n  }\n  visitDefineNameExpression(expr: DefineNameExpression) {\n    if (!this.variableMap.has(expr.value.value)) {\n      throw new CustomError('#NAME?');\n    }\n    const result = this.variableMap.get(expr.value.value);\n    return result;\n  }\n  visitUnaryExpression(data: UnaryExpression): any {\n    const value = this.evaluate(data.right);\n    switch (data.operator.type) {\n      case TokenType.MINUS:\n        return -value;\n      case TokenType.PLUS:\n        return value;\n      default:\n        throw new CustomError('#VALUE!');\n    }\n  }\n  private convertToCellExpression(expr: Expression): CellExpression | null {\n    if (expr instanceof CellExpression) {\n      return expr;\n    }\n    if (expr instanceof DefineNameExpression) {\n      return new CellExpression(\n        new Token(TokenType.IDENTIFIER, expr.value.value.toUpperCase()),\n        'relative',\n        null,\n      );\n    }\n    if (expr instanceof LiteralExpression) {\n      if (\n        expr.value.type === TokenType.NUMBER &&\n        /^\\d+$/.test(expr.value.value)\n      ) {\n        return new CellExpression(\n          new Token(TokenType.IDENTIFIER, expr.value.value),\n          'relative',\n          null,\n        );\n      }\n    }\n    return null;\n  }\n  visitCellRangeExpression(expr: CellRangeExpression): any {\n    switch (expr.operator.type) {\n      case TokenType.COLON: {\n        const left = this.convertToCellExpression(expr.left);\n        const right = this.convertToCellExpression(expr.right);\n        if (left !== null && right !== null) {\n          const result = parseReference(\n            `${left.value.value}:${right.value.value}`,\n          );\n          if (result === null) {\n            throw new CustomError('#REF!');\n          }\n          return result;\n        } else {\n          throw new CustomError('#REF!');\n        }\n        break;\n      }\n      default:\n        throw new CustomError('#REF!');\n    }\n  }\n  visitGroupExpression(expr: GroupExpression): any {\n    return this.evaluate(expr.value);\n  }\n  visitPostUnaryExpression(expr: PostUnaryExpression): any {\n    const value = this.evaluate(expr.left);\n    switch (expr.operator.type) {\n      case TokenType.PERCENT:\n        this.checkNumber(value);\n        return value * 0.01;\n      default:\n        throw new CustomError('#VALUE!');\n    }\n  }\n  private evaluate(expr: Expression) {\n    return expr.accept(this);\n  }\n}\n", "import { Scanner } from './scanner';\nimport { Parser } from './parser';\nimport formulas from '../formula';\nimport { Interpreter } from './interpreter';\nimport {\n  FunctionMap,\n  CellDataMap,\n  InterpreterResult,\n  FormulaKeys,\n  VariableMap,\n} from '@/types';\nimport { CustomError } from './error';\nimport { isNumber, isString } from '@/util';\n\nexport function parseFormula(\n  source: string,\n  cellData: CellDataMap = new CellDataMapImpl(),\n  variableMap: VariableMap = new VariableMapImpl(),\n): InterpreterResult {\n  const func = new FunctionMapImpl();\n  const list = Object.keys(formulas) as Array<FormulaKeys>;\n  for (const key of list) {\n    func.set(key, (...args: any[]) => {\n      const item = formulas[key];\n      if (item === null) {\n        throw new CustomError('#NAME?');\n      }\n      const { func, options } = item;\n      const { paramsType, minParamsCount, maxParamsCount, resultType } =\n        options;\n      if (paramsType === 'number') {\n        if (!args.every(isNumber)) {\n          throw new CustomError('#VALUE!');\n        }\n      } else if (paramsType === 'string') {\n        if (!args.every(isString)) {\n          throw new CustomError('#VALUE!');\n        }\n      }\n      if (args.length > maxParamsCount || args.length < minParamsCount) {\n        throw new CustomError('#VALUE!');\n      }\n      const result = func(...args);\n      if (resultType === 'number') {\n        if (!isNumber(result)) {\n          throw new CustomError('#NUM!');\n        }\n      } else if (resultType === 'string') {\n        if (!isString(result)) {\n          throw new CustomError('#NUM!');\n        }\n      }\n      return result;\n    });\n  }\n  return interpret(source, func, cellData, variableMap);\n}\n\nfunction interpret(\n  source: string,\n  func: FunctionMap,\n  cellData: CellDataMap,\n  variableMap: VariableMap,\n): InterpreterResult {\n  try {\n    const list = new Scanner(source).scan();\n    const expressions = new Parser(list).parse();\n    const result = new Interpreter(\n      expressions,\n      func,\n      cellData,\n      variableMap,\n    ).interpret();\n    return {\n      result: result,\n      error: null,\n    };\n  } catch (error) {\n    if (error instanceof CustomError) {\n      return {\n        result: null,\n        error: error.value,\n      };\n    }\n  }\n  return {\n    result: null,\n    error: '#ERROR!',\n  };\n}\n\nexport class FunctionMapImpl implements FunctionMap {\n  private readonly map = new Map<string, any>();\n  set(name: string, value: (...list: any[]) => any) {\n    this.map.set(name.toLowerCase(), value);\n  }\n  get(name: string) {\n    return this.map.get(name.toLowerCase());\n  }\n}\n\nexport class CellDataMapImpl implements CellDataMap {\n  private readonly map = new Map<string, any>();\n  private getKey(row: number, col: number, sheetId: string = '') {\n    const key = `${row}_${col}_${sheetId}`;\n    return key;\n  }\n  set(row: number, col: number, sheetId: string, value: any): void {\n    const key = this.getKey(row, col, sheetId);\n    this.map.set(key, value);\n  }\n  get(row: number, col: number, sheetId: string = ''): any {\n    const key = this.getKey(row, col, sheetId);\n    return this.map.get(key);\n  }\n}\n\nexport class VariableMapImpl implements VariableMap {\n  private readonly map = new Map<string, any>();\n  set(name: string, value: any): void {\n    this.map.set(name, value);\n  }\n  get(name: string): any {\n    return this.map.get(name);\n  }\n  has(name: string): boolean {\n    return this.map.has(name);\n  }\n}\n", "import { isEmpty, get, setWith } from '@/lodash';\nimport {\n  StyleType,\n  QueryCellResult,\n  WorkBookJSON,\n  WorksheetType,\n  Coordinate,\n  ModelCellType,\n  IModel,\n  ResultType,\n} from '@/types';\nimport {\n  getDefaultSheetInfo,\n  assert,\n  modelLog,\n  Range,\n  getListMaxNum,\n  STYLE_ID_PREFIX,\n  intToColumnName,\n  DEFAULT_ROW_COUNT,\n  DEFAULT_COL_COUNT,\n} from '@/util';\nimport { parseFormula } from '@/parser';\n\n// const XLSX_MAX_COL_COUNT = 16384; // XFD\n// const XLSX_MAX_ROW_COUNT = 1048575; // XFD\n\nexport class Model implements IModel {\n  private currentSheetId = '';\n  private workbook: WorkBookJSON['workbook'] = [];\n  private worksheets: WorkBookJSON['worksheets'] = {};\n  private styles: WorkBookJSON['styles'] = {};\n  private mergeCells: WorkBookJSON['mergeCells'] = [];\n  getSheetList(): WorkBookJSON['workbook'] {\n    return this.workbook;\n  }\n  setActiveCell(row: number, col: number): void {\n    const index = this.workbook.findIndex(\n      (v) => v.sheetId === this.currentSheetId,\n    );\n    if (index >= 0) {\n      const tempList = Array.from(this.workbook);\n      const activeCell = `${intToColumnName(col)}${row + 1}`;\n      tempList.splice(index, 1, { ...this.workbook[index], activeCell });\n      this.workbook = tempList;\n    }\n  }\n  addSheet(): void {\n    const item = getDefaultSheetInfo(this.workbook);\n    this.workbook = [\n      ...this.workbook,\n      { ...item, colCount: DEFAULT_COL_COUNT, rowCount: DEFAULT_ROW_COUNT },\n    ];\n    this.currentSheetId = item.sheetId;\n  }\n  getSheetInfo(id: string = this.currentSheetId): WorksheetType {\n    const item = this.workbook.find((item) => item.sheetId === id);\n    assert(item !== undefined);\n    return item;\n  }\n  setCurrentSheetId(id: string): void {\n    this.currentSheetId = id;\n  }\n  getCurrentSheetId(): string {\n    return this.currentSheetId;\n  }\n  getCellsContent(): Array<Coordinate> {\n    const sheetData = this.worksheets[this.currentSheetId];\n    if (isEmpty(sheetData)) {\n      return [];\n    }\n    const result = [];\n    const rowKeys = Object.keys(sheetData);\n    for (const rowKey of rowKeys) {\n      const colKeys = Object.keys(sheetData[rowKey]);\n      for (const colKey of colKeys) {\n        const row = Number(rowKey);\n        const col = Number(colKey);\n        result.push({\n          row,\n          col,\n        });\n      }\n    }\n    return result;\n  }\n  fromJSON(json: WorkBookJSON): void {\n    modelLog('fromJSON', json);\n    const {\n      worksheets = {},\n      workbook = [],\n      styles = {},\n      mergeCells = [],\n    } = json;\n    this.worksheets = worksheets;\n    this.workbook = workbook;\n    this.styles = styles;\n    this.currentSheetId = workbook[0].sheetId || this.currentSheetId;\n    this.mergeCells = mergeCells;\n    this.computeAllCell();\n  }\n  toJSON(): WorkBookJSON {\n    const { worksheets, styles, workbook, mergeCells } = this;\n    return {\n      workbook,\n      styles,\n      worksheets,\n      mergeCells,\n    };\n  }\n\n  private setCellValue(value: ResultType, range: Range): void {\n    const { row, col } = range;\n    const configPath = `worksheets[${\n      range.sheetId || this.currentSheetId\n    }][${row}][${col}]`;\n    setWith(this, `${configPath}.value`, value);\n  }\n  private setCellFormula(formula: string, range: Range): void {\n    const { row, col } = range;\n    const configPath = `worksheets[${\n      range.sheetId || this.currentSheetId\n    }][${row}][${col}]`;\n    setWith(this, `${configPath}.formula`, formula);\n  }\n  setCellValues(value: string, ranges: Range[]): void {\n    const [range] = ranges;\n    if (value.startsWith('=')) {\n      this.setCellFormula(value, range);\n    } else {\n      this.setCellFormula('', range);\n      this.setCellValue(value, range);\n    }\n    this.computeAllCell();\n  }\n  setCellStyle(style: Partial<StyleType>, ranges: Range[]): void {\n    const [range] = ranges;\n    const { row, col, rowCount, colCount } = range;\n    for (let r = row, endRow = row + rowCount; r < endRow; r++) {\n      for (let c = col, endCol = col + colCount; c < endCol; c++) {\n        const stylePath = `worksheets[${this.currentSheetId}][${r}][${c}].style`;\n        const oldStyleId = get<string>(this, stylePath, '');\n        if (oldStyleId) {\n          const oldStyle = this.styles[oldStyleId];\n          if (isEmpty(oldStyle)) {\n            this.styles[oldStyleId] = { ...style };\n          } else {\n            this.styles[oldStyleId] = {\n              ...oldStyle,\n              ...style,\n            };\n          }\n        } else {\n          const styleNum = getListMaxNum(\n            Object.keys(this.styles),\n            STYLE_ID_PREFIX,\n          );\n          const styleId = `${STYLE_ID_PREFIX}${styleNum + 1}`;\n          this.styles[styleId] = { ...style };\n          setWith(this, stylePath, styleId);\n        }\n      }\n    }\n  }\n  queryCell = (\n    row: number,\n    col: number,\n    sheetId: string = '',\n  ): QueryCellResult => {\n    const realSheetId = sheetId || this.currentSheetId;\n    const cellData = get<ModelCellType>(\n      this,\n      `worksheets[${realSheetId}][${row}][${col}]`,\n      {},\n    );\n    const { style } = cellData;\n    let temp = undefined;\n    if (style && this.styles[style]) {\n      temp = this.styles[style];\n    }\n    return { ...cellData, style: temp };\n  };\n  private computeAllCell() {\n    const sheetData = this.worksheets[this.currentSheetId];\n    if (isEmpty(sheetData)) {\n      return [];\n    }\n    const rowKeys = Object.keys(sheetData);\n    for (const rowKey of rowKeys) {\n      const colKeys = Object.keys(sheetData[rowKey]);\n      for (const colKey of colKeys) {\n        const temp = sheetData[rowKey][colKey];\n        if (temp?.formula) {\n          temp.value = this.parseFormula(temp.formula);\n        }\n      }\n    }\n  }\n  private parseFormula(formula: string) {\n    const result = parseFormula(formula, {\n      get: (row: number, col: number, sheetId: string) => {\n        const temp = this.queryCell(row, col, sheetId);\n        return temp.value;\n      },\n      set: () => {},\n    });\n    return result.error ? result.error : result.result;\n  }\n  addRow(rowIndex: number, count: number): void {\n    const sheetData = this.worksheets[this.currentSheetId];\n    if (isEmpty(sheetData)) {\n      return;\n    }\n    const rowKeys = Object.keys(sheetData);\n    for (let i = rowKeys.length - 1; i >= 0; i--) {\n      const rowKey = rowKeys[i];\n      const item = Number(rowKeys[i]);\n      if (item < rowIndex) {\n        continue;\n      }\n      const key = String(item + count);\n      sheetData[key] = {\n        ...sheetData[rowKey],\n      };\n      sheetData[rowKey] = {};\n    }\n    const sheetInfo = this.getSheetInfo();\n    sheetInfo.rowCount += count;\n  }\n  addCol(colIndex: number, count: number): void {\n    const sheetData = this.worksheets[this.currentSheetId];\n    if (isEmpty(sheetData)) {\n      return;\n    }\n    const sheetInfo = this.getSheetInfo();\n\n    const rowKeys = Object.keys(sheetData);\n    for (const rowKey of rowKeys) {\n      const colKeys = Object.keys(sheetData[rowKey]);\n      for (let i = colKeys.length - 1; i >= 0; i--) {\n        const colKey = colKeys[i];\n        const col = Number(colKey);\n        if (col < colIndex) {\n          continue;\n        }\n        const key = String(col + count);\n        sheetData[rowKey][key] = {\n          ...sheetData[rowKey][colKey],\n        };\n        sheetData[rowKey][colKey] = {};\n      }\n    }\n\n    sheetInfo.colCount += count;\n  }\n}\n", "import { WorkBookJSON } from '@/types';\nimport { DEFAULT_ROW_COUNT, DEFAULT_COL_COUNT } from '@/util';\n\nexport const MOCK_MODEL: WorkBookJSON = {\n  workbook: [\n    {\n      sheetId: 'Sheet1',\n      name: 'Sheet1',\n      activeCell: 'B2',\n      colCount: DEFAULT_COL_COUNT,\n      rowCount: DEFAULT_ROW_COUNT,\n    },\n    {\n      sheetId: '2',\n      name: 'test',\n      colCount: DEFAULT_COL_COUNT,\n      rowCount: DEFAULT_ROW_COUNT,\n      activeCell: 'F5',\n    },\n  ],\n  worksheets: {\n    Sheet1: {\n      '0': {\n        '0': {\n          value: '',\n          formula: '=SUM(1, SUM(1,2))',\n          style: '1',\n        },\n        '1': {\n          value: '',\n          formula: '=SUM(1,4)',\n        },\n        '2': {\n          value: '',\n          formula: '=SUM(A1)',\n          style: '2',\n        },\n        '3': {\n          value: '\u8D85\u5927\u5B57',\n          style: '3',\n        },\n        4: {\n          value: '\u8FD9\u662F\u4E00\u6BB5\u975E\u5E38\u957F\u7684\u6587\u6848\uFF0C\u9700\u8981\u6362\u884C\u5C55\u793A',\n          style: '4',\n        },\n      },\n      '3': {\n        0: {\n          style: 'style1',\n        },\n        1: {\n          style: 'style1',\n        },\n        2: {\n          style: 'style1',\n        },\n        3: {\n          style: 'style1',\n        },\n      },\n      '4': {\n        0: {\n          style: 'style1',\n        },\n        1: {\n          style: 'style1',\n        },\n        2: {\n          style: 'style1',\n        },\n        3: {\n          style: 'style1',\n        },\n      },\n    },\n  },\n  styles: {\n    '1': {\n      fontColor: '#ff0000',\n    },\n    '2': {},\n    style1: {\n      fillColor: 'red',\n    },\n    '3': {\n      // fontSize: 36,\n    },\n    4: {\n      // wrapText: EWrap.AUTO_WRAP,\n    },\n  },\n  mergeCells: ['D2:E3'],\n};\n", "import { dpr, resizeCanvas, npx } from \"@/util\";\nimport {\n  EventType,\n  IWindowSize,\n  ContentView,\n} from \"@/types\";\n\nexport class MainCanvas implements ContentView {\n  private ctx: CanvasRenderingContext2D;\n  private content: ContentView;\n  private selection: ContentView;\n  private canvas: HTMLCanvasElement;\n  private canvasSize: IWindowSize = {\n    width: 0,\n    height: 0,\n  };\n  constructor(\n    canvas: HTMLCanvasElement,\n    content: ContentView,\n    selection: ContentView\n  ) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext(\"2d\")!;\n    this.content = content;\n    this.selection = selection;\n    const size = dpr();\n    this.ctx.scale(size, size);\n  }\n  getCanvas() {\n    return this.canvas;\n  }\n  resize(width: number, height: number) {\n    this.canvasSize = {\n      width,\n      height,\n    };\n    resizeCanvas(this.canvas, width, height);\n    this.content.resize(width, height);\n    this.selection.resize(width, height);\n  }\n  private clear() {\n    this.ctx.clearRect(\n      0,\n      0,\n      npx(this.canvasSize.width),\n      npx(this.canvasSize.height)\n    );\n  }\n  render = (params: EventType): void => {\n    if (params.changeSet.size === 0) {\n      return;\n    }\n    this.content.render(params);\n    this.selection.render(params);\n    this.clear();\n    this.ctx.drawImage(this.content.getCanvas(), 0, 0);\n    this.ctx.drawImage(this.selection.getCanvas(), 0, 0);\n  };\n}\n", "import { StoreValue, IController } from '@/types';\nimport { FORMULA_EDITOR_ID, DOUBLE_CLICK_TIME, SCROLL_SIZE } from '@/util';\nimport { debounce } from '@/lodash';\n\ninterface IHitInfo {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n  row: number;\n  col: number;\n  pageX: number;\n  pageY: number;\n}\n\nfunction getHitInfo(\n  event: MouseEvent,\n  controller: IController,\n  canvasSize: DOMRect,\n): IHitInfo | null {\n  const scroll = controller.getScroll();\n  const sheetInfo = controller.getSheetInfo();\n  const headerSize = controller.getHeaderSize();\n  const { pageX, pageY } = event;\n  const x = pageX - canvasSize.left;\n  const y = pageY - canvasSize.top;\n  let resultX = headerSize.width;\n  let resultY = headerSize.height;\n  let row = scroll.row;\n  let col = scroll.col;\n  while (resultX + controller.getColWidth(col) <= x) {\n    resultX += controller.getColWidth(col);\n    col++;\n  }\n  while (resultY + controller.getRowHeight(row) <= y) {\n    resultY += controller.getRowHeight(row);\n    row++;\n  }\n  if (row >= sheetInfo.rowCount || col >= sheetInfo.colCount) {\n    return null;\n  }\n  const cellSize = controller.getCellSize(row, col);\n  return { ...cellSize, row, col, pageY, pageX, x, y };\n}\n\nconst BOTTOM_BUFF = 100;\n\nexport function registerEvents(\n  stateValue: StoreValue,\n  controller: IController,\n  canvas: HTMLCanvasElement,\n  resizeWindow: () => void,\n): void {\n  let lastTimeStamp = 0;\n  const inputDom = document.querySelector<HTMLInputElement>(\n    `#${FORMULA_EDITOR_ID}`,\n  )!;\n  window.addEventListener('resize', () => {\n    resizeWindow();\n  });\n  window.addEventListener('keydown', function (event) {\n    if (event.key === 'Enter') {\n      controller.setActiveCell(\n        stateValue.activeCell.row + 1,\n        stateValue.activeCell.col,\n        1,\n        1,\n      );\n    } else if (event.key === 'Tab') {\n      controller.setActiveCell(\n        stateValue.activeCell.row,\n        stateValue.activeCell.col + 1,\n        1,\n        1,\n      );\n    }\n    if (inputDom === event.target) {\n      return;\n    }\n    stateValue.isCellEditing = true;\n    inputDom.focus();\n  });\n\n  document.body.addEventListener(\n    'wheel',\n    debounce((event) => {\n      if (event.target !== canvas) {\n        return;\n      }\n      const headerSize = controller.getHeaderSize();\n      const canvasRect = canvas.getBoundingClientRect();\n      const sheetInfo = controller.getSheetInfo();\n      const viewSize = controller.getViewSize();\n      const oldScroll = controller.getScroll();\n\n      const maxHeight = viewSize.height - canvasRect.height + BOTTOM_BUFF;\n      const maxWidth = viewSize.width - canvasRect.width + BOTTOM_BUFF;\n\n      const maxScrollHeight =\n        canvasRect.height - headerSize.height - SCROLL_SIZE * 1.5;\n      const maxScrollWidth =\n        canvasRect.width - headerSize.width - SCROLL_SIZE * 1.5;\n      let top = oldScroll.top + event.deltaY;\n      if (top < 0) {\n        top = 0;\n      } else if (top > maxHeight) {\n        top = maxHeight;\n      }\n\n      let left = oldScroll.left + event.deltaX;\n      if (left < 0) {\n        left = 0;\n      } else if (left > maxWidth) {\n        left = maxWidth;\n      }\n\n      let resultX = 0;\n      let resultY = 0;\n      let r = 0;\n      let c = 0;\n      while (resultX < left && c < sheetInfo.colCount) {\n        resultX += controller.getColWidth(c);\n        c++;\n      }\n      while (resultY < top && r < sheetInfo.rowCount) {\n        resultY += controller.getRowHeight(r);\n        r++;\n      }\n\n      const scrollTop = (top * maxScrollHeight) / maxHeight;\n      const scrollLeft = (left * maxScrollWidth) / maxWidth;\n      controller.setScroll({\n        top: top,\n        left: left,\n        row: r,\n        col: c,\n        scrollLeft,\n        scrollTop,\n      });\n    }),\n  );\n\n  canvas.addEventListener('mousedown', (event) => {\n    const headerSize = controller.getHeaderSize();\n    stateValue.contextMenuPosition = undefined;\n    const canvasRect = canvas.getBoundingClientRect();\n    const { timeStamp, clientX, clientY } = event;\n    const x = clientX - canvasRect.left;\n    const y = clientY - canvasRect.top;\n    const position = getHitInfo(event, controller, canvasRect);\n    if (!position) {\n      return;\n    }\n    if (headerSize.width > x && headerSize.height > y) {\n      controller.selectAll(0, 0);\n      return;\n    }\n    if (headerSize.width > x && headerSize.height <= y) {\n      controller.selectRow(position.row, position.col);\n      return;\n    }\n    if (headerSize.width <= x && headerSize.height > y) {\n      controller.selectCol(position.row, position.col);\n      return;\n    }\n    const activeCell = controller.getActiveCell();\n    const check =\n      activeCell.row >= 0 &&\n      activeCell.row === position.row &&\n      activeCell.col === position.col;\n    if (!check) {\n      controller.setActiveCell(position.row, position.col, 1, 1);\n    }\n    const delay = timeStamp - lastTimeStamp;\n    if (delay < DOUBLE_CLICK_TIME) {\n      stateValue.isCellEditing = true;\n    }\n    lastTimeStamp = timeStamp;\n  });\n\n  canvas.addEventListener('mousemove', (event) => {\n    const headerSize = controller.getHeaderSize();\n    const rect = canvas.getBoundingClientRect();\n    const { clientX, clientY } = event;\n    const x = clientX - rect.left;\n    const y = clientY - rect.top;\n    const checkMove =\n      x > headerSize.width && y > headerSize.height && event.buttons === 1;\n    if (checkMove) {\n      const position = getHitInfo(event, controller, rect);\n      if (!position) {\n        return;\n      }\n      controller.updateSelection(position.row, position.col);\n    }\n  });\n  canvas.addEventListener('contextmenu', (event) => {\n    event.preventDefault();\n    stateValue.contextMenuPosition = {\n      top: event.clientY,\n      left: event.clientX,\n      width: 100,\n      height: 100,\n    };\n    return false;\n  });\n}\n", "import {\n  npx,\n  DEFAULT_FONT_CONFIG,\n  isNumber,\n  DEFAULT_FONT_SIZE,\n  DEFAULT_FONT_COLOR,\n  makeFont,\n  assert,\n  ERROR_SET,\n  ERROR_FORMULA_COLOR,\n  isTestEnv,\n} from '@/util';\nimport { isEmpty } from '@/lodash';\nimport { CellInfo, ErrorTypes, EWrap, Point } from '@/types';\n\nexport const getStyle = (\n  key: 'lineHeight' | 'letterSpacing',\n  dom: HTMLElement = document.body,\n): number => {\n  if (isTestEnv()) {\n    return 20;\n  }\n  return parseInt(window.getComputedStyle(dom)[key]);\n};\n\nconst measureTextMap = new Map<string, TextMetrics>();\n\nexport function measureText(ctx: CanvasRenderingContext2D, char: string) {\n  const mapKey = `${char}__${ctx.font}`;\n  let temp = measureTextMap.get(mapKey);\n  if (!temp) {\n    const metrics = ctx.measureText(char);\n    measureTextMap.set(mapKey, metrics);\n    temp = metrics;\n  }\n  return temp;\n}\n\nexport function fillRect(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n): void {\n  ctx.fillRect(npx(x), npx(y), npx(width), npx(height));\n}\nexport function strokeRect(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n): void {\n  ctx.strokeRect(npx(x), npx(y), npx(width), npx(height));\n}\n\nfunction getFontSizeHeight(ctx: CanvasRenderingContext2D, char: string) {\n  const { actualBoundingBoxDescent, actualBoundingBoxAscent } = measureText(\n    ctx,\n    char,\n  );\n  const result = actualBoundingBoxDescent + actualBoundingBoxAscent;\n  return Math.ceil(result);\n}\n\nexport function fillText(\n  ctx: CanvasRenderingContext2D,\n  text: string,\n  x: number,\n  y: number,\n) {\n  ctx.fillText(text, npx(x), npx(y));\n}\n\nexport function fillWrapText(\n  ctx: CanvasRenderingContext2D,\n  text: string,\n  x: number,\n  y: number,\n  cellWidth: number,\n  lineHeight: number,\n): number {\n  let line = '';\n  const textList = text.split('');\n  let testWidth = 0;\n  const realCellWidth = cellWidth * 2;\n  let wrapHeight = lineHeight;\n  y += lineHeight / 2;\n  for (let i = 0; i < textList.length; i++) {\n    const char = textList[i];\n    const { width } = measureText(ctx, char);\n    if (testWidth + width > realCellWidth) {\n      fillText(ctx, line, x, y);\n      line = char;\n      y += lineHeight;\n      testWidth = width;\n      wrapHeight += lineHeight;\n    } else {\n      testWidth += width;\n      line = line + char;\n    }\n  }\n  if (line) {\n    fillText(ctx, line, x, y);\n  }\n  return wrapHeight;\n}\n\nexport function fillTexts(\n  ctx: CanvasRenderingContext2D,\n  text: string,\n  x: number,\n  y: number,\n  cellWidth: number,\n) {\n  let line = '';\n  const textList = text.split('');\n  let testWidth = 0;\n  const realCellWidth = cellWidth * 2;\n  let textWidth = 0;\n  for (let i = 0; i < textList.length; i++) {\n    const char = textList[i];\n    const { width } = measureText(ctx, char);\n    if (testWidth + width > realCellWidth) {\n      if (i === 0) {\n        textWidth = width;\n        line = char;\n      }\n      break;\n    } else {\n      testWidth += width;\n      line = line + char;\n    }\n  }\n  fillText(ctx, line, x, y);\n  return textWidth;\n}\n\ninterface IRenderCellResult {\n  wrapHeight?: number;\n  fontSizeHeight?: number;\n  textWidth?: number;\n}\n\nexport function renderCell(\n  ctx: CanvasRenderingContext2D,\n  cellInfo: CellInfo & {\n    left: number;\n    top: number;\n    width: number;\n    height: number;\n  },\n  canvasLineHeight: number,\n): IRenderCellResult {\n  const { style, value, left, top, width, height } = cellInfo;\n  const isNum = isNumber(value);\n  let font = DEFAULT_FONT_CONFIG;\n  let fillStyle = DEFAULT_FONT_COLOR;\n  if (!isEmpty(style)) {\n    const fontSize = npx(style?.fontSize ? style.fontSize : DEFAULT_FONT_SIZE);\n    font = makeFont(\n      style?.isItalic ? 'italic' : 'normal',\n      style?.isBold ? 'bold' : '500',\n      fontSize,\n      style?.fontFamily,\n    );\n    fillStyle = style?.fontColor || DEFAULT_FONT_COLOR;\n    if (style?.fillColor) {\n      ctx.fillStyle = style?.fillColor;\n      fillRect(ctx, left, top, width, height);\n    }\n  }\n  let text = String(value);\n  if (ERROR_SET.has(text as ErrorTypes)) {\n    fillStyle = ERROR_FORMULA_COLOR;\n  } else if (\n    typeof value === 'boolean' ||\n    ['TRUE', 'FALSE'].includes(text.toUpperCase())\n  ) {\n    text = text.toUpperCase();\n  } else if (value === undefined || value === null) {\n    text = '';\n  }\n\n  ctx.textAlign = isNum ? 'right' : 'left';\n  ctx.font = font;\n  ctx.fillStyle = fillStyle;\n  ctx.textBaseline = 'middle';\n  const x = left + (isNum ? width : 0);\n  const result: IRenderCellResult = {};\n  const fontSizeHeight = getFontSizeHeight(ctx, text[0]);\n  const textHeight = Math.max(\n    fontSizeHeight,\n    canvasLineHeight,\n    getStyle('lineHeight'),\n  );\n  if (style?.wrapText === EWrap.AUTO_WRAP) {\n    const y = top;\n    result.wrapHeight = fillWrapText(ctx, text, x, y, width, textHeight);\n  } else {\n    const y = Math.floor(top + height / 2);\n    result.textWidth = fillTexts(ctx, text, x, y, width);\n  }\n  return {\n    ...result,\n    fontSizeHeight: textHeight,\n  };\n}\n\nexport function drawLines(\n  ctx: CanvasRenderingContext2D,\n  pointList: Array<Point>,\n): void {\n  assert(pointList.length > 0);\n  ctx.beginPath();\n  for (let i = 0; i < pointList.length; i += 2) {\n    const first = pointList[i];\n    const second = pointList[i + 1];\n    ctx.moveTo(npx(first[0]), npx(first[1]));\n    ctx.lineTo(npx(second[0]), npx(second[1]));\n  }\n  ctx.stroke();\n}\n\nexport function drawTriangle(\n  ctx: CanvasRenderingContext2D,\n  point1: Point,\n  point2: Point,\n  point3: Point,\n) {\n  ctx.beginPath();\n  ctx.moveTo(npx(point1[0]), npx(point1[1]));\n  ctx.lineTo(npx(point2[0]), npx(point2[1]));\n  ctx.lineTo(npx(point3[0]), npx(point3[1]));\n  ctx.fill();\n}\n\n\n", "import { dpr, npx, resizeCanvas, assert, isCol, isRow, isSheet } from '@/util';\nimport theme from '@/theme';\nimport { fillRect, renderCell, getStyle, strokeRect } from './util';\nimport type { ContentView, IController, IWindowSize } from '@/types';\n\nexport class Selection implements ContentView {\n  private canvas: HTMLCanvasElement;\n  private ctx: CanvasRenderingContext2D;\n  private controller: IController;\n  private canvasSize: IWindowSize = {\n    width: 0,\n    height: 0,\n  };\n  constructor(controller: IController, canvas: HTMLCanvasElement) {\n    this.controller = controller;\n    this.canvas = canvas;\n    const ctx = this.canvas.getContext('2d')!;\n    this.ctx = ctx;\n    const size = dpr();\n    this.ctx.scale(size, size);\n  }\n  getCanvas() {\n    return this.canvas;\n  }\n  resize(width: number, height: number) {\n    this.canvasSize = {\n      width,\n      height,\n    };\n    resizeCanvas(this.canvas, width, height);\n  }\n  private clear() {\n    this.ctx.clearRect(\n      0,\n      0,\n      npx(this.canvasSize.width),\n      npx(this.canvasSize.height),\n    );\n  }\n\n  render(): void {\n    this.clear();\n    const { controller } = this;\n    const ranges = controller.getRanges();\n    const [range] = ranges;\n    if (isSheet(range)) {\n      this.renderSelectAll();\n      return;\n    }\n    if (isCol(range)) {\n      this.renderSelectCol();\n      return;\n    }\n    if (isRow(range)) {\n      this.renderSelectRow();\n      return;\n    }\n    this.renderSelectRange();\n  }\n  private renderSelectRange() {\n    const { controller } = this;\n    const headerSize = controller.getHeaderSize();\n    const ranges = controller.getRanges();\n    const [range] = ranges;\n    const activeCell = controller.computeCellPosition(range.row, range.col);\n    const endCellRow = range.row + range.rowCount - 1;\n    const endCellCol = range.col + range.colCount - 1;\n    assert(endCellRow >= 0 && endCellCol >= 0);\n    const endCell = controller.computeCellPosition(endCellRow, endCellCol);\n    const width = endCell.left + endCell.width - activeCell.left;\n    const height = endCell.top + endCell.height - activeCell.top;\n\n    this.ctx.fillStyle = theme.selectionColor;\n\n    fillRect(this.ctx, activeCell.left, 0, width, headerSize.height);\n    fillRect(this.ctx, 0, activeCell.top, headerSize.width, height);\n\n    this.ctx.strokeStyle = theme.primaryColor;\n    this.ctx.lineWidth = dpr();\n\n    assert(width >= 0 && height >= 0);\n    strokeRect(this.ctx, activeCell.left, activeCell.top, width, height);\n  }\n  private renderSelectAll(): void {\n    const { controller } = this;\n    this.ctx.fillStyle = theme.selectionColor;\n    fillRect(this.ctx, 0, 0, this.canvasSize.width, this.canvasSize.height);\n    const cellData = controller.getCell(controller.getActiveCell());\n    const activeCell = controller.computeCellPosition(\n      cellData.row,\n      cellData.col,\n    );\n    renderCell(\n      this.ctx,\n      { ...cellData, ...activeCell },\n      getStyle('lineHeight', this.canvas),\n    );\n\n    const headerSize = controller.getHeaderSize();\n    this.ctx.strokeStyle = theme.primaryColor;\n    this.ctx.lineWidth = dpr();\n    strokeRect(\n      this.ctx,\n      headerSize.width,\n      headerSize.height,\n      this.canvasSize.width - headerSize.width,\n      this.canvasSize.height - headerSize.height,\n    );\n  }\n  private renderSelectCol(): void {\n    const { controller } = this;\n    const headerSize = controller.getHeaderSize();\n    const ranges = controller.getRanges();\n    const [range] = ranges;\n    this.ctx.fillStyle = theme.selectionColor;\n    const activeCell = controller.computeCellPosition(range.row, range.col);\n    fillRect(this.ctx, activeCell.left, 0, activeCell.width, headerSize.height);\n    fillRect(\n      this.ctx,\n      0,\n      activeCell.top,\n      headerSize.width,\n      this.canvasSize.height,\n    );\n    fillRect(\n      this.ctx,\n      activeCell.left,\n      activeCell.top + activeCell.height,\n      activeCell.width,\n      this.canvasSize.height - activeCell.height,\n    );\n\n    this.ctx.strokeStyle = theme.primaryColor;\n    this.ctx.lineWidth = dpr();\n    strokeRect(\n      this.ctx,\n      activeCell.left,\n      activeCell.top,\n      activeCell.width,\n      this.canvasSize.height,\n    );\n  }\n  private renderSelectRow(): void {\n    const { controller } = this;\n    const headerSize = controller.getHeaderSize();\n    const ranges = controller.getRanges();\n    const [range] = ranges;\n    this.ctx.fillStyle = theme.selectionColor;\n    const activeCell = controller.computeCellPosition(range.row, range.col);\n    fillRect(\n      this.ctx,\n      activeCell.left,\n      0,\n      this.canvasSize.width,\n      headerSize.height,\n    );\n    fillRect(this.ctx, 0, activeCell.top, headerSize.width, activeCell.height);\n\n    fillRect(\n      this.ctx,\n      activeCell.left + activeCell.width,\n      activeCell.top,\n      this.canvasSize.width - activeCell.width,\n      activeCell.height,\n    );\n\n    this.ctx.strokeStyle = theme.primaryColor;\n    this.ctx.lineWidth = dpr();\n    strokeRect(\n      this.ctx,\n      activeCell.left,\n      activeCell.top,\n      activeCell.width,\n      this.canvasSize.height,\n    );\n  }\n}\n", "import { thinLineWidth, DEFAULT_FONT_CONFIG } from \"@/util\";\nimport theme from \"@/theme\";\n\nexport const HEADER_STYLE: Pick<\n  CanvasRenderingContext2D,\n  | \"textAlign\"\n  | \"textBaseline\"\n  | \"font\"\n  | \"fillStyle\"\n  | \"lineWidth\"\n  | \"strokeStyle\"\n> = {\n  textAlign: \"center\",\n  textBaseline: \"middle\",\n  font: DEFAULT_FONT_CONFIG,\n  fillStyle: theme.black,\n  lineWidth: thinLineWidth(),\n  strokeStyle: theme.gridStrokeColor,\n};\n", "import { isEmpty } from \"@/lodash\";\nimport {\n  thinLineWidth,\n  npx,\n  dpr,\n  intToColumnName,\n  isTestEnv,\n  resizeCanvas,\n} from \"@/util\";\nimport theme from \"@/theme\";\nimport {\n  fillRect,\n  fillText,\n  drawLines,\n  renderCell,\n  drawTriangle,\n  getStyle,\n} from \"./util\";\nimport { HEADER_STYLE } from \"./constant\";\nimport type {\n  Point,\n  ContentView,\n  IController,\n  EventType,\n  IWindowSize,\n} from \"@/types\";\n\nexport class Content implements ContentView {\n  private canvas: HTMLCanvasElement;\n  private ctx: CanvasRenderingContext2D;\n  private controller: IController;\n  private canvasSize: IWindowSize = {\n    width: 0,\n    height: 0,\n  };\n  constructor(controller: IController, canvas: HTMLCanvasElement) {\n    this.controller = controller;\n    this.canvas = canvas;\n    const ctx = this.canvas.getContext(\"2d\")!;\n    this.ctx = ctx;\n    const size = dpr();\n    this.ctx.scale(size, size);\n  }\n  getCanvas() {\n    return this.canvas;\n  }\n  resize(width: number, height: number) {\n    this.canvasSize = {\n      width,\n      height,\n    };\n    resizeCanvas(this.canvas, width, height);\n  }\n\n  private clear() {\n    this.ctx.clearRect(\n      0,\n      0,\n      npx(this.canvasSize.width),\n      npx(this.canvasSize.height)\n    );\n  }\n\n  render({ changeSet }: EventType): void {\n    const { width, height } = this.canvasSize;\n    if (!changeSet.has(\"contentChange\")) {\n      return;\n    }\n    const headerSize = this.controller.getHeaderSize();\n    this.clear();\n    const contentWidth = width - headerSize.width;\n    const contentHeight = height - headerSize.height;\n    this.renderGrid(contentWidth, contentHeight);\n    this.renderRowsHeader(contentHeight);\n    this.renderColsHeader(contentWidth);\n    this.renderTriangle();\n    this.renderContent(width, height);\n  }\n  private renderContent(width: number, height: number): void {\n    const { controller } = this;\n    const data = controller.getCellsContent();\n    if (isEmpty(data)) {\n      return;\n    }\n    this.ctx.save();\n    const { row: rowIndex, col: colIndex } = controller.getScroll();\n    for (const item of data) {\n      const { row, col } = item;\n      if (row < rowIndex || col < colIndex) {\n        continue;\n      }\n      const result = controller.computeCellPosition(row, col);\n      if (result.top > height || result.left > width) {\n        continue;\n      }\n\n      const cellInfo = this.controller.getCell(item);\n      const {\n        wrapHeight = 0,\n        fontSizeHeight = 0,\n        textWidth = 0,\n      } = renderCell(\n        this.ctx,\n        {\n          ...cellInfo,\n          ...result,\n        },\n        getStyle(\"lineHeight\", this.canvas)\n      );\n      const t = Math.max(wrapHeight, fontSizeHeight);\n      if (t > result.height) {\n        controller.setRowHeight(row, t);\n      }\n      if (textWidth > result.width) {\n        controller.setColWidth(col, textWidth);\n      }\n    }\n    this.ctx.restore();\n  }\n  private renderTriangle(): void {\n    if (isTestEnv()) {\n      return;\n    }\n    const headerSize = this.controller.getHeaderSize();\n    this.ctx.save();\n    this.ctx.fillStyle = theme.backgroundColor;\n\n    fillRect(this.ctx, 0, 0, headerSize.width, headerSize.height);\n    this.ctx.fillStyle = theme.triangleFillColor;\n    const offset = 2;\n    drawTriangle(\n      this.ctx,\n      [headerSize.width / 2 - offset, headerSize.height - offset],\n      [headerSize.width - offset, headerSize.height - offset],\n      [headerSize.width - offset, offset]\n    );\n\n    this.ctx.restore();\n  }\n\n  private renderGrid(width: number, height: number): void {\n    const { controller } = this;\n    const headerSize = controller.getHeaderSize();\n    const { row: rowIndex, col: colIndex } = controller.getScroll();\n    const { rowCount, colCount } = this.controller.getSheetInfo();\n    const lineWidth = thinLineWidth();\n    this.ctx.save();\n    this.ctx.fillStyle = theme.white;\n    this.ctx.lineWidth = lineWidth;\n    this.ctx.strokeStyle = theme.gridStrokeColor;\n    this.ctx.translate(npx(headerSize.width), npx(headerSize.height));\n    const pointList: Array<Point> = [];\n    let y = 0;\n    let x = 0;\n    let maxX = 0;\n    for (let i = colIndex; i < colCount; i++) {\n      maxX += controller.getColWidth(i);\n      if (maxX > width) {\n        break;\n      }\n    }\n    const realWidth = Math.min(maxX, width);\n    for (let i = rowIndex; i < rowCount; i++) {\n      pointList.push([0, y], [realWidth, y]);\n      y += controller.getRowHeight(i);\n      if (y > height) {\n        break;\n      }\n    }\n    for (let i = colIndex; i < colCount; i++) {\n      pointList.push([x, 0], [x, y]);\n      x += controller.getColWidth(i);\n      if (x > realWidth) {\n        break;\n      }\n    }\n    pointList.push([0, y], [x, y]);\n    pointList.push([x, 0], [x, y]);\n    drawLines(this.ctx, pointList);\n    this.ctx.restore();\n  }\n  private fillRowText(row: number, rowWidth: number, y: number): void {\n    this.ctx.fillStyle = theme.black;\n    fillText(this.ctx, String(row), rowWidth / 2, y);\n  }\n\n  private fillColText(colText: string, x: number, colHeight: number): void {\n    this.ctx.fillStyle = theme.black;\n    fillText(this.ctx, colText, x, colHeight / 2 + dpr());\n  }\n  private renderRowsHeader(height: number): void {\n    const { controller } = this;\n    const { row: rowIndex } = controller.getScroll();\n    const headerSize = controller.getHeaderSize();\n    const { rowCount } = controller.getSheetInfo();\n    this.ctx.save();\n    this.ctx.fillStyle = theme.backgroundColor;\n    fillRect(this.ctx, 0, headerSize.height, headerSize.width, height);\n    Object.assign(this.ctx, HEADER_STYLE);\n    const pointList: Array<Point> = [];\n    let y = headerSize.height;\n    let i = rowIndex;\n\n    for (; i < rowCount; i++) {\n      const rowHeight = controller.getRowHeight(i);\n      let temp = y;\n      if (i === rowIndex) {\n        temp += thinLineWidth() / 2;\n      }\n      pointList.push([0, temp], [headerSize.width, temp]);\n      this.fillRowText(i + 1, headerSize.width, temp + rowHeight / 2);\n      y += rowHeight;\n      if (y > height) {\n        break;\n      }\n    }\n    pointList.push([0, y], [headerSize.width, y]);\n    pointList.push([0, 0], [0, y]);\n    drawLines(this.ctx, pointList);\n    this.ctx.restore();\n  }\n  private renderColsHeader(width: number): void {\n    const { controller } = this;\n\n    const { col: colIndex } = controller.getScroll();\n    const headerSize = controller.getHeaderSize();\n    const { colCount } = controller.getSheetInfo();\n    const pointList: Array<Point> = [];\n    this.ctx.save();\n    this.ctx.fillStyle = theme.backgroundColor;\n    fillRect(this.ctx, headerSize.width, 0, width, headerSize.height);\n    Object.assign(this.ctx, HEADER_STYLE);\n\n    let x = headerSize.width;\n    let i = colIndex;\n    for (; i < colCount; i++) {\n      const colWidth = controller.getColWidth(i);\n      let temp = x;\n      if (i === colIndex) {\n        temp += thinLineWidth() / 2;\n      }\n      pointList.push([temp, 0], [temp, headerSize.height]);\n      this.fillColText(\n        intToColumnName(i),\n        temp + colWidth / 2,\n        headerSize.height\n      );\n      x += colWidth;\n      if (x > width) {\n        break;\n      }\n    }\n    pointList.push([x, 0], [x, headerSize.height]);\n    pointList.push([0, 0], [x, 0]);\n    drawLines(this.ctx, pointList);\n    this.ctx.restore();\n  }\n}\n", "import { StoreValue, IController, ChangeEventType } from \"./types\";\nimport { Controller, History } from \"./controller\";\nimport { Model, MOCK_MODEL } from \"./model\";\nimport { MainCanvas, registerEvents, Selection, Content } from \"./canvas\";\nimport {\n  FONT_FAMILY_LIST,\n  isSupportFontFamily,\n  MAIN_CANVAS_ID,\n  createCanvas,\n} from \"./util\";\nimport theme from \"./theme\";\n\nexport function initTheme(dom: HTMLElement) {\n  const keyList = Object.keys(theme) as Array<keyof typeof theme>;\n  for (const key of keyList) {\n    dom.style.setProperty(`--${key}`, String(theme[key] || \"\"));\n  }\n}\nexport function initFontFamilyList() {\n  const list = FONT_FAMILY_LIST.map((v) => {\n    const disabled = !isSupportFontFamily(v);\n    return { label: v, value: v, disabled };\n  });\n  return list;\n}\n\nfunction getStoreValue(controller: IController, canvasTop: number) {\n  const cell = controller.getCell(controller.getActiveCell());\n  const cellPosition = controller.computeCellPosition(cell.row, cell.col);\n  cellPosition.top = canvasTop + cellPosition.top;\n  const scroll = controller.getScroll();\n  const newStateValue: Partial<StoreValue> = {\n    isCellEditing: false,\n    canRedo: controller.canRedo(),\n    canUndo: controller.canUndo(),\n    sheetList: controller.getSheetList(),\n    currentSheetId: controller.getCurrentSheetId(),\n    cellPosition: cellPosition,\n    scrollLeft: scroll.scrollLeft,\n    scrollTop: scroll.scrollTop,\n  };\n  newStateValue.activeCell = cell;\n  return newStateValue;\n}\n\nexport function initCanvas(stateValue: StoreValue, controller: IController) {\n  const canvas = document.querySelector<HTMLCanvasElement>(\n    `#${MAIN_CANVAS_ID}`\n  )!;\n  const mainCanvas = new MainCanvas(canvas, new Content(controller, createCanvas()), new Selection(controller, createCanvas()));\n  const resize = () => {\n    const size = canvas.parentElement!.getBoundingClientRect();\n    mainCanvas.resize(size.width, size.height);\n    mainCanvas.render({\n      changeSet: new Set<ChangeEventType>([\"contentChange\"]),\n    });\n  };\n  resize();\n  registerEvents(stateValue, controller, canvas, resize);\n  const canvasPosition = canvas.parentElement!.getBoundingClientRect();\n  controller.setHooks({\n    modelChange: (changeSet) => {\n      const newStateValue = getStoreValue(controller, canvasPosition.top);\n      Object.assign(stateValue, newStateValue);\n      mainCanvas.render({ changeSet: changeSet });\n      mainCanvas.render({\n        changeSet: controller.getChangeSet(),\n      });\n    },\n  });\n  controller.fromJSON(MOCK_MODEL);\n}\nexport function initController(): IController {\n  const controller = new Controller(new Model(), new History());\n  controller.addSheet();\n  return controller;\n}\n", "import { render } from './react';\nimport { App } from './App';\nimport { DEFAULT_STORE_VALUE } from './util';\nimport {\n  initCanvas,\n  initController,\n  initTheme,\n  initFontFamilyList,\n} from './init';\nimport './global.css';\nimport './components/index.css';\nimport './containers/index.css';\n\nfunction init(containerDom: HTMLDivElement) {\n  initTheme(document.documentElement);\n  const controller = initController();\n  const stateValue = new Proxy(DEFAULT_STORE_VALUE, {\n    set(obj, prop, value) {\n      const res = Reflect.set(obj, prop, value);\n      setState();\n      return res;\n    },\n  });\n\n  const setState = () => {\n    render(containerDom, App(stateValue, controller));\n  };\n  setState();\n  stateValue.fontFamilyList = initFontFamilyList();\n  initCanvas(stateValue, controller);\n}\n\ninit(document.querySelector<HTMLDivElement>('#root')!);\n"],
  "mappings": "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",
  "names": ["color", "isSupportFontFamily", "parentNode", "key", "isElement", "init", "patch", "color", "hooks", "size", "formulas", "func", "item", "size", "isNum", "size", "size", "size", "init"]
}
