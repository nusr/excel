{
  "version": 3,
  "sources": ["../src/containers/canvas/index.tsx", "../src/containers/canvas/index.module.css", "../src/containers/canvas/ScrollBar.tsx", "../src/containers/canvas/ContextMenu.tsx", "../src/containers/canvas/util.ts", "../src/containers/canvas/BottomBar.tsx"],
  "sourcesContent": ["import React, { useRef, useEffect, Fragment, useState, memo } from 'react';\nimport { IController, EditorStatus } from '@/types';\nimport {\n  getHitInfo,\n  DEFAULT_POSITION,\n  headerSizeSet,\n  canvasSizeSet,\n  isSameRange,\n} from '@/util';\nimport styles from './index.module.css';\nimport { coreStore } from '@/containers/store';\nimport { ScrollBar } from './ScrollBar';\nimport { ContextMenu } from './ContextMenu';\nimport { initCanvas } from './util';\nimport { checkFocus, setActiveCellValue } from '@/canvas';\nimport { BottomBar } from './BottomBar';\nimport { FloatElementContainer } from '../FloatElement';\n\ninterface Props {\n  controller: IController;\n}\nconst DOUBLE_CLICK_TIME = 300;\n\ntype State = {\n  timeStamp: number;\n};\n\nexport const CanvasContainer: React.FunctionComponent<Props> = memo((props) => {\n  const { controller } = props;\n  const state = useRef<State>({\n    timeStamp: 0,\n  });\n  const [menuPosition, setMenuPosition] = useState({\n    top: DEFAULT_POSITION,\n    left: DEFAULT_POSITION,\n  });\n\n  const ref = useRef<HTMLCanvasElement>(null);\n  useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n    const fn = initCanvas(controller, ref.current);\n    return () => {\n      fn();\n    };\n  }, []);\n  const handleContextMenu = (event: React.MouseEvent<HTMLCanvasElement>) => {\n    event.preventDefault();\n    setMenuPosition({\n      top: event.clientY,\n      left: event.clientX,\n    });\n  };\n  const hideContextMenu = () => {\n    setMenuPosition({\n      top: DEFAULT_POSITION,\n      left: DEFAULT_POSITION,\n    });\n  };\n  const handlePointerMove = (event: React.PointerEvent<HTMLCanvasElement>) => {\n    if (event.buttons <= 0) {\n      return;\n    }\n    const headerSize = headerSizeSet.get();\n    const rect = canvasSizeSet.get();\n    const { clientX = 0, clientY = 0 } = event;\n    const x = clientX - rect.left;\n    const y = clientY - rect.top;\n\n    const position = getHitInfo(controller, x, y);\n    if (!position) {\n      return;\n    }\n    const { range, isMerged } = controller.getActiveRange({\n      row: position.row,\n      col: position.col,\n      colCount: 1,\n      rowCount: 1,\n      sheetId: '',\n    });\n    const activeCell = controller.getActiveRange().range;\n    if (activeCell.row === range.row && activeCell.col === range.col) {\n      return;\n    }\n    let rowCount = 0;\n    let colCount = 0;\n    if (x > headerSize.width && y > headerSize.height) {\n      if (isMerged) {\n        controller.setActiveRange(range);\n        return;\n      }\n      colCount = Math.abs(position.col - activeCell.col) + 1;\n      rowCount = Math.abs(position.row - activeCell.row) + 1;\n    }\n    // select row\n    if (headerSize.width > x && headerSize.height <= y) {\n      rowCount = Math.abs(position.row - activeCell.row) + 1;\n    }\n    // select col\n    if (headerSize.width <= x && headerSize.height > y) {\n      colCount = Math.abs(position.col - activeCell.col) + 1;\n    }\n    controller.setActiveRange({\n      row: Math.min(position.row, activeCell.row),\n      col: Math.min(position.col, activeCell.col),\n      rowCount,\n      colCount,\n      sheetId: '',\n    });\n  };\n  const handlePointerDown = (event: React.PointerEvent<HTMLCanvasElement>) => {\n    if (event.buttons <= 0) {\n      return;\n    }\n    const headerSize = headerSizeSet.get();\n    const canvasRect = canvasSizeSet.get();\n    const { timeStamp, clientX = 0, clientY = 0 } = event;\n    const x = clientX - canvasRect.left;\n    const y = clientY - canvasRect.top;\n    const position = getHitInfo(controller, x, y);\n    if (!position) {\n      return;\n    }\n    // select all\n    if (headerSize.width > x && headerSize.height > y) {\n      controller.setActiveRange({\n        row: 0,\n        col: 0,\n        colCount: 0,\n        rowCount: 0,\n        sheetId: '',\n      });\n      return;\n    }\n    // select row\n    if (headerSize.width > x && headerSize.height <= y) {\n      controller.setActiveRange({\n        row: position.row,\n        col: position.col,\n        rowCount: 1,\n        colCount: 0,\n        sheetId: '',\n      });\n      return;\n    }\n    // select col\n    if (headerSize.width <= x && headerSize.height > y) {\n      controller.setActiveRange({\n        row: position.row,\n        col: position.col,\n        rowCount: 0,\n        colCount: 1,\n        sheetId: '',\n      });\n      return;\n    }\n    const { range } = controller.getActiveRange({\n      row: position.row,\n      col: position.col,\n      colCount: 1,\n      rowCount: 1,\n      sheetId: controller.getCurrentSheetId(),\n    });\n    const activeCell = controller.getActiveRange().range;\n    if (isSameRange(activeCell, range)) {\n      const delay = timeStamp - state.current.timeStamp;\n      if (delay < DOUBLE_CLICK_TIME) {\n        coreStore.setState((state) => {\n          if (state.editorStatus === EditorStatus.EDIT_CELL) {\n            return state;\n          }\n          return { editorStatus: EditorStatus.EDIT_CELL };\n        });\n      }\n    } else {\n      if (checkFocus()) {\n        setActiveCellValue(controller);\n      }\n      controller.setActiveRange({\n        row: position.row,\n        col: position.col,\n        rowCount: 1,\n        colCount: 1,\n        sheetId: '',\n      });\n    }\n    state.current.timeStamp = timeStamp;\n  };\n  return (\n    <Fragment>\n      <div\n        className={styles['canvas-container']}\n        data-testid=\"canvas-container\"\n      >\n        <canvas\n          className={styles['canvas-content']}\n          onContextMenu={handleContextMenu}\n          onPointerMove={handlePointerMove}\n          onPointerDown={handlePointerDown}\n          ref={ref}\n          data-testid=\"canvas-main\"\n        />\n        <ScrollBar controller={controller} />\n        <BottomBar controller={controller} />\n        <FloatElementContainer controller={controller} />\n      </div>\n      {menuPosition.top >= 0 && menuPosition.left >= 0 && (\n        <ContextMenu\n          {...menuPosition}\n          controller={controller}\n          hideContextMenu={hideContextMenu}\n        />\n      )}\n    </Fragment>\n  );\n});\nCanvasContainer.displayName = 'CanvasContainer';\n\nexport default CanvasContainer\n", ".canvas-container {\n  flex: 1;\n  position: relative;\n  overflow: hidden;\n  height: 100%;\n  width: 100%;\n}\n\n.vertical-scroll-bar {\n  position: absolute;\n  width: var(--largePadding);\n  right: 0;\n  bottom: 0;\n  top: 0;\n  background-color: var(--white);\n  box-sizing: border-box;\n  padding: 0 5px;\n  border: 1px solid var(--borderColor);\n  border-top-color: var(--white);\n}\n\n.vertical-scroll-bar-content {\n  position: relative;\n  cursor: pointer;\n  border-radius: var(--borderRadius);\n  background-color: var(--scrollbarColor);\n  height: var(--scrollBarContent);\n}\n\n.horizontal-scroll-bar {\n  position: absolute;\n  height: var(--largePadding);\n  right: 0;\n  left: 0;\n  bottom: 0;\n  box-sizing: border-box;\n  padding: 5px 0;\n  border: 1px solid var(--borderColor);\n  border-left-color: var(--white);\n  background-color: var(--white);\n}\n\n.horizontal-scroll-bar-content {\n  position: relative;\n  cursor: pointer;\n  border-radius: var(--borderRadius);\n  background-color: var(--scrollbarColor);\n  height: 100%;\n  width: var(--scrollBarContent);\n}\n\n.horizontal-scroll-bar-content:hover,\n.vertical-scroll-bar-content:hover {\n  background-color: var(--scrollbarHoveColor);\n}\n\n.context-menu {\n  position: fixed;\n  background-color: var(--white);\n  border-radius: var(--borderRadius);\n  min-width: 150px;\n  z-index: 4;\n}\n\n.context-menu > button {\n  width: 100%;\n  background-color: var(--white);\n}\n\n.bottom-bar {\n  position: absolute;\n  display: none;\n  align-items: center;\n  padding: var(--tinyPadding) var(--mediumPadding);\n  padding-top: 50px;\n  right: 18px;\n  bottom: 36px;\n  left: 68px;\n}\n.bottom-bar.active {\n  display: flex;\n}\n\n.bottom-bar-text {\n  margin: 0 var(--tinyPadding);\n}\n\n.bottom-bar-input {\n  width: 60px;\n}\n.add-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n", "import React, {\n  useRef,\n  Fragment,\n  useSyncExternalStore,\n  memo,\n  useEffect,\n  useCallback,\n  useMemo,\n} from 'react';\nimport { IController, ScrollStatus, ScrollValue } from '@/types';\nimport { computeScrollRowAndCol, computeScrollPosition } from '@/canvas';\nimport styles from './index.module.css';\nimport { scrollStore } from '../store';\n\ninterface Props {\n  controller: IController;\n}\n\ninterface State {\n  prevPageY: number;\n  prevPageX: number;\n  scrollStatus: ScrollStatus;\n}\n\nfunction scrollBar(controller: IController, scrollX: number, scrollY: number) {\n  const oldScroll = controller.getScroll();\n  const { maxHeight, maxScrollHeight, maxScrollWidth, maxWidth } =\n    computeScrollPosition(oldScroll.left, oldScroll.top);\n\n  let scrollTop = oldScroll.scrollTop + Math.ceil(scrollY);\n  let scrollLeft = oldScroll.scrollLeft + Math.ceil(scrollX);\n  if (scrollTop < 0) {\n    scrollTop = 0;\n  } else if (scrollTop > maxScrollHeight) {\n    scrollTop = maxScrollHeight;\n  }\n  if (scrollLeft < 0) {\n    scrollLeft = 0;\n  } else if (scrollLeft > maxScrollWidth) {\n    scrollLeft = maxScrollWidth;\n  }\n  const top = Math.floor((maxHeight * scrollTop) / maxScrollHeight);\n  const left = Math.floor((maxWidth * scrollLeft) / maxScrollWidth);\n  const { row, col } = computeScrollRowAndCol(controller, left, top);\n  const data: ScrollValue = {\n    top,\n    left,\n    row,\n    col,\n    scrollLeft,\n    scrollTop,\n  };\n  const activeCell = controller.getActiveRange().range;\n  if (data.row != oldScroll.row) {\n    activeCell.row = data.row;\n  }\n  if (data.col !== oldScroll.col) {\n    activeCell.col = data.col;\n  }\n  controller.setScroll(data);\n  return data;\n}\nconst initState: State = {\n  prevPageX: 0,\n  prevPageY: 0,\n  scrollStatus: ScrollStatus.NONE,\n};\nexport const ScrollBar: React.FunctionComponent<Props> = memo(\n  ({ controller }) => {\n    const state = useRef<State>({ ...initState });\n    const { scrollLeft, scrollTop } = useSyncExternalStore(\n      scrollStore.subscribe,\n      scrollStore.getSnapshot,\n    );\n    const [toggleEvents] = useMemo(() => {\n      function handlePointerUp() {\n        state.current = { ...initState };\n        toggleEvents(false);\n      }\n      function handlePointerMove(event: PointerEvent) {\n        if (event.buttons <= 0) {\n          toggleEvents(false);\n          return;\n        }\n        if (state.current.scrollStatus === ScrollStatus.NONE) {\n          return;\n        }\n        if (state.current.scrollStatus === ScrollStatus.VERTICAL) {\n          scrollBar(controller, 0, event.clientY - state.current.prevPageY);\n          state.current.prevPageY = event.clientY;\n        } else if (state.current.scrollStatus === ScrollStatus.HORIZONTAL) {\n          scrollBar(controller, event.clientX - state.current.prevPageX, 0);\n          state.current.prevPageX = event.clientX;\n        }\n      }\n      function toggleEvents(state?: boolean) {\n        const toggleEvent = state\n          ? document.addEventListener\n          : document.removeEventListener;\n        toggleEvent('pointermove', handlePointerMove);\n        toggleEvent('pointerup', handlePointerUp);\n      }\n      return [toggleEvents];\n    }, []);\n    useEffect(() => toggleEvents, [toggleEvents]);\n\n    const addEvents = useCallback(\n      (event: React.PointerEvent<HTMLDivElement>, status: ScrollStatus) => {\n        if (event.buttons <= 0) {\n          return;\n        }\n        toggleEvents(true);\n        state.current.prevPageX = event.clientX;\n        state.current.prevPageY = event.clientY;\n        state.current.scrollStatus = status;\n      },\n      [toggleEvents],\n    );\n\n    const handleVerticalBarDown = useCallback(\n      (event: React.PointerEvent<HTMLDivElement>) => {\n        addEvents(event, ScrollStatus.VERTICAL);\n      },\n      [addEvents],\n    );\n    const handleHorizontalBarDown = useCallback(\n      (event: React.PointerEvent<HTMLDivElement>) => {\n        addEvents(event, ScrollStatus.HORIZONTAL);\n      },\n      [toggleEvents],\n    );\n    return (\n      <Fragment>\n        <div\n          className={styles['vertical-scroll-bar']}\n          data-testid=\"vertical-scroll-bar\"\n          onPointerDown={handleVerticalBarDown}\n        >\n          <div\n            className={styles['vertical-scroll-bar-content']}\n            style={{\n              transform: `translateY(${scrollTop}px)`,\n            }}\n            data-testid=\"vertical-scroll-bar-content\"\n          />\n        </div>\n        <div\n          className={styles['horizontal-scroll-bar']}\n          data-testid=\"horizontal-scroll-bar\"\n          onPointerDown={handleHorizontalBarDown}\n        >\n          <div\n            className={styles['horizontal-scroll-bar-content']}\n            style={{\n              transform: `translateX(${scrollLeft}px)`,\n            }}\n            data-testid=\"horizontal-scroll-bar-content\"\n          />\n        </div>\n      </Fragment>\n    );\n  },\n);\nScrollBar.displayName = 'ScrollBar';\n", "import React, { Fragment, memo, useMemo, useSyncExternalStore } from 'react';\nimport { Button, info, toast } from '../../components';\nimport { IController } from '@/types';\nimport styles from './index.module.css';\nimport { useClickOutside } from '../hooks';\nimport { activeCellStore } from '@/containers/store';\nimport { $ } from '@/i18n';\nimport { headerSizeSet, canvasSizeSet } from '@/util';\n\ninterface Props {\n  controller: IController;\n  top: number;\n  left: number;\n  hideContextMenu: () => void;\n}\n\nenum ClickPosition {\n  COLUMN_HEADER,\n  ROW_HEADER,\n  TRIANGLE,\n  CONTENT,\n}\n\nconst MENU_WIDTH = 110;\nconst ITEM_HEIGHT = 20;\n\nfunction computeMenuStyle(top: number, left: number) {\n  const headerSize = headerSizeSet.get();\n  const rect = canvasSizeSet.get();\n  let clickPosition = ClickPosition.CONTENT;\n  let menuHeight = ITEM_HEIGHT * 3;\n  const y = top - rect.top;\n  const x = left - rect.left;\n  if (y < headerSize.height && x < headerSize.width) {\n    clickPosition = ClickPosition.TRIANGLE;\n  } else if (y < headerSize.height) {\n    clickPosition = ClickPosition.COLUMN_HEADER;\n    menuHeight = ITEM_HEIGHT * 6;\n  } else if (x < headerSize.width) {\n    clickPosition = ClickPosition.ROW_HEADER;\n    menuHeight = ITEM_HEIGHT * 6;\n  }\n\n  // recompute menu position\n  let realTop = top;\n  let realLeft = left;\n  const gap = 18;\n  const height = rect.height + rect.top;\n  if (realTop + menuHeight > height) {\n    realTop = height - menuHeight - gap;\n  }\n  if (realLeft + MENU_WIDTH > rect.width) {\n    realLeft = rect.width - MENU_WIDTH - gap;\n  }\n\n  return {\n    style: {\n      top: realTop,\n      left: realLeft,\n    },\n    position: clickPosition,\n  };\n}\n\nconst threshold = 10000;\n\nexport const ContextMenu: React.FunctionComponent<Props> = memo((props) => {\n  const { controller, top, left, hideContextMenu } = props;\n  const { row, col, colCount, rowCount } = useSyncExternalStore(\n    activeCellStore.subscribe,\n    activeCellStore.getSnapshot,\n  );\n  const [ref] = useClickOutside(hideContextMenu);\n  const { style, position } = useMemo(() => {\n    const temp = computeMenuStyle(top, left);\n    return temp;\n  }, [top, left]);\n  const handleDialog = (isRow: boolean) => {\n    let value = isRow\n      ? controller.getRowHeight(row).len\n      : controller.getColWidth(col).len;\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      const t = parseInt(event.target.value, 10);\n      if (!isNaN(t)) {\n        if (t < 0) {\n          value = 0;\n        } else if (value > threshold) {\n          value = threshold;\n        } else {\n          value = t;\n        }\n      }\n      event.stopPropagation();\n    };\n    info({\n      visible: true,\n      title: isRow ? $('row-height') : $('column-width'),\n      testId: 'context-menu-width-height-dialog',\n      children: (\n        <input\n          type=\"number\"\n          min={0}\n          max={threshold}\n          style={{ width: '200px' }}\n          defaultValue={value}\n          onChange={handleChange}\n          data-testid=\"context-menu-width-height-dialog-input\"\n        />\n      ),\n      onOk: () => {\n        if (value < 0) {\n          return toast.error($('greater-than-zero'));\n        }\n        if (isRow) {\n          controller.batchUpdate(() => {\n            for (let i = 0; i < rowCount; i++) {\n              controller.setRowHeight(row + i, value);\n            }\n            return true;\n          });\n        } else {\n          controller.batchUpdate(() => {\n            for (let i = 0; i < colCount; i++) {\n              controller.setColWidth(col + i, value);\n            }\n            return true;\n          });\n        }\n        hideContextMenu();\n      },\n      onCancel: () => {\n        hideContextMenu();\n      },\n    });\n  };\n  return (\n    <div\n      className={styles['context-menu']}\n      data-testid=\"context-menu\"\n      style={style}\n      ref={ref}\n    >\n      <Button\n        onClick={() => {\n          hideContextMenu();\n          controller.setFloatElementUuid('');\n          controller.copy();\n        }}\n        testId=\"context-menu-copy\"\n      >\n        {$('copy')}\n      </Button>\n      <Button\n        onClick={() => {\n          hideContextMenu();\n          controller.setFloatElementUuid('');\n          controller.cut();\n        }}\n        testId=\"context-menu-cut\"\n      >\n        {$('cut')}\n      </Button>\n      <Button\n        testId=\"context-menu-paste\"\n        onClick={() => {\n          hideContextMenu();\n          controller.paste();\n        }}\n      >\n        {$('paste')}\n      </Button>\n      {(position === ClickPosition.ROW_HEADER ||\n        position === ClickPosition.CONTENT) && (\n        <Fragment>\n          <Button\n            testId=\"context-menu-insert-row-above\"\n            onClick={() => {\n              hideContextMenu();\n              controller.addRow(row, rowCount, true);\n            }}\n          >\n            {$('insert-row-above')}\n          </Button>\n          <Button\n            testId=\"context-menu-insert-row-below\"\n            onClick={() => {\n              hideContextMenu();\n              controller.addRow(row, rowCount);\n            }}\n          >\n            {$('insert-row-below')}\n          </Button>\n        </Fragment>\n      )}\n      {(position === ClickPosition.COLUMN_HEADER ||\n        position === ClickPosition.CONTENT) && (\n        <Fragment>\n          <Button\n            testId=\"context-menu-insert-column-left\"\n            onClick={() => {\n              hideContextMenu();\n              controller.addCol(col, colCount);\n            }}\n          >\n            {$('insert-column-left')}\n          </Button>\n          <Button\n            testId=\"context-menu-insert-column-right\"\n            onClick={() => {\n              hideContextMenu();\n              controller.addCol(col, colCount, true);\n            }}\n          >\n            {$('insert-column-right')}\n          </Button>\n        </Fragment>\n      )}\n      {position === ClickPosition.TRIANGLE && (\n        <Button\n          testId=\"context-menu-delete\"\n          onClick={() => {\n            hideContextMenu();\n            controller.deleteAll(controller.getCurrentSheetId());\n          }}\n        >\n          {$('delete')}\n        </Button>\n      )}\n      {position === ClickPosition.COLUMN_HEADER && (\n        <Fragment>\n          <Button\n            testId=\"context-menu-delete-column\"\n            onClick={() => {\n              hideContextMenu();\n              controller.deleteCol(col, colCount);\n            }}\n          >\n            {$('delete-columns')}\n          </Button>\n          <Button\n            testId=\"context-menu-hide-column\"\n            onClick={() => {\n              hideContextMenu();\n              controller.hideCol(col, colCount);\n            }}\n          >\n            {$('hide-columns')}\n          </Button>\n          <Button\n            testId=\"context-menu-column-width\"\n            onClick={() => {\n              handleDialog(false);\n            }}\n          >\n            {$('column-width')}\n          </Button>\n        </Fragment>\n      )}\n      {position === ClickPosition.ROW_HEADER && (\n        <Fragment>\n          <Button\n            testId=\"context-menu-delete-row\"\n            onClick={() => {\n              hideContextMenu();\n              controller.deleteRow(row, rowCount);\n            }}\n          >\n            {$('delete-rows')}\n          </Button>\n          <Button\n            testId=\"context-menu-hide-row\"\n            onClick={() => {\n              hideContextMenu();\n              controller.hideRow(row, rowCount);\n            }}\n          >\n            {$('hide-rows')}\n          </Button>\n          <Button\n            testId=\"context-menu-row-height\"\n            onClick={() => {\n              handleDialog(true);\n            }}\n          >\n            {$('row-height')}\n          </Button>\n        </Fragment>\n      )}\n    </div>\n  );\n});\nContextMenu.displayName = 'CanvasContextMenu';\n", "import {\n  IController,\n  ChangeEventType,\n  EUnderLine,\n  IRange,\n  EMergeCellType,\n  EHorizontalAlign,\n} from '@/types';\nimport {\n  DEFAULT_FONT_SIZE,\n  HIDE_CELL,\n  getThemeColor,\n  eventEmitter,\n  initFontFamilyList,\n  sizeConfig,\n  canvasSizeSet,\n  MERGE_CELL_LINE_BREAK,\n  LINE_BREAK,\n  DEFAULT_FORMAT_CODE,\n  getFormatCode,\n  parseNumber,\n} from '@/util';\nimport {\n  coreStore,\n  activeCellStore,\n  sheetListStore,\n  fontFamilyStore,\n  scrollStore,\n  floatElementStore,\n  FloatElementItem,\n  defineNameStore,\n  styleStore,\n} from '@/containers/store';\nimport {\n  initRenderCanvas,\n  registerGlobalEvent,\n  scrollSheetToView,\n} from '@/canvas';\nimport { numberFormat as numberFormatUtil, isDateFormat } from '@/model';\n\nfunction getChartData(\n  range: IRange,\n  controller: IController,\n): Pick<FloatElementItem, 'labels' | 'datasets'> {\n  const { row, col, rowCount, colCount, sheetId } = range;\n  const result: Pick<FloatElementItem, 'labels' | 'datasets'> = {\n    labels: [],\n    datasets: [],\n  };\n  for (\n    let r = row, index = 1, endRow = row + rowCount;\n    r < endRow;\n    r++, index++\n  ) {\n    const rowHeight = controller.getRowHeight(r).len;\n    if (rowHeight === HIDE_CELL) {\n      continue;\n    }\n    const list = [];\n    for (let c = col, endCol = col + colCount; c < endCol; c++) {\n      const t = controller.getCell({\n        row: r,\n        col: c,\n        rowCount: 1,\n        colCount: 1,\n        sheetId,\n      });\n      if (!t) {\n        continue;\n      }\n      list.push(parseNumber(t.value)[1]);\n    }\n    if (list.length > 0) {\n      result.datasets.push({ label: `Series${index}`, data: list });\n    }\n  }\n  if (result.datasets[0] && result.datasets[0].data.length > 0) {\n    result.labels = Array.from({ length: result.datasets[0].data.length })\n      .fill('')\n      .map((_value, i) => String(i + 1));\n  }\n  return result;\n}\n\nfunction updateActiveCell(controller: IController) {\n  const { top } = canvasSizeSet.get();\n  const { range: activeCell, isMerged } = controller.getActiveRange();\n  const sheetId = activeCell.sheetId || controller.getCurrentSheetId();\n  const cell = controller.getCell(activeCell);\n  const defineName = controller.getDefineName({\n    row: activeCell.row,\n    col: activeCell.col,\n    rowCount: 1,\n    colCount: 1,\n    sheetId,\n  });\n  const cellSize = controller.getCellSize(activeCell);\n  const cellPosition = controller.computeCellPosition(activeCell);\n  cellPosition.top = top + cellPosition.top;\n  let fontFamily = cell?.style?.fontFamily ?? '';\n  if (!fontFamily) {\n    let defaultFontFamily = '';\n    const list = fontFamilyStore.getSnapshot();\n    for (const item of list) {\n      if (!item.disabled) {\n        defaultFontFamily = String(item.value);\n        break;\n      }\n    }\n    fontFamily = defaultFontFamily;\n  }\n  const {\n    isBold = false,\n    isItalic = false,\n    isStrike = false,\n    fontSize = DEFAULT_FONT_SIZE,\n    fontColor = getThemeColor('contentColor'),\n    fillColor = '',\n    isWrapText = false,\n    underline = EUnderLine.NONE,\n    horizontalAlign,\n    verticalAlign,\n  } = cell?.style || {};\n\n  const numberFormat = cell?.style?.numberFormat || DEFAULT_FORMAT_CODE;\n  const isRight =\n    numberFormat === DEFAULT_FORMAT_CODE && typeof cell?.value === 'number';\n  let horAlign = horizontalAlign;\n  if (horizontalAlign === undefined && isRight) {\n    horAlign = EHorizontalAlign.RIGHT;\n  }\n  let displayValue = numberFormatUtil(cell?.value, numberFormat);\n  let realValue = '';\n  if (isDateFormat(numberFormat) || numberFormat === getFormatCode(10)) {\n    realValue = displayValue;\n  } else {\n    const t = cell?.value ?? '';\n    realValue = typeof t === 'boolean' ? t.toString().toUpperCase() : String(t);\n    displayValue = realValue;\n  }\n\n  let mergeType = '';\n  if (isMerged) {\n    if (displayValue.includes(MERGE_CELL_LINE_BREAK)) {\n      mergeType = String(EMergeCellType.MERGE_CONTENT);\n      displayValue = displayValue.replaceAll(MERGE_CELL_LINE_BREAK, LINE_BREAK);\n    } else {\n      mergeType = String(EMergeCellType.MERGE_CENTER);\n    }\n  }\n\n  activeCellStore.setState({\n    top: cellPosition.top,\n    left: cellPosition.left,\n    width: cellSize.width,\n    height: cellSize.height,\n    row: activeCell.row,\n    col: activeCell.col,\n    rowCount: activeCell.rowCount,\n    colCount: activeCell.colCount,\n    value: cell?.formula || realValue,\n    defineName,\n    displayValue: cell?.formula || displayValue,\n  });\n\n  styleStore.setState({\n    isBold,\n    isItalic,\n    isStrike,\n    fontColor,\n    fontSize,\n    fontFamily,\n    fillColor,\n    isWrapText,\n    underline,\n    numberFormat,\n    isMergeCell: isMerged,\n    mergeType,\n    horizontalAlign: horAlign,\n    verticalAlign,\n  });\n}\n\nconst handleStateChange = (\n  changeSet: Set<ChangeEventType>,\n  controller: IController,\n) => {\n  if (\n    changeSet.has('rangeMap') ||\n    changeSet.has('cellStyle') ||\n    changeSet.has('cellValue') ||\n    changeSet.has('currentSheetId') ||\n    changeSet.has('mergeCells')\n  ) {\n    updateActiveCell(controller);\n  }\n  if (changeSet.has('workbook')) {\n    const sheetList = controller.getSheetList().map((v) => ({\n      sheetId: v.sheetId,\n      name: v.name,\n      isHide: v.isHide,\n      tabColor: v.tabColor || '',\n    }));\n    sheetListStore.setState(sheetList);\n  }\n\n  if (changeSet.has('currentSheetId')) {\n    coreStore.setState({\n      canRedo: controller.canRedo(),\n      canUndo: controller.canUndo(),\n      activeUuid: '',\n      currentSheetId: controller.getCurrentSheetId(),\n    });\n  } else {\n    coreStore.setState({\n      canRedo: controller.canRedo(),\n      canUndo: controller.canUndo(),\n    });\n  }\n\n  if (changeSet.has('scroll')) {\n    const scroll = controller.getScroll();\n    const canvasSize = canvasSizeSet.get();\n    const showBottomBar = scroll.scrollTop / canvasSize.height >= 0.91;\n    scrollStore.setState({\n      scrollLeft: scroll.scrollLeft,\n      scrollTop: scroll.scrollTop,\n      showBottomBar,\n    });\n  }\n  if (changeSet.has('definedNames')) {\n    const list = controller.getDefineNameList().map((v) => v.name);\n    defineNameStore.setState(list);\n  }\n\n  if (\n    changeSet.has('drawings') ||\n    changeSet.has('cellValue') ||\n    changeSet.has('row') ||\n    changeSet.has('col') ||\n    changeSet.has('currentSheetId') ||\n    changeSet.has('scroll')\n  ) {\n    const scroll = controller.getScroll();\n    const canvasSize = canvasSizeSet.get();\n    const minX = scroll.left;\n    const minY = scroll.top;\n    const maxX = canvasSize.width + minX;\n    const maxY = canvasSize.height + minY;\n    const list = controller.getDrawingList(controller.getCurrentSheetId());\n    const result: FloatElementItem[] = [];\n    for (const v of list) {\n      const p = controller.computeCellPosition({\n        row: v.fromRow,\n        col: v.fromCol,\n        colCount: 1,\n        rowCount: 1,\n        sheetId: '',\n      });\n      const top = p.top + v.marginY;\n      const left = p.left + v.marginX;\n      // the start point in the box or the end point in the box\n      const check =\n        (top > minY && top < maxY) ||\n        (left > minX && left < maxX) ||\n        (top + v.height > minY && top + v.height < maxY) ||\n        (left + v.width > minX && left + v.width < maxX);\n      if (check) {\n        const t: FloatElementItem = {\n          ...v,\n          top,\n          left,\n          labels: [],\n          datasets: [],\n        };\n        if (v.type === 'chart') {\n          const c = getChartData(v.chartRange!, controller);\n          t.labels = c.labels;\n          t.datasets = c.datasets;\n        }\n        result.push(t);\n      }\n    }\n    floatElementStore.setState(result);\n  }\n\n  if (changeSet.has('currentSheetId')) {\n    // async update\n    setTimeout(() => {\n      scrollSheetToView(controller.getCurrentSheetId());\n    }, 0);\n  }\n};\n\nfunction computeCanvasSize(canvas: HTMLCanvasElement) {\n  const scrollbarSize = parseInt(sizeConfig.largePadding, 10);\n  const dom = canvas.parentElement;\n  if (!dom) {\n    return null;\n  }\n  const size = dom.getBoundingClientRect();\n  const result = {\n    top: size.top,\n    left: size.left,\n    width: dom.clientWidth - scrollbarSize,\n    height: dom.clientHeight - scrollbarSize,\n  };\n  canvasSizeSet.set(result);\n}\n\nexport function initCanvas(\n  controller: IController,\n  canvas: HTMLCanvasElement,\n): () => void {\n  const familyList = initFontFamilyList();\n  fontFamilyStore.setState(familyList);\n  const mainCanvas = initRenderCanvas(controller, canvas);\n  const resize = () => {\n    renderCanvas(new Set<ChangeEventType>(['row']));\n  };\n  const renderCanvas = (changeSet: Set<ChangeEventType>) => {\n    computeCanvasSize(canvas);\n    mainCanvas.resize();\n    mainCanvas.render({ changeSet });\n  };\n  const offEvent = eventEmitter.on('modelChange', ({ changeSet }) => {\n    handleStateChange(changeSet, controller);\n    mainCanvas.render({ changeSet });\n  });\n\n  const removeEvent = registerGlobalEvent(controller, resize);\n\n  const changeSet = new Set<ChangeEventType>([\n    'currentSheetId',\n    'rangeMap',\n    'workbook',\n    'worksheets',\n    'drawings',\n    'definedNames',\n    'mergeCells',\n    'scroll',\n    'cellValue',\n    'row',\n    'col',\n    'cellStyle',\n    'undo',\n    'redo',\n    'antLine',\n  ]);\n  handleStateChange(changeSet, controller);\n  renderCanvas(changeSet);\n  queueMicrotask(() => {\n    renderCanvas(changeSet);\n  });\n\n  return () => {\n    removeEvent();\n    offEvent();\n  };\n}\n", "import React, { useState, memo, useSyncExternalStore } from 'react';\nimport { Button } from '../../components';\nimport { IController } from '@/types';\nimport styles from './index.module.css';\nimport { scrollBar } from '@/canvas';\nimport { $ } from '@/i18n';\nimport { classnames, sheetViewSizeSet, MAX_ADD_ROW_THRESHOLD } from '@/util';\nimport { scrollStore } from '../store';\n\ninterface Props {\n  controller: IController;\n}\n\nconst defaultData = 10;\n\nexport const BottomBar: React.FunctionComponent<Props> = memo(\n  ({ controller }) => {\n    const [value, setValue] = useState(defaultData);\n    const { showBottomBar } = useSyncExternalStore(\n      scrollStore.subscribe,\n      scrollStore.getSnapshot,\n    );\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      event.stopPropagation();\n      const val = parseInt(event.target.value, 10);\n      if (!isNaN(val)) {\n        if (val < 1) {\n          setValue(1);\n        } else if (val > MAX_ADD_ROW_THRESHOLD) {\n          setValue(MAX_ADD_ROW_THRESHOLD);\n        } else {\n          setValue(val);\n        }\n      }\n    };\n    const handleClick = () => {\n      const sheetInfo = controller.getSheetInfo(\n        controller.getCurrentSheetId(),\n      )!;\n      controller.addRow(sheetInfo.rowCount - 1, value);\n      const viewSize = sheetViewSizeSet.get();\n      scrollBar(controller, 0, viewSize.height);\n    };\n    return (\n      <div\n        className={classnames(styles['bottom-bar'], {\n          [styles.active]: showBottomBar,\n        })}\n        data-testid=\"canvas-bottom-bar\"\n      >\n        <div className={styles['bottom-bar-text']}>\n          {$('add-at-the-bottom')}\n        </div>\n        <input\n          value={value}\n          onChange={handleChange}\n          type=\"number\"\n          min={1}\n          max={MAX_ADD_ROW_THRESHOLD}\n          data-testid=\"canvas-bottom-bar-input\"\n          className={styles['bottom-bar-input']}\n        />\n        <div className={styles['bottom-bar-text']}>{$('rows')}</div>\n        <Button\n          testId=\"canvas-bottom-bar-add\"\n          className={styles['add-button']}\n          onClick={handleClick}\n        >\n          {$('add')}\n        </Button>\n      </div>\n    );\n  },\n);\n\nBottomBar.displayName = 'BottomBar';\n"],
  "mappings": "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",
  "names": ["import_react", "canvas_default", "canvas-container", "vertical-scroll-bar", "vertical-scroll-bar-content", "horizontal-scroll-bar", "horizontal-scroll-bar-content", "context-menu", "bottom-bar", "active", "bottom-bar-text", "bottom-bar-input", "add-button", "import_react", "scrollBar", "controller", "scrollX", "scrollY", "oldScroll", "maxHeight", "maxScrollHeight", "maxScrollWidth", "maxWidth", "computeScrollPosition", "scrollTop", "scrollLeft", "top", "left", "row", "col", "computeScrollRowAndCol", "data", "activeCell", "initState", "ScrollBar", "state", "scrollStore", "toggleEvents", "handlePointerUp", "handlePointerMove", "event", "toggleEvent", "addEvents", "status", "handleVerticalBarDown", "handleHorizontalBarDown", "React", "canvas_default", "import_react", "MENU_WIDTH", "ITEM_HEIGHT", "computeMenuStyle", "top", "left", "headerSize", "headerSizeSet", "rect", "canvasSizeSet", "clickPosition", "menuHeight", "y", "x", "realTop", "realLeft", "gap", "height", "threshold", "ContextMenu", "props", "controller", "hideContextMenu", "row", "col", "colCount", "rowCount", "activeCellStore", "ref", "useClickOutside", "style", "position", "handleDialog", "isRow", "value", "handleChange", "event", "t", "info", "$", "React", "toast", "i", "canvas_default", "Button", "getChartData", "range", "controller", "row", "col", "rowCount", "colCount", "sheetId", "result", "r", "index", "endRow", "HIDE_CELL", "list", "c", "endCol", "t", "parseNumber", "_value", "i", "updateActiveCell", "top", "canvasSizeSet", "activeCell", "isMerged", "cell", "defineName", "cellSize", "cellPosition", "fontFamily", "defaultFontFamily", "fontFamilyStore", "item", "isBold", "isItalic", "isStrike", "fontSize", "DEFAULT_FONT_SIZE", "fontColor", "getThemeColor", "fillColor", "isWrapText", "underline", "horizontalAlign", "verticalAlign", "numberFormat", "DEFAULT_FORMAT_CODE", "isRight", "horAlign", "displayValue", "realValue", "isDateFormat", "getFormatCode", "mergeType", "MERGE_CELL_LINE_BREAK", "LINE_BREAK", "activeCellStore", "styleStore", "handleStateChange", "changeSet", "sheetList", "v", "sheetListStore", "coreStore", "scroll", "canvasSize", "showBottomBar", "scrollStore", "defineNameStore", "minX", "minY", "maxX", "maxY", "p", "left", "floatElementStore", "scrollSheetToView", "computeCanvasSize", "canvas", "scrollbarSize", "sizeConfig", "dom", "size", "initCanvas", "familyList", "initFontFamilyList", "mainCanvas", "initRenderCanvas", "resize", "renderCanvas", "offEvent", "eventEmitter", "removeEvent", "registerGlobalEvent", "import_react", "defaultData", "BottomBar", "controller", "value", "setValue", "showBottomBar", "scrollStore", "handleChange", "event", "val", "MAX_ADD_ROW_THRESHOLD", "handleClick", "sheetInfo", "viewSize", "sheetViewSizeSet", "scrollBar", "React", "classnames", "canvas_default", "$", "Button", "DOUBLE_CLICK_TIME", "CanvasContainer", "props", "controller", "state", "menuPosition", "setMenuPosition", "DEFAULT_POSITION", "ref", "fn", "initCanvas", "handleContextMenu", "event", "hideContextMenu", "handlePointerMove", "headerSize", "headerSizeSet", "rect", "canvasSizeSet", "clientX", "clientY", "x", "y", "position", "getHitInfo", "range", "isMerged", "activeCell", "rowCount", "colCount", "handlePointerDown", "canvasRect", "timeStamp", "isSameRange", "coreStore", "checkFocus", "setActiveCellValue", "React", "canvas_default", "ScrollBar", "BottomBar", "FloatElementContainer", "ContextMenu"]
}
