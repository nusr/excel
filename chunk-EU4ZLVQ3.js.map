{
  "version": 3,
  "sources": ["../node_modules/.pnpm/ssf@https+++cdn.sheetjs.com+ssf-0.11.3+ssf-0.11.3.tgz/node_modules/ssf/ssf.js", "../src/model/numberFormat.ts", "../src/formula/token.ts", "../src/formula/formula/error.ts", "../src/formula/formula/text.ts", "../src/formula/formula/math.ts", "../src/formula/formula/float.ts", "../src/formula/formula/index.ts", "../src/formula/scanner.ts", "../src/formula/expression.ts", "../src/formula/parser.ts", "../src/formula/interpreter.ts", "../src/formula/eval.ts"],
  "sourcesContent": ["/* ssf.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*jshint -W041 */\nvar SSF = ({});\nfunction make_ssf(SSF){\nSSF.version = '0.11.3';\nfunction _strrev(x) { var o = \"\", i = x.length-1; while(i>=0) o += x.charAt(i--); return o; }\nfunction fill(c,l) { var o = \"\"; while(o.length < l) o+=c; return o; }\nfunction pad0(v,d){var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad_(v,d){var t=\"\"+v;return t.length>=d?t:fill(' ',d-t.length)+t;}\nfunction rpad_(v,d){var t=\"\"+v; return t.length>=d?t:t+fill(' ',d-t.length);}\nfunction pad0r1(v,d){var t=\"\"+Math.round(v); return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad0r2(v,d){var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nvar p2_32 = Math.pow(2,32);\nfunction pad0r(v,d){if(v>p2_32||v<-p2_32) return pad0r1(v,d); var i = Math.round(v); return pad0r2(i,d); }\nfunction isgeneral(s, i) { i = i || 0; return s.length >= 7 + i && (s.charCodeAt(i)|32) === 103 && (s.charCodeAt(i+1)|32) === 101 && (s.charCodeAt(i+2)|32) === 110 && (s.charCodeAt(i+3)|32) === 101 && (s.charCodeAt(i+4)|32) === 114 && (s.charCodeAt(i+5)|32) === 97 && (s.charCodeAt(i+6)|32) === 108; }\nvar days = [\n\t['Sun', 'Sunday'],\n\t['Mon', 'Monday'],\n\t['Tue', 'Tuesday'],\n\t['Wed', 'Wednesday'],\n\t['Thu', 'Thursday'],\n\t['Fri', 'Friday'],\n\t['Sat', 'Saturday']\n];\nvar months = [\n\t['J', 'Jan', 'January'],\n\t['F', 'Feb', 'February'],\n\t['M', 'Mar', 'March'],\n\t['A', 'Apr', 'April'],\n\t['M', 'May', 'May'],\n\t['J', 'Jun', 'June'],\n\t['J', 'Jul', 'July'],\n\t['A', 'Aug', 'August'],\n\t['S', 'Sep', 'September'],\n\t['O', 'Oct', 'October'],\n\t['N', 'Nov', 'November'],\n\t['D', 'Dec', 'December']\n];\nfunction init_table(t) {\n\tt[0]=  'General';\n\tt[1]=  '0';\n\tt[2]=  '0.00';\n\tt[3]=  '#,##0';\n\tt[4]=  '#,##0.00';\n\tt[9]=  '0%';\n\tt[10]= '0.00%';\n\tt[11]= '0.00E+00';\n\tt[12]= '# ?/?';\n\tt[13]= '# ??/??';\n\tt[14]= 'm/d/yy';\n\tt[15]= 'd-mmm-yy';\n\tt[16]= 'd-mmm';\n\tt[17]= 'mmm-yy';\n\tt[18]= 'h:mm AM/PM';\n\tt[19]= 'h:mm:ss AM/PM';\n\tt[20]= 'h:mm';\n\tt[21]= 'h:mm:ss';\n\tt[22]= 'm/d/yy h:mm';\n\tt[37]= '#,##0 ;(#,##0)';\n\tt[38]= '#,##0 ;[Red](#,##0)';\n\tt[39]= '#,##0.00;(#,##0.00)';\n\tt[40]= '#,##0.00;[Red](#,##0.00)';\n\tt[45]= 'mm:ss';\n\tt[46]= '[h]:mm:ss';\n\tt[47]= 'mmss.0';\n\tt[48]= '##0.0E+0';\n\tt[49]= '@';\n\tt[56]= '\"\u4E0A\u5348/\u4E0B\u5348 \"hh\"\u6642\"mm\"\u5206\"ss\"\u79D2 \"';\n}\n\nvar table_fmt = {};\ninit_table(table_fmt);\n/* Defaults determined by systematically testing in Excel 2019 */\n\n/* These formats appear to default to other formats in the table */\nvar default_map = [];\nvar defi = 0;\n\n//  5 -> 37 ...  8 -> 40\nfor(defi = 5; defi <= 8; ++defi) default_map[defi] = 32 + defi;\n\n// 23 ->  0 ... 26 ->  0\nfor(defi = 23; defi <= 26; ++defi) default_map[defi] = 0;\n\n// 27 -> 14 ... 31 -> 14\nfor(defi = 27; defi <= 31; ++defi) default_map[defi] = 14;\n// 50 -> 14 ... 58 -> 14\nfor(defi = 50; defi <= 58; ++defi) default_map[defi] = 14;\n\n// 59 ->  1 ... 62 ->  4\nfor(defi = 59; defi <= 62; ++defi) default_map[defi] = defi - 58;\n// 67 ->  9 ... 68 -> 10\nfor(defi = 67; defi <= 68; ++defi) default_map[defi] = defi - 58;\n// 72 -> 14 ... 75 -> 17\nfor(defi = 72; defi <= 75; ++defi) default_map[defi] = defi - 58;\n\n// 69 -> 12 ... 71 -> 14\nfor(defi = 67; defi <= 68; ++defi) default_map[defi] = defi - 57;\n\n// 76 -> 20 ... 78 -> 22\nfor(defi = 76; defi <= 78; ++defi) default_map[defi] = defi - 56;\n\n// 79 -> 45 ... 81 -> 47\nfor(defi = 79; defi <= 81; ++defi) default_map[defi] = defi - 34;\n\n// 82 ->  0 ... 65536 -> 0 (omitted)\n\n/* These formats technically refer to Accounting formats with no equivalent */\nvar default_str = {\n\t//  5 -- Currency,   0 decimal, black negative\n\t5:  '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n\t63: '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n\n\t//  6 -- Currency,   0 decimal, red   negative\n\t6:  '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n\t64: '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n\n\t//  7 -- Currency,   2 decimal, black negative\n\t7:  '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n\t65: '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n\n\t//  8 -- Currency,   2 decimal, red   negative\n\t8:  '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\t66: '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\n\t// 41 -- Accounting, 0 decimal, No Symbol\n\t41: '_(* #,##0_);_(* \\\\(#,##0\\\\);_(* \"-\"_);_(@_)',\n\n\t// 42 -- Accounting, 0 decimal, $  Symbol\n\t42: '_(\"$\"* #,##0_);_(\"$\"* \\\\(#,##0\\\\);_(\"$\"* \"-\"_);_(@_)',\n\n\t// 43 -- Accounting, 2 decimal, No Symbol\n\t43: '_(* #,##0.00_);_(* \\\\(#,##0.00\\\\);_(* \"-\"??_);_(@_)',\n\n\t// 44 -- Accounting, 2 decimal, $  Symbol\n\t44: '_(\"$\"* #,##0.00_);_(\"$\"* \\\\(#,##0.00\\\\);_(\"$\"* \"-\"??_);_(@_)'\n};\n\nfunction frac(x, D, mixed) {\n\tvar sgn = x < 0 ? -1 : 1;\n\tvar B = x * sgn;\n\tvar P_2 = 0, P_1 = 1, P = 0;\n\tvar Q_2 = 1, Q_1 = 0, Q = 0;\n\tvar A = Math.floor(B);\n\twhile(Q_1 < D) {\n\t\tA = Math.floor(B);\n\t\tP = A * P_1 + P_2;\n\t\tQ = A * Q_1 + Q_2;\n\t\tif((B - A) < 0.00000005) break;\n\t\tB = 1 / (B - A);\n\t\tP_2 = P_1; P_1 = P;\n\t\tQ_2 = Q_1; Q_1 = Q;\n\t}\n\tif(Q > D) { if(Q_1 > D) { Q = Q_2; P = P_2; } else { Q = Q_1; P = P_1; } }\n\tif(!mixed) return [0, sgn * P, Q];\n\tvar q = Math.floor(sgn * P/Q);\n\treturn [q, sgn*P - q*Q, Q];\n}\nfunction normalize_xl_unsafe(v) {\n\tvar s = v.toPrecision(16);\n\tif(s.indexOf(\"e\") > -1) {\n\t\tvar m = s.slice(0, s.indexOf(\"e\"));\n\t\tm = m.indexOf(\".\") > -1 ? m.slice(0, (m.slice(0,2) == \"0.\" ? 17 : 16)) : (m.slice(0,15) + fill(\"0\", m.length - 15));\n\t\treturn m + s.slice(s.indexOf(\"e\"));\n\t}\n\tvar n = s.indexOf(\".\") > -1 ? s.slice(0, (s.slice(0,2) == \"0.\" ? 17 : 16)) : (s.slice(0,15) + fill(\"0\", s.length - 15));\n\treturn Number(n);\n}\n\nfunction parse_date_code(v,opts,b2) {\n\tif(v > 2958465 || v < 0) return null;\n\tv = normalize_xl_unsafe(v);\n\tvar date = (v|0), time = Math.floor(86400 * (v - date)), dow=0;\n\tvar dout=[];\n\tvar out={D:date, T:time, u:86400*(v-date)-time,y:0,m:0,d:0,H:0,M:0,S:0,q:0};\n\tif(Math.abs(out.u) < 1e-6) out.u = 0;\n\tif(opts && opts.date1904) date += 1462;\n\tif(out.u > 0.9999) {\n\t\tout.u = 0;\n\t\tif(++time == 86400) { out.T = time = 0; ++date; ++out.D; }\n\t}\n\tif(date === 60) {dout = b2 ? [1317,10,29] : [1900,2,29]; dow=3;}\n\telse if(date === 0) {dout = b2 ? [1317,8,29] : [1900,1,0]; dow=6;}\n\telse {\n\t\tif(date > 60) --date;\n\t\t/* 1 = Jan 1 1900 in Gregorian */\n\t\tvar d = new Date(1900, 0, 1);\n\t\td.setDate(d.getDate() + date - 1);\n\t\tdout = [d.getFullYear(), d.getMonth()+1,d.getDate()];\n\t\tdow = d.getDay();\n\t\tif(date < 60) dow = (dow + 6) % 7;\n\t\tif(b2) dow = fix_hijri(d, dout);\n\t}\n\tout.y = dout[0]; out.m = dout[1]; out.d = dout[2];\n\tout.S = time % 60; time = Math.floor(time / 60);\n\tout.M = time % 60; time = Math.floor(time / 60);\n\tout.H = time;\n\tout.q = dow;\n\treturn out;\n}\nSSF.parse_date_code = parse_date_code;\nvar basedate = new Date(1899, 11, 31, 0, 0, 0);\nvar dnthresh = basedate.getTime();\nvar base1904 = new Date(1900, 2, 1, 0, 0, 0);\nfunction datenum_local(v, date1904) {\n\tvar epoch = v.getTime();\n\tif(date1904) epoch -= 1461*24*60*60*1000;\n\telse if(v >= base1904) epoch += 24*60*60*1000;\n\treturn (epoch - (dnthresh + (v.getTimezoneOffset() - basedate.getTimezoneOffset()) * 60000)) / (24 * 60 * 60 * 1000);\n}\n/* ECMA-376 18.8.30 numFmt*/\n/* Note: `toPrecision` uses standard form when prec > E and E >= -6 */\nvar general_fmt_num = (function make_general_fmt_num() {\n\tvar trailing_zeroes_and_decimal = /(?:\\.0*|(\\.\\d*[1-9])0+)$/;\n\tfunction strip_decimal(o) {\n\t\treturn (o.indexOf(\".\") == -1) ? o : o.replace(trailing_zeroes_and_decimal, \"$1\");\n\t}\n\n\t/* General Exponential always shows 2 digits exp and trims the mantissa */\n\tvar mantissa_zeroes_and_decimal = /(?:\\.0*|(\\.\\d*[1-9])0+)[Ee]/;\n\tvar exp_with_single_digit = /(E[+-])(\\d)$/;\n\tfunction normalize_exp(o) {\n\t\tif(o.indexOf(\"E\") == -1) return o;\n\t\treturn o.replace(mantissa_zeroes_and_decimal,\"$1E\").replace(exp_with_single_digit,\"$10$2\");\n\t}\n\n\t/* exponent >= -9 and <= 9 */\n\tfunction small_exp(v) {\n\t\tvar w = (v<0?12:11);\n\t\tvar o = strip_decimal(v.toFixed(12)); if(o.length <= w) return o;\n\t\to = v.toPrecision(10); if(o.length <= w) return o;\n\t\treturn v.toExponential(5);\n\t}\n\n\t/* exponent >= 11 or <= -10 likely exponential */\n\tfunction large_exp(v) {\n\t\tvar o = strip_decimal(v.toFixed(11));\n\t\treturn (o.length > (v<0?12:11) || o === \"0\" || o === \"-0\") ? v.toPrecision(6) : o;\n\t}\n\n\tfunction general_fmt_num_base(v) {\n\t\tvar V = Math.floor(Math.log(Math.abs(v))*Math.LOG10E), o;\n\n\t\tif(V >= -4 && V <= -1) o = v.toPrecision(10+V);\n\t\telse if(Math.abs(V) <= 9) o = small_exp(v);\n\t\telse if(V === 10) o = v.toFixed(10).substr(0,12);\n\t\telse o = large_exp(v);\n\n\t\treturn strip_decimal(normalize_exp(o.toUpperCase()));\n\t}\n\n\treturn general_fmt_num_base;\n})();\nSSF._general_num = general_fmt_num;\n\n/*\n\t\"General\" rules:\n\t- text is passed through (\"@\")\n\t- booleans are rendered as TRUE/FALSE\n\t- \"up to 11 characters\" displayed for numbers\n\t- Default date format (code 14) used for Dates\n\n\tThe longest 32-bit integer text is \"-2147483648\", exactly 11 chars\n\tTODO: technically the display depends on the width of the cell\n*/\nfunction general_fmt(v, opts) {\n\tswitch(typeof v) {\n\t\tcase 'string': return v;\n\t\tcase 'boolean': return v ? \"TRUE\" : \"FALSE\";\n\t\tcase 'number': return (v|0) === v ? v.toString(10) : general_fmt_num(v);\n\t\tcase 'undefined': return \"\";\n\t\tcase 'object':\n\t\t\tif(v == null) return \"\";\n\t\t\tif(v instanceof Date) return format(14, datenum_local(v, opts && opts.date1904), opts);\n\t}\n\tthrow new Error(\"unsupported value in General format: \" + v);\n}\nSSF._general = general_fmt;\nfunction fix_hijri(date, o) {\n  /* TODO: properly adjust y/m/d and  */\n  o[0] -= 581;\n  var dow = date.getDay();\n  if(date < 60) dow = (dow + 6) % 7;\n  return dow;\n}\nvar THAI_DIGITS = \"\\u0E50\\u0E51\\u0E52\\u0E53\\u0E54\\u0E55\\u0E56\\u0E57\\u0E58\\u0E59\".split(\"\");\n/*jshint -W086 */\nfunction write_date(type, fmt, val, ss0) {\n\tvar o=\"\", ss=0, tt=0, y = val.y, out, outl = 0;\n\tswitch(type) {\n\t\tcase 98: /* 'b' buddhist year */\n\t\t\ty = val.y + 543;\n\t\t\t/* falls through */\n\t\tcase 121: /* 'y' year */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = y % 100; outl = 2; break;\n\t\t\tdefault: out = y % 10000; outl = 4; break;\n\t\t} break;\n\t\tcase 109: /* 'm' month */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.m; outl = fmt.length; break;\n\t\t\tcase 3: return months[val.m-1][1];\n\t\t\tcase 5: return months[val.m-1][0];\n\t\t\tdefault: return months[val.m-1][2];\n\t\t} break;\n\t\tcase 100: /* 'd' day */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.d; outl = fmt.length; break;\n\t\t\tcase 3: return days[val.q][0];\n\t\t\tdefault: return days[val.q][1];\n\t\t} break;\n\t\tcase 104: /* 'h' 12-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = 1+(val.H+11)%12; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 72: /* 'H' 24-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.H; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 77: /* 'M' minutes */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.M; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad minute format: ' + fmt;\n\t\t} break;\n\t\tcase 115: /* 's' seconds */\n\t\t\tif(fmt != 's' && fmt != 'ss' && fmt != '.0' && fmt != '.00' && fmt != '.000') throw 'bad second format: ' + fmt;\n\t\t\tif(val.u === 0 && (fmt == \"s\" || fmt == \"ss\")) return pad0(val.S, fmt.length);\nif(ss0 >= 2) tt = ss0 === 3 ? 1000 : 100;\n\t\t\telse tt = ss0 === 1 ? 10 : 1;\n\t\t\tss = Math.round((tt)*(val.S + val.u));\n\t\t\tif(ss >= 60*tt) ss = 0;\n\t\t\tif(fmt === 's') return ss === 0 ? \"0\" : \"\"+ss/tt;\n\t\t\to = pad0(ss,2 + ss0);\n\t\t\tif(fmt === 'ss') return o.substr(0,2);\n\t\t\treturn \".\" + o.substr(2,fmt.length-1);\n\t\tcase 90: /* 'Z' absolute time */\n\t\tswitch(fmt) {\n\t\t\tcase '[h]': case '[hh]': out = val.D*24+val.H; break;\n\t\t\tcase '[m]': case '[mm]': out = (val.D*24+val.H)*60+val.M; break;\n\t\t\tcase '[s]': case '[ss]': out = ((val.D*24+val.H)*60+val.M)*60+(ss0 == 0 ? Math.round(val.S+val.u) : val.S); break;\n\t\t\tdefault: throw 'bad abstime format: ' + fmt;\n\t\t} outl = fmt.length === 3 ? 1 : 2; break;\n\t\tcase 101: /* 'e' era */\n\t\t\tout = y; outl = 1; break;\n\t}\n\tvar outstr = outl > 0 ? pad0(out, outl) : \"\";\n\treturn outstr;\n}\n/*jshint +W086 */\nfunction commaify(s) {\n\tvar w = 3;\n\tif(s.length <= w) return s;\n\tvar j = (s.length % w), o = s.substr(0,j);\n\tfor(; j!=s.length; j+=w) o+=(o.length > 0 ? \",\" : \"\") + s.substr(j,w);\n\treturn o;\n}\nvar write_num = (function make_write_num(){\nvar pct1 = /%/g;\nfunction write_num_pct(type, fmt, val){\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_cm(type, fmt, val){\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_exp(fmt, val){\n\tvar o;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(o.indexOf(\"e\") === -1) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\twhile(o.substr(0,2) === \"0.\") {\n\t\t\t\to = o.charAt(0) + o.substr(2,period) + \".\" + o.substr(2+period);\n\t\t\t\to = o.replace(/^0+([1-9])/,\"$1\").replace(/^0+\\./,\"0.\");\n\t\t\t}\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nvar frac1 = /# (\\?+)( ?)\\/( ?)(\\d+)/;\nfunction write_num_f1(r, aval, sign) {\n\tvar den = parseInt(r[4],10), rr = Math.round(aval * den), base = Math.floor(rr/den);\n\tvar myn = (rr - base*den), myd = den;\n\treturn sign + (base === 0 ? \"\" : \"\"+base) + \" \" + (myn === 0 ? fill(\" \", r[1].length + 1 + r[4].length) : pad_(myn,r[1].length) + r[2] + \"/\" + r[3] + pad0(myd,r[4].length));\n}\nfunction write_num_f2(r, aval, sign) {\n\treturn sign + (aval === 0 ? \"\" : \"\"+aval) + fill(\" \", r[1].length + 2 + r[4].length);\n}\nvar dec1 = /^#*0*\\.([0#]+)/;\nvar closeparen = /\\).*[0#]/;\nvar phone = /\\(###\\) ###\\\\?-####/;\nfunction hashq(str) {\n\tvar o = \"\", cc;\n\tfor(var i = 0; i != str.length; ++i) switch((cc=str.charCodeAt(i))) {\n\t\tcase 35: break;\n\t\tcase 63: o+= \" \"; break;\n\t\tcase 48: o+= \"0\"; break;\n\t\tdefault: o+= String.fromCharCode(cc);\n\t}\n\treturn o;\n}\nfunction rnd(val, d) { var dd = Math.pow(10,d); return \"\"+(Math.round(val * dd)/dd); }\nfunction dec(val, d) {\n\tvar _frac = val - Math.floor(val), dd = Math.pow(10,d);\n\tif (d < ('' + Math.round(_frac * dd)).length) return 0;\n\treturn Math.round(_frac * dd);\n}\nfunction carry(val, d) {\n\tif (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nfunction flr(val) {\n\tif(val < 2147483647 && val > -2147483648) return \"\"+(val >= 0 ? (val|0) : (val-1|0));\n\treturn \"\"+Math.floor(val);\n}\nfunction write_num_flt(type, fmt, val) {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_flt('n', ffmt, val);\n\t\treturn '(' + write_num_flt('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_flt(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0r(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = pad0r(val,0); if(o === \"0\") o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f1(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0r(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\n\t\to = rnd(val, r[1].length).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1])).replace(/\\.(\\d*)$/,function($$, $1) { return \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + rnd(aval, r[2].length).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify(pad0r(aval,0));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(\"\"+(Math.floor(val) + carry(val, r[1].length))) + \".\" + pad0(dec(val, r[1].length),r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_flt(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_flt(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_flt(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(r[4].length,7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", r[1], ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + r[2] + \"/\" + r[3];\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = pad0r(val, 0);\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0?]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\tri = dec(val, r[1].length);\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(flr(val)).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(ri,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,##0.00\": return write_num_flt(type, \"#,##0.00\", val);\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(pad0r(aval,0)); return x !== \"0\" ? sign + x : \"\";\n\t\tcase \"###,###.00\": return write_num_flt(type, \"###,##0.00\",val).replace(/^0\\./,\".\");\n\t\tcase \"#,###.00\": return write_num_flt(type, \"#,##0.00\",val).replace(/^0\\./,\".\");\n\t\tdefault:\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nfunction write_num_cm2(type, fmt, val){\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_pct2(type, fmt, val){\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_exp2(fmt, val){\n\tvar o;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp2(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(!o.match(/[Ee]/)) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nfunction write_num_int(type, fmt, val) {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_int('n', ffmt, val);\n\t\treturn '(' + write_num_int('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm2(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct2(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp2(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_int(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = (\"\"+val); if(val === 0) o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f2(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\no = (\"\"+val).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1]));\n\t\to = o.replace(/\\.(\\d*)$/,function($$, $1) {\nreturn \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + (\"\"+aval).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify((\"\"+aval));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify((\"\"+val)) + \".\" + fill('0',r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_int(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_int(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_int(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(r[4].length,7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", r[1], ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + r[2] + \"/\" + r[3];\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = \"\" + val;\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify(\"\"+val).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(0,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(\"\"+aval); return x !== \"0\" ? sign + x : \"\";\n\t\tdefault:\n\t\t\tif(fmt.match(/\\.[0#?]*$/)) return write_num_int(type, fmt.slice(0,fmt.lastIndexOf(\".\")), val) + hashq(fmt.slice(fmt.lastIndexOf(\".\")));\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nreturn function write_num(type, fmt, val) {\n\treturn (val|0) === val ? write_num_int(type, fmt, val) : write_num_flt(type, fmt, val);\n};})();\nfunction split_fmt(fmt) {\n\tvar out = [];\n\tvar in_str = false/*, cc*/;\n\tfor(var i = 0, j = 0; i < fmt.length; ++i) switch((/*cc=*/fmt.charCodeAt(i))) {\n\t\tcase 34: /* '\"' */\n\t\t\tin_str = !in_str; break;\n\t\tcase 95: case 42: case 92: /* '_' '*' '\\\\' */\n\t\t\t++i; break;\n\t\tcase 59: /* ';' */\n\t\t\tout[out.length] = fmt.substr(j,i-j);\n\t\t\tj = i+1;\n\t}\n\tout[out.length] = fmt.substr(j);\n\tif(in_str === true) throw new Error(\"Format |\" + fmt + \"| unterminated string \");\n\treturn out;\n}\nSSF._split = split_fmt;\nvar abstime = /\\[[HhMmSs\\u0E0A\\u0E19\\u0E17]*\\]/;\nfunction fmt_is_date(fmt) {\n\tvar i = 0, /*cc = 0,*/ c = \"\", o = \"\";\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': if(isgeneral(fmt, i)) i+= 6; i++; break;\n\t\t\tcase '\"': for(;(/*cc=*/fmt.charCodeAt(++i)) !== 34 && i < fmt.length;){/*empty*/} ++i; break;\n\t\t\tcase '\\\\': i+=2; break;\n\t\t\tcase '_': i+=2; break;\n\t\t\tcase '@': ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") return true;\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g': return true;\n\t\t\tcase 'A': case 'a': case '\u4E0A':\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") return true;\n\t\t\t\tif(fmt.substr(i, 5).toUpperCase() === \"AM/PM\") return true;\n\t\t\t\tif(fmt.substr(i, 5).toUpperCase() === \"\u4E0A\u5348/\u4E0B\u5348\") return true;\n\t\t\t\t++i; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.match(abstime)) return true;\n\t\t\t\tbreak;\n\t\t\tcase '.':\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\twhile(i < fmt.length && (\"0#?.,E+-%\".indexOf(c=fmt.charAt(++i)) > -1 || (c=='\\\\' && fmt.charAt(i+1) == \"-\" && \"0#\".indexOf(fmt.charAt(i+2))>-1))){/* empty */}\n\t\t\t\tbreak;\n\t\t\tcase '?': while(fmt.charAt(++i) === c){/* empty */} break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break;\n\t\t\tcase '(': case ')': ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\twhile(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1){/* empty */} break;\n\t\t\tcase ' ': ++i; break;\n\t\t\tdefault: ++i; break;\n\t\t}\n\t}\n\treturn false;\n}\nSSF.is_date = fmt_is_date;\nfunction eval_fmt(fmt, v, opts, flen) {\n\tvar out = [], o = \"\", i = 0, c = \"\", lst='t', dt, j, cc;\n\tvar hr='H';\n\t/* Tokenize */\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': /* General */\n\t\t\t\tif(!isgeneral(fmt, i)) throw new Error('unrecognized character ' + c + ' in ' +fmt);\n\t\t\t\tout[out.length] = {t:'G', v:'General'}; i+=7; break;\n\t\t\tcase '\"': /* Literal text */\n\t\t\t\tfor(o=\"\";(cc=fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) o += String.fromCharCode(cc);\n\t\t\t\tout[out.length] = {t:'t', v:o}; ++i; break;\n\t\t\tcase '\\\\': var w = fmt.charAt(++i), t = (w === \"(\" || w === \")\") ? w : 't';\n\t\t\t\tout[out.length] = {t:t, v:w}; ++i; break;\n\t\t\tcase '_': out[out.length] = {t:'t', v:\" \"}; i+=2; break;\n\t\t\tcase '@': /* Text Placeholder */\n\t\t\t\tout[out.length] = {t:'T', v:v}; ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") {\n\t\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts, fmt.charAt(i+1) === \"2\"); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'X', v:fmt.substr(i,2)}; lst = c; i+=2; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\tc = c.toLowerCase();\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g':\n\t\t\t\tif(v < 0) return \"\";\n\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\to = c; while(++i < fmt.length && fmt.charAt(i).toLowerCase() === c) o+=c;\n\t\t\t\tif(c === 'm' && lst.toLowerCase() === 'h') c = 'M';\n\t\t\t\tif(c === 'h') c = hr;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase 'A': case 'a': case '\u4E0A':\n\t\t\t\tvar q={t:c, v:c};\n\t\t\t\tif(dt==null) dt=parse_date_code(v, opts);\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") { if(dt!=null) q.v = dt.H >= 12 ? fmt.charAt(i+2) : c; q.t = 'T'; hr='h';i+=3;}\n\t\t\t\telse if(fmt.substr(i,5).toUpperCase() === \"AM/PM\") { if(dt!=null) q.v = dt.H >= 12 ? \"PM\" : \"AM\"; q.t = 'T'; i+=5; hr='h'; }\n\t\t\t\telse if(fmt.substr(i,5).toUpperCase() === \"\u4E0A\u5348/\u4E0B\u5348\") { if(dt!=null) q.v = dt.H >= 12 ? \"\u4E0B\u5348\" : \"\u4E0A\u5348\"; q.t = 'T'; i+=5; hr='h'; }\n\t\t\t\telse { q.t = \"t\"; ++i; }\n\t\t\t\tif(dt==null && q.t === 'T') return \"\";\n\t\t\t\tout[out.length] = q; lst = c; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.slice(-1) !== ']') throw 'unterminated \"[\" block: |' + o + '|';\n\t\t\t\tif(o.match(abstime)) {\n\t\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'Z', v:o.toLowerCase()};\n\t\t\t\t\tlst = o.charAt(1);\n\t\t\t\t} else if(o.indexOf(\"$\") > -1) {\n\t\t\t\t\to = (o.match(/\\$([^-\\[\\]]*)/)||[])[1]||\"$\";\n\t\t\t\t\tif(!fmt_is_date(fmt)) out[out.length] = {t:'t',v:o};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t/* Numbers */\n\t\t\tcase '.':\n\t\t\t\tif(dt != null) {\n\t\t\t\t\to = c; while(++i < fmt.length && (c=fmt.charAt(i)) === \"0\") o += c;\n\t\t\t\t\tout[out.length] = {t:'s', v:o}; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\to = c; while(++i < fmt.length && \"0#?.,E+-%\".indexOf(c=fmt.charAt(i)) > -1) o += c;\n\t\t\t\tout[out.length] = {t:'n', v:o}; break;\n\t\t\tcase '?':\n\t\t\t\to = c; while(fmt.charAt(++i) === c) o+=c;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break; // **\n\t\t\tcase '(': case ')': out[out.length] = {t:(flen===1?'t':c), v:c}; ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\to = c; while(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1) o+=fmt.charAt(i);\n\t\t\t\tout[out.length] = {t:'D', v:o}; break;\n\t\t\tcase ' ': out[out.length] = {t:c, v:c}; ++i; break;\n\t\t\tcase '$': out[out.length] = {t:'t', v:'$'}; ++i; break;\n\t\t\tdefault:\n\t\t\t\tif(\",$-+/():!^&'~{}<>=\u20ACacfijklopqrtuvwxzP\".indexOf(c) === -1) throw new Error('unrecognized character ' + c + ' in ' + fmt);\n\t\t\t\tout[out.length] = {t:'t', v:c}; ++i; break;\n\t\t}\n\t}\n\n\t/* Scan for date/time parts */\n\tvar bt = 0, ss0 = 0, ssm;\n\tfor(i=out.length-1, lst='t'; i >= 0; --i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 'h': case 'H': out[i].t = hr; lst='h'; if(bt < 1) bt = 1; break;\n\t\t\tcase 's':\n\t\t\t\tif((ssm=out[i].v.match(/\\.0+$/))) { ss0=Math.max(ss0,ssm[0].length-1); bt = 4;}\n\t\t\t\tif(bt < 3) bt = 3;\n\t\t\t/* falls through */\n\t\t\tcase 'd': case 'y': case 'e': lst=out[i].t; break;\n\t\t\tcase 'M': lst=out[i].t; if(bt < 2) bt = 2; break;\n\t\t\tcase 'm': if(lst === 's') { out[i].t = 'M'; if(bt < 2) bt = 2; } break;\n\t\t\tcase 'X': /*if(out[i].v === \"B2\");*/\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\tif(bt < 1 && out[i].v.match(/[Hh]/)) bt = 1;\n\t\t\t\tif(bt < 2 && out[i].v.match(/[Mm]/)) bt = 2;\n\t\t\t\tif(bt < 3 && out[i].v.match(/[Ss]/)) bt = 3;\n\t\t}\n\t}\n\n\t/* time rounding depends on presence of minute / second / usec fields */\n\tvar _dt;\n\tswitch(bt) {\n\t\tcase 0: break;\n\t\tcase 1:\n\t\tcase 2:\n\t\tcase 3:\n\t\t\tif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tif(dt.M >=  60) { dt.M = 0; ++dt.H; }\n\t\t\tif(dt.H >=  24) { dt.H = 0; ++dt.D; _dt = parse_date_code(dt.D); _dt.u = dt.u; _dt.S = dt.S; _dt.M = dt.M; _dt.H = dt.H; dt = _dt; }\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tswitch(ss0) {\n\t\t\t\tcase 1: dt.u = Math.round(dt.u * 10)/10; break;\n\t\t\t\tcase 2: dt.u = Math.round(dt.u * 100)/100; break;\n\t\t\t\tcase 3: dt.u = Math.round(dt.u * 1000)/1000; break;\n\t\t\t}\n\t\t\tif(dt.u >=   1) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tif(dt.M >=  60) { dt.M = 0; ++dt.H; }\n\t\t\tif(dt.H >=  24) { dt.H = 0; ++dt.D; _dt = parse_date_code(dt.D); _dt.u = dt.u; _dt.S = dt.S; _dt.M = dt.M; _dt.H = dt.H; dt = _dt; }\n\t\t\tbreak;\n\t}\n\n\t/* replace fields */\n\tvar nstr = \"\", jj;\n\tfor(i=0; i < out.length; ++i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 't': case 'T': case ' ': case 'D': break;\n\t\t\tcase 'X': out[i].v = \"\"; out[i].t = \";\"; break;\n\t\t\tcase 'd': case 'm': case 'y': case 'h': case 'H': case 'M': case 's': case 'e': case 'b': case 'Z':\nout[i].v = write_date(out[i].t.charCodeAt(0), out[i].v, dt, ss0);\n\t\t\t\tout[i].t = 't'; break;\n\t\t\tcase 'n': case '?':\n\t\t\t\tjj = i+1;\n\t\t\t\twhile(out[jj] != null && (\n\t\t\t\t\t(c=out[jj].t) === \"?\" || c === \"D\" ||\n\t\t\t\t\t((c === \" \" || c === \"t\") && out[jj+1] != null && (out[jj+1].t === '?' || out[jj+1].t === \"t\" && out[jj+1].v === '/')) ||\n\t\t\t\t\t(out[i].t === '(' && (c === ' ' || c === 'n' || c === ')')) ||\n\t\t\t\t\t(c === 't' && (out[jj].v === '/' || out[jj].v === ' ' && out[jj+1] != null && out[jj+1].t == '?'))\n\t\t\t\t)) {\n\t\t\t\t\tout[i].v += out[jj].v;\n\t\t\t\t\tout[jj] = {v:\"\", t:\";\"}; ++jj;\n\t\t\t\t}\n\t\t\t\tnstr += out[i].v;\n\t\t\t\ti = jj-1; break;\n\t\t\tcase 'G': out[i].t = 't'; out[i].v = general_fmt(v,opts); break;\n\t\t}\n\t}\n\tvar vv = \"\", myv, ostr;\n\tif(nstr.length > 0) {\n\t\tif(nstr.charCodeAt(0) == 40) /* '(' */ {\n\t\t\tmyv = (v<0&&nstr.charCodeAt(0) === 45 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t} else {\n\t\t\tmyv = (v<0 && flen > 1 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t\tif(myv < 0 && out[0] && out[0].t == 't') {\n\t\t\t\tostr = ostr.substr(1);\n\t\t\t\tout[0].v = \"-\" + out[0].v;\n\t\t\t}\n\t\t}\n\t\tjj=ostr.length-1;\n\t\tvar decpt = out.length;\n\t\tfor(i=0; i < out.length; ++i) if(out[i] != null && out[i].t != 't' && out[i].v.indexOf(\".\") > -1) { decpt = i; break; }\n\t\tvar lasti=out.length;\n\t\tif(decpt === out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tfor(i=out.length-1; i>= 0;--i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tif(jj>=out[i].v.length-1) { jj -= out[i].v.length; out[i].v = ostr.substr(jj+1, out[i].v.length); }\n\t\t\t\telse if(jj < 0) out[i].v = \"\";\n\t\t\t\telse { out[i].v = ostr.substr(0, jj+1); jj = -1; }\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t}\n\t\telse if(decpt !== out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tjj = ostr.indexOf(\".\")-1;\n\t\t\tfor(i=decpt; i>= 0; --i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")-1:out[i].v.length-1;\n\t\t\t\tvv = out[i].v.substr(j+1);\n\t\t\t\tfor(; j>=0; --j) {\n\t\t\t\t\tif(jj>=0 && (out[i].v.charAt(j) === \"0\" || out[i].v.charAt(j) === \"#\")) vv = ostr.charAt(jj--) + vv;\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t\tjj = ostr.indexOf(\".\")+1;\n\t\t\tfor(i=decpt; i<out.length; ++i) {\n\t\t\t\tif(out[i] == null || ('n?('.indexOf(out[i].t) === -1 && i !== decpt)) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")+1:0;\n\t\t\t\tvv = out[i].v.substr(0,j);\n\t\t\t\tfor(; j<out[i].v.length; ++j) {\n\t\t\t\t\tif(jj<ostr.length) vv += ostr.charAt(jj++);\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0; i<out.length; ++i) if(out[i] != null && 'n?'.indexOf(out[i].t)>-1) {\n\t\tmyv = (flen >1 && v < 0 && i>0 && out[i-1].v === \"-\" ? -v:v);\n\t\tout[i].v = write_num(out[i].t, out[i].v, myv);\n\t\tout[i].t = 't';\n\t}\n\tvar retval = \"\";\n\tfor(i=0; i !== out.length; ++i) if(out[i] != null) retval += out[i].v;\n\treturn retval;\n}\nSSF._eval = eval_fmt;\nvar cfregex = /\\[[=<>]/;\nvar cfregex2 = /\\[(=|>[=]?|<[>=]?)(-?\\d+(?:\\.\\d*)?)\\]/;\nfunction chkcond(v, rr) {\n\tif(rr == null) return false;\n\tvar thresh = parseFloat(rr[2]);\n\tswitch(rr[1]) {\n\t\tcase \"=\":  if(v == thresh) return true; break;\n\t\tcase \">\":  if(v >  thresh) return true; break;\n\t\tcase \"<\":  if(v <  thresh) return true; break;\n\t\tcase \"<>\": if(v != thresh) return true; break;\n\t\tcase \">=\": if(v >= thresh) return true; break;\n\t\tcase \"<=\": if(v <= thresh) return true; break;\n\t}\n\treturn false;\n}\nfunction choose_fmt(f, v) {\n\tvar fmt = split_fmt(f);\n\tvar l = fmt.length, lat = fmt[l-1].indexOf(\"@\");\n\tif(l<4 && lat>-1) --l;\n\tif(fmt.length > 4) throw new Error(\"cannot find right format for |\" + fmt.join(\"|\") + \"|\");\n\tif(typeof v !== \"number\") return [4, fmt.length === 4 || lat>-1?fmt[fmt.length-1]:\"@\"];\n\tswitch(fmt.length) {\n\t\tcase 1: fmt = lat>-1 ? [\"General\", \"General\", \"General\", fmt[0]] : [fmt[0], fmt[0], fmt[0], \"@\"]; break;\n\t\tcase 2: fmt = lat>-1 ? [fmt[0], fmt[0], fmt[0], fmt[1]] : [fmt[0], fmt[1], fmt[0], \"@\"]; break;\n\t\tcase 3: fmt = lat>-1 ? [fmt[0], fmt[1], fmt[0], fmt[2]] : [fmt[0], fmt[1], fmt[2], \"@\"]; break;\n\t\tcase 4: break;\n\t}\n\tvar ff = v > 0 ? fmt[0] : v < 0 ? fmt[1] : fmt[2];\n\tif(fmt[0].indexOf(\"[\") === -1 && fmt[1].indexOf(\"[\") === -1) return [l, ff];\n\tif(fmt[0].match(cfregex) != null || fmt[1].match(cfregex) != null) {\n\t\tvar m1 = fmt[0].match(cfregex2);\n\t\tvar m2 = fmt[1].match(cfregex2);\n\t\treturn chkcond(v, m1) ? [l, fmt[0]] : chkcond(v, m2) ? [l, fmt[1]] : [l, fmt[m1 != null && m2 != null ? 2 : 1]];\n\t}\n\treturn [l, ff];\n}\nfunction format(fmt,v,o) {\n\tif(o == null) o = {};\n\tvar sfmt = \"\";\n\tswitch(typeof fmt) {\n\t\tcase \"string\":\n\t\t\tif(fmt == \"m/d/yy\" && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = fmt;\n\t\t\tbreak;\n\t\tcase \"number\":\n\t\t\tif(fmt == 14 && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = (o.table != null ? (o.table) : table_fmt)[fmt];\n\t\t\tif(sfmt == null) sfmt = (o.table && o.table[default_map[fmt]]) || table_fmt[default_map[fmt]];\n\t\t\tif(sfmt == null) sfmt = default_str[fmt] || \"General\";\n\t\t\tbreak;\n\t}\n\tif(isgeneral(sfmt,0)) return general_fmt(v, o);\n\tif(v instanceof Date) v = datenum_local(v, o.date1904);\n\tvar f = choose_fmt(sfmt, v);\n\tif(isgeneral(f[1])) return general_fmt(v, o);\n\tif(v === true) v = \"TRUE\"; else if(v === false) v = \"FALSE\";\n\telse if(v === \"\" || v == null) return \"\";\n\treturn eval_fmt(f[1], v, o, f[0]);\n}\nfunction load_entry(fmt, idx) {\n\tif(typeof idx != 'number') {\n\t\tidx = +idx || -1;\nfor(var i = 0; i < 0x0188; ++i) {\nif(table_fmt[i] == undefined) { if(idx < 0) idx = i; continue; }\n\t\t\tif(table_fmt[i] == fmt) { idx = i; break; }\n\t\t}\nif(idx < 0) idx = 0x187;\n\t}\ntable_fmt[idx] = fmt;\n\treturn idx;\n}\nSSF.load = load_entry;\nSSF._table = table_fmt;\nSSF.get_table = function get_table() { return table_fmt; };\nSSF.load_table = function load_table(tbl) {\n\tfor(var i=0; i!=0x0188; ++i)\n\t\tif(tbl[i] !== undefined) load_entry(tbl[i], i);\n};\nSSF.init_table = init_table;\nSSF.format = format;\nSSF.choose_format = choose_fmt;\n}\nmake_ssf(SSF);\n/*global module */\nif(typeof module !== 'undefined' && typeof DO_NOT_EXPORT_SSF === 'undefined') module.exports = SSF;\n", "import SSF from 'ssf';\nimport { NumberFormatValue } from '@/types';\nimport { DEFAULT_FORMAT_CODE } from '@/util/constant';\n\ntype FormatOptions = {\n  dateNF?: string;\n  date1904?: boolean;\n};\n\nexport function numberFormat(\n  value: NumberFormatValue,\n  pattern?: string,\n  options: FormatOptions = {},\n) {\n  return SSF.format(pattern || DEFAULT_FORMAT_CODE, value, options);\n}\n\nexport function isDateFormat(format?: string) {\n  if (!format) {\n    return false;\n  }\n  return SSF.is_date(format);\n}\n\nexport function convertDateToNumber(v: Date, date1904?: boolean): number {\n  const baseDate = new Date(1899, 11, 31, 0, 0, 0);\n  const baseDateTime = baseDate.getTime();\n  const base1904 = new Date(1900, 2, 1, 0, 0, 0);\n  let epoch = v.getTime();\n  if (date1904) {\n    epoch -= 1461 * 24 * 60 * 60 * 1000;\n  } else if (v >= base1904) {\n    epoch += 24 * 60 * 60 * 1000;\n  }\n  const result =\n    (epoch -\n      (baseDateTime +\n        (v.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000)) /\n    (24 * 60 * 60 * 1000);\n  return result\n}\n", "import type { TokenType } from '@/types';\n\nexport class Token {\n  type: TokenType;\n  value: string;\n  constructor(type: TokenType, value: string) {\n    this.type = type;\n    this.value = value;\n  }\n  toString(): string {\n    return this.value;\n  }\n}\n", "import type { ResultType } from '@/types';\nimport { parseNumber } from '@/util/util';\nimport { type ErrorTypes } from '@/util/constant';\n\nexport class CustomError extends Error {\n  readonly value: ErrorTypes | '#TEXT';\n  constructor(value: ErrorTypes | '#TEXT') {\n    super(value);\n    this.value = value;\n  }\n}\n\nexport function assert(\n  condition: boolean,\n  message: ErrorTypes = '#VALUE!',\n): asserts condition {\n  if (!condition) {\n    throw new CustomError(message);\n  }\n}\n\nexport function mustOne(list: ResultType[]): ResultType {\n  assert(list.length === 1);\n  const [value] = list;\n  return value;\n}\n\nexport function mustOneString(list: ResultType[]): string {\n  const value = mustOne(list);\n  assert(typeof value === 'string');\n  return value;\n}\n\nexport function mustOneNumber(list: ResultType[]): number {\n  const value = mustOne(list);\n  const [check, num] = parseNumber(value);\n  assert(check);\n  return num;\n}\n\nexport function mustEmpty(list: ResultType[]) {\n  assert(list.length === 0);\n}\n", "import type { ResultType } from '@/types';\nimport { MAX_PARAMS_COUNT } from '@/util/constant';\nimport { assert, mustOneString, mustOneNumber, mustOne } from './error';\nimport { numberFormat } from '@/model/numberFormat'\n\nexport const T = (...list: ResultType[]): string => {\n  const value = mustOne(list);\n  return typeof value === 'string' ? value : '';\n};\n\nexport const LOWER = (...list: ResultType[]): string => {\n  const value = mustOneString(list);\n  return value.toLowerCase();\n};\nexport const CHAR = (...list: ResultType[]): string => {\n  const value = mustOneNumber(list);\n  return String.fromCharCode(value);\n};\nexport const CODE = (...list: ResultType[]): number => {\n  const value = mustOneString(list);\n  return value.charCodeAt(0);\n};\nexport const LEN = (...list: ResultType[]): number => {\n  const value = mustOneString(list);\n  return value.length;\n};\n\nexport const SPLIT = (...list: ResultType[]): string[] => {\n  assert(list.length === 2);\n  const [value, sep] = list;\n  assert(typeof value === 'string');\n  assert(typeof sep === 'string');\n  return value.split(sep);\n};\nexport const UPPER = (...list: ResultType[]): string => {\n  const value = mustOneString(list);\n  return value.toUpperCase();\n};\nexport const TEXT = (...list: ResultType[]): string => {\n  assert(list.length === 2);\n  const [value, format] = list;\n  assert(typeof value === 'string' || typeof value === 'number');\n  assert(typeof format === 'string');\n  return numberFormat(value, format)\n};\nexport const TRIM = (...list: ResultType[]): string => {\n  const value = mustOneString(list);\n  return value.replace(/ +/g, ' ').trim();\n};\nexport const CONCAT = (...list: ResultType[]): string => {\n  assert(list.length <= MAX_PARAMS_COUNT);\n  return list.join('');\n};\n\nconst formulas = {\n  CONCAT,\n  CONCATENATE: CONCAT,\n  SPLIT,\n  CHAR,\n  CODE,\n  UNICHAR: CHAR,\n  UNICODE: CODE,\n  LEN,\n  LOWER,\n  UPPER,\n  TRIM,\n  TEXT,\n  T,\n};\n\nexport default formulas;\n", "import { MAX_PARAMS_COUNT } from '@/util/constant';\nimport type { ResultType } from '../../types';\nimport { assert, mustOneNumber, mustEmpty } from './error';\nimport { parseNumber } from '@/util/util';\n\nfunction parseNumberArray(list: ResultType[]): number[] {\n  const result: number[] = [];\n  for (let i = 0; i < list.length; i++) {\n    const [check, num] = parseNumber(list[i]);\n    if (check) {\n      result.push(num);\n    }\n  }\n  return result;\n}\n\nexport const ABS = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.abs(data);\n};\nexport const ACOS = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.acos(data);\n};\n\nexport const ACOSH = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.log(data + Math.sqrt(data * data - 1));\n};\n\nexport const ACOT = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.atan(1 / data);\n};\n\nexport const ACOTH = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return 0.5 * Math.log((data + 1) / (data - 1));\n};\nexport const ASIN = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.asin(data);\n};\n\nexport const ASINH = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.log(data + Math.sqrt(data * data + 1));\n};\nexport const ATAN = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.atan(data);\n};\nexport const ATAN2 = (...list: ResultType[]): number => {\n  assert(list.length === 2);\n  const [x, y] = list;\n  assert(typeof x === 'number');\n  assert(typeof y === 'number');\n  return Math.atan2(x, y);\n};\nexport const ATANH = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.log((1 + data) / (data + 1)) / 2;\n};\n\nexport const AVERAGE = (...rest: ResultType[]): number => {\n  const list = parseNumberArray(rest);\n  assert(list.length <= MAX_PARAMS_COUNT && list.length >= 1);\n  return list.reduce((sum, cur) => sum + cur, 0) / list.length;\n};\n\nexport const COS = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.cos(data);\n};\nexport const COT = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return 1 / Math.tan(data);\n};\nexport const CSC = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return 1 / Math.sin(data);\n};\nexport const DECIMAL = (...list: ResultType[]): number => {\n  assert(list.length === 2);\n  const [data, radix] = list;\n  assert(typeof data === 'string');\n  assert(typeof radix === 'number');\n  return parseInt(data, radix);\n};\nexport const DEGREES = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return (data * 180) / Math.PI;\n};\nexport const EXP = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.exp(data);\n};\nexport const INT = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.floor(data);\n};\nexport const LN10 = (...list: ResultType[]): number => {\n  mustEmpty(list);\n  return Math.log(10);\n};\nexport const LN2 = (...list: ResultType[]): number => {\n  mustEmpty(list);\n  return Math.log(2);\n};\nexport const LOG10E = (...list: ResultType[]): number => {\n  mustEmpty(list);\n  return Math.LOG10E;\n};\nexport const LOG2E = (...list: ResultType[]): number => {\n  mustEmpty(list);\n  return Math.LOG2E;\n};\nexport const LOG = (...list: ResultType[]): number => {\n  assert(list.length >= 1 && list.length <= 2);\n  const [data, base = 10] = list;\n  assert(typeof data === 'number');\n  assert(typeof base === 'number');\n  return Math.log(data) / Math.log(base);\n};\n\nexport const LOG10 = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.log(data) / Math.log(10);\n};\nexport const PI = (...list: ResultType[]): number => {\n  mustEmpty(list);\n  return Math.PI;\n};\nexport const SIN = (...list: ResultType[]): number => {\n  const data = mustOneNumber(list);\n  return Math.sin(data);\n};\nexport const SUM = (...rest: ResultType[]): number => {\n  const list = parseNumberArray(rest);\n  assert(list.length <= MAX_PARAMS_COUNT);\n  return list.reduce((sum, cur) => sum + cur, 0);\n};\n\nconst formulas = {\n  ABS,\n  ACOS,\n  ACOSH,\n  ACOT,\n  ACOTH,\n  ASIN,\n  ASINH,\n  ATAN,\n  ATAN2,\n  ATANH,\n  AVERAGE,\n  COT,\n  COS,\n  EXP,\n  INT,\n  PI,\n  SIN,\n  SUM,\n};\n\nexport default formulas;\n", "import { FORMULA_MAX_PRECISION } from '@/util/constant';\n\nexport function roundNumber(a: number) {\n  const temp = String(a);\n  const result = /[.](\\d*)/.exec(temp);\n  if (result && result[1]) {\n    const f = Math.pow(10, Math.min(result[1].length, FORMULA_MAX_PRECISION));\n    const list = temp.split('.');\n    const t = list[0] + list[1].slice(0, FORMULA_MAX_PRECISION);\n    return Number(t) / f;\n  } else {\n    return a;\n  }\n}\n", "import textFormulas from './text';\nimport mathFormulas from './math';\nimport { BuiltInFormulas } from '@/util/constant';\n\ntype MergeType<T, A> = {\n  [K in keyof T | keyof A as K extends BuiltInFormulas\n    ? K\n    : never]: K extends keyof T ? T[K] : K extends keyof A ? A[K] : never;\n};\n\nexport type FormulaMap = MergeType<typeof textFormulas, typeof mathFormulas>;\n\nexport type FormulaKeys = keyof FormulaMap;\n\nconst allFormulas: FormulaMap = {\n  ...textFormulas,\n  ...mathFormulas,\n};\nexport * from './error';\nexport default allFormulas;\nexport * from './float';\n", "import { TokenType } from '@/types';\nimport { Token } from './token';\nimport { CustomError } from './formula';\nimport {\n  FORMULA_PREFIX,\n  ERROR_SET,\n  BUILT_IN_FUNCTION_SET,\n  CELL_REG_EXP,\n  COLUMN_REG_EXP,\n  DEFINED_NAME_REG_EXP,\n  type BuiltInFormulas,\n  ROW_REG_EXP,\n  type ErrorTypes,\n} from '@/util/constant';\nimport { isDigit, isAlpha } from '@/util/reference';\n\nconst emptyData = '';\n\nexport class Scanner {\n  private readonly list: string[];\n  private current = 0;\n  private start = 0;\n  private readonly tokens: Token[] = [];\n  constructor(source: string) {\n    this.list = [...source];\n  }\n  scan(): Token[] {\n    while (!this.isAtEnd()) {\n      this.start = this.current;\n      this.scanToken();\n    }\n    this.tokens.push(new Token(TokenType.EOF, ''));\n    if (this.tokens.length > 0 && this.tokens[0].type === TokenType.EQUAL) {\n      this.tokens.shift();\n    }\n    return this.tokens;\n  }\n  private peek() {\n    if (this.isAtEnd()) {\n      return emptyData;\n    }\n    return this.list[this.current];\n  }\n  private match(text: string) {\n    if (this.peek() !== text) {\n      return false;\n    }\n    this.next();\n    return true;\n  }\n  private next() {\n    if (this.isAtEnd()) {\n      return emptyData;\n    }\n    return this.list[this.current++];\n  }\n  private isAtEnd() {\n    return this.current >= this.list.length;\n  }\n  private addToken(type: TokenType) {\n    const text = this.list.slice(this.start, this.current).join('');\n    this.tokens.push(new Token(type, text));\n  }\n  private string(end: string) {\n    while (!this.isAtEnd() && this.peek() !== end) {\n      this.next();\n    }\n    if (this.peek() !== end) {\n      throw new CustomError('#VALUE!');\n    } else {\n      this.next();\n    }\n    const text = this.list.slice(this.start + 1, this.current - 1).join('');\n    if (end === \"'\" && this.match('!')) {\n      this.tokens.push(new Token(TokenType.SHEET_NAME, text));\n      return;\n    }\n    this.tokens.push(new Token(TokenType.STRING, text));\n  }\n  private getDigits() {\n    while (!this.isAtEnd() && isDigit(this.peek())) {\n      this.next();\n    }\n  }\n  private getAlphas() {\n    while (!this.isAtEnd() && isAlpha(this.peek())) {\n      this.next();\n    }\n  }\n  private matchR1C1() {\n    if (this.match('[')) {\n      this.match('-');\n      if (isDigit(this.peek())) {\n        this.getDigits();\n      } else {\n        throw new CustomError('#VALUE!');\n      }\n      if (this.peek() !== ']') {\n        throw new CustomError('#VALUE!');\n      } else {\n        this.next();\n      }\n    } else {\n      this.getDigits();\n    }\n  }\n  private matchScientificCounting() {\n    if (this.match('E') || this.match('e')) {\n      // 1E-10 1E+10\n      if (this.match('+') || this.match('-')) {\n        this.getDigits();\n        this.addToken(TokenType.NUMBER);\n        return true;\n      }\n      if (isDigit(this.peek())) {\n        this.getDigits();\n        this.addToken(TokenType.NUMBER);\n        return true;\n      }\n      // 1E or 1.1E not valid\n      throw new CustomError('#VALUE!');\n    }\n    return false;\n  }\n  private number() {\n    this.getDigits();\n    const check1 = this.matchScientificCounting();\n    if (check1) {\n      return;\n    }\n    if (this.match('.')) {\n      this.getDigits();\n    }\n    const check2 = this.matchScientificCounting();\n    if (check2) {\n      return;\n    }\n    this.addToken(TokenType.NUMBER);\n  }\n  private addIdentifier() {\n    while (!this.isAtEnd() && this.anyChar(this.peek())) {\n      this.next();\n    }\n    let text = this.list.slice(this.start, this.current).join('');\n    const t = text.toUpperCase();\n    if (BUILT_IN_FUNCTION_SET.has(t as BuiltInFormulas) && this.match('(')) {\n      this.tokens.push(new Token(TokenType.EXCEL_FUNCTION, t));\n      return;\n    }\n    if (['IF', 'CHOOSE'].includes(t) && this.match('(')) {\n      this.tokens.push(new Token(TokenType.REF_FUNCTION_COND, t));\n      return;\n    }\n    if (['INDEX', 'OFFSET', 'INDIRECT'].includes(t) && this.match('(')) {\n      this.tokens.push(new Token(TokenType.REF_FUNCTION, t));\n      return;\n    }\n    if (this.match('!')) {\n      this.tokens.push(new Token(TokenType.SHEET_NAME, text));\n      return;\n    }\n    let type: TokenType = TokenType.BOOL;\n    if (t === 'TRUE' || t === 'FALSE') {\n      text = t;\n      type = TokenType.BOOL;\n    } else if (ERROR_SET.has(t as ErrorTypes)) {\n      text = t;\n      type = t === '#REF!' ? TokenType.ERROR_REF : TokenType.ERROR;\n    } else if (CELL_REG_EXP.test(t)) {\n      type = TokenType.CELL;\n    } else if (COLUMN_REG_EXP.test(t)) {\n      type = TokenType.COLUMN;\n    } else if (ROW_REG_EXP.test(t)) {\n      type = TokenType.ROW;\n    } else if (DEFINED_NAME_REG_EXP.test(t)) {\n      type = TokenType.DEFINED_NAME;\n    } else {\n      throw new CustomError('#NAME?');\n    }\n\n    this.tokens.push(new Token(type, text));\n  }\n  private scanToken() {\n    const c = this.next();\n    switch (c) {\n      case '$': {\n        if (isAlpha(this.peek())) {\n          this.getAlphas();\n          if (this.match('$')) {\n            if (isDigit(this.peek())) {\n              // $A$1 absolute reference\n              this.getDigits();\n              this.addToken(TokenType.CELL);\n            } else {\n              this.addIdentifier();\n            }\n          } else if (isDigit(this.peek())) {\n            // $A1 mixed reference\n            this.getDigits();\n            this.addToken(TokenType.CELL);\n          } else {\n            // $A\n            this.addToken(TokenType.COLUMN);\n          }\n        } else if (isDigit(this.peek())) {\n          // $1 absolute reference\n          this.getDigits();\n          this.addToken(TokenType.ROW);\n        } else {\n          this.addIdentifier();\n        }\n        break;\n      }\n      case 'r':\n      case 'R': {\n        this.matchR1C1();\n        if (this.match('C') || this.match('c')) {\n          this.matchR1C1();\n          const text = this.list\n            .slice(this.start, this.current)\n            .join('')\n            .toUpperCase();\n          this.tokens.push(new Token(TokenType.R1C1, text));\n        } else {\n          this.addIdentifier();\n        }\n        break;\n      }\n      case '(':\n        this.addToken(TokenType.LEFT_BRACKET);\n        break;\n      case ')':\n        this.addToken(TokenType.RIGHT_BRACKET);\n        break;\n      case ',':\n        this.addToken(TokenType.COMMA);\n        break;\n      case ':':\n        this.addToken(TokenType.COLON);\n        break;\n      case FORMULA_PREFIX:\n        this.addToken(TokenType.EQUAL);\n        break;\n      case '<':\n        if (this.match('>')) {\n          this.addToken(TokenType.NOT_EQUAL);\n        } else if (this.match('=')) {\n          this.addToken(TokenType.LESS_EQUAL);\n        } else {\n          this.addToken(TokenType.LESS);\n        }\n        break;\n      case '>':\n        if (this.match('=')) {\n          this.addToken(TokenType.GREATER_EQUAL);\n        } else {\n          this.addToken(TokenType.GREATER);\n        }\n        break;\n      case '+':\n        this.addToken(TokenType.PLUS);\n        break;\n      case '-':\n        this.addToken(TokenType.MINUS);\n        break;\n      case '*':\n        this.addToken(TokenType.STAR);\n        break;\n      case '/':\n        this.addToken(TokenType.SLASH);\n        break;\n      case '^':\n        this.addToken(TokenType.EXPONENT);\n        break;\n      case '&':\n        this.addToken(TokenType.CONCATENATE);\n        break;\n      case '%':\n        this.addToken(TokenType.PERCENT);\n        break;\n      case '\"':\n        this.string(c);\n        break;\n      case \"'\":\n        this.string(c);\n        break;\n      case '!':\n        this.addToken(TokenType.EXCLAMATION);\n        break;\n      case ';':\n        this.addToken(TokenType.SEMICOLON);\n        break;\n      case '{':\n        this.addToken(TokenType.lEFT_BRACE);\n        break;\n      case '}':\n        this.addToken(TokenType.RIGHT_BRACE);\n        break;\n      case ' ':\n        // while (!this.isAtEnd() && this.peek() === ' ') {\n        // this.next();\n        // }\n        // this.addToken(TokenType.EMPTY_CHAR);\n        break;\n      case '\\r':\n      case '\\t':\n      case '\\n':\n        break;\n      default:\n        if (isDigit(c)) {\n          this.number();\n        } else {\n          this.addIdentifier();\n        }\n        break;\n    }\n  }\n  private anyChar(c: string) {\n    const text = '(),:=<>+-*/^&%\"{}!';\n    return !text.includes(c) && !this.isWhiteSpace(c);\n  }\n  private isWhiteSpace(c: string) {\n    return c === ' ' || c === '\\r' || c === '\\n' || c === '\\t';\n  }\n}\n", "import type { Token } from './token';\nimport { TokenType } from '@/types';\n\nexport interface Visitor {\n  visitBinaryExpression: (expr: BinaryExpression) => any;\n  visitUnaryExpression: (expr: UnaryExpression) => any;\n  visitPostUnaryExpression: (expr: PostUnaryExpression) => any;\n  visitLiteralExpression: (expr: LiteralExpression) => any;\n  visitCellExpression: (expr: CellExpression) => any;\n  visitCellRangeExpression: (expr: CellRangeExpression) => any;\n  visitCallExpression: (expr: CallExpression) => any;\n  visitGroupExpression: (expr: GroupExpression) => any;\n  visitArrayExpression: (expr: ArrayExpression) => any;\n}\n\nexport interface Expression {\n  accept: (visitor: Visitor) => any;\n  toString: () => string;\n}\n\nexport class BinaryExpression implements Expression {\n  readonly left: Expression;\n  readonly right: Expression;\n  readonly operator: Token;\n  constructor(left: Expression, operator: Token, right: Expression) {\n    this.left = left;\n    this.operator = operator;\n    this.right = right;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitBinaryExpression(this);\n  }\n  private handleConcatenate(value: Expression): string {\n    const result = value.toString();\n    const check =\n      this.operator.type === TokenType.CONCATENATE &&\n      value instanceof LiteralExpression &&\n      value.value.type === TokenType.STRING;\n    if (check) {\n      return JSON.stringify(result);\n    }\n    return result;\n  }\n  toString(): string {\n    const left = this.handleConcatenate(this.left);\n    const right = this.handleConcatenate(this.right);\n    return `${left}${this.operator.toString()}${right}`;\n  }\n}\n\nexport class UnaryExpression implements Expression {\n  readonly right: Expression;\n  readonly operator: Token;\n  constructor(operator: Token, right: Expression) {\n    this.operator = operator;\n    this.right = right;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitUnaryExpression(this);\n  }\n  toString(): string {\n    return this.operator.toString() + this.right.toString();\n  }\n}\n\nexport class PostUnaryExpression implements Expression {\n  readonly left: Expression;\n  readonly operator: Token;\n  constructor(operator: Token, left: Expression) {\n    this.operator = operator;\n    this.left = left;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitPostUnaryExpression(this);\n  }\n  toString(): string {\n    return this.left.toString() + this.operator.toString();\n  }\n}\n\nexport class LiteralExpression implements Expression {\n  readonly value: Token;\n  constructor(value: Token) {\n    this.value = value;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitLiteralExpression(this);\n  }\n  toString(): string {\n    return this.value.toString();\n  }\n}\n\nexport class CellExpression implements Expression {\n  readonly value: Token;\n  readonly sheetName: Token | undefined;\n  constructor(value: Token, sheetName: Token | undefined) {\n    this.value = value;\n    this.sheetName = sheetName;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitCellExpression(this);\n  }\n  toString(): string {\n    const t = this.value.toString().toUpperCase();\n    if (this.sheetName) {\n      let name = this.sheetName.toString();\n      if (name.includes(' ')) {\n        name = `'${name}'`;\n      }\n      return `${name}!${t}`;\n    } else {\n      return t;\n    }\n  }\n}\n\nexport class CallExpression implements Expression {\n  readonly name: Token;\n  readonly params: Expression[];\n  constructor(name: Token, params: Expression[]) {\n    this.name = name;\n    this.params = params;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitCallExpression(this);\n  }\n  toString(): string {\n    return `${this.name.toString()}(${this.params\n      .map((item) => item.toString())\n      .join(',')})`;\n  }\n}\n\nexport class CellRangeExpression implements Expression {\n  readonly right: CellExpression;\n  readonly operator: Token;\n  readonly left: CellExpression;\n  constructor(left: CellExpression, operator: Token, right: CellExpression) {\n    this.left = left;\n    this.operator = operator;\n    this.right = right;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitCellRangeExpression(this);\n  }\n  toString(): string {\n    return (\n      this.left.toString() + this.operator.toString() + this.right.toString()\n    );\n  }\n}\n\nexport class GroupExpression implements Expression {\n  readonly value: Expression;\n  constructor(value: Expression) {\n    this.value = value;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitGroupExpression(this);\n  }\n  toString(): string {\n    return `(${this.value.toString()})`;\n  }\n}\n\nexport class ArrayExpression implements Expression {\n  readonly value: Expression[];\n  constructor(value: Expression[]) {\n    this.value = value;\n  }\n  accept(visitor: Visitor) {\n    return visitor.visitArrayExpression(this);\n  }\n  toString(): string {\n    const temp = this.value.map((v) => v.toString()).join(',');\n    return `{${temp}}`;\n  }\n}\n", "import { TokenType } from '@/types';\nimport { Token } from './token';\nimport {\n  Expression,\n  GroupExpression,\n  PostUnaryExpression,\n  BinaryExpression,\n  UnaryExpression,\n  CallExpression,\n  LiteralExpression,\n  CellRangeExpression,\n  CellExpression,\n  ArrayExpression,\n} from './expression';\nimport { CustomError } from './formula';\nimport { type ErrorTypes } from '@/util/constant';\n\nexport class Parser {\n  private readonly tokens: Token[];\n  private current = 0;\n  constructor(tokens: Token[]) {\n    this.tokens = tokens;\n  }\n  parse(): Expression[] {\n    const result: Expression[] = [];\n    while (!this.isAtEnd()) {\n      result.push(this.expression());\n    }\n    return result;\n  }\n  private expression(): Expression {\n    return this.comparison();\n  }\n  private comparison(): Expression {\n    let expr = this.concatenate();\n    while (\n      this.match(\n        TokenType.EQUAL,\n        TokenType.NOT_EQUAL,\n        TokenType.GREATER,\n        TokenType.GREATER_EQUAL,\n        TokenType.LESS,\n        TokenType.LESS_EQUAL,\n      )\n    ) {\n      const operator = this.previous();\n      const right = this.concatenate();\n      expr = new BinaryExpression(expr, operator, right);\n    }\n    return expr;\n  }\n  private concatenate(): Expression {\n    let expr = this.term();\n    while (this.match(TokenType.CONCATENATE)) {\n      const operator = this.previous();\n      const right = this.term();\n      expr = new BinaryExpression(expr, operator, right);\n    }\n    return expr;\n  }\n  private term(): Expression {\n    let expr = this.factor();\n    while (this.match(TokenType.PLUS, TokenType.MINUS)) {\n      const operator = this.previous();\n      const right = this.factor();\n      expr = new BinaryExpression(expr, operator, right);\n    }\n    return expr;\n  }\n  private factor(): Expression {\n    let expr = this.expo();\n    while (this.match(TokenType.SLASH, TokenType.STAR)) {\n      const operator = this.previous();\n      const right = this.expo();\n      expr = new BinaryExpression(expr, operator, right);\n    }\n    return expr;\n  }\n  private expo(): Expression {\n    let expr = this.unary();\n    while (this.match(TokenType.EXPONENT)) {\n      const operator = this.previous();\n      const right = this.unary();\n      expr = new BinaryExpression(expr, operator, right);\n    }\n    return expr;\n  }\n\n  private unary(): Expression {\n    if (this.match(TokenType.PLUS, TokenType.MINUS)) {\n      const operator = this.previous();\n      const right = this.unary();\n      return new UnaryExpression(operator, right);\n    }\n    return this.postUnary();\n  }\n  private postUnary(): Expression {\n    let expr = this.cellRange();\n    if (this.match(TokenType.PERCENT)) {\n      const operator = this.previous();\n      expr = new PostUnaryExpression(operator, expr);\n    }\n    return expr;\n  }\n  private cellRange(): Expression {\n    let expr = this.sheetRange();\n    while (this.match(TokenType.COLON)) {\n      const operator = this.previous();\n      const right = this.sheetRange();\n      const realRight = this.convertToCellExpression(right);\n      const realLeft = this.convertToCellExpression(expr);\n      expr = new CellRangeExpression(realLeft, operator, realRight);\n    }\n    return expr;\n  }\n  private convertToCellExpression(expr: Expression): CellExpression {\n    if (expr instanceof CellExpression) {\n      return expr;\n    }\n    if (\n      expr instanceof LiteralExpression &&\n      expr.value.type === TokenType.NUMBER\n    ) {\n      return new CellExpression(expr.value, undefined);\n    }\n    throw new CustomError('#NAME?');\n  }\n  private sheetRange(): Expression {\n    if (this.match(TokenType.SHEET_NAME)) {\n      const name = this.previous();\n      let expr = this.call();\n      if (expr instanceof CellExpression) {\n        return new CellExpression(expr.value, name);\n      }\n      throw new CustomError('#REF!');\n    }\n    return this.call();\n  }\n  private call(): Expression {\n    while (\n      this.match(\n        TokenType.EXCEL_FUNCTION,\n        TokenType.REF_FUNCTION,\n        TokenType.REF_FUNCTION_COND,\n      )\n    ) {\n      const name = this.previous();\n      const params: Expression[] = [];\n      if (!this.check(TokenType.RIGHT_BRACKET)) {\n        do {\n          // fix SUM(1,)\n          if (this.peek().type == TokenType.RIGHT_BRACKET) {\n            break;\n          }\n          params.push(this.expression());\n        } while (this.match(TokenType.COMMA));\n      }\n      this.expect(TokenType.RIGHT_BRACKET);\n      return new CallExpression(name, params);\n    }\n    return this.primary();\n  }\n  private primary(): Expression {\n    if (this.match(TokenType.lEFT_BRACE)) {\n      const list: Expression[] = [];\n      do {\n        if (this.peek().type == TokenType.RIGHT_BRACE) {\n          break;\n        }\n        list.push(this.expression());\n      } while (this.match(TokenType.COMMA));\n      this.expect(TokenType.RIGHT_BRACE);\n      return new ArrayExpression(list);\n    }\n    if (this.match(TokenType.LEFT_BRACKET)) {\n      const value = this.expression();\n      this.expect(TokenType.RIGHT_BRACKET);\n      return new GroupExpression(value);\n    }\n    if (this.match(TokenType.NUMBER, TokenType.STRING, TokenType.BOOL)) {\n      return new LiteralExpression(this.previous());\n    }\n    if (\n      this.match(\n        TokenType.CELL,\n        TokenType.COLUMN,\n        TokenType.ROW,\n        TokenType.DEFINED_NAME,\n        TokenType.R1C1,\n      )\n    ) {\n      const token = this.previous();\n      return new CellExpression(token, undefined);\n    }\n    if (this.match(TokenType.ERROR, TokenType.ERROR_REF)) {\n      throw new CustomError(this.previous().value as ErrorTypes);\n    }\n\n    throw new CustomError('#VALUE!');\n  }\n  private match(...types: TokenType[]): boolean {\n    const { type } = this.peek();\n    if (types.includes(type)) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n  private previous(): Token {\n    return this.tokens[this.current - 1];\n  }\n  private check(type: TokenType): boolean {\n    return this.peek().type === type;\n  }\n  private expect(type: TokenType): Token {\n    if (this.check(type)) {\n      this.next();\n      return this.previous();\n    } else {\n      throw new CustomError('#VALUE!');\n    }\n  }\n  private next() {\n    this.current++;\n  }\n  private isAtEnd() {\n    return this.peek().type === TokenType.EOF;\n  }\n  private peek(): Token {\n    if (this.current < this.tokens.length) {\n      return this.tokens[this.current];\n    }\n    return new Token(TokenType.EOF, '');\n  }\n}\n", "import { SheetRange, iterateRange } from '@/util/range';\nimport { mergeRange, parseReference, parseR1C1 } from '@/util/reference';\nimport { parseNumber } from '@/util/util';\nimport {\n  TokenType,\n  CellDataMap,\n  ResultType,\n  IRange,\n  Coordinate,\n} from '@/types';\nimport type {\n  Visitor,\n  Expression,\n  CellRangeExpression,\n  PostUnaryExpression,\n} from './expression';\nimport {\n  BinaryExpression,\n  UnaryExpression,\n  CellExpression,\n  CallExpression,\n  LiteralExpression,\n  GroupExpression,\n  ArrayExpression,\n} from './expression';\nimport { CustomError } from './formula';\n\nexport class Interpreter implements Visitor {\n  private readonly expressions: Expression[];\n  private readonly cellDataMap: CellDataMap;\n  private currentCoord: Coordinate;\n  constructor(\n    expressions: Expression[],\n    currentCoord: Coordinate,\n    cellDataMap: CellDataMap,\n  ) {\n    this.expressions = expressions;\n    this.cellDataMap = cellDataMap;\n    this.currentCoord = currentCoord;\n  }\n  interpret(): ResultType[] {\n    let result: ResultType[] = [];\n    for (const item of this.expressions) {\n      const temp = this.evaluate(item);\n      const r = this.getRangeCellValue(temp);\n      if (Array.isArray(r)) {\n        result = result.concat(r);\n      } else {\n        result.push(r);\n      }\n    }\n    return result;\n  }\n\n  visitBinaryExpression(data: BinaryExpression): any {\n    let left = this.evaluate(data.left);\n    let right = this.evaluate(data.right);\n    left = this.getOneValue(left);\n    right = this.getOneValue(right);\n    if (\n      [\n        TokenType.MINUS,\n        TokenType.PLUS,\n        TokenType.SLASH,\n        TokenType.STAR,\n        TokenType.EXPONENT,\n      ].includes(data.operator.type)\n    ) {\n      left = this.parseNumber(left);\n      right = this.parseNumber(right);\n    }\n\n    switch (data.operator.type) {\n      case TokenType.MINUS:\n        return left - right;\n      case TokenType.PLUS:\n        return left + right;\n      case TokenType.SLASH: {\n        if (right === 0) {\n          throw new CustomError('#DIV/0!');\n        }\n        return left / right;\n      }\n      case TokenType.STAR:\n        return left * right;\n      case TokenType.EXPONENT:\n        return Math.pow(left, right);\n      case TokenType.EQUAL:\n        return left === right;\n      case TokenType.NOT_EQUAL:\n        return left !== right;\n      case TokenType.GREATER:\n        return left > right;\n      case TokenType.GREATER_EQUAL:\n        return left >= right;\n      case TokenType.LESS:\n        return left < right;\n      case TokenType.LESS_EQUAL:\n        return left <= right;\n      case TokenType.CONCATENATE:\n        return `${left}${right}`;\n      default:\n        throw new CustomError('#TEXT');\n    }\n  }\n  visitCallExpression(expr: CallExpression) {\n    const callee = this.cellDataMap.getFunction(expr.name.value);\n    if (callee && typeof callee === 'function') {\n      let params: ResultType[] = [];\n      for (const item of expr.params) {\n        const t = this.evaluate(item);\n        if (t instanceof SheetRange) {\n          const list = this.getCellValue(t, false);\n          params = params.concat(list);\n        } else {\n          params.push(t);\n        }\n      }\n      return callee(...params);\n    }\n    throw new CustomError('#NAME?');\n  }\n  visitCellExpression(data: CellExpression) {\n    let sheetId = '';\n    if (data.sheetName) {\n      const sheetInfo = this.cellDataMap.getSheetInfo('', data.sheetName.value);\n      if (!sheetInfo?.sheetId) {\n        throw new CustomError('#REF!');\n      }\n      sheetId = sheetInfo.sheetId;\n    }\n    let range: IRange | undefined = undefined;\n    if (\n      [\n        TokenType.DEFINED_NAME,\n        TokenType.CELL,\n        TokenType.COLUMN,\n        TokenType.R1C1,\n      ].includes(data.value.type)\n    ) {\n      range = this.cellDataMap.getDefinedName(data.value.value);\n    }\n    if (!range) {\n      if (data.value.type === TokenType.R1C1) {\n        range = parseR1C1(data.value.value, this.currentCoord);\n      } else {\n        range = parseReference(data.value.value);\n      }\n    }\n    if (!range) {\n      throw new CustomError('#REF!');\n    }\n    if (sheetId) {\n      range.sheetId = sheetId;\n    }\n    return range;\n  }\n  visitLiteralExpression(expr: LiteralExpression) {\n    const { type, value } = expr.value;\n    switch (type) {\n      case TokenType.STRING:\n        return value;\n      case TokenType.NUMBER: {\n        const [check, num] = parseNumber(value);\n        if (check) {\n          return num;\n        }\n        throw new CustomError('#VALUE!');\n      }\n      case TokenType.BOOL:\n        return value === 'TRUE';\n      default:\n        throw new CustomError('#VALUE!');\n    }\n  }\n  visitUnaryExpression(data: UnaryExpression): any {\n    const value = this.evaluate(data.right);\n    const result = this.parseNumber(this.getOneValue(value));\n    switch (data.operator.type) {\n      case TokenType.MINUS:\n        return -result;\n      case TokenType.PLUS:\n        return result;\n      default:\n        throw new CustomError('#VALUE!');\n    }\n  }\n\n  visitCellRangeExpression(expr: CellRangeExpression): any {\n    switch (expr.operator.type) {\n      case TokenType.COLON: {\n        const a = this.visitCellExpression(expr.left);\n        const b = this.visitCellExpression(expr.right);\n        const result = mergeRange(a, b);\n        if (!result) {\n          throw new CustomError('#NAME?');\n        }\n        return result;\n      }\n      default:\n        throw new CustomError('#NAME?');\n    }\n  }\n  visitGroupExpression(expr: GroupExpression): any {\n    return this.evaluate(expr.value);\n  }\n  visitArrayExpression(expr: ArrayExpression) {\n    const result: ResultType[] = [];\n    for (const item of expr.value) {\n      result.push(this.evaluate(item));\n    }\n    return result;\n  }\n  visitPostUnaryExpression(expr: PostUnaryExpression): any {\n    const value = this.evaluate(expr.left);\n    const result = this.parseNumber(this.getOneValue(value));\n    switch (expr.operator.type) {\n      case TokenType.PERCENT:\n        return result * 0.01;\n      default:\n        throw new CustomError('#VALUE!');\n    }\n  }\n  private evaluate(expr: Expression) {\n    return expr.accept(this);\n  }\n  private getRangeCellValue(value: any) {\n    if (value instanceof SheetRange) {\n      if (value.colCount === value.rowCount && value.colCount === 1) {\n        return this.getCellValue(value, true);\n      }\n      throw new CustomError('#REF!');\n    }\n    return value;\n  }\n\n  private getOneValue(value: any) {\n    const result = this.getRangeCellValue(value);\n    if (Array.isArray(result)) {\n      return result[0];\n    } else {\n      return result;\n    }\n  }\n  private parseNumber(value: any) {\n    const [check, result] = parseNumber(value);\n    if (!check) {\n      throw new CustomError('#VALUE!');\n    }\n    return result;\n  }\n\n  private getCellValue(range: IRange, isOneCell: boolean): ResultType[] {\n    let result: ResultType[] = [];\n    if (isOneCell) {\n      const t = this.cellDataMap.getCell(range);\n      const r = this.cellDataMap.handleCell(t, {\n        row: range.row,\n        col: range.col,\n      });\n      result = result.concat(r);\n      return result;\n    }\n    const { row, col, sheetId } = range;\n    const sheetInfo = this.cellDataMap.getSheetInfo(sheetId);\n    if (!sheetInfo || row >= sheetInfo.rowCount || col >= sheetInfo.colCount) {\n      throw new CustomError('#REF!');\n    }\n    iterateRange(range, sheetInfo, (r, c) => {\n      const t = this.cellDataMap.getCell({\n        row: r,\n        col: c,\n        rowCount: 1,\n        colCount: 1,\n        sheetId,\n      });\n      const a = this.cellDataMap.handleCell(t, { row: r, col: c });\n      result = result.concat(a);\n      return false;\n    });\n    return result;\n  }\n}\n", "import { Scanner } from './scanner';\nimport { Parser } from './parser';\nimport allFormulas, {\n  CustomError,\n  roundNumber,\n  type FormulaKeys,\n} from './formula';\nimport { Interpreter } from './interpreter';\nimport {\n  CellDataMap,\n  InterpreterResult,\n  IRange,\n  ResultType,\n  Coordinate,\n  WorksheetType,\n  ModelCellType,\n  RequestFormulas,\n  ResponseFormulas,\n} from '@/types';\nimport { isFormula, coordinateToString, stringToCoordinate } from '@/util/util';\nimport { SheetRange } from '@/util';\n\nexport function parseFormula(\n  formula: string,\n  currentCoord: Coordinate = { row: 0, col: 0 },\n  cellData: CellDataMap = new CellDataMapImpl(),\n  cache: Map<string, InterpreterResult> = new Map<string, InterpreterResult>(),\n): InterpreterResult {\n  if (cache.has(formula)) {\n    const t = cache.get(formula)!;\n    if (t.result.length === 0) {\n      return { result: [0] };\n    }\n    return t;\n  }\n  try {\n    cellData.handleCell = (\n      value: ModelCellType | undefined,\n      coord: Coordinate,\n    ): ResultType[] => {\n      if (value) {\n        if (value.formula) {\n          const t = parseFormula(value.formula, coord, cellData, cache);\n          return t.result;\n        } else {\n          return [value.value];\n        }\n      }\n      return [];\n    };\n    const result: InterpreterResult = {\n      result: [],\n      expressionStr: '',\n    };\n    cache.set(formula, result);\n    const list = new Scanner(formula).scan();\n    const expressions = new Parser(list).parse();\n    const resultList = new Interpreter(\n      expressions,\n      currentCoord,\n      cellData,\n    ).interpret();\n\n    const strList: string[] = [];\n    for (const item of expressions) {\n      strList.push(item.toString());\n    }\n    result.expressionStr = strList.join('');\n    for (const item of resultList) {\n      if (typeof item === 'number' && !isNaN(item)) {\n        result.result.push(roundNumber(item));\n      } else {\n        result.result.push(item);\n      }\n    }\n    return result;\n  } catch (error) {\n    if (error instanceof CustomError) {\n      const result: InterpreterResult = {\n        result: [error.value],\n      };\n      cache.set(formula, result);\n      return result;\n    }\n    throw error;\n  }\n}\n\nconst defaultSheetId = '_test_';\nexport class CellDataMapImpl implements CellDataMap {\n  private readonly map = new Map<string, ModelCellType>();\n  private readonly definedNameMap = new Map<string, SheetRange>();\n  private readonly currentSheetId = defaultSheetId;\n  private sheetList: WorksheetType[] = [\n    {\n      sheetId: defaultSheetId,\n      name: '_test_',\n      rowCount: 200,\n      colCount: 30,\n      isHide: false,\n      sort: 1,\n    },\n  ];\n  private getKey(row: number, col: number, sheetId: string) {\n    const key = `${row}_${col}_${sheetId || defaultSheetId}`;\n    return key;\n  }\n  getFunction = (name: string) => {\n    return allFormulas[name as FormulaKeys];\n  };\n  setSheetList(list: WorksheetType[]) {\n    this.sheetList = list;\n  }\n  set(range: IRange, value: ResultType[][]): void {\n    const { row, col, sheetId } = range;\n    for (let i = 0; i < value.length; i++) {\n      for (let j = 0; j < value[i].length; j++) {\n        const key = this.getKey(row + i, col + j, sheetId);\n        const t = value[i][j];\n        if (typeof t === 'string' && isFormula(t)) {\n          this.map.set(key, { formula: t, value: '' });\n        } else {\n          this.map.set(key, { value: t });\n        }\n      }\n    }\n  }\n  getCell(range: IRange) {\n    const { row, col, sheetId } = range;\n    const key = this.getKey(row, col, sheetId);\n    const item = this.map.get(key);\n    return item;\n  }\n  getSheetInfo(sheetId?: string, sheetName?: string) {\n    if (sheetName) {\n      return this.sheetList.find((v) => v.name === sheetName);\n    }\n    const realSheetId = sheetId || this.currentSheetId;\n    return this.sheetList.find((v) => v.sheetId === realSheetId);\n  }\n  handleCell = (value: ModelCellType | undefined, _coord: Coordinate) => {\n    if (value) {\n      return [value.value];\n    }\n    return [];\n  };\n  setDefinedName(name: string, value: IRange) {\n    const r = SheetRange.makeRange(value);\n    this.definedNameMap.set(name, r);\n  }\n  getDefinedName(name: string) {\n    return this.definedNameMap.get(name);\n  }\n}\n\nexport function computeFormulas(\n  eventData: RequestFormulas,\n  cb: (data: ResponseFormulas) => void,\n) {\n  const { currentSheetId, worksheets, workbook, definedNames } = eventData;\n  const formulaCache = new Map<string, InterpreterResult>();\n  const sheetData = worksheets[currentSheetId] || {};\n  const result: ResponseFormulas = {\n    list: [],\n  };\n  const cellDataMap: CellDataMap = {\n    handleCell: () => {\n      return [];\n    },\n    getFunction: (name: string) => {\n      return allFormulas[name as FormulaKeys];\n    },\n    getCell: (range: IRange) => {\n      const { row, col, sheetId } = range;\n      const realSheetId = sheetId || currentSheetId;\n      const sheetData = worksheets[realSheetId] || {};\n      const key = coordinateToString(row, col);\n      return sheetData[key];\n    },\n    set: () => {\n      throw new CustomError('#REF!');\n    },\n    getSheetInfo: (sheetId?: string, sheetName?: string) => {\n      if (sheetName) {\n        return workbook.find((v) => v.name === sheetName);\n      }\n      const realSheetId = sheetId || currentSheetId;\n      return workbook.find((v) => v.sheetId === realSheetId);\n    },\n    setDefinedName: () => {\n      throw new CustomError('#REF!');\n    },\n    getDefinedName: (name: string) => {\n      const r = definedNames[name];\n      if (!r) {\n        return r;\n      }\n      return SheetRange.makeRange(r);\n    },\n  };\n  for (const [k, data] of Object.entries(sheetData)) {\n    if (!data?.formula) {\n      continue;\n    }\n    const temp = parseFormula(\n      data?.formula,\n      stringToCoordinate(k),\n      cellDataMap,\n      formulaCache,\n    );\n    if (!temp) {\n      continue;\n    }\n    const r = temp.result[0];\n    if (r !== data.value) {\n      result.list.push({\n        key: k,\n        newValue: r,\n        sheetId: currentSheetId,\n      });\n    }\n  }\n  cb(result);\n}\n"],
  "mappings": "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",
  "names": ["require_ssf", "__commonJSMin", "exports", "module", "SSF", "make_ssf", "_strrev", "x", "o", "i", "fill", "c", "l", "pad0", "v", "d", "t", "pad_", "rpad_", "pad0r1", "pad0r2", "p2_32", "pad0r", "isgeneral", "days", "months", "init_table", "table_fmt", "default_map", "defi", "default_str", "frac", "D", "mixed", "sgn", "B", "P_2", "P_1", "P", "Q_2", "Q_1", "Q", "q", "normalize_xl_unsafe", "s", "m", "n", "parse_date_code", "opts", "b2", "date", "time", "dow", "dout", "out", "fix_hijri", "basedate", "dnthresh", "base1904", "datenum_local", "date1904", "epoch", "general_fmt_num", "trailing_zeroes_and_decimal", "strip_decimal", "mantissa_zeroes_and_decimal", "exp_with_single_digit", "normalize_exp", "small_exp", "large_exp", "general_fmt_num_base", "V", "general_fmt", "format", "THAI_DIGITS", "write_date", "type", "fmt", "val", "ss0", "ss", "tt", "y", "outl", "outstr", "commaify", "w", "j", "write_num", "pct1", "write_num_pct", "sfmt", "mul", "write_num_cm", "idx", "write_num_exp", "period", "ee", "fakee", "$$", "$1", "$2", "$3", "frac1", "write_num_f1", "r", "aval", "sign", "den", "rr", "base", "myn", "myd", "write_num_f2", "dec1", "closeparen", "phone", "hashq", "str", "cc", "rnd", "dd", "dec", "_frac", "carry", "flr", "write_num_flt", "ffmt", "ri", "ff", "oa", "lres", "rres", "write_num_cm2", "write_num_pct2", "write_num_exp2", "write_num_int", "split_fmt", "in_str", "abstime", "fmt_is_date", "eval_fmt", "flen", "lst", "dt", "hr", "bt", "ssm", "_dt", "nstr", "jj", "vv", "myv", "ostr", "decpt", "lasti", "retval", "cfregex", "cfregex2", "chkcond", "thresh", "choose_fmt", "f", "lat", "m1", "m2", "load_entry", "tbl", "import_ssf", "numberFormat", "value", "pattern", "options", "SSF", "DEFAULT_FORMAT_CODE", "isDateFormat", "format", "convertDateToNumber", "v", "date1904", "baseDate", "baseDateTime", "base1904", "epoch", "Token", "type", "value", "CustomError", "value", "assert", "condition", "message", "mustOne", "list", "mustOneString", "mustOneNumber", "check", "num", "parseNumber", "mustEmpty", "T", "list", "value", "mustOne", "LOWER", "mustOneString", "CHAR", "mustOneNumber", "CODE", "LEN", "SPLIT", "assert", "sep", "UPPER", "TEXT", "format", "numberFormat", "TRIM", "CONCAT", "formulas", "text_default", "parseNumberArray", "list", "result", "i", "check", "num", "parseNumber", "ABS", "data", "mustOneNumber", "ACOS", "ACOSH", "ACOT", "ACOTH", "ASIN", "ASINH", "ATAN", "ATAN2", "assert", "x", "y", "ATANH", "AVERAGE", "rest", "sum", "cur", "COS", "COT", "EXP", "list", "data", "mustOneNumber", "INT", "PI", "list", "mustEmpty", "SIN", "data", "mustOneNumber", "SUM", "rest", "parseNumberArray", "assert", "sum", "cur", "formulas", "ABS", "ACOS", "ACOSH", "ACOT", "ACOTH", "ASIN", "ASINH", "ATAN", "ATAN2", "ATANH", "AVERAGE", "COT", "COS", "EXP", "INT", "math_default", "roundNumber", "a", "temp", "result", "f", "list", "t", "allFormulas", "text_default", "math_default", "formula_default", "emptyData", "Scanner", "source", "Token", "text", "type", "end", "CustomError", "isDigit", "isAlpha", "t", "BUILT_IN_FUNCTION_SET", "ERROR_SET", "CELL_REG_EXP", "COLUMN_REG_EXP", "ROW_REG_EXP", "DEFINED_NAME_REG_EXP", "c", "FORMULA_PREFIX", "BinaryExpression", "left", "operator", "right", "visitor", "value", "result", "LiteralExpression", "UnaryExpression", "PostUnaryExpression", "CellExpression", "sheetName", "t", "name", "CallExpression", "params", "item", "CellRangeExpression", "GroupExpression", "ArrayExpression", "v", "Parser", "tokens", "result", "expr", "operator", "right", "BinaryExpression", "UnaryExpression", "PostUnaryExpression", "realRight", "realLeft", "CellRangeExpression", "CellExpression", "LiteralExpression", "CustomError", "name", "params", "CallExpression", "list", "ArrayExpression", "value", "GroupExpression", "token", "types", "type", "Token", "Interpreter", "expressions", "currentCoord", "cellDataMap", "result", "item", "temp", "r", "data", "left", "right", "CustomError", "expr", "callee", "params", "t", "SheetRange", "list", "sheetId", "sheetInfo", "range", "parseR1C1", "parseReference", "type", "value", "check", "num", "parseNumber", "a", "b", "mergeRange", "isOneCell", "row", "col", "iterateRange", "c", "parseFormula", "formula", "currentCoord", "cellData", "CellDataMapImpl", "cache", "t", "value", "coord", "result", "list", "Scanner", "expressions", "Parser", "resultList", "Interpreter", "strList", "item", "roundNumber", "error", "CustomError", "defaultSheetId", "name", "formula_default", "_coord", "row", "col", "sheetId", "range", "i", "j", "key", "isFormula", "sheetName", "v", "realSheetId", "r", "SheetRange", "computeFormulas", "eventData", "cb", "currentSheetId", "worksheets", "workbook", "definedNames", "formulaCache", "sheetData", "cellDataMap", "coordinateToString", "k", "data", "temp", "stringToCoordinate"]
}
